Terminals unused in grammar

   t_constant
   t_chan
   t_defer
   t_go
   t_interface
   t_range
   t_select
   t_fallthrough
   t_continue
   t_break
   t_or_const
   t_and_const
   t_param_const
   t_eq_const
   t_rel_const
   t_point_const
   t_punc
   t_char_const
   '+'
   '-'
   '*'
   '/'


State 64 conflicts: 3 shift/reduce
State 104 conflicts: 3 shift/reduce


Grammar

    0 $accept: START $end

    1 START: START GLOBAL END_SYMBOLS
    2      | GLOBAL END_SYMBOLS
    3      | START END_SYMBOLS

    4 GLOBAL: PACKAGE
    5       | IMPORT
    6       | FUNC
    7       | STRUCT

    8 PACKAGE: t_package t_id

    9 IMPORT: t_import t_string

   10 FUNC: t_func t_id FUNC_CALL BODY

   11 BODY: BODY_START BODY_END

   12 BODY_END: t_close_br

   13 BODY_START: t_open_br
   14           | BODY_START BODY_FILLING END_SYMBOLS
   15           | BODY_START END_SYMBOLS

   16 BODY_FILLING: VAR
   17             | FOR
   18             | SWITCH
   19             | GOTO
   20             | LABEL
   21             | IF
   22             | MULTI_AR
   23             | FUNC_CALL
   24             | SHORT_EXPR
   25             | ARRAY_BODY
   26             | RETURN
   27             | STRUCT
   28             | ACCESS_FIELDS

   29 VAR: t_var t_id ASSIGNMENT EXPR
   30    | t_var t_id ASSIGNMENT EXPR t_vtype
   31    | t_var t_id ASSIGNMENT BOOLEAN
   32    | t_id SHORT_ASSIGN EXPR
   33    | t_id SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   34    | t_var t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   35    | t_id SHORT_ASSIGN BOOLEAN
   36    | t_id MULTI_AR ASSIGNMENT EXPR
   37    | t_var t_id ASSIGNMENT MAKE
   38    | t_id SHORT_ASSIGN MAKE
   39    | t_id MULTI_AR ASSIGNMENT MAKE
   40    | t_id SHORT_ASSIGN SLICE
   41    | t_id ASSIGNMENT SLICE
   42    | t_var t_id ASSIGNMENT SLICE
   43    | t_var t_id MAPS
   44    | t_id SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   45    | t_var t_id t_id ASSIGNMENT t_id ST_EMBEDDED
   46    | t_var t_id ASSIGNMENT t_id ST_EMBEDDED
   47    | t_id SHORT_ASSIGN t_id ST_EMBEDDED
   48    | t_id ACCESS_FIELDS ASSIGNMENT VALUE
   49    | VALUE ASSIGNMENT VALUE

   50 BOOLEAN: EXPR t_bool EXPR

   51 ASSIGNMENT: t_vtype t_equality
   52           | t_equality
   53           | t_comma t_id ASSIGNMENT EXPR t_comma
   54           | t_comma t_id ASSIGNMENT BOOLEAN t_comma

   55 SHORT_ASSIGN: t_short_dec
   56             | t_comma t_id SHORT_ASSIGN EXPR t_comma
   57             | t_comma t_id SHORT_ASSIGN BOOLEAN t_comma

   58 FUNC_CALL: t_id t_open_paren PARAM t_close_paren
   59          | METHOD FUNC_CALL
   60          | t_open_paren t_close_paren

   61 SHIFT: SHIFT_AC t_shift_const SHIFT_AC

   62 SHIFT_AC: t_id
   63         | t_int_const

   64 METHOD: t_id t_dot

   65 VALUE: t_int_const
   66      | t_float_const
   67      | t_id
   68      | t_string
   69      | t_rune
   70      | t_blank_identifier
   71      | FUNC_CALL
   72      | SHIFT
   73      | t_pointer t_id
   74      | t_pointer t_vtype
   75      | t_ampersand t_id

   76 GOTO: t_goto t_id

   77 LABEL: t_id t_colon

   78 SWITCH: t_switch INIT_STATE t_semicolon EXPR SWITCH_BODY
   79       | t_switch EXPR SWITCH_BODY
   80       | t_switch SWITCH_BODY

   81 SWITCH_BODY: SWITCH_BODY_START SWITCH_BODY_END
   82            | SWITCH_BODY_START_WITH_DEFAULT SWITCH_BODY_END

   83 SWITCH_BODY_START: t_open_br
   84                  | t_open_br END_SYMBOLS
   85                  | SWITCH_BODY_START CASE

   86 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START DEFAULT
   87                               | SWITCH_BODY_START_WITH_DEFAULT CASE

   88 CASE: t_case CASE_STATEMENT CASE_BODY

   89 DEFAULT: t_default CASE_BODY

   90 MULTIPLE_ARG: FIRST_PART SECOND_PART

   91 FIRST_PART: EXPR t_comma
   92           | FIRST_PART EXPR t_comma

   93 SECOND_PART: EXPR

   94 CASE_STATEMENT: MULTIPLE_ARG
   95               | EXPR

   96 CASE_BODY: t_colon
   97          | t_colon t_enter
   98          | CASE_BODY BODY_FILLING END_SYMBOLS

   99 SWITCH_BODY_END: t_close_br

  100 IF: IF_FIRST MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD
  101   | IF_FIRST MULTY_ELSEIF_SECOND
  102   | IF_FIRST MULTY_ELSE_THIRD
  103   | IF_FIRST

  104 IF_FIRST: t_if CONDITION BODY

  105 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND ELSEIF_SECOND
  106                    | ELSEIF_SECOND

  107 ELSEIF_SECOND: t_else t_if CONDITION BODY

  108 MULTY_ELSE_THIRD: ELSE_THIRD
  109                 | MULTY_ELSE_THIRD ELSE_THIRD

  110 ELSE_THIRD: t_else BODY

  111 RETURN: t_return PARAM

  112 PARAM: PARAM t_comma EXPR
  113      | EXPR
  114      | /* empty */

  115 EXPR: EXPR t_sign VALUE
  116     | EXPR_START EXPR EXPR_END
  117     | VALUE

  118 SHORT_EXPR: t_id t_short_expr t_id

  119 INIT_STATE: VAR
  120           | FUNC_CALL
  121           | /* empty */

  122 CONDITION: BOOLEAN
  123          | t_true
  124          | t_false
  125          | /* empty */

  126 POST_STATE: EXPR
  127           | t_id t_inc_const

  128 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY
  129    | t_for CONDITION BODY

  130 EXPR_START: t_open_paren

  131 EXPR_END: t_close_paren

  132 ARRAY_BODY: t_var t_id MULTI_AR t_vtype
  133           | t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  134           | t_var t_id MULTI_AR t_vtype ASSIGNMENT MAKE

  135 ARRAY_INDEX: t_open_sq t_int_const t_close_sq
  136            | t_open_sq t_id t_close_sq
  137            | t_open_sq t_string t_close_sq
  138            | t_open_sq t_close_sq

  139 MULTI_AR: ARRAY_INDEX
  140         | ARRAY_INDEX MULTI_AR

  141 PLENTY: PLENTY_OLD
  142       | PLENTY_OLD t_comma PLENTY

  143 PLENTY_OLD: t_open_br ENUM t_close_br
  144           | t_open_br t_close_br
  145           | t_open_br PLENTY t_close_br

  146 ENUM: VALUE
  147     | ENUM t_comma VALUE

  148 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  149     | t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

  150 SLICE: t_id t_open_sq VALUE t_colon VALUE t_close_sq
  151      | t_id t_open_sq t_colon VALUE t_close_sq
  152      | t_id t_open_sq VALUE t_colon t_close_sq

  153 MAPS: t_map t_open_sq t_vtype t_close_sq t_vtype

  154 STRUCT: STRUCT_START STRUCT_BODY END_SYMBOLS STRUCT_END

  155 STRUCT_START: t_type t_id t_struct_const

  156 STRUCT_BODY: t_open_br
  157            | STRUCT_BODY END_SYMBOLS t_id t_vtype
  158            | STRUCT_BODY END_SYMBOLS t_id t_id
  159            | STRUCT_BODY END_SYMBOLS t_id

  160 STRUCT_END: t_close_br

  161 STRUCT_ENUM: t_id t_colon VALUE
  162            | STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon VALUE
  163            | t_id t_colon t_id STRUCT_FIELD
  164            | STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon t_id STRUCT_FIELD

  165 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_close_br
  166             | t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS
  167             | PLENTY_OLD

  168 ST_EMBEDDED: STRUCT_FIELD
  169            | STRUCT_FIELD t_comma ST_EMBEDDED

  170 ACCESS_FIELDS: METHOD
  171              | METHOD ACCESS_FIELDS

  172 END_SYMBOLS: t_semicolon
  173            | t_enter
  174            | t_eof


Terminals, with rules where they appear

$end (0) 0
'*' (42)
'+' (43)
'-' (45)
'/' (47)
error (256)
t_vtype (258) 30 33 34 51 74 132 133 134 148 149 153 157
t_constant (259)
t_case (260) 88
t_func (261) 10
t_import (262) 9
t_chan (263)
t_defer (264)
t_go (265)
t_interface (266)
t_default (267) 89
t_var (268) 29 30 31 34 37 42 43 45 46 132 133 134
t_range (269)
t_map (270) 153
t_package (271) 8
t_if (272) 104 107
t_select (273)
t_switch (274) 78 79 80
t_fallthrough (275)
t_else (276) 107 110
t_type (277) 155
t_for (278) 128 129
t_goto (279) 76
t_continue (280)
t_break (281)
t_return (282) 111
t_struct_const (283) 155
t_or_const (284)
t_and_const (285)
t_param_const (286)
t_eq_const (287)
t_rel_const (288)
t_shift_const (289) 61
t_inc_const (290) 127
t_point_const (291)
t_punc (292)
t_int_const (293) 63 65 135 149
t_float_const (294) 66
t_char_const (295)
t_id (296) 8 10 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45
    46 47 48 53 54 56 57 58 62 64 67 73 75 76 77 118 127 132 133 134
    136 150 151 152 155 157 158 159 161 162 163 164
t_string (297) 9 68 137
t_short_dec (298) 55
t_open_br (299) 13 83 84 143 144 145 156 165 166
t_close_br (300) 12 99 143 144 145 160 165 166
t_sign (301) 115
t_comma (302) 53 54 56 57 91 92 112 142 147 148 149 162 164 166 169
t_equality (303) 51 52
t_open_paren (304) 44 58 60 130 148 149
t_close_paren (305) 44 58 60 131 148
t_open_sq (306) 135 136 137 138 150 151 152 153
t_close_sq (307) 135 136 137 138 150 151 152 153
t_bool (308) 50
t_rune (309) 69
t_semicolon (310) 78 128 172
t_blank_identifier (311) 70
t_dot (312) 64
t_colon (313) 77 96 97 150 151 152 161 162 163 164
t_true (314) 123
t_false (315) 124
t_short_expr (316) 118
t_make (317) 44 148 149
t_enter (318) 97 173
t_eof (319) 174
t_pointer (320) 73 74
t_ampersand (321) 75


Nonterminals, with rules where they appear

$accept (71)
    on left: 0
START (72)
    on left: 1 2 3, on right: 0 1 3
GLOBAL (73)
    on left: 4 5 6 7, on right: 1 2
PACKAGE (74)
    on left: 8, on right: 4
IMPORT (75)
    on left: 9, on right: 5
FUNC (76)
    on left: 10, on right: 6
BODY (77)
    on left: 11, on right: 10 104 107 110 128 129
BODY_END (78)
    on left: 12, on right: 11
BODY_START (79)
    on left: 13 14 15, on right: 11 14 15
BODY_FILLING (80)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28, on right: 14 98
VAR (81)
    on left: 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46
    47 48 49, on right: 16 119
BOOLEAN (82)
    on left: 50, on right: 31 35 54 57 122
ASSIGNMENT (83)
    on left: 51 52 53 54, on right: 29 30 31 34 36 37 39 41 42 45 46
    48 49 53 54 133 134
SHORT_ASSIGN (84)
    on left: 55 56 57, on right: 32 33 35 38 40 44 47 56 57
FUNC_CALL (85)
    on left: 58 59 60, on right: 10 23 59 71 120
SHIFT (86)
    on left: 61, on right: 72
SHIFT_AC (87)
    on left: 62 63, on right: 61
METHOD (88)
    on left: 64, on right: 59 170 171
VALUE (89)
    on left: 65 66 67 68 69 70 71 72 73 74 75, on right: 48 49 115
    117 146 147 148 149 150 151 152 161 162
GOTO (90)
    on left: 76, on right: 19
LABEL (91)
    on left: 77, on right: 20
SWITCH (92)
    on left: 78 79 80, on right: 18
SWITCH_BODY (93)
    on left: 81 82, on right: 78 79 80
SWITCH_BODY_START (94)
    on left: 83 84 85, on right: 81 85 86
SWITCH_BODY_START_WITH_DEFAULT (95)
    on left: 86 87, on right: 82 87
CASE (96)
    on left: 88, on right: 85 87
DEFAULT (97)
    on left: 89, on right: 86
MULTIPLE_ARG (98)
    on left: 90, on right: 94
FIRST_PART (99)
    on left: 91 92, on right: 90 92
SECOND_PART (100)
    on left: 93, on right: 90
CASE_STATEMENT (101)
    on left: 94 95, on right: 88
CASE_BODY (102)
    on left: 96 97 98, on right: 88 89 98
SWITCH_BODY_END (103)
    on left: 99, on right: 81 82
IF (104)
    on left: 100 101 102 103, on right: 21
IF_FIRST (105)
    on left: 104, on right: 100 101 102 103
MULTY_ELSEIF_SECOND (106)
    on left: 105 106, on right: 100 101 105
ELSEIF_SECOND (107)
    on left: 107, on right: 105 106
MULTY_ELSE_THIRD (108)
    on left: 108 109, on right: 100 102 109
ELSE_THIRD (109)
    on left: 110, on right: 108 109
RETURN (110)
    on left: 111, on right: 26
PARAM (111)
    on left: 112 113 114, on right: 58 111 112
EXPR (112)
    on left: 115 116 117, on right: 29 30 32 36 50 53 56 78 79 91 92
    93 95 112 113 115 116 126
SHORT_EXPR (113)
    on left: 118, on right: 24
INIT_STATE (114)
    on left: 119 120 121, on right: 78 128
CONDITION (115)
    on left: 122 123 124 125, on right: 104 107 128 129
POST_STATE (116)
    on left: 126 127, on right: 128
FOR (117)
    on left: 128 129, on right: 17
EXPR_START (118)
    on left: 130, on right: 116
EXPR_END (119)
    on left: 131, on right: 116
ARRAY_BODY (120)
    on left: 132 133 134, on right: 25
ARRAY_INDEX (121)
    on left: 135 136 137 138, on right: 139 140
MULTI_AR (122)
    on left: 139 140, on right: 22 33 34 36 39 132 133 134 140 148
    149
PLENTY (123)
    on left: 141 142, on right: 33 34 133 142 145
PLENTY_OLD (124)
    on left: 143 144 145, on right: 141 142 167
ENUM (125)
    on left: 146 147, on right: 143 147
MAKE (126)
    on left: 148 149, on right: 37 38 39 134
SLICE (127)
    on left: 150 151 152, on right: 40 41 42
MAPS (128)
    on left: 153, on right: 43 44
STRUCT (129)
    on left: 154, on right: 7 27
STRUCT_START (130)
    on left: 155, on right: 154
STRUCT_BODY (131)
    on left: 156 157 158 159, on right: 154 157 158 159
STRUCT_END (132)
    on left: 160, on right: 154
STRUCT_ENUM (133)
    on left: 161 162 163 164, on right: 162 164 165 166
STRUCT_FIELD (134)
    on left: 165 166 167, on right: 163 164 168 169
ST_EMBEDDED (135)
    on left: 168 169, on right: 45 46 47 169
ACCESS_FIELDS (136)
    on left: 170 171, on right: 28 48 171
END_SYMBOLS (137)
    on left: 172 173 174, on right: 1 2 3 14 15 84 98 154 157 158 159
    162 164 165 166


State 0

    0 $accept: . START $end

    t_func     shift, and go to state 1
    t_import   shift, and go to state 2
    t_package  shift, and go to state 3
    t_type     shift, and go to state 4

    START         go to state 5
    GLOBAL        go to state 6
    PACKAGE       go to state 7
    IMPORT        go to state 8
    FUNC          go to state 9
    STRUCT        go to state 10
    STRUCT_START  go to state 11


State 1

   10 FUNC: t_func . t_id FUNC_CALL BODY

    t_id  shift, and go to state 12


State 2

    9 IMPORT: t_import . t_string

    t_string  shift, and go to state 13


State 3

    8 PACKAGE: t_package . t_id

    t_id  shift, and go to state 14


State 4

  155 STRUCT_START: t_type . t_id t_struct_const

    t_id  shift, and go to state 15


State 5

    0 $accept: START . $end
    1 START: START . GLOBAL END_SYMBOLS
    3      | START . END_SYMBOLS

    $end         shift, and go to state 16
    t_func       shift, and go to state 1
    t_import     shift, and go to state 2
    t_package    shift, and go to state 3
    t_type       shift, and go to state 4
    t_semicolon  shift, and go to state 17
    t_enter      shift, and go to state 18
    t_eof        shift, and go to state 19

    GLOBAL        go to state 20
    PACKAGE       go to state 7
    IMPORT        go to state 8
    FUNC          go to state 9
    STRUCT        go to state 10
    STRUCT_START  go to state 11
    END_SYMBOLS   go to state 21


State 6

    2 START: GLOBAL . END_SYMBOLS

    t_semicolon  shift, and go to state 17
    t_enter      shift, and go to state 18
    t_eof        shift, and go to state 19

    END_SYMBOLS  go to state 22


State 7

    4 GLOBAL: PACKAGE .

    $default  reduce using rule 4 (GLOBAL)


State 8

    5 GLOBAL: IMPORT .

    $default  reduce using rule 5 (GLOBAL)


State 9

    6 GLOBAL: FUNC .

    $default  reduce using rule 6 (GLOBAL)


State 10

    7 GLOBAL: STRUCT .

    $default  reduce using rule 7 (GLOBAL)


State 11

  154 STRUCT: STRUCT_START . STRUCT_BODY END_SYMBOLS STRUCT_END

    t_open_br  shift, and go to state 23

    STRUCT_BODY  go to state 24


State 12

   10 FUNC: t_func t_id . FUNC_CALL BODY

    t_id          shift, and go to state 25
    t_open_paren  shift, and go to state 26

    FUNC_CALL  go to state 27
    METHOD     go to state 28


State 13

    9 IMPORT: t_import t_string .

    $default  reduce using rule 9 (IMPORT)


State 14

    8 PACKAGE: t_package t_id .

    $default  reduce using rule 8 (PACKAGE)


State 15

  155 STRUCT_START: t_type t_id . t_struct_const

    t_struct_const  shift, and go to state 29


State 16

    0 $accept: START $end .

    $default  accept


State 17

  172 END_SYMBOLS: t_semicolon .

    $default  reduce using rule 172 (END_SYMBOLS)


State 18

  173 END_SYMBOLS: t_enter .

    $default  reduce using rule 173 (END_SYMBOLS)


State 19

  174 END_SYMBOLS: t_eof .

    $default  reduce using rule 174 (END_SYMBOLS)


State 20

    1 START: START GLOBAL . END_SYMBOLS

    t_semicolon  shift, and go to state 17
    t_enter      shift, and go to state 18
    t_eof        shift, and go to state 19

    END_SYMBOLS  go to state 30


State 21

    3 START: START END_SYMBOLS .

    $default  reduce using rule 3 (START)


State 22

    2 START: GLOBAL END_SYMBOLS .

    $default  reduce using rule 2 (START)


State 23

  156 STRUCT_BODY: t_open_br .

    $default  reduce using rule 156 (STRUCT_BODY)


State 24

  154 STRUCT: STRUCT_START STRUCT_BODY . END_SYMBOLS STRUCT_END
  157 STRUCT_BODY: STRUCT_BODY . END_SYMBOLS t_id t_vtype
  158            | STRUCT_BODY . END_SYMBOLS t_id t_id
  159            | STRUCT_BODY . END_SYMBOLS t_id

    t_semicolon  shift, and go to state 17
    t_enter      shift, and go to state 18
    t_eof        shift, and go to state 19

    END_SYMBOLS  go to state 31


State 25

   58 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   64 METHOD: t_id . t_dot

    t_open_paren  shift, and go to state 32
    t_dot         shift, and go to state 33


State 26

   60 FUNC_CALL: t_open_paren . t_close_paren

    t_close_paren  shift, and go to state 34


State 27

   10 FUNC: t_func t_id FUNC_CALL . BODY

    t_open_br  shift, and go to state 35

    BODY        go to state 36
    BODY_START  go to state 37


State 28

   59 FUNC_CALL: METHOD . FUNC_CALL

    t_id          shift, and go to state 25
    t_open_paren  shift, and go to state 26

    FUNC_CALL  go to state 38
    METHOD     go to state 28


State 29

  155 STRUCT_START: t_type t_id t_struct_const .

    $default  reduce using rule 155 (STRUCT_START)


State 30

    1 START: START GLOBAL END_SYMBOLS .

    $default  reduce using rule 1 (START)


State 31

  154 STRUCT: STRUCT_START STRUCT_BODY END_SYMBOLS . STRUCT_END
  157 STRUCT_BODY: STRUCT_BODY END_SYMBOLS . t_id t_vtype
  158            | STRUCT_BODY END_SYMBOLS . t_id t_id
  159            | STRUCT_BODY END_SYMBOLS . t_id

    t_id        shift, and go to state 39
    t_close_br  shift, and go to state 40

    STRUCT_END  go to state 41


State 32

   58 FUNC_CALL: t_id t_open_paren . PARAM t_close_paren

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 44
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 46
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    $default  reduce using rule 114 (PARAM)

    FUNC_CALL   go to state 51
    SHIFT       go to state 52
    SHIFT_AC    go to state 53
    METHOD      go to state 28
    VALUE       go to state 54
    PARAM       go to state 55
    EXPR        go to state 56
    EXPR_START  go to state 57


State 33

   64 METHOD: t_id t_dot .

    $default  reduce using rule 64 (METHOD)


State 34

   60 FUNC_CALL: t_open_paren t_close_paren .

    $default  reduce using rule 60 (FUNC_CALL)


State 35

   13 BODY_START: t_open_br .

    $default  reduce using rule 13 (BODY_START)


State 36

   10 FUNC: t_func t_id FUNC_CALL BODY .

    $default  reduce using rule 10 (FUNC)


State 37

   11 BODY: BODY_START . BODY_END
   14 BODY_START: BODY_START . BODY_FILLING END_SYMBOLS
   15           | BODY_START . END_SYMBOLS

    t_var               shift, and go to state 58
    t_if                shift, and go to state 59
    t_switch            shift, and go to state 60
    t_type              shift, and go to state 4
    t_for               shift, and go to state 61
    t_goto              shift, and go to state 62
    t_return            shift, and go to state 63
    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 64
    t_string            shift, and go to state 45
    t_close_br          shift, and go to state 65
    t_open_paren        shift, and go to state 26
    t_open_sq           shift, and go to state 66
    t_rune              shift, and go to state 47
    t_semicolon         shift, and go to state 17
    t_blank_identifier  shift, and go to state 48
    t_enter             shift, and go to state 18
    t_eof               shift, and go to state 19
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    BODY_END       go to state 67
    BODY_FILLING   go to state 68
    VAR            go to state 69
    FUNC_CALL      go to state 70
    SHIFT          go to state 52
    SHIFT_AC       go to state 53
    METHOD         go to state 71
    VALUE          go to state 72
    GOTO           go to state 73
    LABEL          go to state 74
    SWITCH         go to state 75
    IF             go to state 76
    IF_FIRST       go to state 77
    RETURN         go to state 78
    SHORT_EXPR     go to state 79
    FOR            go to state 80
    ARRAY_BODY     go to state 81
    ARRAY_INDEX    go to state 82
    MULTI_AR       go to state 83
    STRUCT         go to state 84
    STRUCT_START   go to state 11
    ACCESS_FIELDS  go to state 85
    END_SYMBOLS    go to state 86


State 38

   59 FUNC_CALL: METHOD FUNC_CALL .

    $default  reduce using rule 59 (FUNC_CALL)


State 39

  157 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id . t_vtype
  158            | STRUCT_BODY END_SYMBOLS t_id . t_id
  159            | STRUCT_BODY END_SYMBOLS t_id .

    t_vtype  shift, and go to state 87
    t_id     shift, and go to state 88

    $default  reduce using rule 159 (STRUCT_BODY)


State 40

  160 STRUCT_END: t_close_br .

    $default  reduce using rule 160 (STRUCT_END)


State 41

  154 STRUCT: STRUCT_START STRUCT_BODY END_SYMBOLS STRUCT_END .

    $default  reduce using rule 154 (STRUCT)


State 42

   63 SHIFT_AC: t_int_const .
   65 VALUE: t_int_const .

    t_shift_const  reduce using rule 63 (SHIFT_AC)
    $default       reduce using rule 65 (VALUE)


State 43

   66 VALUE: t_float_const .

    $default  reduce using rule 66 (VALUE)


State 44

   58 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   62 SHIFT_AC: t_id .
   64 METHOD: t_id . t_dot
   67 VALUE: t_id .

    t_open_paren  shift, and go to state 32
    t_dot         shift, and go to state 33

    t_shift_const  reduce using rule 62 (SHIFT_AC)
    $default       reduce using rule 67 (VALUE)


State 45

   68 VALUE: t_string .

    $default  reduce using rule 68 (VALUE)


State 46

   60 FUNC_CALL: t_open_paren . t_close_paren
  130 EXPR_START: t_open_paren .

    t_close_paren  shift, and go to state 34

    $default  reduce using rule 130 (EXPR_START)


State 47

   69 VALUE: t_rune .

    $default  reduce using rule 69 (VALUE)


State 48

   70 VALUE: t_blank_identifier .

    $default  reduce using rule 70 (VALUE)


State 49

   73 VALUE: t_pointer . t_id
   74      | t_pointer . t_vtype

    t_vtype  shift, and go to state 89
    t_id     shift, and go to state 90


State 50

   75 VALUE: t_ampersand . t_id

    t_id  shift, and go to state 91


State 51

   71 VALUE: FUNC_CALL .

    $default  reduce using rule 71 (VALUE)


State 52

   72 VALUE: SHIFT .

    $default  reduce using rule 72 (VALUE)


State 53

   61 SHIFT: SHIFT_AC . t_shift_const SHIFT_AC

    t_shift_const  shift, and go to state 92


State 54

  117 EXPR: VALUE .

    $default  reduce using rule 117 (EXPR)


State 55

   58 FUNC_CALL: t_id t_open_paren PARAM . t_close_paren
  112 PARAM: PARAM . t_comma EXPR

    t_comma        shift, and go to state 93
    t_close_paren  shift, and go to state 94


State 56

  113 PARAM: EXPR .
  115 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 95

    $default  reduce using rule 113 (PARAM)


State 57

  116 EXPR: EXPR_START . EXPR EXPR_END

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 44
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 46
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    FUNC_CALL   go to state 51
    SHIFT       go to state 52
    SHIFT_AC    go to state 53
    METHOD      go to state 28
    VALUE       go to state 54
    EXPR        go to state 96
    EXPR_START  go to state 57


State 58

   29 VAR: t_var . t_id ASSIGNMENT EXPR
   30    | t_var . t_id ASSIGNMENT EXPR t_vtype
   31    | t_var . t_id ASSIGNMENT BOOLEAN
   34    | t_var . t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   37    | t_var . t_id ASSIGNMENT MAKE
   42    | t_var . t_id ASSIGNMENT SLICE
   43    | t_var . t_id MAPS
   45    | t_var . t_id t_id ASSIGNMENT t_id ST_EMBEDDED
   46    | t_var . t_id ASSIGNMENT t_id ST_EMBEDDED
  132 ARRAY_BODY: t_var . t_id MULTI_AR t_vtype
  133           | t_var . t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  134           | t_var . t_id MULTI_AR t_vtype ASSIGNMENT MAKE

    t_id  shift, and go to state 97


State 59

  104 IF_FIRST: t_if . CONDITION BODY

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 44
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 46
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_true              shift, and go to state 98
    t_false             shift, and go to state 99
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    $default  reduce using rule 125 (CONDITION)

    BOOLEAN     go to state 100
    FUNC_CALL   go to state 51
    SHIFT       go to state 52
    SHIFT_AC    go to state 53
    METHOD      go to state 28
    VALUE       go to state 54
    EXPR        go to state 101
    CONDITION   go to state 102
    EXPR_START  go to state 57


State 60

   78 SWITCH: t_switch . INIT_STATE t_semicolon EXPR SWITCH_BODY
   79       | t_switch . EXPR SWITCH_BODY
   80       | t_switch . SWITCH_BODY

    t_var               shift, and go to state 103
    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 104
    t_string            shift, and go to state 45
    t_open_br           shift, and go to state 105
    t_open_paren        shift, and go to state 46
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    $default  reduce using rule 121 (INIT_STATE)

    VAR                             go to state 106
    FUNC_CALL                       go to state 107
    SHIFT                           go to state 52
    SHIFT_AC                        go to state 53
    METHOD                          go to state 28
    VALUE                           go to state 108
    SWITCH_BODY                     go to state 109
    SWITCH_BODY_START               go to state 110
    SWITCH_BODY_START_WITH_DEFAULT  go to state 111
    EXPR                            go to state 112
    INIT_STATE                      go to state 113
    EXPR_START                      go to state 57


State 61

  128 FOR: t_for . INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY
  129    | t_for . CONDITION BODY

    t_var               shift, and go to state 103
    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 104
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 46
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_true              shift, and go to state 98
    t_false             shift, and go to state 99
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    t_open_br  reduce using rule 125 (CONDITION)
    $default   reduce using rule 121 (INIT_STATE)

    VAR         go to state 106
    BOOLEAN     go to state 100
    FUNC_CALL   go to state 107
    SHIFT       go to state 52
    SHIFT_AC    go to state 53
    METHOD      go to state 28
    VALUE       go to state 108
    EXPR        go to state 101
    INIT_STATE  go to state 114
    CONDITION   go to state 115
    EXPR_START  go to state 57


State 62

   76 GOTO: t_goto . t_id

    t_id  shift, and go to state 116


State 63

  111 RETURN: t_return . PARAM

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 44
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 46
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    $default  reduce using rule 114 (PARAM)

    FUNC_CALL   go to state 51
    SHIFT       go to state 52
    SHIFT_AC    go to state 53
    METHOD      go to state 28
    VALUE       go to state 54
    PARAM       go to state 117
    EXPR        go to state 56
    EXPR_START  go to state 57


State 64

   32 VAR: t_id . SHORT_ASSIGN EXPR
   33    | t_id . SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   35    | t_id . SHORT_ASSIGN BOOLEAN
   36    | t_id . MULTI_AR ASSIGNMENT EXPR
   38    | t_id . SHORT_ASSIGN MAKE
   39    | t_id . MULTI_AR ASSIGNMENT MAKE
   40    | t_id . SHORT_ASSIGN SLICE
   41    | t_id . ASSIGNMENT SLICE
   44    | t_id . SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   47    | t_id . SHORT_ASSIGN t_id ST_EMBEDDED
   48    | t_id . ACCESS_FIELDS ASSIGNMENT VALUE
   58 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   62 SHIFT_AC: t_id .
   64 METHOD: t_id . t_dot
   67 VALUE: t_id .
   77 LABEL: t_id . t_colon
  118 SHORT_EXPR: t_id . t_short_expr t_id

    t_vtype       shift, and go to state 118
    t_id          shift, and go to state 119
    t_short_dec   shift, and go to state 120
    t_comma       shift, and go to state 121
    t_equality    shift, and go to state 122
    t_open_paren  shift, and go to state 32
    t_open_sq     shift, and go to state 66
    t_dot         shift, and go to state 33
    t_colon       shift, and go to state 123
    t_short_expr  shift, and go to state 124

    t_vtype     [reduce using rule 67 (VALUE)]
    t_comma     [reduce using rule 67 (VALUE)]
    t_equality  [reduce using rule 67 (VALUE)]
    $default    reduce using rule 62 (SHIFT_AC)

    ASSIGNMENT     go to state 125
    SHORT_ASSIGN   go to state 126
    METHOD         go to state 127
    ARRAY_INDEX    go to state 82
    MULTI_AR       go to state 128
    ACCESS_FIELDS  go to state 129


State 65

   12 BODY_END: t_close_br .

    $default  reduce using rule 12 (BODY_END)


State 66

  135 ARRAY_INDEX: t_open_sq . t_int_const t_close_sq
  136            | t_open_sq . t_id t_close_sq
  137            | t_open_sq . t_string t_close_sq
  138            | t_open_sq . t_close_sq

    t_int_const  shift, and go to state 130
    t_id         shift, and go to state 131
    t_string     shift, and go to state 132
    t_close_sq   shift, and go to state 133


State 67

   11 BODY: BODY_START BODY_END .

    $default  reduce using rule 11 (BODY)


State 68

   14 BODY_START: BODY_START BODY_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 17
    t_enter      shift, and go to state 18
    t_eof        shift, and go to state 19

    END_SYMBOLS  go to state 134


State 69

   16 BODY_FILLING: VAR .

    $default  reduce using rule 16 (BODY_FILLING)


State 70

   23 BODY_FILLING: FUNC_CALL .
   71 VALUE: FUNC_CALL .

    t_vtype     reduce using rule 71 (VALUE)
    t_comma     reduce using rule 71 (VALUE)
    t_equality  reduce using rule 71 (VALUE)
    $default    reduce using rule 23 (BODY_FILLING)


State 71

   59 FUNC_CALL: METHOD . FUNC_CALL
  170 ACCESS_FIELDS: METHOD .
  171              | METHOD . ACCESS_FIELDS

    t_id          shift, and go to state 25
    t_open_paren  shift, and go to state 26

    $default  reduce using rule 170 (ACCESS_FIELDS)

    FUNC_CALL      go to state 38
    METHOD         go to state 71
    ACCESS_FIELDS  go to state 135


State 72

   49 VAR: VALUE . ASSIGNMENT VALUE

    t_vtype     shift, and go to state 118
    t_comma     shift, and go to state 136
    t_equality  shift, and go to state 122

    ASSIGNMENT  go to state 137


State 73

   19 BODY_FILLING: GOTO .

    $default  reduce using rule 19 (BODY_FILLING)


State 74

   20 BODY_FILLING: LABEL .

    $default  reduce using rule 20 (BODY_FILLING)


State 75

   18 BODY_FILLING: SWITCH .

    $default  reduce using rule 18 (BODY_FILLING)


State 76

   21 BODY_FILLING: IF .

    $default  reduce using rule 21 (BODY_FILLING)


State 77

  100 IF: IF_FIRST . MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD
  101   | IF_FIRST . MULTY_ELSEIF_SECOND
  102   | IF_FIRST . MULTY_ELSE_THIRD
  103   | IF_FIRST .

    t_else  shift, and go to state 138

    $default  reduce using rule 103 (IF)

    MULTY_ELSEIF_SECOND  go to state 139
    ELSEIF_SECOND        go to state 140
    MULTY_ELSE_THIRD     go to state 141
    ELSE_THIRD           go to state 142


State 78

   26 BODY_FILLING: RETURN .

    $default  reduce using rule 26 (BODY_FILLING)


State 79

   24 BODY_FILLING: SHORT_EXPR .

    $default  reduce using rule 24 (BODY_FILLING)


State 80

   17 BODY_FILLING: FOR .

    $default  reduce using rule 17 (BODY_FILLING)


State 81

   25 BODY_FILLING: ARRAY_BODY .

    $default  reduce using rule 25 (BODY_FILLING)


State 82

  139 MULTI_AR: ARRAY_INDEX .
  140         | ARRAY_INDEX . MULTI_AR

    t_open_sq  shift, and go to state 66

    $default  reduce using rule 139 (MULTI_AR)

    ARRAY_INDEX  go to state 82
    MULTI_AR     go to state 143


State 83

   22 BODY_FILLING: MULTI_AR .

    $default  reduce using rule 22 (BODY_FILLING)


State 84

   27 BODY_FILLING: STRUCT .

    $default  reduce using rule 27 (BODY_FILLING)


State 85

   28 BODY_FILLING: ACCESS_FIELDS .

    $default  reduce using rule 28 (BODY_FILLING)


State 86

   15 BODY_START: BODY_START END_SYMBOLS .

    $default  reduce using rule 15 (BODY_START)


State 87

  157 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id t_vtype .

    $default  reduce using rule 157 (STRUCT_BODY)


State 88

  158 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id t_id .

    $default  reduce using rule 158 (STRUCT_BODY)


State 89

   74 VALUE: t_pointer t_vtype .

    $default  reduce using rule 74 (VALUE)


State 90

   73 VALUE: t_pointer t_id .

    $default  reduce using rule 73 (VALUE)


State 91

   75 VALUE: t_ampersand t_id .

    $default  reduce using rule 75 (VALUE)


State 92

   61 SHIFT: SHIFT_AC t_shift_const . SHIFT_AC

    t_int_const  shift, and go to state 144
    t_id         shift, and go to state 145

    SHIFT_AC  go to state 146


State 93

  112 PARAM: PARAM t_comma . EXPR

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 44
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 46
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    FUNC_CALL   go to state 51
    SHIFT       go to state 52
    SHIFT_AC    go to state 53
    METHOD      go to state 28
    VALUE       go to state 54
    EXPR        go to state 147
    EXPR_START  go to state 57


State 94

   58 FUNC_CALL: t_id t_open_paren PARAM t_close_paren .

    $default  reduce using rule 58 (FUNC_CALL)


State 95

  115 EXPR: EXPR t_sign . VALUE

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 44
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 26
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    FUNC_CALL  go to state 51
    SHIFT      go to state 52
    SHIFT_AC   go to state 53
    METHOD     go to state 28
    VALUE      go to state 148


State 96

  115 EXPR: EXPR . t_sign VALUE
  116     | EXPR_START EXPR . EXPR_END

    t_sign         shift, and go to state 95
    t_close_paren  shift, and go to state 149

    EXPR_END  go to state 150


State 97

   29 VAR: t_var t_id . ASSIGNMENT EXPR
   30    | t_var t_id . ASSIGNMENT EXPR t_vtype
   31    | t_var t_id . ASSIGNMENT BOOLEAN
   34    | t_var t_id . ASSIGNMENT MULTI_AR t_vtype PLENTY
   37    | t_var t_id . ASSIGNMENT MAKE
   42    | t_var t_id . ASSIGNMENT SLICE
   43    | t_var t_id . MAPS
   45    | t_var t_id . t_id ASSIGNMENT t_id ST_EMBEDDED
   46    | t_var t_id . ASSIGNMENT t_id ST_EMBEDDED
  132 ARRAY_BODY: t_var t_id . MULTI_AR t_vtype
  133           | t_var t_id . MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  134           | t_var t_id . MULTI_AR t_vtype ASSIGNMENT MAKE

    t_vtype     shift, and go to state 118
    t_map       shift, and go to state 151
    t_id        shift, and go to state 152
    t_comma     shift, and go to state 136
    t_equality  shift, and go to state 122
    t_open_sq   shift, and go to state 66

    ASSIGNMENT   go to state 153
    ARRAY_INDEX  go to state 82
    MULTI_AR     go to state 154
    MAPS         go to state 155


State 98

  123 CONDITION: t_true .

    $default  reduce using rule 123 (CONDITION)


State 99

  124 CONDITION: t_false .

    $default  reduce using rule 124 (CONDITION)


State 100

  122 CONDITION: BOOLEAN .

    $default  reduce using rule 122 (CONDITION)


State 101

   50 BOOLEAN: EXPR . t_bool EXPR
  115 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 95
    t_bool  shift, and go to state 156


State 102

  104 IF_FIRST: t_if CONDITION . BODY

    t_open_br  shift, and go to state 35

    BODY        go to state 157
    BODY_START  go to state 37


State 103

   29 VAR: t_var . t_id ASSIGNMENT EXPR
   30    | t_var . t_id ASSIGNMENT EXPR t_vtype
   31    | t_var . t_id ASSIGNMENT BOOLEAN
   34    | t_var . t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   37    | t_var . t_id ASSIGNMENT MAKE
   42    | t_var . t_id ASSIGNMENT SLICE
   43    | t_var . t_id MAPS
   45    | t_var . t_id t_id ASSIGNMENT t_id ST_EMBEDDED
   46    | t_var . t_id ASSIGNMENT t_id ST_EMBEDDED

    t_id  shift, and go to state 158


State 104

   32 VAR: t_id . SHORT_ASSIGN EXPR
   33    | t_id . SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   35    | t_id . SHORT_ASSIGN BOOLEAN
   36    | t_id . MULTI_AR ASSIGNMENT EXPR
   38    | t_id . SHORT_ASSIGN MAKE
   39    | t_id . MULTI_AR ASSIGNMENT MAKE
   40    | t_id . SHORT_ASSIGN SLICE
   41    | t_id . ASSIGNMENT SLICE
   44    | t_id . SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   47    | t_id . SHORT_ASSIGN t_id ST_EMBEDDED
   48    | t_id . ACCESS_FIELDS ASSIGNMENT VALUE
   58 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   62 SHIFT_AC: t_id .
   64 METHOD: t_id . t_dot
   67 VALUE: t_id .

    t_vtype       shift, and go to state 118
    t_id          shift, and go to state 119
    t_short_dec   shift, and go to state 120
    t_comma       shift, and go to state 121
    t_equality    shift, and go to state 122
    t_open_paren  shift, and go to state 32
    t_open_sq     shift, and go to state 66
    t_dot         shift, and go to state 33

    t_vtype        [reduce using rule 67 (VALUE)]
    t_shift_const  reduce using rule 62 (SHIFT_AC)
    t_comma        [reduce using rule 67 (VALUE)]
    t_equality     [reduce using rule 67 (VALUE)]
    $default       reduce using rule 67 (VALUE)

    ASSIGNMENT     go to state 125
    SHORT_ASSIGN   go to state 126
    METHOD         go to state 127
    ARRAY_INDEX    go to state 82
    MULTI_AR       go to state 128
    ACCESS_FIELDS  go to state 129


State 105

   83 SWITCH_BODY_START: t_open_br .
   84                  | t_open_br . END_SYMBOLS

    t_semicolon  shift, and go to state 17
    t_enter      shift, and go to state 18
    t_eof        shift, and go to state 19

    $default  reduce using rule 83 (SWITCH_BODY_START)

    END_SYMBOLS  go to state 159


State 106

  119 INIT_STATE: VAR .

    $default  reduce using rule 119 (INIT_STATE)


State 107

   71 VALUE: FUNC_CALL .
  120 INIT_STATE: FUNC_CALL .

    t_semicolon  reduce using rule 120 (INIT_STATE)
    $default     reduce using rule 71 (VALUE)


State 108

   49 VAR: VALUE . ASSIGNMENT VALUE
  117 EXPR: VALUE .

    t_vtype     shift, and go to state 118
    t_comma     shift, and go to state 136
    t_equality  shift, and go to state 122

    $default  reduce using rule 117 (EXPR)

    ASSIGNMENT  go to state 137


State 109

   80 SWITCH: t_switch SWITCH_BODY .

    $default  reduce using rule 80 (SWITCH)


State 110

   81 SWITCH_BODY: SWITCH_BODY_START . SWITCH_BODY_END
   85 SWITCH_BODY_START: SWITCH_BODY_START . CASE
   86 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START . DEFAULT

    t_case      shift, and go to state 160
    t_default   shift, and go to state 161
    t_close_br  shift, and go to state 162

    CASE             go to state 163
    DEFAULT          go to state 164
    SWITCH_BODY_END  go to state 165


State 111

   82 SWITCH_BODY: SWITCH_BODY_START_WITH_DEFAULT . SWITCH_BODY_END
   87 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START_WITH_DEFAULT . CASE

    t_case      shift, and go to state 160
    t_close_br  shift, and go to state 162

    CASE             go to state 166
    SWITCH_BODY_END  go to state 167


State 112

   79 SWITCH: t_switch EXPR . SWITCH_BODY
  115 EXPR: EXPR . t_sign VALUE

    t_open_br  shift, and go to state 105
    t_sign     shift, and go to state 95

    SWITCH_BODY                     go to state 168
    SWITCH_BODY_START               go to state 110
    SWITCH_BODY_START_WITH_DEFAULT  go to state 111


State 113

   78 SWITCH: t_switch INIT_STATE . t_semicolon EXPR SWITCH_BODY

    t_semicolon  shift, and go to state 169


State 114

  128 FOR: t_for INIT_STATE . t_semicolon CONDITION t_semicolon POST_STATE BODY

    t_semicolon  shift, and go to state 170


State 115

  129 FOR: t_for CONDITION . BODY

    t_open_br  shift, and go to state 35

    BODY        go to state 171
    BODY_START  go to state 37


State 116

   76 GOTO: t_goto t_id .

    $default  reduce using rule 76 (GOTO)


State 117

  111 RETURN: t_return PARAM .
  112 PARAM: PARAM . t_comma EXPR

    t_comma  shift, and go to state 93

    $default  reduce using rule 111 (RETURN)


State 118

   51 ASSIGNMENT: t_vtype . t_equality

    t_equality  shift, and go to state 172


State 119

   64 METHOD: t_id . t_dot

    t_dot  shift, and go to state 33


State 120

   55 SHORT_ASSIGN: t_short_dec .

    $default  reduce using rule 55 (SHORT_ASSIGN)


State 121

   53 ASSIGNMENT: t_comma . t_id ASSIGNMENT EXPR t_comma
   54           | t_comma . t_id ASSIGNMENT BOOLEAN t_comma
   56 SHORT_ASSIGN: t_comma . t_id SHORT_ASSIGN EXPR t_comma
   57             | t_comma . t_id SHORT_ASSIGN BOOLEAN t_comma

    t_id  shift, and go to state 173


State 122

   52 ASSIGNMENT: t_equality .

    $default  reduce using rule 52 (ASSIGNMENT)


State 123

   77 LABEL: t_id t_colon .

    $default  reduce using rule 77 (LABEL)


State 124

  118 SHORT_EXPR: t_id t_short_expr . t_id

    t_id  shift, and go to state 174


State 125

   41 VAR: t_id ASSIGNMENT . SLICE

    t_id  shift, and go to state 175

    SLICE  go to state 176


State 126

   32 VAR: t_id SHORT_ASSIGN . EXPR
   33    | t_id SHORT_ASSIGN . MULTI_AR t_vtype PLENTY
   35    | t_id SHORT_ASSIGN . BOOLEAN
   38    | t_id SHORT_ASSIGN . MAKE
   40    | t_id SHORT_ASSIGN . SLICE
   44    | t_id SHORT_ASSIGN . t_make t_open_paren MAPS t_close_paren
   47    | t_id SHORT_ASSIGN . t_id ST_EMBEDDED

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 177
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 46
    t_open_sq           shift, and go to state 66
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_make              shift, and go to state 178
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    BOOLEAN      go to state 179
    FUNC_CALL    go to state 51
    SHIFT        go to state 52
    SHIFT_AC     go to state 53
    METHOD       go to state 28
    VALUE        go to state 54
    EXPR         go to state 180
    EXPR_START   go to state 57
    ARRAY_INDEX  go to state 82
    MULTI_AR     go to state 181
    MAKE         go to state 182
    SLICE        go to state 183


State 127

  170 ACCESS_FIELDS: METHOD .
  171              | METHOD . ACCESS_FIELDS

    t_id  shift, and go to state 119

    $default  reduce using rule 170 (ACCESS_FIELDS)

    METHOD         go to state 127
    ACCESS_FIELDS  go to state 135


State 128

   36 VAR: t_id MULTI_AR . ASSIGNMENT EXPR
   39    | t_id MULTI_AR . ASSIGNMENT MAKE

    t_vtype     shift, and go to state 118
    t_comma     shift, and go to state 136
    t_equality  shift, and go to state 122

    ASSIGNMENT  go to state 184


State 129

   48 VAR: t_id ACCESS_FIELDS . ASSIGNMENT VALUE

    t_vtype     shift, and go to state 118
    t_comma     shift, and go to state 136
    t_equality  shift, and go to state 122

    ASSIGNMENT  go to state 185


State 130

  135 ARRAY_INDEX: t_open_sq t_int_const . t_close_sq

    t_close_sq  shift, and go to state 186


State 131

  136 ARRAY_INDEX: t_open_sq t_id . t_close_sq

    t_close_sq  shift, and go to state 187


State 132

  137 ARRAY_INDEX: t_open_sq t_string . t_close_sq

    t_close_sq  shift, and go to state 188


State 133

  138 ARRAY_INDEX: t_open_sq t_close_sq .

    $default  reduce using rule 138 (ARRAY_INDEX)


State 134

   14 BODY_START: BODY_START BODY_FILLING END_SYMBOLS .

    $default  reduce using rule 14 (BODY_START)


State 135

  171 ACCESS_FIELDS: METHOD ACCESS_FIELDS .

    $default  reduce using rule 171 (ACCESS_FIELDS)


State 136

   53 ASSIGNMENT: t_comma . t_id ASSIGNMENT EXPR t_comma
   54           | t_comma . t_id ASSIGNMENT BOOLEAN t_comma

    t_id  shift, and go to state 189


State 137

   49 VAR: VALUE ASSIGNMENT . VALUE

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 44
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 26
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    FUNC_CALL  go to state 51
    SHIFT      go to state 52
    SHIFT_AC   go to state 53
    METHOD     go to state 28
    VALUE      go to state 190


State 138

  107 ELSEIF_SECOND: t_else . t_if CONDITION BODY
  110 ELSE_THIRD: t_else . BODY

    t_if       shift, and go to state 191
    t_open_br  shift, and go to state 35

    BODY        go to state 192
    BODY_START  go to state 37


State 139

  100 IF: IF_FIRST MULTY_ELSEIF_SECOND . MULTY_ELSE_THIRD
  101   | IF_FIRST MULTY_ELSEIF_SECOND .
  105 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND . ELSEIF_SECOND

    t_else  shift, and go to state 138

    $default  reduce using rule 101 (IF)

    ELSEIF_SECOND     go to state 193
    MULTY_ELSE_THIRD  go to state 194
    ELSE_THIRD        go to state 142


State 140

  106 MULTY_ELSEIF_SECOND: ELSEIF_SECOND .

    $default  reduce using rule 106 (MULTY_ELSEIF_SECOND)


State 141

  102 IF: IF_FIRST MULTY_ELSE_THIRD .
  109 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD . ELSE_THIRD

    t_else  shift, and go to state 195

    $default  reduce using rule 102 (IF)

    ELSE_THIRD  go to state 196


State 142

  108 MULTY_ELSE_THIRD: ELSE_THIRD .

    $default  reduce using rule 108 (MULTY_ELSE_THIRD)


State 143

  140 MULTI_AR: ARRAY_INDEX MULTI_AR .

    $default  reduce using rule 140 (MULTI_AR)


State 144

   63 SHIFT_AC: t_int_const .

    $default  reduce using rule 63 (SHIFT_AC)


State 145

   62 SHIFT_AC: t_id .

    $default  reduce using rule 62 (SHIFT_AC)


State 146

   61 SHIFT: SHIFT_AC t_shift_const SHIFT_AC .

    $default  reduce using rule 61 (SHIFT)


State 147

  112 PARAM: PARAM t_comma EXPR .
  115 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 95

    $default  reduce using rule 112 (PARAM)


State 148

  115 EXPR: EXPR t_sign VALUE .

    $default  reduce using rule 115 (EXPR)


State 149

  131 EXPR_END: t_close_paren .

    $default  reduce using rule 131 (EXPR_END)


State 150

  116 EXPR: EXPR_START EXPR EXPR_END .

    $default  reduce using rule 116 (EXPR)


State 151

  153 MAPS: t_map . t_open_sq t_vtype t_close_sq t_vtype

    t_open_sq  shift, and go to state 197


State 152

   45 VAR: t_var t_id t_id . ASSIGNMENT t_id ST_EMBEDDED

    t_vtype     shift, and go to state 118
    t_comma     shift, and go to state 136
    t_equality  shift, and go to state 122

    ASSIGNMENT  go to state 198


State 153

   29 VAR: t_var t_id ASSIGNMENT . EXPR
   30    | t_var t_id ASSIGNMENT . EXPR t_vtype
   31    | t_var t_id ASSIGNMENT . BOOLEAN
   34    | t_var t_id ASSIGNMENT . MULTI_AR t_vtype PLENTY
   37    | t_var t_id ASSIGNMENT . MAKE
   42    | t_var t_id ASSIGNMENT . SLICE
   46    | t_var t_id ASSIGNMENT . t_id ST_EMBEDDED

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 199
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 46
    t_open_sq           shift, and go to state 66
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_make              shift, and go to state 200
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    BOOLEAN      go to state 201
    FUNC_CALL    go to state 51
    SHIFT        go to state 52
    SHIFT_AC     go to state 53
    METHOD       go to state 28
    VALUE        go to state 54
    EXPR         go to state 202
    EXPR_START   go to state 57
    ARRAY_INDEX  go to state 82
    MULTI_AR     go to state 203
    MAKE         go to state 204
    SLICE        go to state 205


State 154

  132 ARRAY_BODY: t_var t_id MULTI_AR . t_vtype
  133           | t_var t_id MULTI_AR . t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  134           | t_var t_id MULTI_AR . t_vtype ASSIGNMENT MAKE

    t_vtype  shift, and go to state 206


State 155

   43 VAR: t_var t_id MAPS .

    $default  reduce using rule 43 (VAR)


State 156

   50 BOOLEAN: EXPR t_bool . EXPR

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 44
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 46
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    FUNC_CALL   go to state 51
    SHIFT       go to state 52
    SHIFT_AC    go to state 53
    METHOD      go to state 28
    VALUE       go to state 54
    EXPR        go to state 207
    EXPR_START  go to state 57


State 157

  104 IF_FIRST: t_if CONDITION BODY .

    $default  reduce using rule 104 (IF_FIRST)


State 158

   29 VAR: t_var t_id . ASSIGNMENT EXPR
   30    | t_var t_id . ASSIGNMENT EXPR t_vtype
   31    | t_var t_id . ASSIGNMENT BOOLEAN
   34    | t_var t_id . ASSIGNMENT MULTI_AR t_vtype PLENTY
   37    | t_var t_id . ASSIGNMENT MAKE
   42    | t_var t_id . ASSIGNMENT SLICE
   43    | t_var t_id . MAPS
   45    | t_var t_id . t_id ASSIGNMENT t_id ST_EMBEDDED
   46    | t_var t_id . ASSIGNMENT t_id ST_EMBEDDED

    t_vtype     shift, and go to state 118
    t_map       shift, and go to state 151
    t_id        shift, and go to state 152
    t_comma     shift, and go to state 136
    t_equality  shift, and go to state 122

    ASSIGNMENT  go to state 153
    MAPS        go to state 155


State 159

   84 SWITCH_BODY_START: t_open_br END_SYMBOLS .

    $default  reduce using rule 84 (SWITCH_BODY_START)


State 160

   88 CASE: t_case . CASE_STATEMENT CASE_BODY

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 44
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 46
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    FUNC_CALL       go to state 51
    SHIFT           go to state 52
    SHIFT_AC        go to state 53
    METHOD          go to state 28
    VALUE           go to state 54
    MULTIPLE_ARG    go to state 208
    FIRST_PART      go to state 209
    CASE_STATEMENT  go to state 210
    EXPR            go to state 211
    EXPR_START      go to state 57


State 161

   89 DEFAULT: t_default . CASE_BODY

    t_colon  shift, and go to state 212

    CASE_BODY  go to state 213


State 162

   99 SWITCH_BODY_END: t_close_br .

    $default  reduce using rule 99 (SWITCH_BODY_END)


State 163

   85 SWITCH_BODY_START: SWITCH_BODY_START CASE .

    $default  reduce using rule 85 (SWITCH_BODY_START)


State 164

   86 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START DEFAULT .

    $default  reduce using rule 86 (SWITCH_BODY_START_WITH_DEFAULT)


State 165

   81 SWITCH_BODY: SWITCH_BODY_START SWITCH_BODY_END .

    $default  reduce using rule 81 (SWITCH_BODY)


State 166

   87 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START_WITH_DEFAULT CASE .

    $default  reduce using rule 87 (SWITCH_BODY_START_WITH_DEFAULT)


State 167

   82 SWITCH_BODY: SWITCH_BODY_START_WITH_DEFAULT SWITCH_BODY_END .

    $default  reduce using rule 82 (SWITCH_BODY)


State 168

   79 SWITCH: t_switch EXPR SWITCH_BODY .

    $default  reduce using rule 79 (SWITCH)


State 169

   78 SWITCH: t_switch INIT_STATE t_semicolon . EXPR SWITCH_BODY

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 44
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 46
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    FUNC_CALL   go to state 51
    SHIFT       go to state 52
    SHIFT_AC    go to state 53
    METHOD      go to state 28
    VALUE       go to state 54
    EXPR        go to state 214
    EXPR_START  go to state 57


State 170

  128 FOR: t_for INIT_STATE t_semicolon . CONDITION t_semicolon POST_STATE BODY

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 44
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 46
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_true              shift, and go to state 98
    t_false             shift, and go to state 99
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    $default  reduce using rule 125 (CONDITION)

    BOOLEAN     go to state 100
    FUNC_CALL   go to state 51
    SHIFT       go to state 52
    SHIFT_AC    go to state 53
    METHOD      go to state 28
    VALUE       go to state 54
    EXPR        go to state 101
    CONDITION   go to state 215
    EXPR_START  go to state 57


State 171

  129 FOR: t_for CONDITION BODY .

    $default  reduce using rule 129 (FOR)


State 172

   51 ASSIGNMENT: t_vtype t_equality .

    $default  reduce using rule 51 (ASSIGNMENT)


State 173

   53 ASSIGNMENT: t_comma t_id . ASSIGNMENT EXPR t_comma
   54           | t_comma t_id . ASSIGNMENT BOOLEAN t_comma
   56 SHORT_ASSIGN: t_comma t_id . SHORT_ASSIGN EXPR t_comma
   57             | t_comma t_id . SHORT_ASSIGN BOOLEAN t_comma

    t_vtype      shift, and go to state 118
    t_short_dec  shift, and go to state 120
    t_comma      shift, and go to state 121
    t_equality   shift, and go to state 122

    ASSIGNMENT    go to state 216
    SHORT_ASSIGN  go to state 217


State 174

  118 SHORT_EXPR: t_id t_short_expr t_id .

    $default  reduce using rule 118 (SHORT_EXPR)


State 175

  150 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  151      | t_id . t_open_sq t_colon VALUE t_close_sq
  152      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_open_sq  shift, and go to state 218


State 176

   41 VAR: t_id ASSIGNMENT SLICE .

    $default  reduce using rule 41 (VAR)


State 177

   47 VAR: t_id SHORT_ASSIGN t_id . ST_EMBEDDED
   58 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   62 SHIFT_AC: t_id .
   64 METHOD: t_id . t_dot
   67 VALUE: t_id .
  150 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  151      | t_id . t_open_sq t_colon VALUE t_close_sq
  152      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_open_br     shift, and go to state 219
    t_open_paren  shift, and go to state 32
    t_open_sq     shift, and go to state 218
    t_dot         shift, and go to state 33

    t_shift_const  reduce using rule 62 (SHIFT_AC)
    $default       reduce using rule 67 (VALUE)

    PLENTY_OLD    go to state 220
    STRUCT_FIELD  go to state 221
    ST_EMBEDDED   go to state 222


State 178

   44 VAR: t_id SHORT_ASSIGN t_make . t_open_paren MAPS t_close_paren
  148 MAKE: t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  149     | t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_paren  shift, and go to state 223


State 179

   35 VAR: t_id SHORT_ASSIGN BOOLEAN .

    $default  reduce using rule 35 (VAR)


State 180

   32 VAR: t_id SHORT_ASSIGN EXPR .
   50 BOOLEAN: EXPR . t_bool EXPR
  115 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 95
    t_bool  shift, and go to state 156

    $default  reduce using rule 32 (VAR)


State 181

   33 VAR: t_id SHORT_ASSIGN MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 224


State 182

   38 VAR: t_id SHORT_ASSIGN MAKE .

    $default  reduce using rule 38 (VAR)


State 183

   40 VAR: t_id SHORT_ASSIGN SLICE .

    $default  reduce using rule 40 (VAR)


State 184

   36 VAR: t_id MULTI_AR ASSIGNMENT . EXPR
   39    | t_id MULTI_AR ASSIGNMENT . MAKE

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 44
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 46
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_make              shift, and go to state 200
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    FUNC_CALL   go to state 51
    SHIFT       go to state 52
    SHIFT_AC    go to state 53
    METHOD      go to state 28
    VALUE       go to state 54
    EXPR        go to state 225
    EXPR_START  go to state 57
    MAKE        go to state 226


State 185

   48 VAR: t_id ACCESS_FIELDS ASSIGNMENT . VALUE

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 44
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 26
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    FUNC_CALL  go to state 51
    SHIFT      go to state 52
    SHIFT_AC   go to state 53
    METHOD     go to state 28
    VALUE      go to state 227


State 186

  135 ARRAY_INDEX: t_open_sq t_int_const t_close_sq .

    $default  reduce using rule 135 (ARRAY_INDEX)


State 187

  136 ARRAY_INDEX: t_open_sq t_id t_close_sq .

    $default  reduce using rule 136 (ARRAY_INDEX)


State 188

  137 ARRAY_INDEX: t_open_sq t_string t_close_sq .

    $default  reduce using rule 137 (ARRAY_INDEX)


State 189

   53 ASSIGNMENT: t_comma t_id . ASSIGNMENT EXPR t_comma
   54           | t_comma t_id . ASSIGNMENT BOOLEAN t_comma

    t_vtype     shift, and go to state 118
    t_comma     shift, and go to state 136
    t_equality  shift, and go to state 122

    ASSIGNMENT  go to state 216


State 190

   49 VAR: VALUE ASSIGNMENT VALUE .

    $default  reduce using rule 49 (VAR)


State 191

  107 ELSEIF_SECOND: t_else t_if . CONDITION BODY

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 44
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 46
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_true              shift, and go to state 98
    t_false             shift, and go to state 99
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    $default  reduce using rule 125 (CONDITION)

    BOOLEAN     go to state 100
    FUNC_CALL   go to state 51
    SHIFT       go to state 52
    SHIFT_AC    go to state 53
    METHOD      go to state 28
    VALUE       go to state 54
    EXPR        go to state 101
    CONDITION   go to state 228
    EXPR_START  go to state 57


State 192

  110 ELSE_THIRD: t_else BODY .

    $default  reduce using rule 110 (ELSE_THIRD)


State 193

  105 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND ELSEIF_SECOND .

    $default  reduce using rule 105 (MULTY_ELSEIF_SECOND)


State 194

  100 IF: IF_FIRST MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD .
  109 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD . ELSE_THIRD

    t_else  shift, and go to state 195

    $default  reduce using rule 100 (IF)

    ELSE_THIRD  go to state 196


State 195

  110 ELSE_THIRD: t_else . BODY

    t_open_br  shift, and go to state 35

    BODY        go to state 192
    BODY_START  go to state 37


State 196

  109 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD ELSE_THIRD .

    $default  reduce using rule 109 (MULTY_ELSE_THIRD)


State 197

  153 MAPS: t_map t_open_sq . t_vtype t_close_sq t_vtype

    t_vtype  shift, and go to state 229


State 198

   45 VAR: t_var t_id t_id ASSIGNMENT . t_id ST_EMBEDDED

    t_id  shift, and go to state 230


State 199

   46 VAR: t_var t_id ASSIGNMENT t_id . ST_EMBEDDED
   58 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   62 SHIFT_AC: t_id .
   64 METHOD: t_id . t_dot
   67 VALUE: t_id .
  150 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  151      | t_id . t_open_sq t_colon VALUE t_close_sq
  152      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_open_br     shift, and go to state 219
    t_open_paren  shift, and go to state 32
    t_open_sq     shift, and go to state 218
    t_dot         shift, and go to state 33

    t_shift_const  reduce using rule 62 (SHIFT_AC)
    $default       reduce using rule 67 (VALUE)

    PLENTY_OLD    go to state 220
    STRUCT_FIELD  go to state 221
    ST_EMBEDDED   go to state 231


State 200

  148 MAKE: t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  149     | t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_paren  shift, and go to state 232


State 201

   31 VAR: t_var t_id ASSIGNMENT BOOLEAN .

    $default  reduce using rule 31 (VAR)


State 202

   29 VAR: t_var t_id ASSIGNMENT EXPR .
   30    | t_var t_id ASSIGNMENT EXPR . t_vtype
   50 BOOLEAN: EXPR . t_bool EXPR
  115 EXPR: EXPR . t_sign VALUE

    t_vtype  shift, and go to state 233
    t_sign   shift, and go to state 95
    t_bool   shift, and go to state 156

    $default  reduce using rule 29 (VAR)


State 203

   34 VAR: t_var t_id ASSIGNMENT MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 234


State 204

   37 VAR: t_var t_id ASSIGNMENT MAKE .

    $default  reduce using rule 37 (VAR)


State 205

   42 VAR: t_var t_id ASSIGNMENT SLICE .

    $default  reduce using rule 42 (VAR)


State 206

  132 ARRAY_BODY: t_var t_id MULTI_AR t_vtype .
  133           | t_var t_id MULTI_AR t_vtype . ASSIGNMENT MULTI_AR t_vtype PLENTY
  134           | t_var t_id MULTI_AR t_vtype . ASSIGNMENT MAKE

    t_vtype     shift, and go to state 118
    t_comma     shift, and go to state 136
    t_equality  shift, and go to state 122

    $default  reduce using rule 132 (ARRAY_BODY)

    ASSIGNMENT  go to state 235


State 207

   50 BOOLEAN: EXPR t_bool EXPR .
  115 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 95

    $default  reduce using rule 50 (BOOLEAN)


State 208

   94 CASE_STATEMENT: MULTIPLE_ARG .

    $default  reduce using rule 94 (CASE_STATEMENT)


State 209

   90 MULTIPLE_ARG: FIRST_PART . SECOND_PART
   92 FIRST_PART: FIRST_PART . EXPR t_comma

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 44
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 46
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    FUNC_CALL    go to state 51
    SHIFT        go to state 52
    SHIFT_AC     go to state 53
    METHOD       go to state 28
    VALUE        go to state 54
    SECOND_PART  go to state 236
    EXPR         go to state 237
    EXPR_START   go to state 57


State 210

   88 CASE: t_case CASE_STATEMENT . CASE_BODY

    t_colon  shift, and go to state 212

    CASE_BODY  go to state 238


State 211

   91 FIRST_PART: EXPR . t_comma
   95 CASE_STATEMENT: EXPR .
  115 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 95
    t_comma  shift, and go to state 239

    $default  reduce using rule 95 (CASE_STATEMENT)


State 212

   96 CASE_BODY: t_colon .
   97          | t_colon . t_enter

    t_enter  shift, and go to state 240

    $default  reduce using rule 96 (CASE_BODY)


State 213

   89 DEFAULT: t_default CASE_BODY .
   98 CASE_BODY: CASE_BODY . BODY_FILLING END_SYMBOLS

    t_var               shift, and go to state 58
    t_if                shift, and go to state 59
    t_switch            shift, and go to state 60
    t_type              shift, and go to state 4
    t_for               shift, and go to state 61
    t_goto              shift, and go to state 62
    t_return            shift, and go to state 63
    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 64
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 26
    t_open_sq           shift, and go to state 66
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    $default  reduce using rule 89 (DEFAULT)

    BODY_FILLING   go to state 241
    VAR            go to state 69
    FUNC_CALL      go to state 70
    SHIFT          go to state 52
    SHIFT_AC       go to state 53
    METHOD         go to state 71
    VALUE          go to state 72
    GOTO           go to state 73
    LABEL          go to state 74
    SWITCH         go to state 75
    IF             go to state 76
    IF_FIRST       go to state 77
    RETURN         go to state 78
    SHORT_EXPR     go to state 79
    FOR            go to state 80
    ARRAY_BODY     go to state 81
    ARRAY_INDEX    go to state 82
    MULTI_AR       go to state 83
    STRUCT         go to state 84
    STRUCT_START   go to state 11
    ACCESS_FIELDS  go to state 85


State 214

   78 SWITCH: t_switch INIT_STATE t_semicolon EXPR . SWITCH_BODY
  115 EXPR: EXPR . t_sign VALUE

    t_open_br  shift, and go to state 105
    t_sign     shift, and go to state 95

    SWITCH_BODY                     go to state 242
    SWITCH_BODY_START               go to state 110
    SWITCH_BODY_START_WITH_DEFAULT  go to state 111


State 215

  128 FOR: t_for INIT_STATE t_semicolon CONDITION . t_semicolon POST_STATE BODY

    t_semicolon  shift, and go to state 243


State 216

   53 ASSIGNMENT: t_comma t_id ASSIGNMENT . EXPR t_comma
   54           | t_comma t_id ASSIGNMENT . BOOLEAN t_comma

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 44
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 46
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    BOOLEAN     go to state 244
    FUNC_CALL   go to state 51
    SHIFT       go to state 52
    SHIFT_AC    go to state 53
    METHOD      go to state 28
    VALUE       go to state 54
    EXPR        go to state 245
    EXPR_START  go to state 57


State 217

   56 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN . EXPR t_comma
   57             | t_comma t_id SHORT_ASSIGN . BOOLEAN t_comma

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 44
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 46
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    BOOLEAN     go to state 246
    FUNC_CALL   go to state 51
    SHIFT       go to state 52
    SHIFT_AC    go to state 53
    METHOD      go to state 28
    VALUE       go to state 54
    EXPR        go to state 247
    EXPR_START  go to state 57


State 218

  150 SLICE: t_id t_open_sq . VALUE t_colon VALUE t_close_sq
  151      | t_id t_open_sq . t_colon VALUE t_close_sq
  152      | t_id t_open_sq . VALUE t_colon t_close_sq

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 44
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 26
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_colon             shift, and go to state 248
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    FUNC_CALL  go to state 51
    SHIFT      go to state 52
    SHIFT_AC   go to state 53
    METHOD     go to state 28
    VALUE      go to state 249


State 219

  143 PLENTY_OLD: t_open_br . ENUM t_close_br
  144           | t_open_br . t_close_br
  145           | t_open_br . PLENTY t_close_br
  165 STRUCT_FIELD: t_open_br . END_SYMBOLS STRUCT_ENUM t_close_br
  166             | t_open_br . END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 44
    t_string            shift, and go to state 45
    t_open_br           shift, and go to state 250
    t_close_br          shift, and go to state 251
    t_open_paren        shift, and go to state 26
    t_rune              shift, and go to state 47
    t_semicolon         shift, and go to state 17
    t_blank_identifier  shift, and go to state 48
    t_enter             shift, and go to state 18
    t_eof               shift, and go to state 19
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    FUNC_CALL    go to state 51
    SHIFT        go to state 52
    SHIFT_AC     go to state 53
    METHOD       go to state 28
    VALUE        go to state 252
    PLENTY       go to state 253
    PLENTY_OLD   go to state 254
    ENUM         go to state 255
    END_SYMBOLS  go to state 256


State 220

  167 STRUCT_FIELD: PLENTY_OLD .

    $default  reduce using rule 167 (STRUCT_FIELD)


State 221

  168 ST_EMBEDDED: STRUCT_FIELD .
  169            | STRUCT_FIELD . t_comma ST_EMBEDDED

    t_comma  shift, and go to state 257

    $default  reduce using rule 168 (ST_EMBEDDED)


State 222

   47 VAR: t_id SHORT_ASSIGN t_id ST_EMBEDDED .

    $default  reduce using rule 47 (VAR)


State 223

   44 VAR: t_id SHORT_ASSIGN t_make t_open_paren . MAPS t_close_paren
  148 MAKE: t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_close_paren
  149     | t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_map      shift, and go to state 151
    t_open_sq  shift, and go to state 66

    ARRAY_INDEX  go to state 82
    MULTI_AR     go to state 258
    MAPS         go to state 259


State 224

   33 VAR: t_id SHORT_ASSIGN MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 250

    PLENTY      go to state 260
    PLENTY_OLD  go to state 254


State 225

   36 VAR: t_id MULTI_AR ASSIGNMENT EXPR .
  115 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 95

    $default  reduce using rule 36 (VAR)


State 226

   39 VAR: t_id MULTI_AR ASSIGNMENT MAKE .

    $default  reduce using rule 39 (VAR)


State 227

   48 VAR: t_id ACCESS_FIELDS ASSIGNMENT VALUE .

    $default  reduce using rule 48 (VAR)


State 228

  107 ELSEIF_SECOND: t_else t_if CONDITION . BODY

    t_open_br  shift, and go to state 35

    BODY        go to state 261
    BODY_START  go to state 37


State 229

  153 MAPS: t_map t_open_sq t_vtype . t_close_sq t_vtype

    t_close_sq  shift, and go to state 262


State 230

   45 VAR: t_var t_id t_id ASSIGNMENT t_id . ST_EMBEDDED

    t_open_br  shift, and go to state 219

    PLENTY_OLD    go to state 220
    STRUCT_FIELD  go to state 221
    ST_EMBEDDED   go to state 263


State 231

   46 VAR: t_var t_id ASSIGNMENT t_id ST_EMBEDDED .

    $default  reduce using rule 46 (VAR)


State 232

  148 MAKE: t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_close_paren
  149     | t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_sq  shift, and go to state 66

    ARRAY_INDEX  go to state 82
    MULTI_AR     go to state 258


State 233

   30 VAR: t_var t_id ASSIGNMENT EXPR t_vtype .

    $default  reduce using rule 30 (VAR)


State 234

   34 VAR: t_var t_id ASSIGNMENT MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 250

    PLENTY      go to state 264
    PLENTY_OLD  go to state 254


State 235

  133 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT . MULTI_AR t_vtype PLENTY
  134           | t_var t_id MULTI_AR t_vtype ASSIGNMENT . MAKE

    t_open_sq  shift, and go to state 66
    t_make     shift, and go to state 200

    ARRAY_INDEX  go to state 82
    MULTI_AR     go to state 265
    MAKE         go to state 266


State 236

   90 MULTIPLE_ARG: FIRST_PART SECOND_PART .

    $default  reduce using rule 90 (MULTIPLE_ARG)


State 237

   92 FIRST_PART: FIRST_PART EXPR . t_comma
   93 SECOND_PART: EXPR .
  115 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 95
    t_comma  shift, and go to state 267

    $default  reduce using rule 93 (SECOND_PART)


State 238

   88 CASE: t_case CASE_STATEMENT CASE_BODY .
   98 CASE_BODY: CASE_BODY . BODY_FILLING END_SYMBOLS

    t_var               shift, and go to state 58
    t_if                shift, and go to state 59
    t_switch            shift, and go to state 60
    t_type              shift, and go to state 4
    t_for               shift, and go to state 61
    t_goto              shift, and go to state 62
    t_return            shift, and go to state 63
    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 64
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 26
    t_open_sq           shift, and go to state 66
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    $default  reduce using rule 88 (CASE)

    BODY_FILLING   go to state 241
    VAR            go to state 69
    FUNC_CALL      go to state 70
    SHIFT          go to state 52
    SHIFT_AC       go to state 53
    METHOD         go to state 71
    VALUE          go to state 72
    GOTO           go to state 73
    LABEL          go to state 74
    SWITCH         go to state 75
    IF             go to state 76
    IF_FIRST       go to state 77
    RETURN         go to state 78
    SHORT_EXPR     go to state 79
    FOR            go to state 80
    ARRAY_BODY     go to state 81
    ARRAY_INDEX    go to state 82
    MULTI_AR       go to state 83
    STRUCT         go to state 84
    STRUCT_START   go to state 11
    ACCESS_FIELDS  go to state 85


State 239

   91 FIRST_PART: EXPR t_comma .

    $default  reduce using rule 91 (FIRST_PART)


State 240

   97 CASE_BODY: t_colon t_enter .

    $default  reduce using rule 97 (CASE_BODY)


State 241

   98 CASE_BODY: CASE_BODY BODY_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 17
    t_enter      shift, and go to state 18
    t_eof        shift, and go to state 19

    END_SYMBOLS  go to state 268


State 242

   78 SWITCH: t_switch INIT_STATE t_semicolon EXPR SWITCH_BODY .

    $default  reduce using rule 78 (SWITCH)


State 243

  128 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon . POST_STATE BODY

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 269
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 46
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    FUNC_CALL   go to state 51
    SHIFT       go to state 52
    SHIFT_AC    go to state 53
    METHOD      go to state 28
    VALUE       go to state 54
    EXPR        go to state 270
    POST_STATE  go to state 271
    EXPR_START  go to state 57


State 244

   54 ASSIGNMENT: t_comma t_id ASSIGNMENT BOOLEAN . t_comma

    t_comma  shift, and go to state 272


State 245

   50 BOOLEAN: EXPR . t_bool EXPR
   53 ASSIGNMENT: t_comma t_id ASSIGNMENT EXPR . t_comma
  115 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 95
    t_comma  shift, and go to state 273
    t_bool   shift, and go to state 156


State 246

   57 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN BOOLEAN . t_comma

    t_comma  shift, and go to state 274


State 247

   50 BOOLEAN: EXPR . t_bool EXPR
   56 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN EXPR . t_comma
  115 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 95
    t_comma  shift, and go to state 275
    t_bool   shift, and go to state 156


State 248

  151 SLICE: t_id t_open_sq t_colon . VALUE t_close_sq

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 44
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 26
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    FUNC_CALL  go to state 51
    SHIFT      go to state 52
    SHIFT_AC   go to state 53
    METHOD     go to state 28
    VALUE      go to state 276


State 249

  150 SLICE: t_id t_open_sq VALUE . t_colon VALUE t_close_sq
  152      | t_id t_open_sq VALUE . t_colon t_close_sq

    t_colon  shift, and go to state 277


State 250

  143 PLENTY_OLD: t_open_br . ENUM t_close_br
  144           | t_open_br . t_close_br
  145           | t_open_br . PLENTY t_close_br

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 44
    t_string            shift, and go to state 45
    t_open_br           shift, and go to state 250
    t_close_br          shift, and go to state 251
    t_open_paren        shift, and go to state 26
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    FUNC_CALL   go to state 51
    SHIFT       go to state 52
    SHIFT_AC    go to state 53
    METHOD      go to state 28
    VALUE       go to state 252
    PLENTY      go to state 253
    PLENTY_OLD  go to state 254
    ENUM        go to state 255


State 251

  144 PLENTY_OLD: t_open_br t_close_br .

    $default  reduce using rule 144 (PLENTY_OLD)


State 252

  146 ENUM: VALUE .

    $default  reduce using rule 146 (ENUM)


State 253

  145 PLENTY_OLD: t_open_br PLENTY . t_close_br

    t_close_br  shift, and go to state 278


State 254

  141 PLENTY: PLENTY_OLD .
  142       | PLENTY_OLD . t_comma PLENTY

    t_comma  shift, and go to state 279

    $default  reduce using rule 141 (PLENTY)


State 255

  143 PLENTY_OLD: t_open_br ENUM . t_close_br
  147 ENUM: ENUM . t_comma VALUE

    t_close_br  shift, and go to state 280
    t_comma     shift, and go to state 281


State 256

  165 STRUCT_FIELD: t_open_br END_SYMBOLS . STRUCT_ENUM t_close_br
  166             | t_open_br END_SYMBOLS . STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS

    t_id  shift, and go to state 282

    STRUCT_ENUM  go to state 283


State 257

  169 ST_EMBEDDED: STRUCT_FIELD t_comma . ST_EMBEDDED

    t_open_br  shift, and go to state 219

    PLENTY_OLD    go to state 220
    STRUCT_FIELD  go to state 221
    ST_EMBEDDED   go to state 284


State 258

  148 MAKE: t_make t_open_paren MULTI_AR . t_vtype t_comma VALUE t_close_paren
  149     | t_make t_open_paren MULTI_AR . t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_vtype  shift, and go to state 285


State 259

   44 VAR: t_id SHORT_ASSIGN t_make t_open_paren MAPS . t_close_paren

    t_close_paren  shift, and go to state 286


State 260

   33 VAR: t_id SHORT_ASSIGN MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 33 (VAR)


State 261

  107 ELSEIF_SECOND: t_else t_if CONDITION BODY .

    $default  reduce using rule 107 (ELSEIF_SECOND)


State 262

  153 MAPS: t_map t_open_sq t_vtype t_close_sq . t_vtype

    t_vtype  shift, and go to state 287


State 263

   45 VAR: t_var t_id t_id ASSIGNMENT t_id ST_EMBEDDED .

    $default  reduce using rule 45 (VAR)


State 264

   34 VAR: t_var t_id ASSIGNMENT MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 34 (VAR)


State 265

  133 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 288


State 266

  134 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MAKE .

    $default  reduce using rule 134 (ARRAY_BODY)


State 267

   92 FIRST_PART: FIRST_PART EXPR t_comma .

    $default  reduce using rule 92 (FIRST_PART)


State 268

   98 CASE_BODY: CASE_BODY BODY_FILLING END_SYMBOLS .

    $default  reduce using rule 98 (CASE_BODY)


State 269

   58 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   62 SHIFT_AC: t_id .
   64 METHOD: t_id . t_dot
   67 VALUE: t_id .
  127 POST_STATE: t_id . t_inc_const

    t_inc_const   shift, and go to state 289
    t_open_paren  shift, and go to state 32
    t_dot         shift, and go to state 33

    t_shift_const  reduce using rule 62 (SHIFT_AC)
    $default       reduce using rule 67 (VALUE)


State 270

  115 EXPR: EXPR . t_sign VALUE
  126 POST_STATE: EXPR .

    t_sign  shift, and go to state 95

    $default  reduce using rule 126 (POST_STATE)


State 271

  128 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE . BODY

    t_open_br  shift, and go to state 35

    BODY        go to state 290
    BODY_START  go to state 37


State 272

   54 ASSIGNMENT: t_comma t_id ASSIGNMENT BOOLEAN t_comma .

    $default  reduce using rule 54 (ASSIGNMENT)


State 273

   53 ASSIGNMENT: t_comma t_id ASSIGNMENT EXPR t_comma .

    $default  reduce using rule 53 (ASSIGNMENT)


State 274

   57 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN BOOLEAN t_comma .

    $default  reduce using rule 57 (SHORT_ASSIGN)


State 275

   56 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN EXPR t_comma .

    $default  reduce using rule 56 (SHORT_ASSIGN)


State 276

  151 SLICE: t_id t_open_sq t_colon VALUE . t_close_sq

    t_close_sq  shift, and go to state 291


State 277

  150 SLICE: t_id t_open_sq VALUE t_colon . VALUE t_close_sq
  152      | t_id t_open_sq VALUE t_colon . t_close_sq

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 44
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 26
    t_close_sq          shift, and go to state 292
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    FUNC_CALL  go to state 51
    SHIFT      go to state 52
    SHIFT_AC   go to state 53
    METHOD     go to state 28
    VALUE      go to state 293


State 278

  145 PLENTY_OLD: t_open_br PLENTY t_close_br .

    $default  reduce using rule 145 (PLENTY_OLD)


State 279

  142 PLENTY: PLENTY_OLD t_comma . PLENTY

    t_open_br  shift, and go to state 250

    PLENTY      go to state 294
    PLENTY_OLD  go to state 254


State 280

  143 PLENTY_OLD: t_open_br ENUM t_close_br .

    $default  reduce using rule 143 (PLENTY_OLD)


State 281

  147 ENUM: ENUM t_comma . VALUE

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 44
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 26
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    FUNC_CALL  go to state 51
    SHIFT      go to state 52
    SHIFT_AC   go to state 53
    METHOD     go to state 28
    VALUE      go to state 295


State 282

  161 STRUCT_ENUM: t_id . t_colon VALUE
  163            | t_id . t_colon t_id STRUCT_FIELD

    t_colon  shift, and go to state 296


State 283

  162 STRUCT_ENUM: STRUCT_ENUM . t_comma END_SYMBOLS t_id t_colon VALUE
  164            | STRUCT_ENUM . t_comma END_SYMBOLS t_id t_colon t_id STRUCT_FIELD
  165 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM . t_close_br
  166             | t_open_br END_SYMBOLS STRUCT_ENUM . t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS

    t_close_br  shift, and go to state 297
    t_comma     shift, and go to state 298


State 284

  169 ST_EMBEDDED: STRUCT_FIELD t_comma ST_EMBEDDED .

    $default  reduce using rule 169 (ST_EMBEDDED)


State 285

  148 MAKE: t_make t_open_paren MULTI_AR t_vtype . t_comma VALUE t_close_paren
  149     | t_make t_open_paren MULTI_AR t_vtype . t_comma VALUE t_comma t_int_const VALUE

    t_comma  shift, and go to state 299


State 286

   44 VAR: t_id SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren .

    $default  reduce using rule 44 (VAR)


State 287

  153 MAPS: t_map t_open_sq t_vtype t_close_sq t_vtype .

    $default  reduce using rule 153 (MAPS)


State 288

  133 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 250

    PLENTY      go to state 300
    PLENTY_OLD  go to state 254


State 289

  127 POST_STATE: t_id t_inc_const .

    $default  reduce using rule 127 (POST_STATE)


State 290

  128 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY .

    $default  reduce using rule 128 (FOR)


State 291

  151 SLICE: t_id t_open_sq t_colon VALUE t_close_sq .

    $default  reduce using rule 151 (SLICE)


State 292

  152 SLICE: t_id t_open_sq VALUE t_colon t_close_sq .

    $default  reduce using rule 152 (SLICE)


State 293

  150 SLICE: t_id t_open_sq VALUE t_colon VALUE . t_close_sq

    t_close_sq  shift, and go to state 301


State 294

  142 PLENTY: PLENTY_OLD t_comma PLENTY .

    $default  reduce using rule 142 (PLENTY)


State 295

  147 ENUM: ENUM t_comma VALUE .

    $default  reduce using rule 147 (ENUM)


State 296

  161 STRUCT_ENUM: t_id t_colon . VALUE
  163            | t_id t_colon . t_id STRUCT_FIELD

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 302
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 26
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    FUNC_CALL  go to state 51
    SHIFT      go to state 52
    SHIFT_AC   go to state 53
    METHOD     go to state 28
    VALUE      go to state 303


State 297

  165 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_close_br .

    $default  reduce using rule 165 (STRUCT_FIELD)


State 298

  162 STRUCT_ENUM: STRUCT_ENUM t_comma . END_SYMBOLS t_id t_colon VALUE
  164            | STRUCT_ENUM t_comma . END_SYMBOLS t_id t_colon t_id STRUCT_FIELD
  166 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma . END_SYMBOLS t_close_br t_comma END_SYMBOLS

    t_semicolon  shift, and go to state 17
    t_enter      shift, and go to state 18
    t_eof        shift, and go to state 19

    END_SYMBOLS  go to state 304


State 299

  148 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma . VALUE t_close_paren
  149     | t_make t_open_paren MULTI_AR t_vtype t_comma . VALUE t_comma t_int_const VALUE

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 44
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 26
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    FUNC_CALL  go to state 51
    SHIFT      go to state 52
    SHIFT_AC   go to state 53
    METHOD     go to state 28
    VALUE      go to state 305


State 300

  133 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 133 (ARRAY_BODY)


State 301

  150 SLICE: t_id t_open_sq VALUE t_colon VALUE t_close_sq .

    $default  reduce using rule 150 (SLICE)


State 302

   58 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   62 SHIFT_AC: t_id .
   64 METHOD: t_id . t_dot
   67 VALUE: t_id .
  163 STRUCT_ENUM: t_id t_colon t_id . STRUCT_FIELD

    t_open_br     shift, and go to state 219
    t_open_paren  shift, and go to state 32
    t_dot         shift, and go to state 33

    t_shift_const  reduce using rule 62 (SHIFT_AC)
    $default       reduce using rule 67 (VALUE)

    PLENTY_OLD    go to state 220
    STRUCT_FIELD  go to state 306


State 303

  161 STRUCT_ENUM: t_id t_colon VALUE .

    $default  reduce using rule 161 (STRUCT_ENUM)


State 304

  162 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS . t_id t_colon VALUE
  164            | STRUCT_ENUM t_comma END_SYMBOLS . t_id t_colon t_id STRUCT_FIELD
  166 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS . t_close_br t_comma END_SYMBOLS

    t_id        shift, and go to state 307
    t_close_br  shift, and go to state 308


State 305

  148 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE . t_close_paren
  149     | t_make t_open_paren MULTI_AR t_vtype t_comma VALUE . t_comma t_int_const VALUE

    t_comma        shift, and go to state 309
    t_close_paren  shift, and go to state 310


State 306

  163 STRUCT_ENUM: t_id t_colon t_id STRUCT_FIELD .

    $default  reduce using rule 163 (STRUCT_ENUM)


State 307

  162 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id . t_colon VALUE
  164            | STRUCT_ENUM t_comma END_SYMBOLS t_id . t_colon t_id STRUCT_FIELD

    t_colon  shift, and go to state 311


State 308

  166 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br . t_comma END_SYMBOLS

    t_comma  shift, and go to state 312


State 309

  149 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma . t_int_const VALUE

    t_int_const  shift, and go to state 313


State 310

  148 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren .

    $default  reduce using rule 148 (MAKE)


State 311

  162 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon . VALUE
  164            | STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon . t_id STRUCT_FIELD

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 314
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 26
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    FUNC_CALL  go to state 51
    SHIFT      go to state 52
    SHIFT_AC   go to state 53
    METHOD     go to state 28
    VALUE      go to state 315


State 312

  166 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma . END_SYMBOLS

    t_semicolon  shift, and go to state 17
    t_enter      shift, and go to state 18
    t_eof        shift, and go to state 19

    END_SYMBOLS  go to state 316


State 313

  149 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const . VALUE

    t_int_const         shift, and go to state 42
    t_float_const       shift, and go to state 43
    t_id                shift, and go to state 44
    t_string            shift, and go to state 45
    t_open_paren        shift, and go to state 26
    t_rune              shift, and go to state 47
    t_blank_identifier  shift, and go to state 48
    t_pointer           shift, and go to state 49
    t_ampersand         shift, and go to state 50

    FUNC_CALL  go to state 51
    SHIFT      go to state 52
    SHIFT_AC   go to state 53
    METHOD     go to state 28
    VALUE      go to state 317


State 314

   58 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   62 SHIFT_AC: t_id .
   64 METHOD: t_id . t_dot
   67 VALUE: t_id .
  164 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon t_id . STRUCT_FIELD

    t_open_br     shift, and go to state 219
    t_open_paren  shift, and go to state 32
    t_dot         shift, and go to state 33

    t_shift_const  reduce using rule 62 (SHIFT_AC)
    $default       reduce using rule 67 (VALUE)

    PLENTY_OLD    go to state 220
    STRUCT_FIELD  go to state 318


State 315

  162 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon VALUE .

    $default  reduce using rule 162 (STRUCT_ENUM)


State 316

  166 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS .

    $default  reduce using rule 166 (STRUCT_FIELD)


State 317

  149 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE .

    $default  reduce using rule 149 (MAKE)


State 318

  164 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon t_id STRUCT_FIELD .

    $default  reduce using rule 164 (STRUCT_ENUM)
