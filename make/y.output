Terminals unused in grammar

   t_constant
   t_chan
   t_go
   t_range
   t_select
   t_fallthrough
   t_or_const
   t_and_const
   t_param_const
   t_eq_const
   t_rel_const
   t_point_const
   t_punc
   t_char_const
   t_ampersand
   '+'
   '-'
   '*'
   '/'


State 325 conflicts: 1 shift/reduce
State 327 conflicts: 3 shift/reduce


Grammar

    0 $accept: START $end

    1 START: START GLOBAL END_SYMBOLS
    2      | GLOBAL END_SYMBOLS
    3      | START END_SYMBOLS

    4 GLOBAL: PACKAGE
    5       | IMPORT
    6       | FUNC
    7       | STRUCT
    8       | INTERFACE
    9       | STRUCT_METHOD

   10 PACKAGE: t_package t_id

   11 IMPORT: t_import t_string
   12       | t_import t_open_paren PARAM_IMPORT t_close_paren
   13       | t_import t_open_paren t_enter PARAM_IMPORT t_close_paren
   14       | t_import t_id t_string

   15 FUNC: t_func t_id t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART

   16 FUNC_PARAM: FUNC_PARAM_FULFILL
   17           | FUNC_PARAM t_comma FUNC_PARAM_FULFILL

   18 FUNC_SECOND_PART: BODY
   19                 | TYPE_AND_STRUCT BODY
   20                 | FUNC_RETURN_VALUE TYPE_AND_STRUCT BODY
   21                 | FUNC_PARAM_SECOND BODY

   22 FUNC_PARAM_SECOND: FUNC_PARAM_SECOND_START FUNC_PARAM_SECOND_END
   23                  | t_open_paren t_close_paren

   24 FUNC_PARAM_SECOND_START: t_open_paren
   25                        | FUNC_PARAM_SECOND_START FUNC_PARAM_FULFILL_SECOND

   26 FUNC_PARAM_SECOND_END: FUNC_PARAM_FULFILL_SECOND_END t_close_paren

   27 FUNC_PARAM_FULFILL: t_id TYPE_AND_STRUCT
   28                   | t_id
   29                   | /* empty */

   30 FUNC_PARAM_FULFILL_SECOND: t_id TYPE_AND_STRUCT t_comma
   31                          | TYPE_AND_STRUCT t_comma
   32                          | t_enter

   33 FUNC_PARAM_FULFILL_SECOND_END: t_id TYPE_AND_STRUCT
   34                              | TYPE_AND_STRUCT
   35                              | t_enter

   36 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE_FULFILL
   37                  | FUNC_RETURN_VALUE FUNC_RETURN_VALUE_FULFILL

   38 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren TYPE_AND_STRUCT t_close_paren
   39                          | t_func t_open_paren t_close_paren

   40 TYPE_AND_STRUCT: t_vtype
   41                | t_id

   42 STRUCT_METHOD: t_func t_open_paren t_id TYPE_AND_STRUCT t_close_paren STRUCT_METHOD_SECOND_PART

   43 STRUCT_METHOD_SECOND_PART: t_id FUNC_PARAM_SECOND BODY
   44                          | t_id FUNC_PARAM_SECOND TYPE_AND_STRUCT BODY
   45                          | t_id FUNC_PARAM_SECOND FUNC_PARAM_SECOND BODY

   46 SHORT_FUNC: t_func t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART

   47 BODY: BODY_START BODY_END

   48 BODY_END: t_close_br

   49 BODY_START: t_open_br
   50           | BODY_START BODY_FILLING END_SYMBOLS
   51           | BODY_START VAR
   52           | BODY_START END_SYMBOLS

   53 BODY_FILLING: FOR
   54             | SWITCH
   55             | GOTO
   56             | LABEL
   57             | IF
   58             | MULTI_AR
   59             | FUNC_CALL
   60             | SHORT_EXPR
   61             | RETURN
   62             | STRUCT
   63             | SLICE
   64             | DEFER
   65             | METHOD
   66             | INTERFACE

   67 VAR: MANY_IDS SHORT_ASSIGN MANY_VALUES
   68    | MANY_IDS SHORT_ASSIGN FULFILL_FOR_VAL END_SYMBOLS
   69    | t_var MANY_IDS ASSIGNMENT MANY_VALUES
   70    | t_var MANY_IDS TYPE_AND_STRUCT END_SYMBOLS
   71    | t_var MANY_IDS ASSIGNMENT FULFILL_FOR_VAL END_SYMBOLS
   72    | t_var t_id MAPS END_SYMBOLS
   73    | FULFILL_FOR_IDS SHORT_ASSIGN FULFILL_FOR_VAL SPEC
   74    | t_var FULFILL_FOR_IDS TYPE_AND_STRUCT END_SYMBOLS
   75    | t_var FULFILL_FOR_IDS ASSIGNMENT FULFILL_FOR_VAL END_SYMBOLS

   76 SPEC: END_SYMBOLS
   77     | /* empty */

   78 FULFILL_FOR_VAL: EXPR
   79                | BOOLEAN
   80                | MULTI_AR t_vtype PLENTY_OLD
   81                | MAKE
   82                | SLICE
   83                | t_make t_open_paren MAPS t_close_paren
   84                | ST_EMBEDDED

   85 FULFILL_FOR_IDS: t_id
   86                | t_id MULTI_AR
   87                | METHOD
   88                | POINTER
   89                | t_id POINTER

   90 BOOLEAN: VALUE t_bool VALUE
   91        | BOOLEAN t_bool VALUE

   92 DEFER: t_defer FUNC_CALL

   93 ASSIGNMENT: TYPE_AND_STRUCT t_equality
   94           | t_equality

   95 SHORT_ASSIGN: t_short_dec

   96 MANY_IDS: MANY_IDS_START MANY_IDS_END

   97 MANY_IDS_START: FULFILL_FOR_IDS t_comma
   98               | MANY_IDS_START MANY_IDS_FULFILL

   99 MANY_IDS_FULFILL: FULFILL_FOR_IDS t_comma
  100                 | t_enter

  101 MANY_IDS_END: FULFILL_FOR_IDS

  102 MANY_VALUES: MANY_VALUES_START MANY_VALUES_END

  103 MANY_VALUES_START_FULFILL: FULFILL_FOR_VAL t_comma
  104                          | t_enter

  105 MANY_VALUES_START: MANY_VALUES_START_FULFILL
  106                  | MANY_VALUES_START MANY_VALUES_START_FULFILL

  107 MANY_VALUES_END: FULFILL_FOR_VAL END_SYMBOLS

  108 FUNC_CALL: t_id PARAM

  109 PARAM: PARAM_START PARAM_END
  110      | t_open_paren t_close_paren

  111 PARAM_START: t_open_paren
  112            | PARAM_START PARAM_FULFILL

  113 PARAM_END: PARAM_END_FULFILL t_close_paren

  114 PARAM_END_FULFILL: FULFILL_FOR_IDS
  115                  | t_enter

  116 PARAM_FULFILL: FULFILL_FOR_IDS t_comma
  117              | t_enter

  118 SHIFT: SHIFT_AC t_shift_const SHIFT_AC

  119 SHIFT_AC: t_id
  120         | t_int_const

  121 METHOD: METHOD_FULFILL t_dot METHOD_FULFILL
  122       | METHOD t_dot METHOD_FULFILL

  123 METHOD_FULFILL: t_id
  124               | FUNC_CALL

  125 POINTER: t_pointer

  126 PARAM_IMPORT: t_string END_SYMBOLS
  127             | t_id t_string END_SYMBOLS
  128             | PARAM_IMPORT t_string END_SYMBOLS
  129             | PARAM_IMPORT t_id t_string END_SYMBOLS

  130 VALUE: t_int_const
  131      | t_float_const
  132      | t_id
  133      | t_sign t_id
  134      | t_string
  135      | t_rune
  136      | t_blank_identifier
  137      | SHORT_FUNC PARAM
  138      | FUNC_CALL
  139      | SHIFT
  140      | POINTER
  141      | METHOD
  142      | EXPR_START EXPR EXPR_END
  143      | EXPR_START BOOLEAN EXPR_END

  144 GOTO: t_goto t_id

  145 LABEL: t_id t_colon

  146 SWITCH: t_switch INIT_STATE t_semicolon EXPR SWITCH_BODY
  147       | t_switch EXPR SWITCH_BODY
  148       | t_switch SWITCH_BODY

  149 SWITCH_BODY: SWITCH_BODY_START SWITCH_BODY_END
  150            | SWITCH_BODY_START_WITH_DEFAULT SWITCH_BODY_END

  151 SWITCH_BODY_START: t_open_br
  152                  | SWITCH_BODY_START END_SYMBOLS
  153                  | SWITCH_BODY_START CASE

  154 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START DEFAULT
  155                               | SWITCH_BODY_START_WITH_DEFAULT CASE

  156 CASE: t_case CASE_STATEMENT CASE_BODY

  157 DEFAULT: t_default CASE_BODY

  158 MULTIPLE_ARG: FIRST_PART SECOND_PART

  159 FIRST_PART: EXPR t_comma
  160           | FIRST_PART EXPR t_comma

  161 SECOND_PART: EXPR

  162 CASE_STATEMENT: MULTIPLE_ARG
  163               | EXPR

  164 CASE_BODY: t_colon
  165          | CASE_BODY LOOP_FILLING END_SYMBOLS

  166 SWITCH_BODY_END: t_close_br

  167 IF: IF_FIRST MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD
  168   | IF_FIRST MULTY_ELSEIF_SECOND
  169   | IF_FIRST MULTY_ELSE_THIRD
  170   | IF_FIRST

  171 IF_FIRST: t_if CONDITION BODY_FOR_LOOP
  172         | t_if INIT_STATE t_semicolon CONDITION BODY_FOR_LOOP

  173 BODY_FOR_LOOP: BODY_FOR_LOOP_START BODY_FOR_LOOP_END

  174 BODY_FOR_LOOP_START: t_open_br
  175                    | t_open_br END_SYMBOLS
  176                    | BODY_FOR_LOOP_START LOOP_FILLING END_SYMBOLS

  177 BODY_FOR_LOOP_END: t_close_br

  178 LOOP_FILLING: BODY_FILLING
  179             | t_break
  180             | t_continue

  181 MULTY_ELSEIF_SECOND: ELSEIF_SECOND
  182                    | MULTY_ELSEIF_SECOND ELSEIF_SECOND

  183 ELSEIF_SECOND: t_else t_if CONDITION BODY_FOR_LOOP

  184 MULTY_ELSE_THIRD: ELSE_THIRD
  185                 | MULTY_ELSE_THIRD ELSE_THIRD

  186 ELSE_THIRD: t_else BODY_FOR_LOOP

  187 RETURN: t_return
  188       | t_return EXPR
  189       | t_return EXPR MANY_RETURN_START MANY_RETURN_START_END

  190 MANY_RETURN_START: t_comma
  191                  | MANY_RETURN_START EXPR t_comma

  192 MANY_RETURN_START_END: EXPR

  193 EXPR: VALUE
  194     | EXPR t_sign VALUE

  195 SHORT_EXPR: t_id t_short_expr t_id

  196 INIT_STATE: VAR
  197           | FUNC_CALL
  198           | /* empty */

  199 CONDITION: BOOLEAN
  200          | t_true
  201          | t_false
  202          | /* empty */

  203 POST_STATE: EXPR
  204           | t_id t_inc_const

  205 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY_FOR_LOOP
  206    | t_for CONDITION BODY_FOR_LOOP

  207 EXPR_START: t_open_paren

  208 EXPR_END: t_close_paren

  209 ARRAY_INDEX: t_open_sq t_int_const t_close_sq
  210            | t_open_sq t_id t_close_sq
  211            | t_open_sq t_string t_close_sq
  212            | t_open_sq t_close_sq

  213 MULTI_AR: ARRAY_INDEX
  214         | ARRAY_INDEX MULTI_AR

  215 PLENTY: PLENTY_OLD
  216       | PLENTY_OLD t_comma PLENTY

  217 PLENTY_OLD: t_open_br ENUM t_close_br
  218           | t_open_br t_close_br
  219           | t_open_br PLENTY t_close_br

  220 ENUM: VALUE
  221     | ENUM t_comma VALUE

  222 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  223     | t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

  224 SLICE: t_id t_open_sq VALUE t_colon VALUE t_close_sq
  225      | t_id t_open_sq t_colon VALUE t_close_sq
  226      | t_id t_open_sq VALUE t_colon t_close_sq

  227 MAPS: t_map t_open_sq t_vtype t_close_sq t_vtype

  228 STRUCT: STRUCT_START

  229 STRUCT_BODY: ENUM t_vtype
  230            | t_id t_id
  231            | t_id
  232            | t_id METHOD
  233            | STRUCT_BODY END_SYMBOLS t_id METHOD
  234            | STRUCT_BODY END_SYMBOLS t_id t_vtype
  235            | STRUCT_BODY END_SYMBOLS t_id t_id
  236            | STRUCT_BODY END_SYMBOLS t_id

  237 STRUCT_START: t_type t_id t_struct_const t_open_br STRUCT_END
  238             | t_type t_id t_struct_const t_open_br STRUCT_BODY STRUCT_END
  239             | t_type t_id t_struct_const t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END
  240             | t_type t_id t_struct_const t_enter

  241 STRUCT_END: t_close_br
  242           | t_enter t_close_br

  243 FIELD: t_id FIELD_BODY

  244 FIELD_BODY: FIELD_START FIELD_END
  245           | t_open_br t_close_br

  246 FIELD_START: t_open_br
  247            | FIELD_START FIELD_FULFILL

  248 FIELD_FULFILL: VALUE t_colon VALUE t_comma
  249              | VALUE t_colon FIELD t_comma
  250              | t_enter

  251 FIELD_END: FIELD_END_FULFILL t_close_br

  252 FIELD_END_FULFILL: VALUE t_colon VALUE
  253                  | t_enter

  254 ST_EMBEDDED: FIELD

  255 END_SYMBOLS: t_semicolon
  256            | t_enter
  257            | t_eof

  258 INTERFACE: INT_START

  259 INT_START: t_type t_id t_interface t_open_br INT_BODY INT_END
  260          | t_type t_id t_interface t_open_br END_SYMBOLS INT_BODY INT_END
  261          | t_type t_id t_interface t_enter t_open_br END_SYMBOLS INT_BODY INT_END

  262 INT_BODY: FUNC_CALL
  263         | FUNC_CALL t_vtype
  264         | t_id t_open_paren t_vtype t_close_paren
  265         | INT_BODY END_SYMBOLS t_id t_open_paren t_vtype t_close_paren
  266         | INT_BODY END_SYMBOLS FUNC_CALL t_vtype
  267         | INT_BODY END_SYMBOLS FUNC_CALL

  268 INT_END: t_close_br
  269        | t_enter t_close_br


Terminals, with rules where they appear

$end (0) 0
'*' (42)
'+' (43)
'-' (45)
'/' (47)
error (256)
t_vtype (258) 40 80 222 223 227 229 234 263 264 265 266
t_constant (259)
t_case (260) 156
t_func (261) 15 38 39 42 46
t_import (262) 11 12 13 14
t_chan (263)
t_defer (264) 92
t_go (265)
t_interface (266) 259 260 261
t_default (267) 157
t_var (268) 69 70 71 72 74 75
t_range (269)
t_map (270) 227
t_package (271) 10
t_if (272) 171 172 183
t_select (273)
t_switch (274) 146 147 148
t_fallthrough (275)
t_else (276) 183 186
t_type (277) 237 238 239 240 259 260 261
t_for (278) 205 206
t_goto (279) 144
t_continue (280) 180
t_break (281) 179
t_return (282) 187 188 189
t_struct_const (283) 237 238 239 240
t_or_const (284)
t_and_const (285)
t_param_const (286)
t_eq_const (287)
t_rel_const (288)
t_shift_const (289) 118
t_inc_const (290) 204
t_point_const (291)
t_punc (292)
t_int_const (293) 120 130 209 223
t_float_const (294) 131
t_char_const (295)
t_id (296) 10 14 15 27 28 30 33 41 42 43 44 45 72 85 86 89 108 119
    123 127 129 132 133 144 145 195 204 210 224 225 226 230 231 232
    233 234 235 236 237 238 239 240 243 259 260 261 264 265
t_string (297) 11 14 126 127 128 129 134 211
t_short_dec (298) 95
t_open_br (299) 49 151 174 175 217 218 219 237 238 239 245 246 259
    260 261
t_close_br (300) 48 166 177 217 218 219 241 242 245 251 268 269
t_sign (301) 133 194
t_comma (302) 17 30 31 97 99 103 116 159 160 190 191 216 221 222 223
    248 249
t_equality (303) 93 94
t_open_paren (304) 12 13 15 23 24 38 39 42 46 83 110 111 207 222 223
    264 265
t_close_paren (305) 12 13 15 23 26 38 39 42 46 83 110 113 208 222 264
    265
t_open_sq (306) 209 210 211 212 224 225 226 227
t_close_sq (307) 209 210 211 212 224 225 226 227
t_bool (308) 90 91
t_rune (309) 135
t_semicolon (310) 146 172 205 255
t_blank_identifier (311) 136
t_dot (312) 121 122
t_colon (313) 145 164 224 225 226 248 249 252
t_true (314) 200
t_false (315) 201
t_short_expr (316) 195
t_make (317) 83 222 223
t_enter (318) 13 32 35 100 104 115 117 240 242 250 253 256 261 269
t_eof (319) 257
t_pointer (320) 125
t_ampersand (321)


Nonterminals, with rules where they appear

$accept (71)
    on left: 0
START (72)
    on left: 1 2 3, on right: 0 1 3
GLOBAL (73)
    on left: 4 5 6 7 8 9, on right: 1 2
PACKAGE (74)
    on left: 10, on right: 4
IMPORT (75)
    on left: 11 12 13 14, on right: 5
FUNC (76)
    on left: 15, on right: 6
FUNC_PARAM (77)
    on left: 16 17, on right: 15 17 46
FUNC_SECOND_PART (78)
    on left: 18 19 20 21, on right: 15 46
FUNC_PARAM_SECOND (79)
    on left: 22 23, on right: 21 43 44 45
FUNC_PARAM_SECOND_START (80)
    on left: 24 25, on right: 22 25
FUNC_PARAM_SECOND_END (81)
    on left: 26, on right: 22
FUNC_PARAM_FULFILL (82)
    on left: 27 28 29, on right: 16 17
FUNC_PARAM_FULFILL_SECOND (83)
    on left: 30 31 32, on right: 25
FUNC_PARAM_FULFILL_SECOND_END (84)
    on left: 33 34 35, on right: 26
FUNC_RETURN_VALUE (85)
    on left: 36 37, on right: 20 37
FUNC_RETURN_VALUE_FULFILL (86)
    on left: 38 39, on right: 36 37
TYPE_AND_STRUCT (87)
    on left: 40 41, on right: 19 20 27 30 31 33 34 38 42 44 70 74 93
STRUCT_METHOD (88)
    on left: 42, on right: 9
STRUCT_METHOD_SECOND_PART (89)
    on left: 43 44 45, on right: 42
SHORT_FUNC (90)
    on left: 46, on right: 137
BODY (91)
    on left: 47, on right: 18 19 20 21 43 44 45
BODY_END (92)
    on left: 48, on right: 47
BODY_START (93)
    on left: 49 50 51 52, on right: 47 50 51 52
BODY_FILLING (94)
    on left: 53 54 55 56 57 58 59 60 61 62 63 64 65 66, on right: 50
    178
VAR (95)
    on left: 67 68 69 70 71 72 73 74 75, on right: 51 196
SPEC (96)
    on left: 76 77, on right: 73
FULFILL_FOR_VAL (97)
    on left: 78 79 80 81 82 83 84, on right: 68 71 73 75 103 107
FULFILL_FOR_IDS (98)
    on left: 85 86 87 88 89, on right: 73 74 75 97 99 101 114 116
BOOLEAN (99)
    on left: 90 91, on right: 79 91 143 199
DEFER (100)
    on left: 92, on right: 64
ASSIGNMENT (101)
    on left: 93 94, on right: 69 71 75
SHORT_ASSIGN (102)
    on left: 95, on right: 67 68 73
MANY_IDS (103)
    on left: 96, on right: 67 68 69 70 71
MANY_IDS_START (104)
    on left: 97 98, on right: 96 98
MANY_IDS_FULFILL (105)
    on left: 99 100, on right: 98
MANY_IDS_END (106)
    on left: 101, on right: 96
MANY_VALUES (107)
    on left: 102, on right: 67 69
MANY_VALUES_START_FULFILL (108)
    on left: 103 104, on right: 105 106
MANY_VALUES_START (109)
    on left: 105 106, on right: 102 106
MANY_VALUES_END (110)
    on left: 107, on right: 102
FUNC_CALL (111)
    on left: 108, on right: 59 92 124 138 197 262 263 266 267
PARAM (112)
    on left: 109 110, on right: 108 137
PARAM_START (113)
    on left: 111 112, on right: 109 112
PARAM_END (114)
    on left: 113, on right: 109
PARAM_END_FULFILL (115)
    on left: 114 115, on right: 113
PARAM_FULFILL (116)
    on left: 116 117, on right: 112
SHIFT (117)
    on left: 118, on right: 139
SHIFT_AC (118)
    on left: 119 120, on right: 118
METHOD (119)
    on left: 121 122, on right: 65 87 122 141 232 233
METHOD_FULFILL (120)
    on left: 123 124, on right: 121 122
POINTER (121)
    on left: 125, on right: 88 89 140
PARAM_IMPORT (122)
    on left: 126 127 128 129, on right: 12 13 128 129
VALUE (123)
    on left: 130 131 132 133 134 135 136 137 138 139 140 141 142 143,
    on right: 90 91 193 194 220 221 222 223 224 225 226 248 249 252
GOTO (124)
    on left: 144, on right: 55
LABEL (125)
    on left: 145, on right: 56
SWITCH (126)
    on left: 146 147 148, on right: 54
SWITCH_BODY (127)
    on left: 149 150, on right: 146 147 148
SWITCH_BODY_START (128)
    on left: 151 152 153, on right: 149 152 153 154
SWITCH_BODY_START_WITH_DEFAULT (129)
    on left: 154 155, on right: 150 155
CASE (130)
    on left: 156, on right: 153 155
DEFAULT (131)
    on left: 157, on right: 154
MULTIPLE_ARG (132)
    on left: 158, on right: 162
FIRST_PART (133)
    on left: 159 160, on right: 158 160
SECOND_PART (134)
    on left: 161, on right: 158
CASE_STATEMENT (135)
    on left: 162 163, on right: 156
CASE_BODY (136)
    on left: 164 165, on right: 156 157 165
SWITCH_BODY_END (137)
    on left: 166, on right: 149 150
IF (138)
    on left: 167 168 169 170, on right: 57
IF_FIRST (139)
    on left: 171 172, on right: 167 168 169 170
BODY_FOR_LOOP (140)
    on left: 173, on right: 171 172 183 186 205 206
BODY_FOR_LOOP_START (141)
    on left: 174 175 176, on right: 173 176
BODY_FOR_LOOP_END (142)
    on left: 177, on right: 173
LOOP_FILLING (143)
    on left: 178 179 180, on right: 165 176
MULTY_ELSEIF_SECOND (144)
    on left: 181 182, on right: 167 168 182
ELSEIF_SECOND (145)
    on left: 183, on right: 181 182
MULTY_ELSE_THIRD (146)
    on left: 184 185, on right: 167 169 185
ELSE_THIRD (147)
    on left: 186, on right: 184 185
RETURN (148)
    on left: 187 188 189, on right: 61
MANY_RETURN_START (149)
    on left: 190 191, on right: 189 191
MANY_RETURN_START_END (150)
    on left: 192, on right: 189
EXPR (151)
    on left: 193 194, on right: 78 142 146 147 159 160 161 163 188
    189 191 192 194 203
SHORT_EXPR (152)
    on left: 195, on right: 60
INIT_STATE (153)
    on left: 196 197 198, on right: 146 172 205
CONDITION (154)
    on left: 199 200 201 202, on right: 171 172 183 205 206
POST_STATE (155)
    on left: 203 204, on right: 205
FOR (156)
    on left: 205 206, on right: 53
EXPR_START (157)
    on left: 207, on right: 142 143
EXPR_END (158)
    on left: 208, on right: 142 143
ARRAY_INDEX (159)
    on left: 209 210 211 212, on right: 213 214
MULTI_AR (160)
    on left: 213 214, on right: 58 80 86 214 222 223
PLENTY (161)
    on left: 215 216, on right: 216 219
PLENTY_OLD (162)
    on left: 217 218 219, on right: 80 215 216
ENUM (163)
    on left: 220 221, on right: 217 221 229
MAKE (164)
    on left: 222 223, on right: 81
SLICE (165)
    on left: 224 225 226, on right: 63 82
MAPS (166)
    on left: 227, on right: 72 83
STRUCT (167)
    on left: 228, on right: 7 62
STRUCT_BODY (168)
    on left: 229 230 231 232 233 234 235 236, on right: 233 234 235
    236 238 239
STRUCT_START (169)
    on left: 237 238 239 240, on right: 228
STRUCT_END (170)
    on left: 241 242, on right: 237 238 239
FIELD (171)
    on left: 243, on right: 249 254
FIELD_BODY (172)
    on left: 244 245, on right: 243
FIELD_START (173)
    on left: 246 247, on right: 244 247
FIELD_FULFILL (174)
    on left: 248 249 250, on right: 247
FIELD_END (175)
    on left: 251, on right: 244
FIELD_END_FULFILL (176)
    on left: 252 253, on right: 251
ST_EMBEDDED (177)
    on left: 254, on right: 84
END_SYMBOLS (178)
    on left: 255 256 257, on right: 1 2 3 50 52 68 70 71 72 74 75 76
    107 126 127 128 129 152 165 175 176 233 234 235 236 239 260 261
    265 266 267
INTERFACE (179)
    on left: 258, on right: 8 66
INT_START (180)
    on left: 259 260 261, on right: 258
INT_BODY (181)
    on left: 262 263 264 265 266 267, on right: 259 260 261 265 266
    267
INT_END (182)
    on left: 268 269, on right: 259 260 261


State 0

    0 $accept: . START $end

    t_func     shift, and go to state 1
    t_import   shift, and go to state 2
    t_package  shift, and go to state 3
    t_type     shift, and go to state 4

    START          go to state 5
    GLOBAL         go to state 6
    PACKAGE        go to state 7
    IMPORT         go to state 8
    FUNC           go to state 9
    STRUCT_METHOD  go to state 10
    STRUCT         go to state 11
    STRUCT_START   go to state 12
    INTERFACE      go to state 13
    INT_START      go to state 14


State 1

   15 FUNC: t_func . t_id t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART
   42 STRUCT_METHOD: t_func . t_open_paren t_id TYPE_AND_STRUCT t_close_paren STRUCT_METHOD_SECOND_PART

    t_id          shift, and go to state 15
    t_open_paren  shift, and go to state 16


State 2

   11 IMPORT: t_import . t_string
   12       | t_import . t_open_paren PARAM_IMPORT t_close_paren
   13       | t_import . t_open_paren t_enter PARAM_IMPORT t_close_paren
   14       | t_import . t_id t_string

    t_id          shift, and go to state 17
    t_string      shift, and go to state 18
    t_open_paren  shift, and go to state 19


State 3

   10 PACKAGE: t_package . t_id

    t_id  shift, and go to state 20


State 4

  237 STRUCT_START: t_type . t_id t_struct_const t_open_br STRUCT_END
  238             | t_type . t_id t_struct_const t_open_br STRUCT_BODY STRUCT_END
  239             | t_type . t_id t_struct_const t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END
  240             | t_type . t_id t_struct_const t_enter
  259 INT_START: t_type . t_id t_interface t_open_br INT_BODY INT_END
  260          | t_type . t_id t_interface t_open_br END_SYMBOLS INT_BODY INT_END
  261          | t_type . t_id t_interface t_enter t_open_br END_SYMBOLS INT_BODY INT_END

    t_id  shift, and go to state 21


State 5

    0 $accept: START . $end
    1 START: START . GLOBAL END_SYMBOLS
    3      | START . END_SYMBOLS

    $end         shift, and go to state 22
    t_func       shift, and go to state 1
    t_import     shift, and go to state 2
    t_package    shift, and go to state 3
    t_type       shift, and go to state 4
    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    GLOBAL         go to state 26
    PACKAGE        go to state 7
    IMPORT         go to state 8
    FUNC           go to state 9
    STRUCT_METHOD  go to state 10
    STRUCT         go to state 11
    STRUCT_START   go to state 12
    END_SYMBOLS    go to state 27
    INTERFACE      go to state 13
    INT_START      go to state 14


State 6

    2 START: GLOBAL . END_SYMBOLS

    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 28


State 7

    4 GLOBAL: PACKAGE .

    $default  reduce using rule 4 (GLOBAL)


State 8

    5 GLOBAL: IMPORT .

    $default  reduce using rule 5 (GLOBAL)


State 9

    6 GLOBAL: FUNC .

    $default  reduce using rule 6 (GLOBAL)


State 10

    9 GLOBAL: STRUCT_METHOD .

    $default  reduce using rule 9 (GLOBAL)


State 11

    7 GLOBAL: STRUCT .

    $default  reduce using rule 7 (GLOBAL)


State 12

  228 STRUCT: STRUCT_START .

    $default  reduce using rule 228 (STRUCT)


State 13

    8 GLOBAL: INTERFACE .

    $default  reduce using rule 8 (GLOBAL)


State 14

  258 INTERFACE: INT_START .

    $default  reduce using rule 258 (INTERFACE)


State 15

   15 FUNC: t_func t_id . t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART

    t_open_paren  shift, and go to state 29


State 16

   42 STRUCT_METHOD: t_func t_open_paren . t_id TYPE_AND_STRUCT t_close_paren STRUCT_METHOD_SECOND_PART

    t_id  shift, and go to state 30


State 17

   14 IMPORT: t_import t_id . t_string

    t_string  shift, and go to state 31


State 18

   11 IMPORT: t_import t_string .

    $default  reduce using rule 11 (IMPORT)


State 19

   12 IMPORT: t_import t_open_paren . PARAM_IMPORT t_close_paren
   13       | t_import t_open_paren . t_enter PARAM_IMPORT t_close_paren

    t_id      shift, and go to state 32
    t_string  shift, and go to state 33
    t_enter   shift, and go to state 34

    PARAM_IMPORT  go to state 35


State 20

   10 PACKAGE: t_package t_id .

    $default  reduce using rule 10 (PACKAGE)


State 21

  237 STRUCT_START: t_type t_id . t_struct_const t_open_br STRUCT_END
  238             | t_type t_id . t_struct_const t_open_br STRUCT_BODY STRUCT_END
  239             | t_type t_id . t_struct_const t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END
  240             | t_type t_id . t_struct_const t_enter
  259 INT_START: t_type t_id . t_interface t_open_br INT_BODY INT_END
  260          | t_type t_id . t_interface t_open_br END_SYMBOLS INT_BODY INT_END
  261          | t_type t_id . t_interface t_enter t_open_br END_SYMBOLS INT_BODY INT_END

    t_interface     shift, and go to state 36
    t_struct_const  shift, and go to state 37


State 22

    0 $accept: START $end .

    $default  accept


State 23

  255 END_SYMBOLS: t_semicolon .

    $default  reduce using rule 255 (END_SYMBOLS)


State 24

  256 END_SYMBOLS: t_enter .

    $default  reduce using rule 256 (END_SYMBOLS)


State 25

  257 END_SYMBOLS: t_eof .

    $default  reduce using rule 257 (END_SYMBOLS)


State 26

    1 START: START GLOBAL . END_SYMBOLS

    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 38


State 27

    3 START: START END_SYMBOLS .

    $default  reduce using rule 3 (START)


State 28

    2 START: GLOBAL END_SYMBOLS .

    $default  reduce using rule 2 (START)


State 29

   15 FUNC: t_func t_id t_open_paren . FUNC_PARAM t_close_paren FUNC_SECOND_PART

    t_id  shift, and go to state 39

    $default  reduce using rule 29 (FUNC_PARAM_FULFILL)

    FUNC_PARAM          go to state 40
    FUNC_PARAM_FULFILL  go to state 41


State 30

   42 STRUCT_METHOD: t_func t_open_paren t_id . TYPE_AND_STRUCT t_close_paren STRUCT_METHOD_SECOND_PART

    t_vtype  shift, and go to state 42
    t_id     shift, and go to state 43

    TYPE_AND_STRUCT  go to state 44


State 31

   14 IMPORT: t_import t_id t_string .

    $default  reduce using rule 14 (IMPORT)


State 32

  127 PARAM_IMPORT: t_id . t_string END_SYMBOLS

    t_string  shift, and go to state 45


State 33

  126 PARAM_IMPORT: t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 46


State 34

   13 IMPORT: t_import t_open_paren t_enter . PARAM_IMPORT t_close_paren

    t_id      shift, and go to state 32
    t_string  shift, and go to state 33

    PARAM_IMPORT  go to state 47


State 35

   12 IMPORT: t_import t_open_paren PARAM_IMPORT . t_close_paren
  128 PARAM_IMPORT: PARAM_IMPORT . t_string END_SYMBOLS
  129             | PARAM_IMPORT . t_id t_string END_SYMBOLS

    t_id           shift, and go to state 48
    t_string       shift, and go to state 49
    t_close_paren  shift, and go to state 50


State 36

  259 INT_START: t_type t_id t_interface . t_open_br INT_BODY INT_END
  260          | t_type t_id t_interface . t_open_br END_SYMBOLS INT_BODY INT_END
  261          | t_type t_id t_interface . t_enter t_open_br END_SYMBOLS INT_BODY INT_END

    t_open_br  shift, and go to state 51
    t_enter    shift, and go to state 52


State 37

  237 STRUCT_START: t_type t_id t_struct_const . t_open_br STRUCT_END
  238             | t_type t_id t_struct_const . t_open_br STRUCT_BODY STRUCT_END
  239             | t_type t_id t_struct_const . t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END
  240             | t_type t_id t_struct_const . t_enter

    t_open_br  shift, and go to state 53
    t_enter    shift, and go to state 54


State 38

    1 START: START GLOBAL END_SYMBOLS .

    $default  reduce using rule 1 (START)


State 39

   27 FUNC_PARAM_FULFILL: t_id . TYPE_AND_STRUCT
   28                   | t_id .

    t_vtype  shift, and go to state 42
    t_id     shift, and go to state 43

    $default  reduce using rule 28 (FUNC_PARAM_FULFILL)

    TYPE_AND_STRUCT  go to state 55


State 40

   15 FUNC: t_func t_id t_open_paren FUNC_PARAM . t_close_paren FUNC_SECOND_PART
   17 FUNC_PARAM: FUNC_PARAM . t_comma FUNC_PARAM_FULFILL

    t_comma        shift, and go to state 56
    t_close_paren  shift, and go to state 57


State 41

   16 FUNC_PARAM: FUNC_PARAM_FULFILL .

    $default  reduce using rule 16 (FUNC_PARAM)


State 42

   40 TYPE_AND_STRUCT: t_vtype .

    $default  reduce using rule 40 (TYPE_AND_STRUCT)


State 43

   41 TYPE_AND_STRUCT: t_id .

    $default  reduce using rule 41 (TYPE_AND_STRUCT)


State 44

   42 STRUCT_METHOD: t_func t_open_paren t_id TYPE_AND_STRUCT . t_close_paren STRUCT_METHOD_SECOND_PART

    t_close_paren  shift, and go to state 58


State 45

  127 PARAM_IMPORT: t_id t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 59


State 46

  126 PARAM_IMPORT: t_string END_SYMBOLS .

    $default  reduce using rule 126 (PARAM_IMPORT)


State 47

   13 IMPORT: t_import t_open_paren t_enter PARAM_IMPORT . t_close_paren
  128 PARAM_IMPORT: PARAM_IMPORT . t_string END_SYMBOLS
  129             | PARAM_IMPORT . t_id t_string END_SYMBOLS

    t_id           shift, and go to state 48
    t_string       shift, and go to state 49
    t_close_paren  shift, and go to state 60


State 48

  129 PARAM_IMPORT: PARAM_IMPORT t_id . t_string END_SYMBOLS

    t_string  shift, and go to state 61


State 49

  128 PARAM_IMPORT: PARAM_IMPORT t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 62


State 50

   12 IMPORT: t_import t_open_paren PARAM_IMPORT t_close_paren .

    $default  reduce using rule 12 (IMPORT)


State 51

  259 INT_START: t_type t_id t_interface t_open_br . INT_BODY INT_END
  260          | t_type t_id t_interface t_open_br . END_SYMBOLS INT_BODY INT_END

    t_id         shift, and go to state 63
    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    FUNC_CALL    go to state 64
    END_SYMBOLS  go to state 65
    INT_BODY     go to state 66


State 52

  261 INT_START: t_type t_id t_interface t_enter . t_open_br END_SYMBOLS INT_BODY INT_END

    t_open_br  shift, and go to state 67


State 53

  237 STRUCT_START: t_type t_id t_struct_const t_open_br . STRUCT_END
  238             | t_type t_id t_struct_const t_open_br . STRUCT_BODY STRUCT_END
  239             | t_type t_id t_struct_const t_open_br . END_SYMBOLS STRUCT_BODY STRUCT_END

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 71
    t_string            shift, and go to state 72
    t_close_br          shift, and go to state 73
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_rune              shift, and go to state 76
    t_semicolon         shift, and go to state 23
    t_blank_identifier  shift, and go to state 77
    t_enter             shift, and go to state 78
    t_eof               shift, and go to state 25
    t_pointer           shift, and go to state 79

    SHORT_FUNC      go to state 80
    FUNC_CALL       go to state 81
    SHIFT           go to state 82
    SHIFT_AC        go to state 83
    METHOD          go to state 84
    METHOD_FULFILL  go to state 85
    POINTER         go to state 86
    VALUE           go to state 87
    EXPR_START      go to state 88
    ENUM            go to state 89
    STRUCT_BODY     go to state 90
    STRUCT_END      go to state 91
    END_SYMBOLS     go to state 92


State 54

  240 STRUCT_START: t_type t_id t_struct_const t_enter .

    $default  reduce using rule 240 (STRUCT_START)


State 55

   27 FUNC_PARAM_FULFILL: t_id TYPE_AND_STRUCT .

    $default  reduce using rule 27 (FUNC_PARAM_FULFILL)


State 56

   17 FUNC_PARAM: FUNC_PARAM t_comma . FUNC_PARAM_FULFILL

    t_id  shift, and go to state 39

    $default  reduce using rule 29 (FUNC_PARAM_FULFILL)

    FUNC_PARAM_FULFILL  go to state 93


State 57

   15 FUNC: t_func t_id t_open_paren FUNC_PARAM t_close_paren . FUNC_SECOND_PART

    t_vtype       shift, and go to state 42
    t_func        shift, and go to state 94
    t_id          shift, and go to state 43
    t_open_br     shift, and go to state 95
    t_open_paren  shift, and go to state 96

    FUNC_SECOND_PART           go to state 97
    FUNC_PARAM_SECOND          go to state 98
    FUNC_PARAM_SECOND_START    go to state 99
    FUNC_RETURN_VALUE          go to state 100
    FUNC_RETURN_VALUE_FULFILL  go to state 101
    TYPE_AND_STRUCT            go to state 102
    BODY                       go to state 103
    BODY_START                 go to state 104


State 58

   42 STRUCT_METHOD: t_func t_open_paren t_id TYPE_AND_STRUCT t_close_paren . STRUCT_METHOD_SECOND_PART

    t_id  shift, and go to state 105

    STRUCT_METHOD_SECOND_PART  go to state 106


State 59

  127 PARAM_IMPORT: t_id t_string END_SYMBOLS .

    $default  reduce using rule 127 (PARAM_IMPORT)


State 60

   13 IMPORT: t_import t_open_paren t_enter PARAM_IMPORT t_close_paren .

    $default  reduce using rule 13 (IMPORT)


State 61

  129 PARAM_IMPORT: PARAM_IMPORT t_id t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 107


State 62

  128 PARAM_IMPORT: PARAM_IMPORT t_string END_SYMBOLS .

    $default  reduce using rule 128 (PARAM_IMPORT)


State 63

  108 FUNC_CALL: t_id . PARAM
  264 INT_BODY: t_id . t_open_paren t_vtype t_close_paren

    t_open_paren  shift, and go to state 108

    PARAM        go to state 109
    PARAM_START  go to state 110


State 64

  262 INT_BODY: FUNC_CALL .
  263         | FUNC_CALL . t_vtype

    t_vtype  shift, and go to state 111

    $default  reduce using rule 262 (INT_BODY)


State 65

  260 INT_START: t_type t_id t_interface t_open_br END_SYMBOLS . INT_BODY INT_END

    t_id  shift, and go to state 63

    FUNC_CALL  go to state 64
    INT_BODY   go to state 112


State 66

  259 INT_START: t_type t_id t_interface t_open_br INT_BODY . INT_END
  265 INT_BODY: INT_BODY . END_SYMBOLS t_id t_open_paren t_vtype t_close_paren
  266         | INT_BODY . END_SYMBOLS FUNC_CALL t_vtype
  267         | INT_BODY . END_SYMBOLS FUNC_CALL

    t_close_br   shift, and go to state 113
    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 114
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 115
    INT_END      go to state 116


State 67

  261 INT_START: t_type t_id t_interface t_enter t_open_br . END_SYMBOLS INT_BODY INT_END

    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 117


State 68

   46 SHORT_FUNC: t_func . t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART

    t_open_paren  shift, and go to state 118


State 69

  120 SHIFT_AC: t_int_const .
  130 VALUE: t_int_const .

    t_shift_const  reduce using rule 120 (SHIFT_AC)
    $default       reduce using rule 130 (VALUE)


State 70

  131 VALUE: t_float_const .

    $default  reduce using rule 131 (VALUE)


State 71

  108 FUNC_CALL: t_id . PARAM
  119 SHIFT_AC: t_id .
  123 METHOD_FULFILL: t_id .
  132 VALUE: t_id .
  230 STRUCT_BODY: t_id . t_id
  231            | t_id .
  232            | t_id . METHOD

    t_id          shift, and go to state 119
    t_open_paren  shift, and go to state 120

    t_vtype        reduce using rule 132 (VALUE)
    t_shift_const  reduce using rule 119 (SHIFT_AC)
    t_comma        reduce using rule 132 (VALUE)
    t_dot          reduce using rule 123 (METHOD_FULFILL)
    $default       reduce using rule 231 (STRUCT_BODY)

    FUNC_CALL       go to state 121
    PARAM           go to state 109
    PARAM_START     go to state 110
    METHOD          go to state 122
    METHOD_FULFILL  go to state 85


State 72

  134 VALUE: t_string .

    $default  reduce using rule 134 (VALUE)


State 73

  241 STRUCT_END: t_close_br .

    $default  reduce using rule 241 (STRUCT_END)


State 74

  133 VALUE: t_sign . t_id

    t_id  shift, and go to state 123


State 75

  207 EXPR_START: t_open_paren .

    $default  reduce using rule 207 (EXPR_START)


State 76

  135 VALUE: t_rune .

    $default  reduce using rule 135 (VALUE)


State 77

  136 VALUE: t_blank_identifier .

    $default  reduce using rule 136 (VALUE)


State 78

  242 STRUCT_END: t_enter . t_close_br
  256 END_SYMBOLS: t_enter .

    t_close_br  shift, and go to state 124

    $default  reduce using rule 256 (END_SYMBOLS)


State 79

  125 POINTER: t_pointer .

    $default  reduce using rule 125 (POINTER)


State 80

  137 VALUE: SHORT_FUNC . PARAM

    t_open_paren  shift, and go to state 120

    PARAM        go to state 125
    PARAM_START  go to state 110


State 81

  124 METHOD_FULFILL: FUNC_CALL .
  138 VALUE: FUNC_CALL .

    t_dot     reduce using rule 124 (METHOD_FULFILL)
    $default  reduce using rule 138 (VALUE)


State 82

  139 VALUE: SHIFT .

    $default  reduce using rule 139 (VALUE)


State 83

  118 SHIFT: SHIFT_AC . t_shift_const SHIFT_AC

    t_shift_const  shift, and go to state 126


State 84

  122 METHOD: METHOD . t_dot METHOD_FULFILL
  141 VALUE: METHOD .

    t_dot  shift, and go to state 127

    $default  reduce using rule 141 (VALUE)


State 85

  121 METHOD: METHOD_FULFILL . t_dot METHOD_FULFILL

    t_dot  shift, and go to state 128


State 86

  140 VALUE: POINTER .

    $default  reduce using rule 140 (VALUE)


State 87

  220 ENUM: VALUE .

    $default  reduce using rule 220 (ENUM)


State 88

  142 VALUE: EXPR_START . EXPR EXPR_END
  143      | EXPR_START . BOOLEAN EXPR_END

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 129
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_pointer           shift, and go to state 79

    SHORT_FUNC      go to state 80
    BOOLEAN         go to state 130
    FUNC_CALL       go to state 81
    SHIFT           go to state 82
    SHIFT_AC        go to state 83
    METHOD          go to state 84
    METHOD_FULFILL  go to state 85
    POINTER         go to state 86
    VALUE           go to state 131
    EXPR            go to state 132
    EXPR_START      go to state 88


State 89

  221 ENUM: ENUM . t_comma VALUE
  229 STRUCT_BODY: ENUM . t_vtype

    t_vtype  shift, and go to state 133
    t_comma  shift, and go to state 134


State 90

  233 STRUCT_BODY: STRUCT_BODY . END_SYMBOLS t_id METHOD
  234            | STRUCT_BODY . END_SYMBOLS t_id t_vtype
  235            | STRUCT_BODY . END_SYMBOLS t_id t_id
  236            | STRUCT_BODY . END_SYMBOLS t_id
  238 STRUCT_START: t_type t_id t_struct_const t_open_br STRUCT_BODY . STRUCT_END

    t_close_br   shift, and go to state 73
    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 78
    t_eof        shift, and go to state 25

    STRUCT_END   go to state 135
    END_SYMBOLS  go to state 136


State 91

  237 STRUCT_START: t_type t_id t_struct_const t_open_br STRUCT_END .

    $default  reduce using rule 237 (STRUCT_START)


State 92

  239 STRUCT_START: t_type t_id t_struct_const t_open_br END_SYMBOLS . STRUCT_BODY STRUCT_END

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 71
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_pointer           shift, and go to state 79

    SHORT_FUNC      go to state 80
    FUNC_CALL       go to state 81
    SHIFT           go to state 82
    SHIFT_AC        go to state 83
    METHOD          go to state 84
    METHOD_FULFILL  go to state 85
    POINTER         go to state 86
    VALUE           go to state 87
    EXPR_START      go to state 88
    ENUM            go to state 89
    STRUCT_BODY     go to state 137


State 93

   17 FUNC_PARAM: FUNC_PARAM t_comma FUNC_PARAM_FULFILL .

    $default  reduce using rule 17 (FUNC_PARAM)


State 94

   38 FUNC_RETURN_VALUE_FULFILL: t_func . t_open_paren TYPE_AND_STRUCT t_close_paren
   39                          | t_func . t_open_paren t_close_paren

    t_open_paren  shift, and go to state 138


State 95

   49 BODY_START: t_open_br .

    $default  reduce using rule 49 (BODY_START)


State 96

   23 FUNC_PARAM_SECOND: t_open_paren . t_close_paren
   24 FUNC_PARAM_SECOND_START: t_open_paren .

    t_close_paren  shift, and go to state 139

    $default  reduce using rule 24 (FUNC_PARAM_SECOND_START)


State 97

   15 FUNC: t_func t_id t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART .

    $default  reduce using rule 15 (FUNC)


State 98

   21 FUNC_SECOND_PART: FUNC_PARAM_SECOND . BODY

    t_open_br  shift, and go to state 95

    BODY        go to state 140
    BODY_START  go to state 104


State 99

   22 FUNC_PARAM_SECOND: FUNC_PARAM_SECOND_START . FUNC_PARAM_SECOND_END
   25 FUNC_PARAM_SECOND_START: FUNC_PARAM_SECOND_START . FUNC_PARAM_FULFILL_SECOND

    t_vtype  shift, and go to state 42
    t_id     shift, and go to state 141
    t_enter  shift, and go to state 142

    FUNC_PARAM_SECOND_END          go to state 143
    FUNC_PARAM_FULFILL_SECOND      go to state 144
    FUNC_PARAM_FULFILL_SECOND_END  go to state 145
    TYPE_AND_STRUCT                go to state 146


State 100

   20 FUNC_SECOND_PART: FUNC_RETURN_VALUE . TYPE_AND_STRUCT BODY
   37 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE . FUNC_RETURN_VALUE_FULFILL

    t_vtype  shift, and go to state 42
    t_func   shift, and go to state 94
    t_id     shift, and go to state 43

    FUNC_RETURN_VALUE_FULFILL  go to state 147
    TYPE_AND_STRUCT            go to state 148


State 101

   36 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE_FULFILL .

    $default  reduce using rule 36 (FUNC_RETURN_VALUE)


State 102

   19 FUNC_SECOND_PART: TYPE_AND_STRUCT . BODY

    t_open_br  shift, and go to state 95

    BODY        go to state 149
    BODY_START  go to state 104


State 103

   18 FUNC_SECOND_PART: BODY .

    $default  reduce using rule 18 (FUNC_SECOND_PART)


State 104

   47 BODY: BODY_START . BODY_END
   50 BODY_START: BODY_START . BODY_FILLING END_SYMBOLS
   51           | BODY_START . VAR
   52           | BODY_START . END_SYMBOLS

    t_defer      shift, and go to state 150
    t_var        shift, and go to state 151
    t_if         shift, and go to state 152
    t_switch     shift, and go to state 153
    t_type       shift, and go to state 4
    t_for        shift, and go to state 154
    t_goto       shift, and go to state 155
    t_return     shift, and go to state 156
    t_id         shift, and go to state 157
    t_close_br   shift, and go to state 158
    t_open_sq    shift, and go to state 159
    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25
    t_pointer    shift, and go to state 79

    BODY_END         go to state 160
    BODY_FILLING     go to state 161
    VAR              go to state 162
    FULFILL_FOR_IDS  go to state 163
    DEFER            go to state 164
    MANY_IDS         go to state 165
    MANY_IDS_START   go to state 166
    FUNC_CALL        go to state 167
    METHOD           go to state 168
    METHOD_FULFILL   go to state 85
    POINTER          go to state 169
    GOTO             go to state 170
    LABEL            go to state 171
    SWITCH           go to state 172
    IF               go to state 173
    IF_FIRST         go to state 174
    RETURN           go to state 175
    SHORT_EXPR       go to state 176
    FOR              go to state 177
    ARRAY_INDEX      go to state 178
    MULTI_AR         go to state 179
    SLICE            go to state 180
    STRUCT           go to state 181
    STRUCT_START     go to state 12
    END_SYMBOLS      go to state 182
    INTERFACE        go to state 183
    INT_START        go to state 14


State 105

   43 STRUCT_METHOD_SECOND_PART: t_id . FUNC_PARAM_SECOND BODY
   44                          | t_id . FUNC_PARAM_SECOND TYPE_AND_STRUCT BODY
   45                          | t_id . FUNC_PARAM_SECOND FUNC_PARAM_SECOND BODY

    t_open_paren  shift, and go to state 96

    FUNC_PARAM_SECOND        go to state 184
    FUNC_PARAM_SECOND_START  go to state 99


State 106

   42 STRUCT_METHOD: t_func t_open_paren t_id TYPE_AND_STRUCT t_close_paren STRUCT_METHOD_SECOND_PART .

    $default  reduce using rule 42 (STRUCT_METHOD)


State 107

  129 PARAM_IMPORT: PARAM_IMPORT t_id t_string END_SYMBOLS .

    $default  reduce using rule 129 (PARAM_IMPORT)


State 108

  110 PARAM: t_open_paren . t_close_paren
  111 PARAM_START: t_open_paren .
  264 INT_BODY: t_id t_open_paren . t_vtype t_close_paren

    t_vtype        shift, and go to state 185
    t_close_paren  shift, and go to state 186

    $default  reduce using rule 111 (PARAM_START)


State 109

  108 FUNC_CALL: t_id PARAM .

    $default  reduce using rule 108 (FUNC_CALL)


State 110

  109 PARAM: PARAM_START . PARAM_END
  112 PARAM_START: PARAM_START . PARAM_FULFILL

    t_id       shift, and go to state 187
    t_enter    shift, and go to state 188
    t_pointer  shift, and go to state 79

    FULFILL_FOR_IDS    go to state 189
    FUNC_CALL          go to state 121
    PARAM_END          go to state 190
    PARAM_END_FULFILL  go to state 191
    PARAM_FULFILL      go to state 192
    METHOD             go to state 193
    METHOD_FULFILL     go to state 85
    POINTER            go to state 169


State 111

  263 INT_BODY: FUNC_CALL t_vtype .

    $default  reduce using rule 263 (INT_BODY)


State 112

  260 INT_START: t_type t_id t_interface t_open_br END_SYMBOLS INT_BODY . INT_END
  265 INT_BODY: INT_BODY . END_SYMBOLS t_id t_open_paren t_vtype t_close_paren
  266         | INT_BODY . END_SYMBOLS FUNC_CALL t_vtype
  267         | INT_BODY . END_SYMBOLS FUNC_CALL

    t_close_br   shift, and go to state 113
    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 114
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 115
    INT_END      go to state 194


State 113

  268 INT_END: t_close_br .

    $default  reduce using rule 268 (INT_END)


State 114

  256 END_SYMBOLS: t_enter .
  269 INT_END: t_enter . t_close_br

    t_close_br  shift, and go to state 195

    $default  reduce using rule 256 (END_SYMBOLS)


State 115

  265 INT_BODY: INT_BODY END_SYMBOLS . t_id t_open_paren t_vtype t_close_paren
  266         | INT_BODY END_SYMBOLS . FUNC_CALL t_vtype
  267         | INT_BODY END_SYMBOLS . FUNC_CALL

    t_id  shift, and go to state 196

    FUNC_CALL  go to state 197


State 116

  259 INT_START: t_type t_id t_interface t_open_br INT_BODY INT_END .

    $default  reduce using rule 259 (INT_START)


State 117

  261 INT_START: t_type t_id t_interface t_enter t_open_br END_SYMBOLS . INT_BODY INT_END

    t_id  shift, and go to state 63

    FUNC_CALL  go to state 64
    INT_BODY   go to state 198


State 118

   46 SHORT_FUNC: t_func t_open_paren . FUNC_PARAM t_close_paren FUNC_SECOND_PART

    t_id  shift, and go to state 39

    $default  reduce using rule 29 (FUNC_PARAM_FULFILL)

    FUNC_PARAM          go to state 199
    FUNC_PARAM_FULFILL  go to state 41


State 119

  108 FUNC_CALL: t_id . PARAM
  123 METHOD_FULFILL: t_id .
  230 STRUCT_BODY: t_id t_id .

    t_open_paren  shift, and go to state 120

    t_dot     reduce using rule 123 (METHOD_FULFILL)
    $default  reduce using rule 230 (STRUCT_BODY)

    PARAM        go to state 109
    PARAM_START  go to state 110


State 120

  110 PARAM: t_open_paren . t_close_paren
  111 PARAM_START: t_open_paren .

    t_close_paren  shift, and go to state 186

    $default  reduce using rule 111 (PARAM_START)


State 121

  124 METHOD_FULFILL: FUNC_CALL .

    $default  reduce using rule 124 (METHOD_FULFILL)


State 122

  122 METHOD: METHOD . t_dot METHOD_FULFILL
  232 STRUCT_BODY: t_id METHOD .

    t_dot  shift, and go to state 127

    $default  reduce using rule 232 (STRUCT_BODY)


State 123

  133 VALUE: t_sign t_id .

    $default  reduce using rule 133 (VALUE)


State 124

  242 STRUCT_END: t_enter t_close_br .

    $default  reduce using rule 242 (STRUCT_END)


State 125

  137 VALUE: SHORT_FUNC PARAM .

    $default  reduce using rule 137 (VALUE)


State 126

  118 SHIFT: SHIFT_AC t_shift_const . SHIFT_AC

    t_int_const  shift, and go to state 200
    t_id         shift, and go to state 201

    SHIFT_AC  go to state 202


State 127

  122 METHOD: METHOD t_dot . METHOD_FULFILL

    t_id  shift, and go to state 203

    FUNC_CALL       go to state 121
    METHOD_FULFILL  go to state 204


State 128

  121 METHOD: METHOD_FULFILL t_dot . METHOD_FULFILL

    t_id  shift, and go to state 203

    FUNC_CALL       go to state 121
    METHOD_FULFILL  go to state 205


State 129

  108 FUNC_CALL: t_id . PARAM
  119 SHIFT_AC: t_id .
  123 METHOD_FULFILL: t_id .
  132 VALUE: t_id .

    t_open_paren  shift, and go to state 120

    t_shift_const  reduce using rule 119 (SHIFT_AC)
    t_dot          reduce using rule 123 (METHOD_FULFILL)
    $default       reduce using rule 132 (VALUE)

    PARAM        go to state 109
    PARAM_START  go to state 110


State 130

   91 BOOLEAN: BOOLEAN . t_bool VALUE
  143 VALUE: EXPR_START BOOLEAN . EXPR_END

    t_close_paren  shift, and go to state 206
    t_bool         shift, and go to state 207

    EXPR_END  go to state 208


State 131

   90 BOOLEAN: VALUE . t_bool VALUE
  193 EXPR: VALUE .

    t_bool  shift, and go to state 209

    $default  reduce using rule 193 (EXPR)


State 132

  142 VALUE: EXPR_START EXPR . EXPR_END
  194 EXPR: EXPR . t_sign VALUE

    t_sign         shift, and go to state 210
    t_close_paren  shift, and go to state 206

    EXPR_END  go to state 211


State 133

  229 STRUCT_BODY: ENUM t_vtype .

    $default  reduce using rule 229 (STRUCT_BODY)


State 134

  221 ENUM: ENUM t_comma . VALUE

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 129
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_pointer           shift, and go to state 79

    SHORT_FUNC      go to state 80
    FUNC_CALL       go to state 81
    SHIFT           go to state 82
    SHIFT_AC        go to state 83
    METHOD          go to state 84
    METHOD_FULFILL  go to state 85
    POINTER         go to state 86
    VALUE           go to state 212
    EXPR_START      go to state 88


State 135

  238 STRUCT_START: t_type t_id t_struct_const t_open_br STRUCT_BODY STRUCT_END .

    $default  reduce using rule 238 (STRUCT_START)


State 136

  233 STRUCT_BODY: STRUCT_BODY END_SYMBOLS . t_id METHOD
  234            | STRUCT_BODY END_SYMBOLS . t_id t_vtype
  235            | STRUCT_BODY END_SYMBOLS . t_id t_id
  236            | STRUCT_BODY END_SYMBOLS . t_id

    t_id  shift, and go to state 213


State 137

  233 STRUCT_BODY: STRUCT_BODY . END_SYMBOLS t_id METHOD
  234            | STRUCT_BODY . END_SYMBOLS t_id t_vtype
  235            | STRUCT_BODY . END_SYMBOLS t_id t_id
  236            | STRUCT_BODY . END_SYMBOLS t_id
  239 STRUCT_START: t_type t_id t_struct_const t_open_br END_SYMBOLS STRUCT_BODY . STRUCT_END

    t_close_br   shift, and go to state 73
    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 78
    t_eof        shift, and go to state 25

    STRUCT_END   go to state 214
    END_SYMBOLS  go to state 136


State 138

   38 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren . TYPE_AND_STRUCT t_close_paren
   39                          | t_func t_open_paren . t_close_paren

    t_vtype        shift, and go to state 42
    t_id           shift, and go to state 43
    t_close_paren  shift, and go to state 215

    TYPE_AND_STRUCT  go to state 216


State 139

   23 FUNC_PARAM_SECOND: t_open_paren t_close_paren .

    $default  reduce using rule 23 (FUNC_PARAM_SECOND)


State 140

   21 FUNC_SECOND_PART: FUNC_PARAM_SECOND BODY .

    $default  reduce using rule 21 (FUNC_SECOND_PART)


State 141

   30 FUNC_PARAM_FULFILL_SECOND: t_id . TYPE_AND_STRUCT t_comma
   33 FUNC_PARAM_FULFILL_SECOND_END: t_id . TYPE_AND_STRUCT
   41 TYPE_AND_STRUCT: t_id .

    t_vtype  shift, and go to state 42
    t_id     shift, and go to state 43

    $default  reduce using rule 41 (TYPE_AND_STRUCT)

    TYPE_AND_STRUCT  go to state 217


State 142

   32 FUNC_PARAM_FULFILL_SECOND: t_enter .
   35 FUNC_PARAM_FULFILL_SECOND_END: t_enter .

    t_close_paren  reduce using rule 35 (FUNC_PARAM_FULFILL_SECOND_END)
    $default       reduce using rule 32 (FUNC_PARAM_FULFILL_SECOND)


State 143

   22 FUNC_PARAM_SECOND: FUNC_PARAM_SECOND_START FUNC_PARAM_SECOND_END .

    $default  reduce using rule 22 (FUNC_PARAM_SECOND)


State 144

   25 FUNC_PARAM_SECOND_START: FUNC_PARAM_SECOND_START FUNC_PARAM_FULFILL_SECOND .

    $default  reduce using rule 25 (FUNC_PARAM_SECOND_START)


State 145

   26 FUNC_PARAM_SECOND_END: FUNC_PARAM_FULFILL_SECOND_END . t_close_paren

    t_close_paren  shift, and go to state 218


State 146

   31 FUNC_PARAM_FULFILL_SECOND: TYPE_AND_STRUCT . t_comma
   34 FUNC_PARAM_FULFILL_SECOND_END: TYPE_AND_STRUCT .

    t_comma  shift, and go to state 219

    $default  reduce using rule 34 (FUNC_PARAM_FULFILL_SECOND_END)


State 147

   37 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE FUNC_RETURN_VALUE_FULFILL .

    $default  reduce using rule 37 (FUNC_RETURN_VALUE)


State 148

   20 FUNC_SECOND_PART: FUNC_RETURN_VALUE TYPE_AND_STRUCT . BODY

    t_open_br  shift, and go to state 95

    BODY        go to state 220
    BODY_START  go to state 104


State 149

   19 FUNC_SECOND_PART: TYPE_AND_STRUCT BODY .

    $default  reduce using rule 19 (FUNC_SECOND_PART)


State 150

   92 DEFER: t_defer . FUNC_CALL

    t_id  shift, and go to state 221

    FUNC_CALL  go to state 222


State 151

   69 VAR: t_var . MANY_IDS ASSIGNMENT MANY_VALUES
   70    | t_var . MANY_IDS TYPE_AND_STRUCT END_SYMBOLS
   71    | t_var . MANY_IDS ASSIGNMENT FULFILL_FOR_VAL END_SYMBOLS
   72    | t_var . t_id MAPS END_SYMBOLS
   74    | t_var . FULFILL_FOR_IDS TYPE_AND_STRUCT END_SYMBOLS
   75    | t_var . FULFILL_FOR_IDS ASSIGNMENT FULFILL_FOR_VAL END_SYMBOLS

    t_id       shift, and go to state 223
    t_pointer  shift, and go to state 79

    FULFILL_FOR_IDS  go to state 224
    MANY_IDS         go to state 225
    MANY_IDS_START   go to state 166
    FUNC_CALL        go to state 121
    METHOD           go to state 193
    METHOD_FULFILL   go to state 85
    POINTER          go to state 169


State 152

  171 IF_FIRST: t_if . CONDITION BODY_FOR_LOOP
  172         | t_if . INIT_STATE t_semicolon CONDITION BODY_FOR_LOOP

    t_func              shift, and go to state 68
    t_var               shift, and go to state 151
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 226
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_true              shift, and go to state 227
    t_false             shift, and go to state 228
    t_pointer           shift, and go to state 79

    t_open_br  reduce using rule 202 (CONDITION)
    $default   reduce using rule 198 (INIT_STATE)

    SHORT_FUNC       go to state 80
    VAR              go to state 229
    FULFILL_FOR_IDS  go to state 163
    BOOLEAN          go to state 230
    MANY_IDS         go to state 165
    MANY_IDS_START   go to state 166
    FUNC_CALL        go to state 231
    SHIFT            go to state 82
    SHIFT_AC         go to state 83
    METHOD           go to state 232
    METHOD_FULFILL   go to state 85
    POINTER          go to state 233
    VALUE            go to state 234
    INIT_STATE       go to state 235
    CONDITION        go to state 236
    EXPR_START       go to state 88


State 153

  146 SWITCH: t_switch . INIT_STATE t_semicolon EXPR SWITCH_BODY
  147       | t_switch . EXPR SWITCH_BODY
  148       | t_switch . SWITCH_BODY

    t_func              shift, and go to state 68
    t_var               shift, and go to state 151
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 226
    t_string            shift, and go to state 72
    t_open_br           shift, and go to state 237
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_pointer           shift, and go to state 79

    $default  reduce using rule 198 (INIT_STATE)

    SHORT_FUNC                      go to state 80
    VAR                             go to state 229
    FULFILL_FOR_IDS                 go to state 163
    MANY_IDS                        go to state 165
    MANY_IDS_START                  go to state 166
    FUNC_CALL                       go to state 231
    SHIFT                           go to state 82
    SHIFT_AC                        go to state 83
    METHOD                          go to state 232
    METHOD_FULFILL                  go to state 85
    POINTER                         go to state 233
    VALUE                           go to state 238
    SWITCH_BODY                     go to state 239
    SWITCH_BODY_START               go to state 240
    SWITCH_BODY_START_WITH_DEFAULT  go to state 241
    EXPR                            go to state 242
    INIT_STATE                      go to state 243
    EXPR_START                      go to state 88


State 154

  205 FOR: t_for . INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY_FOR_LOOP
  206    | t_for . CONDITION BODY_FOR_LOOP

    t_func              shift, and go to state 68
    t_var               shift, and go to state 151
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 226
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_true              shift, and go to state 227
    t_false             shift, and go to state 228
    t_pointer           shift, and go to state 79

    t_open_br  reduce using rule 202 (CONDITION)
    $default   reduce using rule 198 (INIT_STATE)

    SHORT_FUNC       go to state 80
    VAR              go to state 229
    FULFILL_FOR_IDS  go to state 163
    BOOLEAN          go to state 230
    MANY_IDS         go to state 165
    MANY_IDS_START   go to state 166
    FUNC_CALL        go to state 231
    SHIFT            go to state 82
    SHIFT_AC         go to state 83
    METHOD           go to state 232
    METHOD_FULFILL   go to state 85
    POINTER          go to state 233
    VALUE            go to state 234
    INIT_STATE       go to state 244
    CONDITION        go to state 245
    EXPR_START       go to state 88


State 155

  144 GOTO: t_goto . t_id

    t_id  shift, and go to state 246


State 156

  187 RETURN: t_return .
  188       | t_return . EXPR
  189       | t_return . EXPR MANY_RETURN_START MANY_RETURN_START_END

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 129
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_pointer           shift, and go to state 79

    $default  reduce using rule 187 (RETURN)

    SHORT_FUNC      go to state 80
    FUNC_CALL       go to state 81
    SHIFT           go to state 82
    SHIFT_AC        go to state 83
    METHOD          go to state 84
    METHOD_FULFILL  go to state 85
    POINTER         go to state 86
    VALUE           go to state 238
    EXPR            go to state 247
    EXPR_START      go to state 88


State 157

   85 FULFILL_FOR_IDS: t_id .
   86                | t_id . MULTI_AR
   89                | t_id . POINTER
  108 FUNC_CALL: t_id . PARAM
  123 METHOD_FULFILL: t_id .
  145 LABEL: t_id . t_colon
  195 SHORT_EXPR: t_id . t_short_expr t_id
  224 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  225      | t_id . t_open_sq t_colon VALUE t_close_sq
  226      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_open_paren  shift, and go to state 120
    t_open_sq     shift, and go to state 248
    t_colon       shift, and go to state 249
    t_short_expr  shift, and go to state 250
    t_pointer     shift, and go to state 79

    t_dot     reduce using rule 123 (METHOD_FULFILL)
    $default  reduce using rule 85 (FULFILL_FOR_IDS)

    PARAM        go to state 109
    PARAM_START  go to state 110
    POINTER      go to state 251
    ARRAY_INDEX  go to state 178
    MULTI_AR     go to state 252


State 158

   48 BODY_END: t_close_br .

    $default  reduce using rule 48 (BODY_END)


State 159

  209 ARRAY_INDEX: t_open_sq . t_int_const t_close_sq
  210            | t_open_sq . t_id t_close_sq
  211            | t_open_sq . t_string t_close_sq
  212            | t_open_sq . t_close_sq

    t_int_const  shift, and go to state 253
    t_id         shift, and go to state 254
    t_string     shift, and go to state 255
    t_close_sq   shift, and go to state 256


State 160

   47 BODY: BODY_START BODY_END .

    $default  reduce using rule 47 (BODY)


State 161

   50 BODY_START: BODY_START BODY_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 257


State 162

   51 BODY_START: BODY_START VAR .

    $default  reduce using rule 51 (BODY_START)


State 163

   73 VAR: FULFILL_FOR_IDS . SHORT_ASSIGN FULFILL_FOR_VAL SPEC
   97 MANY_IDS_START: FULFILL_FOR_IDS . t_comma

    t_short_dec  shift, and go to state 258
    t_comma      shift, and go to state 259

    SHORT_ASSIGN  go to state 260


State 164

   64 BODY_FILLING: DEFER .

    $default  reduce using rule 64 (BODY_FILLING)


State 165

   67 VAR: MANY_IDS . SHORT_ASSIGN MANY_VALUES
   68    | MANY_IDS . SHORT_ASSIGN FULFILL_FOR_VAL END_SYMBOLS

    t_short_dec  shift, and go to state 258

    SHORT_ASSIGN  go to state 261


State 166

   96 MANY_IDS: MANY_IDS_START . MANY_IDS_END
   98 MANY_IDS_START: MANY_IDS_START . MANY_IDS_FULFILL

    t_id       shift, and go to state 187
    t_enter    shift, and go to state 262
    t_pointer  shift, and go to state 79

    FULFILL_FOR_IDS   go to state 263
    MANY_IDS_FULFILL  go to state 264
    MANY_IDS_END      go to state 265
    FUNC_CALL         go to state 121
    METHOD            go to state 193
    METHOD_FULFILL    go to state 85
    POINTER           go to state 169


State 167

   59 BODY_FILLING: FUNC_CALL .
  124 METHOD_FULFILL: FUNC_CALL .

    t_dot     reduce using rule 124 (METHOD_FULFILL)
    $default  reduce using rule 59 (BODY_FILLING)


State 168

   65 BODY_FILLING: METHOD .
   87 FULFILL_FOR_IDS: METHOD .
  122 METHOD: METHOD . t_dot METHOD_FULFILL

    t_dot  shift, and go to state 127

    t_short_dec  reduce using rule 87 (FULFILL_FOR_IDS)
    t_comma      reduce using rule 87 (FULFILL_FOR_IDS)
    $default     reduce using rule 65 (BODY_FILLING)


State 169

   88 FULFILL_FOR_IDS: POINTER .

    $default  reduce using rule 88 (FULFILL_FOR_IDS)


State 170

   55 BODY_FILLING: GOTO .

    $default  reduce using rule 55 (BODY_FILLING)


State 171

   56 BODY_FILLING: LABEL .

    $default  reduce using rule 56 (BODY_FILLING)


State 172

   54 BODY_FILLING: SWITCH .

    $default  reduce using rule 54 (BODY_FILLING)


State 173

   57 BODY_FILLING: IF .

    $default  reduce using rule 57 (BODY_FILLING)


State 174

  167 IF: IF_FIRST . MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD
  168   | IF_FIRST . MULTY_ELSEIF_SECOND
  169   | IF_FIRST . MULTY_ELSE_THIRD
  170   | IF_FIRST .

    t_else  shift, and go to state 266

    $default  reduce using rule 170 (IF)

    MULTY_ELSEIF_SECOND  go to state 267
    ELSEIF_SECOND        go to state 268
    MULTY_ELSE_THIRD     go to state 269
    ELSE_THIRD           go to state 270


State 175

   61 BODY_FILLING: RETURN .

    $default  reduce using rule 61 (BODY_FILLING)


State 176

   60 BODY_FILLING: SHORT_EXPR .

    $default  reduce using rule 60 (BODY_FILLING)


State 177

   53 BODY_FILLING: FOR .

    $default  reduce using rule 53 (BODY_FILLING)


State 178

  213 MULTI_AR: ARRAY_INDEX .
  214         | ARRAY_INDEX . MULTI_AR

    t_open_sq  shift, and go to state 159

    $default  reduce using rule 213 (MULTI_AR)

    ARRAY_INDEX  go to state 178
    MULTI_AR     go to state 271


State 179

   58 BODY_FILLING: MULTI_AR .

    $default  reduce using rule 58 (BODY_FILLING)


State 180

   63 BODY_FILLING: SLICE .

    $default  reduce using rule 63 (BODY_FILLING)


State 181

   62 BODY_FILLING: STRUCT .

    $default  reduce using rule 62 (BODY_FILLING)


State 182

   52 BODY_START: BODY_START END_SYMBOLS .

    $default  reduce using rule 52 (BODY_START)


State 183

   66 BODY_FILLING: INTERFACE .

    $default  reduce using rule 66 (BODY_FILLING)


State 184

   43 STRUCT_METHOD_SECOND_PART: t_id FUNC_PARAM_SECOND . BODY
   44                          | t_id FUNC_PARAM_SECOND . TYPE_AND_STRUCT BODY
   45                          | t_id FUNC_PARAM_SECOND . FUNC_PARAM_SECOND BODY

    t_vtype       shift, and go to state 42
    t_id          shift, and go to state 43
    t_open_br     shift, and go to state 95
    t_open_paren  shift, and go to state 96

    FUNC_PARAM_SECOND        go to state 272
    FUNC_PARAM_SECOND_START  go to state 99
    TYPE_AND_STRUCT          go to state 273
    BODY                     go to state 274
    BODY_START               go to state 104


State 185

  264 INT_BODY: t_id t_open_paren t_vtype . t_close_paren

    t_close_paren  shift, and go to state 275


State 186

  110 PARAM: t_open_paren t_close_paren .

    $default  reduce using rule 110 (PARAM)


State 187

   85 FULFILL_FOR_IDS: t_id .
   86                | t_id . MULTI_AR
   89                | t_id . POINTER
  108 FUNC_CALL: t_id . PARAM
  123 METHOD_FULFILL: t_id .

    t_open_paren  shift, and go to state 120
    t_open_sq     shift, and go to state 159
    t_pointer     shift, and go to state 79

    t_dot     reduce using rule 123 (METHOD_FULFILL)
    $default  reduce using rule 85 (FULFILL_FOR_IDS)

    PARAM        go to state 109
    PARAM_START  go to state 110
    POINTER      go to state 251
    ARRAY_INDEX  go to state 178
    MULTI_AR     go to state 252


State 188

  115 PARAM_END_FULFILL: t_enter .
  117 PARAM_FULFILL: t_enter .

    t_close_paren  reduce using rule 115 (PARAM_END_FULFILL)
    $default       reduce using rule 117 (PARAM_FULFILL)


State 189

  114 PARAM_END_FULFILL: FULFILL_FOR_IDS .
  116 PARAM_FULFILL: FULFILL_FOR_IDS . t_comma

    t_comma  shift, and go to state 276

    $default  reduce using rule 114 (PARAM_END_FULFILL)


State 190

  109 PARAM: PARAM_START PARAM_END .

    $default  reduce using rule 109 (PARAM)


State 191

  113 PARAM_END: PARAM_END_FULFILL . t_close_paren

    t_close_paren  shift, and go to state 277


State 192

  112 PARAM_START: PARAM_START PARAM_FULFILL .

    $default  reduce using rule 112 (PARAM_START)


State 193

   87 FULFILL_FOR_IDS: METHOD .
  122 METHOD: METHOD . t_dot METHOD_FULFILL

    t_dot  shift, and go to state 127

    $default  reduce using rule 87 (FULFILL_FOR_IDS)


State 194

  260 INT_START: t_type t_id t_interface t_open_br END_SYMBOLS INT_BODY INT_END .

    $default  reduce using rule 260 (INT_START)


State 195

  269 INT_END: t_enter t_close_br .

    $default  reduce using rule 269 (INT_END)


State 196

  108 FUNC_CALL: t_id . PARAM
  265 INT_BODY: INT_BODY END_SYMBOLS t_id . t_open_paren t_vtype t_close_paren

    t_open_paren  shift, and go to state 278

    PARAM        go to state 109
    PARAM_START  go to state 110


State 197

  266 INT_BODY: INT_BODY END_SYMBOLS FUNC_CALL . t_vtype
  267         | INT_BODY END_SYMBOLS FUNC_CALL .

    t_vtype  shift, and go to state 279

    $default  reduce using rule 267 (INT_BODY)


State 198

  261 INT_START: t_type t_id t_interface t_enter t_open_br END_SYMBOLS INT_BODY . INT_END
  265 INT_BODY: INT_BODY . END_SYMBOLS t_id t_open_paren t_vtype t_close_paren
  266         | INT_BODY . END_SYMBOLS FUNC_CALL t_vtype
  267         | INT_BODY . END_SYMBOLS FUNC_CALL

    t_close_br   shift, and go to state 113
    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 114
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 115
    INT_END      go to state 280


State 199

   17 FUNC_PARAM: FUNC_PARAM . t_comma FUNC_PARAM_FULFILL
   46 SHORT_FUNC: t_func t_open_paren FUNC_PARAM . t_close_paren FUNC_SECOND_PART

    t_comma        shift, and go to state 56
    t_close_paren  shift, and go to state 281


State 200

  120 SHIFT_AC: t_int_const .

    $default  reduce using rule 120 (SHIFT_AC)


State 201

  119 SHIFT_AC: t_id .

    $default  reduce using rule 119 (SHIFT_AC)


State 202

  118 SHIFT: SHIFT_AC t_shift_const SHIFT_AC .

    $default  reduce using rule 118 (SHIFT)


State 203

  108 FUNC_CALL: t_id . PARAM
  123 METHOD_FULFILL: t_id .

    t_open_paren  shift, and go to state 120

    $default  reduce using rule 123 (METHOD_FULFILL)

    PARAM        go to state 109
    PARAM_START  go to state 110


State 204

  122 METHOD: METHOD t_dot METHOD_FULFILL .

    $default  reduce using rule 122 (METHOD)


State 205

  121 METHOD: METHOD_FULFILL t_dot METHOD_FULFILL .

    $default  reduce using rule 121 (METHOD)


State 206

  208 EXPR_END: t_close_paren .

    $default  reduce using rule 208 (EXPR_END)


State 207

   91 BOOLEAN: BOOLEAN t_bool . VALUE

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 129
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_pointer           shift, and go to state 79

    SHORT_FUNC      go to state 80
    FUNC_CALL       go to state 81
    SHIFT           go to state 82
    SHIFT_AC        go to state 83
    METHOD          go to state 84
    METHOD_FULFILL  go to state 85
    POINTER         go to state 86
    VALUE           go to state 282
    EXPR_START      go to state 88


State 208

  143 VALUE: EXPR_START BOOLEAN EXPR_END .

    $default  reduce using rule 143 (VALUE)


State 209

   90 BOOLEAN: VALUE t_bool . VALUE

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 129
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_pointer           shift, and go to state 79

    SHORT_FUNC      go to state 80
    FUNC_CALL       go to state 81
    SHIFT           go to state 82
    SHIFT_AC        go to state 83
    METHOD          go to state 84
    METHOD_FULFILL  go to state 85
    POINTER         go to state 86
    VALUE           go to state 283
    EXPR_START      go to state 88


State 210

  194 EXPR: EXPR t_sign . VALUE

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 129
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_pointer           shift, and go to state 79

    SHORT_FUNC      go to state 80
    FUNC_CALL       go to state 81
    SHIFT           go to state 82
    SHIFT_AC        go to state 83
    METHOD          go to state 84
    METHOD_FULFILL  go to state 85
    POINTER         go to state 86
    VALUE           go to state 284
    EXPR_START      go to state 88


State 211

  142 VALUE: EXPR_START EXPR EXPR_END .

    $default  reduce using rule 142 (VALUE)


State 212

  221 ENUM: ENUM t_comma VALUE .

    $default  reduce using rule 221 (ENUM)


State 213

  233 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id . METHOD
  234            | STRUCT_BODY END_SYMBOLS t_id . t_vtype
  235            | STRUCT_BODY END_SYMBOLS t_id . t_id
  236            | STRUCT_BODY END_SYMBOLS t_id .

    t_vtype  shift, and go to state 285
    t_id     shift, and go to state 286

    $default  reduce using rule 236 (STRUCT_BODY)

    FUNC_CALL       go to state 121
    METHOD          go to state 287
    METHOD_FULFILL  go to state 85


State 214

  239 STRUCT_START: t_type t_id t_struct_const t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END .

    $default  reduce using rule 239 (STRUCT_START)


State 215

   39 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren t_close_paren .

    $default  reduce using rule 39 (FUNC_RETURN_VALUE_FULFILL)


State 216

   38 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren TYPE_AND_STRUCT . t_close_paren

    t_close_paren  shift, and go to state 288


State 217

   30 FUNC_PARAM_FULFILL_SECOND: t_id TYPE_AND_STRUCT . t_comma
   33 FUNC_PARAM_FULFILL_SECOND_END: t_id TYPE_AND_STRUCT .

    t_comma  shift, and go to state 289

    $default  reduce using rule 33 (FUNC_PARAM_FULFILL_SECOND_END)


State 218

   26 FUNC_PARAM_SECOND_END: FUNC_PARAM_FULFILL_SECOND_END t_close_paren .

    $default  reduce using rule 26 (FUNC_PARAM_SECOND_END)


State 219

   31 FUNC_PARAM_FULFILL_SECOND: TYPE_AND_STRUCT t_comma .

    $default  reduce using rule 31 (FUNC_PARAM_FULFILL_SECOND)


State 220

   20 FUNC_SECOND_PART: FUNC_RETURN_VALUE TYPE_AND_STRUCT BODY .

    $default  reduce using rule 20 (FUNC_SECOND_PART)


State 221

  108 FUNC_CALL: t_id . PARAM

    t_open_paren  shift, and go to state 120

    PARAM        go to state 109
    PARAM_START  go to state 110


State 222

   92 DEFER: t_defer FUNC_CALL .

    $default  reduce using rule 92 (DEFER)


State 223

   72 VAR: t_var t_id . MAPS END_SYMBOLS
   85 FULFILL_FOR_IDS: t_id .
   86                | t_id . MULTI_AR
   89                | t_id . POINTER
  108 FUNC_CALL: t_id . PARAM
  123 METHOD_FULFILL: t_id .

    t_map         shift, and go to state 290
    t_open_paren  shift, and go to state 120
    t_open_sq     shift, and go to state 159
    t_pointer     shift, and go to state 79

    t_dot     reduce using rule 123 (METHOD_FULFILL)
    $default  reduce using rule 85 (FULFILL_FOR_IDS)

    PARAM        go to state 109
    PARAM_START  go to state 110
    POINTER      go to state 251
    ARRAY_INDEX  go to state 178
    MULTI_AR     go to state 252
    MAPS         go to state 291


State 224

   74 VAR: t_var FULFILL_FOR_IDS . TYPE_AND_STRUCT END_SYMBOLS
   75    | t_var FULFILL_FOR_IDS . ASSIGNMENT FULFILL_FOR_VAL END_SYMBOLS
   97 MANY_IDS_START: FULFILL_FOR_IDS . t_comma

    t_vtype     shift, and go to state 42
    t_id        shift, and go to state 43
    t_comma     shift, and go to state 259
    t_equality  shift, and go to state 292

    TYPE_AND_STRUCT  go to state 293
    ASSIGNMENT       go to state 294


State 225

   69 VAR: t_var MANY_IDS . ASSIGNMENT MANY_VALUES
   70    | t_var MANY_IDS . TYPE_AND_STRUCT END_SYMBOLS
   71    | t_var MANY_IDS . ASSIGNMENT FULFILL_FOR_VAL END_SYMBOLS

    t_vtype     shift, and go to state 42
    t_id        shift, and go to state 43
    t_equality  shift, and go to state 292

    TYPE_AND_STRUCT  go to state 295
    ASSIGNMENT       go to state 296


State 226

   85 FULFILL_FOR_IDS: t_id .
   86                | t_id . MULTI_AR
   89                | t_id . POINTER
  108 FUNC_CALL: t_id . PARAM
  119 SHIFT_AC: t_id .
  123 METHOD_FULFILL: t_id .
  132 VALUE: t_id .

    t_open_paren  shift, and go to state 120
    t_open_sq     shift, and go to state 159
    t_pointer     shift, and go to state 79

    t_shift_const  reduce using rule 119 (SHIFT_AC)
    t_short_dec    reduce using rule 85 (FULFILL_FOR_IDS)
    t_comma        reduce using rule 85 (FULFILL_FOR_IDS)
    t_dot          reduce using rule 123 (METHOD_FULFILL)
    $default       reduce using rule 132 (VALUE)

    PARAM        go to state 109
    PARAM_START  go to state 110
    POINTER      go to state 251
    ARRAY_INDEX  go to state 178
    MULTI_AR     go to state 252


State 227

  200 CONDITION: t_true .

    $default  reduce using rule 200 (CONDITION)


State 228

  201 CONDITION: t_false .

    $default  reduce using rule 201 (CONDITION)


State 229

  196 INIT_STATE: VAR .

    $default  reduce using rule 196 (INIT_STATE)


State 230

   91 BOOLEAN: BOOLEAN . t_bool VALUE
  199 CONDITION: BOOLEAN .

    t_bool  shift, and go to state 207

    $default  reduce using rule 199 (CONDITION)


State 231

  124 METHOD_FULFILL: FUNC_CALL .
  138 VALUE: FUNC_CALL .
  197 INIT_STATE: FUNC_CALL .

    t_semicolon  reduce using rule 197 (INIT_STATE)
    t_dot        reduce using rule 124 (METHOD_FULFILL)
    $default     reduce using rule 138 (VALUE)


State 232

   87 FULFILL_FOR_IDS: METHOD .
  122 METHOD: METHOD . t_dot METHOD_FULFILL
  141 VALUE: METHOD .

    t_dot  shift, and go to state 127

    t_short_dec  reduce using rule 87 (FULFILL_FOR_IDS)
    t_comma      reduce using rule 87 (FULFILL_FOR_IDS)
    $default     reduce using rule 141 (VALUE)


State 233

   88 FULFILL_FOR_IDS: POINTER .
  140 VALUE: POINTER .

    t_short_dec  reduce using rule 88 (FULFILL_FOR_IDS)
    t_comma      reduce using rule 88 (FULFILL_FOR_IDS)
    $default     reduce using rule 140 (VALUE)


State 234

   90 BOOLEAN: VALUE . t_bool VALUE

    t_bool  shift, and go to state 209


State 235

  172 IF_FIRST: t_if INIT_STATE . t_semicolon CONDITION BODY_FOR_LOOP

    t_semicolon  shift, and go to state 297


State 236

  171 IF_FIRST: t_if CONDITION . BODY_FOR_LOOP

    t_open_br  shift, and go to state 298

    BODY_FOR_LOOP        go to state 299
    BODY_FOR_LOOP_START  go to state 300


State 237

  151 SWITCH_BODY_START: t_open_br .

    $default  reduce using rule 151 (SWITCH_BODY_START)


State 238

  193 EXPR: VALUE .

    $default  reduce using rule 193 (EXPR)


State 239

  148 SWITCH: t_switch SWITCH_BODY .

    $default  reduce using rule 148 (SWITCH)


State 240

  149 SWITCH_BODY: SWITCH_BODY_START . SWITCH_BODY_END
  152 SWITCH_BODY_START: SWITCH_BODY_START . END_SYMBOLS
  153                  | SWITCH_BODY_START . CASE
  154 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START . DEFAULT

    t_case       shift, and go to state 301
    t_default    shift, and go to state 302
    t_close_br   shift, and go to state 303
    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    CASE             go to state 304
    DEFAULT          go to state 305
    SWITCH_BODY_END  go to state 306
    END_SYMBOLS      go to state 307


State 241

  150 SWITCH_BODY: SWITCH_BODY_START_WITH_DEFAULT . SWITCH_BODY_END
  155 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START_WITH_DEFAULT . CASE

    t_case      shift, and go to state 301
    t_close_br  shift, and go to state 303

    CASE             go to state 308
    SWITCH_BODY_END  go to state 309


State 242

  147 SWITCH: t_switch EXPR . SWITCH_BODY
  194 EXPR: EXPR . t_sign VALUE

    t_open_br  shift, and go to state 237
    t_sign     shift, and go to state 210

    SWITCH_BODY                     go to state 310
    SWITCH_BODY_START               go to state 240
    SWITCH_BODY_START_WITH_DEFAULT  go to state 241


State 243

  146 SWITCH: t_switch INIT_STATE . t_semicolon EXPR SWITCH_BODY

    t_semicolon  shift, and go to state 311


State 244

  205 FOR: t_for INIT_STATE . t_semicolon CONDITION t_semicolon POST_STATE BODY_FOR_LOOP

    t_semicolon  shift, and go to state 312


State 245

  206 FOR: t_for CONDITION . BODY_FOR_LOOP

    t_open_br  shift, and go to state 298

    BODY_FOR_LOOP        go to state 313
    BODY_FOR_LOOP_START  go to state 300


State 246

  144 GOTO: t_goto t_id .

    $default  reduce using rule 144 (GOTO)


State 247

  188 RETURN: t_return EXPR .
  189       | t_return EXPR . MANY_RETURN_START MANY_RETURN_START_END
  194 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 210
    t_comma  shift, and go to state 314

    $default  reduce using rule 188 (RETURN)

    MANY_RETURN_START  go to state 315


State 248

  209 ARRAY_INDEX: t_open_sq . t_int_const t_close_sq
  210            | t_open_sq . t_id t_close_sq
  211            | t_open_sq . t_string t_close_sq
  212            | t_open_sq . t_close_sq
  224 SLICE: t_id t_open_sq . VALUE t_colon VALUE t_close_sq
  225      | t_id t_open_sq . t_colon VALUE t_close_sq
  226      | t_id t_open_sq . VALUE t_colon t_close_sq

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 316
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 317
    t_string            shift, and go to state 318
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_close_sq          shift, and go to state 256
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_colon             shift, and go to state 319
    t_pointer           shift, and go to state 79

    SHORT_FUNC      go to state 80
    FUNC_CALL       go to state 81
    SHIFT           go to state 82
    SHIFT_AC        go to state 83
    METHOD          go to state 84
    METHOD_FULFILL  go to state 85
    POINTER         go to state 86
    VALUE           go to state 320
    EXPR_START      go to state 88


State 249

  145 LABEL: t_id t_colon .

    $default  reduce using rule 145 (LABEL)


State 250

  195 SHORT_EXPR: t_id t_short_expr . t_id

    t_id  shift, and go to state 321


State 251

   89 FULFILL_FOR_IDS: t_id POINTER .

    $default  reduce using rule 89 (FULFILL_FOR_IDS)


State 252

   86 FULFILL_FOR_IDS: t_id MULTI_AR .

    $default  reduce using rule 86 (FULFILL_FOR_IDS)


State 253

  209 ARRAY_INDEX: t_open_sq t_int_const . t_close_sq

    t_close_sq  shift, and go to state 322


State 254

  210 ARRAY_INDEX: t_open_sq t_id . t_close_sq

    t_close_sq  shift, and go to state 323


State 255

  211 ARRAY_INDEX: t_open_sq t_string . t_close_sq

    t_close_sq  shift, and go to state 324


State 256

  212 ARRAY_INDEX: t_open_sq t_close_sq .

    $default  reduce using rule 212 (ARRAY_INDEX)


State 257

   50 BODY_START: BODY_START BODY_FILLING END_SYMBOLS .

    $default  reduce using rule 50 (BODY_START)


State 258

   95 SHORT_ASSIGN: t_short_dec .

    $default  reduce using rule 95 (SHORT_ASSIGN)


State 259

   97 MANY_IDS_START: FULFILL_FOR_IDS t_comma .

    $default  reduce using rule 97 (MANY_IDS_START)


State 260

   73 VAR: FULFILL_FOR_IDS SHORT_ASSIGN . FULFILL_FOR_VAL SPEC

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 325
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_open_sq           shift, and go to state 159
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_make              shift, and go to state 326
    t_pointer           shift, and go to state 79

    SHORT_FUNC       go to state 80
    FULFILL_FOR_VAL  go to state 327
    BOOLEAN          go to state 328
    FUNC_CALL        go to state 81
    SHIFT            go to state 82
    SHIFT_AC         go to state 83
    METHOD           go to state 84
    METHOD_FULFILL   go to state 85
    POINTER          go to state 86
    VALUE            go to state 131
    EXPR             go to state 329
    EXPR_START       go to state 88
    ARRAY_INDEX      go to state 178
    MULTI_AR         go to state 330
    MAKE             go to state 331
    SLICE            go to state 332
    FIELD            go to state 333
    ST_EMBEDDED      go to state 334


State 261

   67 VAR: MANY_IDS SHORT_ASSIGN . MANY_VALUES
   68    | MANY_IDS SHORT_ASSIGN . FULFILL_FOR_VAL END_SYMBOLS

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 325
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_open_sq           shift, and go to state 159
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_make              shift, and go to state 326
    t_enter             shift, and go to state 335
    t_pointer           shift, and go to state 79

    SHORT_FUNC                 go to state 80
    FULFILL_FOR_VAL            go to state 336
    BOOLEAN                    go to state 328
    MANY_VALUES                go to state 337
    MANY_VALUES_START_FULFILL  go to state 338
    MANY_VALUES_START          go to state 339
    FUNC_CALL                  go to state 81
    SHIFT                      go to state 82
    SHIFT_AC                   go to state 83
    METHOD                     go to state 84
    METHOD_FULFILL             go to state 85
    POINTER                    go to state 86
    VALUE                      go to state 131
    EXPR                       go to state 329
    EXPR_START                 go to state 88
    ARRAY_INDEX                go to state 178
    MULTI_AR                   go to state 330
    MAKE                       go to state 331
    SLICE                      go to state 332
    FIELD                      go to state 333
    ST_EMBEDDED                go to state 334


State 262

  100 MANY_IDS_FULFILL: t_enter .

    $default  reduce using rule 100 (MANY_IDS_FULFILL)


State 263

   99 MANY_IDS_FULFILL: FULFILL_FOR_IDS . t_comma
  101 MANY_IDS_END: FULFILL_FOR_IDS .

    t_comma  shift, and go to state 340

    $default  reduce using rule 101 (MANY_IDS_END)


State 264

   98 MANY_IDS_START: MANY_IDS_START MANY_IDS_FULFILL .

    $default  reduce using rule 98 (MANY_IDS_START)


State 265

   96 MANY_IDS: MANY_IDS_START MANY_IDS_END .

    $default  reduce using rule 96 (MANY_IDS)


State 266

  183 ELSEIF_SECOND: t_else . t_if CONDITION BODY_FOR_LOOP
  186 ELSE_THIRD: t_else . BODY_FOR_LOOP

    t_if       shift, and go to state 341
    t_open_br  shift, and go to state 298

    BODY_FOR_LOOP        go to state 342
    BODY_FOR_LOOP_START  go to state 300


State 267

  167 IF: IF_FIRST MULTY_ELSEIF_SECOND . MULTY_ELSE_THIRD
  168   | IF_FIRST MULTY_ELSEIF_SECOND .
  182 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND . ELSEIF_SECOND

    t_else  shift, and go to state 266

    $default  reduce using rule 168 (IF)

    ELSEIF_SECOND     go to state 343
    MULTY_ELSE_THIRD  go to state 344
    ELSE_THIRD        go to state 270


State 268

  181 MULTY_ELSEIF_SECOND: ELSEIF_SECOND .

    $default  reduce using rule 181 (MULTY_ELSEIF_SECOND)


State 269

  169 IF: IF_FIRST MULTY_ELSE_THIRD .
  185 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD . ELSE_THIRD

    t_else  shift, and go to state 345

    $default  reduce using rule 169 (IF)

    ELSE_THIRD  go to state 346


State 270

  184 MULTY_ELSE_THIRD: ELSE_THIRD .

    $default  reduce using rule 184 (MULTY_ELSE_THIRD)


State 271

  214 MULTI_AR: ARRAY_INDEX MULTI_AR .

    $default  reduce using rule 214 (MULTI_AR)


State 272

   45 STRUCT_METHOD_SECOND_PART: t_id FUNC_PARAM_SECOND FUNC_PARAM_SECOND . BODY

    t_open_br  shift, and go to state 95

    BODY        go to state 347
    BODY_START  go to state 104


State 273

   44 STRUCT_METHOD_SECOND_PART: t_id FUNC_PARAM_SECOND TYPE_AND_STRUCT . BODY

    t_open_br  shift, and go to state 95

    BODY        go to state 348
    BODY_START  go to state 104


State 274

   43 STRUCT_METHOD_SECOND_PART: t_id FUNC_PARAM_SECOND BODY .

    $default  reduce using rule 43 (STRUCT_METHOD_SECOND_PART)


State 275

  264 INT_BODY: t_id t_open_paren t_vtype t_close_paren .

    $default  reduce using rule 264 (INT_BODY)


State 276

  116 PARAM_FULFILL: FULFILL_FOR_IDS t_comma .

    $default  reduce using rule 116 (PARAM_FULFILL)


State 277

  113 PARAM_END: PARAM_END_FULFILL t_close_paren .

    $default  reduce using rule 113 (PARAM_END)


State 278

  110 PARAM: t_open_paren . t_close_paren
  111 PARAM_START: t_open_paren .
  265 INT_BODY: INT_BODY END_SYMBOLS t_id t_open_paren . t_vtype t_close_paren

    t_vtype        shift, and go to state 349
    t_close_paren  shift, and go to state 186

    $default  reduce using rule 111 (PARAM_START)


State 279

  266 INT_BODY: INT_BODY END_SYMBOLS FUNC_CALL t_vtype .

    $default  reduce using rule 266 (INT_BODY)


State 280

  261 INT_START: t_type t_id t_interface t_enter t_open_br END_SYMBOLS INT_BODY INT_END .

    $default  reduce using rule 261 (INT_START)


State 281

   46 SHORT_FUNC: t_func t_open_paren FUNC_PARAM t_close_paren . FUNC_SECOND_PART

    t_vtype       shift, and go to state 42
    t_func        shift, and go to state 94
    t_id          shift, and go to state 43
    t_open_br     shift, and go to state 95
    t_open_paren  shift, and go to state 96

    FUNC_SECOND_PART           go to state 350
    FUNC_PARAM_SECOND          go to state 98
    FUNC_PARAM_SECOND_START    go to state 99
    FUNC_RETURN_VALUE          go to state 100
    FUNC_RETURN_VALUE_FULFILL  go to state 101
    TYPE_AND_STRUCT            go to state 102
    BODY                       go to state 103
    BODY_START                 go to state 104


State 282

   91 BOOLEAN: BOOLEAN t_bool VALUE .

    $default  reduce using rule 91 (BOOLEAN)


State 283

   90 BOOLEAN: VALUE t_bool VALUE .

    $default  reduce using rule 90 (BOOLEAN)


State 284

  194 EXPR: EXPR t_sign VALUE .

    $default  reduce using rule 194 (EXPR)


State 285

  234 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id t_vtype .

    $default  reduce using rule 234 (STRUCT_BODY)


State 286

  108 FUNC_CALL: t_id . PARAM
  123 METHOD_FULFILL: t_id .
  235 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id t_id .

    t_open_paren  shift, and go to state 120

    t_dot     reduce using rule 123 (METHOD_FULFILL)
    $default  reduce using rule 235 (STRUCT_BODY)

    PARAM        go to state 109
    PARAM_START  go to state 110


State 287

  122 METHOD: METHOD . t_dot METHOD_FULFILL
  233 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id METHOD .

    t_dot  shift, and go to state 127

    $default  reduce using rule 233 (STRUCT_BODY)


State 288

   38 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren TYPE_AND_STRUCT t_close_paren .

    $default  reduce using rule 38 (FUNC_RETURN_VALUE_FULFILL)


State 289

   30 FUNC_PARAM_FULFILL_SECOND: t_id TYPE_AND_STRUCT t_comma .

    $default  reduce using rule 30 (FUNC_PARAM_FULFILL_SECOND)


State 290

  227 MAPS: t_map . t_open_sq t_vtype t_close_sq t_vtype

    t_open_sq  shift, and go to state 351


State 291

   72 VAR: t_var t_id MAPS . END_SYMBOLS

    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 352


State 292

   94 ASSIGNMENT: t_equality .

    $default  reduce using rule 94 (ASSIGNMENT)


State 293

   74 VAR: t_var FULFILL_FOR_IDS TYPE_AND_STRUCT . END_SYMBOLS
   93 ASSIGNMENT: TYPE_AND_STRUCT . t_equality

    t_equality   shift, and go to state 353
    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 354


State 294

   75 VAR: t_var FULFILL_FOR_IDS ASSIGNMENT . FULFILL_FOR_VAL END_SYMBOLS

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 325
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_open_sq           shift, and go to state 159
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_make              shift, and go to state 326
    t_pointer           shift, and go to state 79

    SHORT_FUNC       go to state 80
    FULFILL_FOR_VAL  go to state 355
    BOOLEAN          go to state 328
    FUNC_CALL        go to state 81
    SHIFT            go to state 82
    SHIFT_AC         go to state 83
    METHOD           go to state 84
    METHOD_FULFILL   go to state 85
    POINTER          go to state 86
    VALUE            go to state 131
    EXPR             go to state 329
    EXPR_START       go to state 88
    ARRAY_INDEX      go to state 178
    MULTI_AR         go to state 330
    MAKE             go to state 331
    SLICE            go to state 332
    FIELD            go to state 333
    ST_EMBEDDED      go to state 334


State 295

   70 VAR: t_var MANY_IDS TYPE_AND_STRUCT . END_SYMBOLS
   93 ASSIGNMENT: TYPE_AND_STRUCT . t_equality

    t_equality   shift, and go to state 353
    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 356


State 296

   69 VAR: t_var MANY_IDS ASSIGNMENT . MANY_VALUES
   71    | t_var MANY_IDS ASSIGNMENT . FULFILL_FOR_VAL END_SYMBOLS

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 325
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_open_sq           shift, and go to state 159
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_make              shift, and go to state 326
    t_enter             shift, and go to state 335
    t_pointer           shift, and go to state 79

    SHORT_FUNC                 go to state 80
    FULFILL_FOR_VAL            go to state 357
    BOOLEAN                    go to state 328
    MANY_VALUES                go to state 358
    MANY_VALUES_START_FULFILL  go to state 338
    MANY_VALUES_START          go to state 339
    FUNC_CALL                  go to state 81
    SHIFT                      go to state 82
    SHIFT_AC                   go to state 83
    METHOD                     go to state 84
    METHOD_FULFILL             go to state 85
    POINTER                    go to state 86
    VALUE                      go to state 131
    EXPR                       go to state 329
    EXPR_START                 go to state 88
    ARRAY_INDEX                go to state 178
    MULTI_AR                   go to state 330
    MAKE                       go to state 331
    SLICE                      go to state 332
    FIELD                      go to state 333
    ST_EMBEDDED                go to state 334


State 297

  172 IF_FIRST: t_if INIT_STATE t_semicolon . CONDITION BODY_FOR_LOOP

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 129
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_true              shift, and go to state 227
    t_false             shift, and go to state 228
    t_pointer           shift, and go to state 79

    $default  reduce using rule 202 (CONDITION)

    SHORT_FUNC      go to state 80
    BOOLEAN         go to state 230
    FUNC_CALL       go to state 81
    SHIFT           go to state 82
    SHIFT_AC        go to state 83
    METHOD          go to state 84
    METHOD_FULFILL  go to state 85
    POINTER         go to state 86
    VALUE           go to state 234
    CONDITION       go to state 359
    EXPR_START      go to state 88


State 298

  174 BODY_FOR_LOOP_START: t_open_br .
  175                    | t_open_br . END_SYMBOLS

    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    $default  reduce using rule 174 (BODY_FOR_LOOP_START)

    END_SYMBOLS  go to state 360


State 299

  171 IF_FIRST: t_if CONDITION BODY_FOR_LOOP .

    $default  reduce using rule 171 (IF_FIRST)


State 300

  173 BODY_FOR_LOOP: BODY_FOR_LOOP_START . BODY_FOR_LOOP_END
  176 BODY_FOR_LOOP_START: BODY_FOR_LOOP_START . LOOP_FILLING END_SYMBOLS

    t_defer     shift, and go to state 150
    t_if        shift, and go to state 152
    t_switch    shift, and go to state 153
    t_type      shift, and go to state 4
    t_for       shift, and go to state 154
    t_goto      shift, and go to state 155
    t_continue  shift, and go to state 361
    t_break     shift, and go to state 362
    t_return    shift, and go to state 156
    t_id        shift, and go to state 363
    t_close_br  shift, and go to state 364
    t_open_sq   shift, and go to state 159

    BODY_FILLING       go to state 365
    DEFER              go to state 164
    FUNC_CALL          go to state 167
    METHOD             go to state 366
    METHOD_FULFILL     go to state 85
    GOTO               go to state 170
    LABEL              go to state 171
    SWITCH             go to state 172
    IF                 go to state 173
    IF_FIRST           go to state 174
    BODY_FOR_LOOP_END  go to state 367
    LOOP_FILLING       go to state 368
    RETURN             go to state 175
    SHORT_EXPR         go to state 176
    FOR                go to state 177
    ARRAY_INDEX        go to state 178
    MULTI_AR           go to state 179
    SLICE              go to state 180
    STRUCT             go to state 181
    STRUCT_START       go to state 12
    INTERFACE          go to state 183
    INT_START          go to state 14


State 301

  156 CASE: t_case . CASE_STATEMENT CASE_BODY

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 129
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_pointer           shift, and go to state 79

    SHORT_FUNC      go to state 80
    FUNC_CALL       go to state 81
    SHIFT           go to state 82
    SHIFT_AC        go to state 83
    METHOD          go to state 84
    METHOD_FULFILL  go to state 85
    POINTER         go to state 86
    VALUE           go to state 238
    MULTIPLE_ARG    go to state 369
    FIRST_PART      go to state 370
    CASE_STATEMENT  go to state 371
    EXPR            go to state 372
    EXPR_START      go to state 88


State 302

  157 DEFAULT: t_default . CASE_BODY

    t_colon  shift, and go to state 373

    CASE_BODY  go to state 374


State 303

  166 SWITCH_BODY_END: t_close_br .

    $default  reduce using rule 166 (SWITCH_BODY_END)


State 304

  153 SWITCH_BODY_START: SWITCH_BODY_START CASE .

    $default  reduce using rule 153 (SWITCH_BODY_START)


State 305

  154 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START DEFAULT .

    $default  reduce using rule 154 (SWITCH_BODY_START_WITH_DEFAULT)


State 306

  149 SWITCH_BODY: SWITCH_BODY_START SWITCH_BODY_END .

    $default  reduce using rule 149 (SWITCH_BODY)


State 307

  152 SWITCH_BODY_START: SWITCH_BODY_START END_SYMBOLS .

    $default  reduce using rule 152 (SWITCH_BODY_START)


State 308

  155 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START_WITH_DEFAULT CASE .

    $default  reduce using rule 155 (SWITCH_BODY_START_WITH_DEFAULT)


State 309

  150 SWITCH_BODY: SWITCH_BODY_START_WITH_DEFAULT SWITCH_BODY_END .

    $default  reduce using rule 150 (SWITCH_BODY)


State 310

  147 SWITCH: t_switch EXPR SWITCH_BODY .

    $default  reduce using rule 147 (SWITCH)


State 311

  146 SWITCH: t_switch INIT_STATE t_semicolon . EXPR SWITCH_BODY

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 129
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_pointer           shift, and go to state 79

    SHORT_FUNC      go to state 80
    FUNC_CALL       go to state 81
    SHIFT           go to state 82
    SHIFT_AC        go to state 83
    METHOD          go to state 84
    METHOD_FULFILL  go to state 85
    POINTER         go to state 86
    VALUE           go to state 238
    EXPR            go to state 375
    EXPR_START      go to state 88


State 312

  205 FOR: t_for INIT_STATE t_semicolon . CONDITION t_semicolon POST_STATE BODY_FOR_LOOP

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 129
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_true              shift, and go to state 227
    t_false             shift, and go to state 228
    t_pointer           shift, and go to state 79

    $default  reduce using rule 202 (CONDITION)

    SHORT_FUNC      go to state 80
    BOOLEAN         go to state 230
    FUNC_CALL       go to state 81
    SHIFT           go to state 82
    SHIFT_AC        go to state 83
    METHOD          go to state 84
    METHOD_FULFILL  go to state 85
    POINTER         go to state 86
    VALUE           go to state 234
    CONDITION       go to state 376
    EXPR_START      go to state 88


State 313

  206 FOR: t_for CONDITION BODY_FOR_LOOP .

    $default  reduce using rule 206 (FOR)


State 314

  190 MANY_RETURN_START: t_comma .

    $default  reduce using rule 190 (MANY_RETURN_START)


State 315

  189 RETURN: t_return EXPR MANY_RETURN_START . MANY_RETURN_START_END
  191 MANY_RETURN_START: MANY_RETURN_START . EXPR t_comma

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 129
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_pointer           shift, and go to state 79

    SHORT_FUNC             go to state 80
    FUNC_CALL              go to state 81
    SHIFT                  go to state 82
    SHIFT_AC               go to state 83
    METHOD                 go to state 84
    METHOD_FULFILL         go to state 85
    POINTER                go to state 86
    VALUE                  go to state 238
    MANY_RETURN_START_END  go to state 377
    EXPR                   go to state 378
    EXPR_START             go to state 88


State 316

  120 SHIFT_AC: t_int_const .
  130 VALUE: t_int_const .
  209 ARRAY_INDEX: t_open_sq t_int_const . t_close_sq

    t_close_sq  shift, and go to state 322

    t_colon   reduce using rule 130 (VALUE)
    $default  reduce using rule 120 (SHIFT_AC)


State 317

  108 FUNC_CALL: t_id . PARAM
  119 SHIFT_AC: t_id .
  123 METHOD_FULFILL: t_id .
  132 VALUE: t_id .
  210 ARRAY_INDEX: t_open_sq t_id . t_close_sq

    t_open_paren  shift, and go to state 120
    t_close_sq    shift, and go to state 323

    t_dot     reduce using rule 123 (METHOD_FULFILL)
    t_colon   reduce using rule 132 (VALUE)
    $default  reduce using rule 119 (SHIFT_AC)

    PARAM        go to state 109
    PARAM_START  go to state 110


State 318

  134 VALUE: t_string .
  211 ARRAY_INDEX: t_open_sq t_string . t_close_sq

    t_close_sq  shift, and go to state 324

    $default  reduce using rule 134 (VALUE)


State 319

  225 SLICE: t_id t_open_sq t_colon . VALUE t_close_sq

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 129
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_pointer           shift, and go to state 79

    SHORT_FUNC      go to state 80
    FUNC_CALL       go to state 81
    SHIFT           go to state 82
    SHIFT_AC        go to state 83
    METHOD          go to state 84
    METHOD_FULFILL  go to state 85
    POINTER         go to state 86
    VALUE           go to state 379
    EXPR_START      go to state 88


State 320

  224 SLICE: t_id t_open_sq VALUE . t_colon VALUE t_close_sq
  226      | t_id t_open_sq VALUE . t_colon t_close_sq

    t_colon  shift, and go to state 380


State 321

  195 SHORT_EXPR: t_id t_short_expr t_id .

    $default  reduce using rule 195 (SHORT_EXPR)


State 322

  209 ARRAY_INDEX: t_open_sq t_int_const t_close_sq .

    $default  reduce using rule 209 (ARRAY_INDEX)


State 323

  210 ARRAY_INDEX: t_open_sq t_id t_close_sq .

    $default  reduce using rule 210 (ARRAY_INDEX)


State 324

  211 ARRAY_INDEX: t_open_sq t_string t_close_sq .

    $default  reduce using rule 211 (ARRAY_INDEX)


State 325

  108 FUNC_CALL: t_id . PARAM
  119 SHIFT_AC: t_id .
  123 METHOD_FULFILL: t_id .
  132 VALUE: t_id .
  224 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  225      | t_id . t_open_sq t_colon VALUE t_close_sq
  226      | t_id . t_open_sq VALUE t_colon t_close_sq
  243 FIELD: t_id . FIELD_BODY

    t_open_br     shift, and go to state 381
    t_open_paren  shift, and go to state 120
    t_open_sq     shift, and go to state 382

    t_shift_const  reduce using rule 119 (SHIFT_AC)
    t_open_sq      [reduce using rule 132 (VALUE)]
    t_dot          reduce using rule 123 (METHOD_FULFILL)
    $default       reduce using rule 132 (VALUE)

    PARAM        go to state 109
    PARAM_START  go to state 110
    FIELD_BODY   go to state 383
    FIELD_START  go to state 384


State 326

   83 FULFILL_FOR_VAL: t_make . t_open_paren MAPS t_close_paren
  222 MAKE: t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  223     | t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_paren  shift, and go to state 385


State 327

   73 VAR: FULFILL_FOR_IDS SHORT_ASSIGN FULFILL_FOR_VAL . SPEC

    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    t_semicolon  [reduce using rule 77 (SPEC)]
    t_enter      [reduce using rule 77 (SPEC)]
    t_eof        [reduce using rule 77 (SPEC)]
    $default     reduce using rule 77 (SPEC)

    SPEC         go to state 386
    END_SYMBOLS  go to state 387


State 328

   79 FULFILL_FOR_VAL: BOOLEAN .
   91 BOOLEAN: BOOLEAN . t_bool VALUE

    t_bool  shift, and go to state 207

    $default  reduce using rule 79 (FULFILL_FOR_VAL)


State 329

   78 FULFILL_FOR_VAL: EXPR .
  194 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 210

    $default  reduce using rule 78 (FULFILL_FOR_VAL)


State 330

   80 FULFILL_FOR_VAL: MULTI_AR . t_vtype PLENTY_OLD

    t_vtype  shift, and go to state 388


State 331

   81 FULFILL_FOR_VAL: MAKE .

    $default  reduce using rule 81 (FULFILL_FOR_VAL)


State 332

   82 FULFILL_FOR_VAL: SLICE .

    $default  reduce using rule 82 (FULFILL_FOR_VAL)


State 333

  254 ST_EMBEDDED: FIELD .

    $default  reduce using rule 254 (ST_EMBEDDED)


State 334

   84 FULFILL_FOR_VAL: ST_EMBEDDED .

    $default  reduce using rule 84 (FULFILL_FOR_VAL)


State 335

  104 MANY_VALUES_START_FULFILL: t_enter .

    $default  reduce using rule 104 (MANY_VALUES_START_FULFILL)


State 336

   68 VAR: MANY_IDS SHORT_ASSIGN FULFILL_FOR_VAL . END_SYMBOLS
  103 MANY_VALUES_START_FULFILL: FULFILL_FOR_VAL . t_comma

    t_comma      shift, and go to state 389
    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 390


State 337

   67 VAR: MANY_IDS SHORT_ASSIGN MANY_VALUES .

    $default  reduce using rule 67 (VAR)


State 338

  105 MANY_VALUES_START: MANY_VALUES_START_FULFILL .

    $default  reduce using rule 105 (MANY_VALUES_START)


State 339

  102 MANY_VALUES: MANY_VALUES_START . MANY_VALUES_END
  106 MANY_VALUES_START: MANY_VALUES_START . MANY_VALUES_START_FULFILL

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 325
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_open_sq           shift, and go to state 159
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_make              shift, and go to state 326
    t_enter             shift, and go to state 335
    t_pointer           shift, and go to state 79

    SHORT_FUNC                 go to state 80
    FULFILL_FOR_VAL            go to state 391
    BOOLEAN                    go to state 328
    MANY_VALUES_START_FULFILL  go to state 392
    MANY_VALUES_END            go to state 393
    FUNC_CALL                  go to state 81
    SHIFT                      go to state 82
    SHIFT_AC                   go to state 83
    METHOD                     go to state 84
    METHOD_FULFILL             go to state 85
    POINTER                    go to state 86
    VALUE                      go to state 131
    EXPR                       go to state 329
    EXPR_START                 go to state 88
    ARRAY_INDEX                go to state 178
    MULTI_AR                   go to state 330
    MAKE                       go to state 331
    SLICE                      go to state 332
    FIELD                      go to state 333
    ST_EMBEDDED                go to state 334


State 340

   99 MANY_IDS_FULFILL: FULFILL_FOR_IDS t_comma .

    $default  reduce using rule 99 (MANY_IDS_FULFILL)


State 341

  183 ELSEIF_SECOND: t_else t_if . CONDITION BODY_FOR_LOOP

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 129
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_true              shift, and go to state 227
    t_false             shift, and go to state 228
    t_pointer           shift, and go to state 79

    $default  reduce using rule 202 (CONDITION)

    SHORT_FUNC      go to state 80
    BOOLEAN         go to state 230
    FUNC_CALL       go to state 81
    SHIFT           go to state 82
    SHIFT_AC        go to state 83
    METHOD          go to state 84
    METHOD_FULFILL  go to state 85
    POINTER         go to state 86
    VALUE           go to state 234
    CONDITION       go to state 394
    EXPR_START      go to state 88


State 342

  186 ELSE_THIRD: t_else BODY_FOR_LOOP .

    $default  reduce using rule 186 (ELSE_THIRD)


State 343

  182 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND ELSEIF_SECOND .

    $default  reduce using rule 182 (MULTY_ELSEIF_SECOND)


State 344

  167 IF: IF_FIRST MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD .
  185 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD . ELSE_THIRD

    t_else  shift, and go to state 345

    $default  reduce using rule 167 (IF)

    ELSE_THIRD  go to state 346


State 345

  186 ELSE_THIRD: t_else . BODY_FOR_LOOP

    t_open_br  shift, and go to state 298

    BODY_FOR_LOOP        go to state 342
    BODY_FOR_LOOP_START  go to state 300


State 346

  185 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD ELSE_THIRD .

    $default  reduce using rule 185 (MULTY_ELSE_THIRD)


State 347

   45 STRUCT_METHOD_SECOND_PART: t_id FUNC_PARAM_SECOND FUNC_PARAM_SECOND BODY .

    $default  reduce using rule 45 (STRUCT_METHOD_SECOND_PART)


State 348

   44 STRUCT_METHOD_SECOND_PART: t_id FUNC_PARAM_SECOND TYPE_AND_STRUCT BODY .

    $default  reduce using rule 44 (STRUCT_METHOD_SECOND_PART)


State 349

  265 INT_BODY: INT_BODY END_SYMBOLS t_id t_open_paren t_vtype . t_close_paren

    t_close_paren  shift, and go to state 395


State 350

   46 SHORT_FUNC: t_func t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART .

    $default  reduce using rule 46 (SHORT_FUNC)


State 351

  227 MAPS: t_map t_open_sq . t_vtype t_close_sq t_vtype

    t_vtype  shift, and go to state 396


State 352

   72 VAR: t_var t_id MAPS END_SYMBOLS .

    $default  reduce using rule 72 (VAR)


State 353

   93 ASSIGNMENT: TYPE_AND_STRUCT t_equality .

    $default  reduce using rule 93 (ASSIGNMENT)


State 354

   74 VAR: t_var FULFILL_FOR_IDS TYPE_AND_STRUCT END_SYMBOLS .

    $default  reduce using rule 74 (VAR)


State 355

   75 VAR: t_var FULFILL_FOR_IDS ASSIGNMENT FULFILL_FOR_VAL . END_SYMBOLS

    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 397


State 356

   70 VAR: t_var MANY_IDS TYPE_AND_STRUCT END_SYMBOLS .

    $default  reduce using rule 70 (VAR)


State 357

   71 VAR: t_var MANY_IDS ASSIGNMENT FULFILL_FOR_VAL . END_SYMBOLS
  103 MANY_VALUES_START_FULFILL: FULFILL_FOR_VAL . t_comma

    t_comma      shift, and go to state 389
    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 398


State 358

   69 VAR: t_var MANY_IDS ASSIGNMENT MANY_VALUES .

    $default  reduce using rule 69 (VAR)


State 359

  172 IF_FIRST: t_if INIT_STATE t_semicolon CONDITION . BODY_FOR_LOOP

    t_open_br  shift, and go to state 298

    BODY_FOR_LOOP        go to state 399
    BODY_FOR_LOOP_START  go to state 300


State 360

  175 BODY_FOR_LOOP_START: t_open_br END_SYMBOLS .

    $default  reduce using rule 175 (BODY_FOR_LOOP_START)


State 361

  180 LOOP_FILLING: t_continue .

    $default  reduce using rule 180 (LOOP_FILLING)


State 362

  179 LOOP_FILLING: t_break .

    $default  reduce using rule 179 (LOOP_FILLING)


State 363

  108 FUNC_CALL: t_id . PARAM
  123 METHOD_FULFILL: t_id .
  145 LABEL: t_id . t_colon
  195 SHORT_EXPR: t_id . t_short_expr t_id
  224 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  225      | t_id . t_open_sq t_colon VALUE t_close_sq
  226      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_open_paren  shift, and go to state 120
    t_open_sq     shift, and go to state 382
    t_colon       shift, and go to state 249
    t_short_expr  shift, and go to state 250

    $default  reduce using rule 123 (METHOD_FULFILL)

    PARAM        go to state 109
    PARAM_START  go to state 110


State 364

  177 BODY_FOR_LOOP_END: t_close_br .

    $default  reduce using rule 177 (BODY_FOR_LOOP_END)


State 365

  178 LOOP_FILLING: BODY_FILLING .

    $default  reduce using rule 178 (LOOP_FILLING)


State 366

   65 BODY_FILLING: METHOD .
  122 METHOD: METHOD . t_dot METHOD_FULFILL

    t_dot  shift, and go to state 127

    $default  reduce using rule 65 (BODY_FILLING)


State 367

  173 BODY_FOR_LOOP: BODY_FOR_LOOP_START BODY_FOR_LOOP_END .

    $default  reduce using rule 173 (BODY_FOR_LOOP)


State 368

  176 BODY_FOR_LOOP_START: BODY_FOR_LOOP_START LOOP_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 400


State 369

  162 CASE_STATEMENT: MULTIPLE_ARG .

    $default  reduce using rule 162 (CASE_STATEMENT)


State 370

  158 MULTIPLE_ARG: FIRST_PART . SECOND_PART
  160 FIRST_PART: FIRST_PART . EXPR t_comma

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 129
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_pointer           shift, and go to state 79

    SHORT_FUNC      go to state 80
    FUNC_CALL       go to state 81
    SHIFT           go to state 82
    SHIFT_AC        go to state 83
    METHOD          go to state 84
    METHOD_FULFILL  go to state 85
    POINTER         go to state 86
    VALUE           go to state 238
    SECOND_PART     go to state 401
    EXPR            go to state 402
    EXPR_START      go to state 88


State 371

  156 CASE: t_case CASE_STATEMENT . CASE_BODY

    t_colon  shift, and go to state 373

    CASE_BODY  go to state 403


State 372

  159 FIRST_PART: EXPR . t_comma
  163 CASE_STATEMENT: EXPR .
  194 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 210
    t_comma  shift, and go to state 404

    $default  reduce using rule 163 (CASE_STATEMENT)


State 373

  164 CASE_BODY: t_colon .

    $default  reduce using rule 164 (CASE_BODY)


State 374

  157 DEFAULT: t_default CASE_BODY .
  165 CASE_BODY: CASE_BODY . LOOP_FILLING END_SYMBOLS

    t_defer     shift, and go to state 150
    t_if        shift, and go to state 152
    t_switch    shift, and go to state 153
    t_type      shift, and go to state 4
    t_for       shift, and go to state 154
    t_goto      shift, and go to state 155
    t_continue  shift, and go to state 361
    t_break     shift, and go to state 362
    t_return    shift, and go to state 156
    t_id        shift, and go to state 363
    t_open_sq   shift, and go to state 159

    $default  reduce using rule 157 (DEFAULT)

    BODY_FILLING    go to state 365
    DEFER           go to state 164
    FUNC_CALL       go to state 167
    METHOD          go to state 366
    METHOD_FULFILL  go to state 85
    GOTO            go to state 170
    LABEL           go to state 171
    SWITCH          go to state 172
    IF              go to state 173
    IF_FIRST        go to state 174
    LOOP_FILLING    go to state 405
    RETURN          go to state 175
    SHORT_EXPR      go to state 176
    FOR             go to state 177
    ARRAY_INDEX     go to state 178
    MULTI_AR        go to state 179
    SLICE           go to state 180
    STRUCT          go to state 181
    STRUCT_START    go to state 12
    INTERFACE       go to state 183
    INT_START       go to state 14


State 375

  146 SWITCH: t_switch INIT_STATE t_semicolon EXPR . SWITCH_BODY
  194 EXPR: EXPR . t_sign VALUE

    t_open_br  shift, and go to state 237
    t_sign     shift, and go to state 210

    SWITCH_BODY                     go to state 406
    SWITCH_BODY_START               go to state 240
    SWITCH_BODY_START_WITH_DEFAULT  go to state 241


State 376

  205 FOR: t_for INIT_STATE t_semicolon CONDITION . t_semicolon POST_STATE BODY_FOR_LOOP

    t_semicolon  shift, and go to state 407


State 377

  189 RETURN: t_return EXPR MANY_RETURN_START MANY_RETURN_START_END .

    $default  reduce using rule 189 (RETURN)


State 378

  191 MANY_RETURN_START: MANY_RETURN_START EXPR . t_comma
  192 MANY_RETURN_START_END: EXPR .
  194 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 210
    t_comma  shift, and go to state 408

    $default  reduce using rule 192 (MANY_RETURN_START_END)


State 379

  225 SLICE: t_id t_open_sq t_colon VALUE . t_close_sq

    t_close_sq  shift, and go to state 409


State 380

  224 SLICE: t_id t_open_sq VALUE t_colon . VALUE t_close_sq
  226      | t_id t_open_sq VALUE t_colon . t_close_sq

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 129
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_close_sq          shift, and go to state 410
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_pointer           shift, and go to state 79

    SHORT_FUNC      go to state 80
    FUNC_CALL       go to state 81
    SHIFT           go to state 82
    SHIFT_AC        go to state 83
    METHOD          go to state 84
    METHOD_FULFILL  go to state 85
    POINTER         go to state 86
    VALUE           go to state 411
    EXPR_START      go to state 88


State 381

  245 FIELD_BODY: t_open_br . t_close_br
  246 FIELD_START: t_open_br .

    t_close_br  shift, and go to state 412

    $default  reduce using rule 246 (FIELD_START)


State 382

  224 SLICE: t_id t_open_sq . VALUE t_colon VALUE t_close_sq
  225      | t_id t_open_sq . t_colon VALUE t_close_sq
  226      | t_id t_open_sq . VALUE t_colon t_close_sq

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 129
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_colon             shift, and go to state 319
    t_pointer           shift, and go to state 79

    SHORT_FUNC      go to state 80
    FUNC_CALL       go to state 81
    SHIFT           go to state 82
    SHIFT_AC        go to state 83
    METHOD          go to state 84
    METHOD_FULFILL  go to state 85
    POINTER         go to state 86
    VALUE           go to state 320
    EXPR_START      go to state 88


State 383

  243 FIELD: t_id FIELD_BODY .

    $default  reduce using rule 243 (FIELD)


State 384

  244 FIELD_BODY: FIELD_START . FIELD_END
  247 FIELD_START: FIELD_START . FIELD_FULFILL

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 129
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_enter             shift, and go to state 413
    t_pointer           shift, and go to state 79

    SHORT_FUNC         go to state 80
    FUNC_CALL          go to state 81
    SHIFT              go to state 82
    SHIFT_AC           go to state 83
    METHOD             go to state 84
    METHOD_FULFILL     go to state 85
    POINTER            go to state 86
    VALUE              go to state 414
    EXPR_START         go to state 88
    FIELD_FULFILL      go to state 415
    FIELD_END          go to state 416
    FIELD_END_FULFILL  go to state 417


State 385

   83 FULFILL_FOR_VAL: t_make t_open_paren . MAPS t_close_paren
  222 MAKE: t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_close_paren
  223     | t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_map      shift, and go to state 290
    t_open_sq  shift, and go to state 159

    ARRAY_INDEX  go to state 178
    MULTI_AR     go to state 418
    MAPS         go to state 419


State 386

   73 VAR: FULFILL_FOR_IDS SHORT_ASSIGN FULFILL_FOR_VAL SPEC .

    $default  reduce using rule 73 (VAR)


State 387

   76 SPEC: END_SYMBOLS .

    $default  reduce using rule 76 (SPEC)


State 388

   80 FULFILL_FOR_VAL: MULTI_AR t_vtype . PLENTY_OLD

    t_open_br  shift, and go to state 420

    PLENTY_OLD  go to state 421


State 389

  103 MANY_VALUES_START_FULFILL: FULFILL_FOR_VAL t_comma .

    $default  reduce using rule 103 (MANY_VALUES_START_FULFILL)


State 390

   68 VAR: MANY_IDS SHORT_ASSIGN FULFILL_FOR_VAL END_SYMBOLS .

    $default  reduce using rule 68 (VAR)


State 391

  103 MANY_VALUES_START_FULFILL: FULFILL_FOR_VAL . t_comma
  107 MANY_VALUES_END: FULFILL_FOR_VAL . END_SYMBOLS

    t_comma      shift, and go to state 389
    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 422


State 392

  106 MANY_VALUES_START: MANY_VALUES_START MANY_VALUES_START_FULFILL .

    $default  reduce using rule 106 (MANY_VALUES_START)


State 393

  102 MANY_VALUES: MANY_VALUES_START MANY_VALUES_END .

    $default  reduce using rule 102 (MANY_VALUES)


State 394

  183 ELSEIF_SECOND: t_else t_if CONDITION . BODY_FOR_LOOP

    t_open_br  shift, and go to state 298

    BODY_FOR_LOOP        go to state 423
    BODY_FOR_LOOP_START  go to state 300


State 395

  265 INT_BODY: INT_BODY END_SYMBOLS t_id t_open_paren t_vtype t_close_paren .

    $default  reduce using rule 265 (INT_BODY)


State 396

  227 MAPS: t_map t_open_sq t_vtype . t_close_sq t_vtype

    t_close_sq  shift, and go to state 424


State 397

   75 VAR: t_var FULFILL_FOR_IDS ASSIGNMENT FULFILL_FOR_VAL END_SYMBOLS .

    $default  reduce using rule 75 (VAR)


State 398

   71 VAR: t_var MANY_IDS ASSIGNMENT FULFILL_FOR_VAL END_SYMBOLS .

    $default  reduce using rule 71 (VAR)


State 399

  172 IF_FIRST: t_if INIT_STATE t_semicolon CONDITION BODY_FOR_LOOP .

    $default  reduce using rule 172 (IF_FIRST)


State 400

  176 BODY_FOR_LOOP_START: BODY_FOR_LOOP_START LOOP_FILLING END_SYMBOLS .

    $default  reduce using rule 176 (BODY_FOR_LOOP_START)


State 401

  158 MULTIPLE_ARG: FIRST_PART SECOND_PART .

    $default  reduce using rule 158 (MULTIPLE_ARG)


State 402

  160 FIRST_PART: FIRST_PART EXPR . t_comma
  161 SECOND_PART: EXPR .
  194 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 210
    t_comma  shift, and go to state 425

    $default  reduce using rule 161 (SECOND_PART)


State 403

  156 CASE: t_case CASE_STATEMENT CASE_BODY .
  165 CASE_BODY: CASE_BODY . LOOP_FILLING END_SYMBOLS

    t_defer     shift, and go to state 150
    t_if        shift, and go to state 152
    t_switch    shift, and go to state 153
    t_type      shift, and go to state 4
    t_for       shift, and go to state 154
    t_goto      shift, and go to state 155
    t_continue  shift, and go to state 361
    t_break     shift, and go to state 362
    t_return    shift, and go to state 156
    t_id        shift, and go to state 363
    t_open_sq   shift, and go to state 159

    $default  reduce using rule 156 (CASE)

    BODY_FILLING    go to state 365
    DEFER           go to state 164
    FUNC_CALL       go to state 167
    METHOD          go to state 366
    METHOD_FULFILL  go to state 85
    GOTO            go to state 170
    LABEL           go to state 171
    SWITCH          go to state 172
    IF              go to state 173
    IF_FIRST        go to state 174
    LOOP_FILLING    go to state 405
    RETURN          go to state 175
    SHORT_EXPR      go to state 176
    FOR             go to state 177
    ARRAY_INDEX     go to state 178
    MULTI_AR        go to state 179
    SLICE           go to state 180
    STRUCT          go to state 181
    STRUCT_START    go to state 12
    INTERFACE       go to state 183
    INT_START       go to state 14


State 404

  159 FIRST_PART: EXPR t_comma .

    $default  reduce using rule 159 (FIRST_PART)


State 405

  165 CASE_BODY: CASE_BODY LOOP_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 426


State 406

  146 SWITCH: t_switch INIT_STATE t_semicolon EXPR SWITCH_BODY .

    $default  reduce using rule 146 (SWITCH)


State 407

  205 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon . POST_STATE BODY_FOR_LOOP

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 427
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_pointer           shift, and go to state 79

    SHORT_FUNC      go to state 80
    FUNC_CALL       go to state 81
    SHIFT           go to state 82
    SHIFT_AC        go to state 83
    METHOD          go to state 84
    METHOD_FULFILL  go to state 85
    POINTER         go to state 86
    VALUE           go to state 238
    EXPR            go to state 428
    POST_STATE      go to state 429
    EXPR_START      go to state 88


State 408

  191 MANY_RETURN_START: MANY_RETURN_START EXPR t_comma .

    $default  reduce using rule 191 (MANY_RETURN_START)


State 409

  225 SLICE: t_id t_open_sq t_colon VALUE t_close_sq .

    $default  reduce using rule 225 (SLICE)


State 410

  226 SLICE: t_id t_open_sq VALUE t_colon t_close_sq .

    $default  reduce using rule 226 (SLICE)


State 411

  224 SLICE: t_id t_open_sq VALUE t_colon VALUE . t_close_sq

    t_close_sq  shift, and go to state 430


State 412

  245 FIELD_BODY: t_open_br t_close_br .

    $default  reduce using rule 245 (FIELD_BODY)


State 413

  250 FIELD_FULFILL: t_enter .
  253 FIELD_END_FULFILL: t_enter .

    t_close_br  reduce using rule 253 (FIELD_END_FULFILL)
    $default    reduce using rule 250 (FIELD_FULFILL)


State 414

  248 FIELD_FULFILL: VALUE . t_colon VALUE t_comma
  249              | VALUE . t_colon FIELD t_comma
  252 FIELD_END_FULFILL: VALUE . t_colon VALUE

    t_colon  shift, and go to state 431


State 415

  247 FIELD_START: FIELD_START FIELD_FULFILL .

    $default  reduce using rule 247 (FIELD_START)


State 416

  244 FIELD_BODY: FIELD_START FIELD_END .

    $default  reduce using rule 244 (FIELD_BODY)


State 417

  251 FIELD_END: FIELD_END_FULFILL . t_close_br

    t_close_br  shift, and go to state 432


State 418

  222 MAKE: t_make t_open_paren MULTI_AR . t_vtype t_comma VALUE t_close_paren
  223     | t_make t_open_paren MULTI_AR . t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_vtype  shift, and go to state 433


State 419

   83 FULFILL_FOR_VAL: t_make t_open_paren MAPS . t_close_paren

    t_close_paren  shift, and go to state 434


State 420

  217 PLENTY_OLD: t_open_br . ENUM t_close_br
  218           | t_open_br . t_close_br
  219           | t_open_br . PLENTY t_close_br

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 129
    t_string            shift, and go to state 72
    t_open_br           shift, and go to state 420
    t_close_br          shift, and go to state 435
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_pointer           shift, and go to state 79

    SHORT_FUNC      go to state 80
    FUNC_CALL       go to state 81
    SHIFT           go to state 82
    SHIFT_AC        go to state 83
    METHOD          go to state 84
    METHOD_FULFILL  go to state 85
    POINTER         go to state 86
    VALUE           go to state 87
    EXPR_START      go to state 88
    PLENTY          go to state 436
    PLENTY_OLD      go to state 437
    ENUM            go to state 438


State 421

   80 FULFILL_FOR_VAL: MULTI_AR t_vtype PLENTY_OLD .

    $default  reduce using rule 80 (FULFILL_FOR_VAL)


State 422

  107 MANY_VALUES_END: FULFILL_FOR_VAL END_SYMBOLS .

    $default  reduce using rule 107 (MANY_VALUES_END)


State 423

  183 ELSEIF_SECOND: t_else t_if CONDITION BODY_FOR_LOOP .

    $default  reduce using rule 183 (ELSEIF_SECOND)


State 424

  227 MAPS: t_map t_open_sq t_vtype t_close_sq . t_vtype

    t_vtype  shift, and go to state 439


State 425

  160 FIRST_PART: FIRST_PART EXPR t_comma .

    $default  reduce using rule 160 (FIRST_PART)


State 426

  165 CASE_BODY: CASE_BODY LOOP_FILLING END_SYMBOLS .

    $default  reduce using rule 165 (CASE_BODY)


State 427

  108 FUNC_CALL: t_id . PARAM
  119 SHIFT_AC: t_id .
  123 METHOD_FULFILL: t_id .
  132 VALUE: t_id .
  204 POST_STATE: t_id . t_inc_const

    t_inc_const   shift, and go to state 440
    t_open_paren  shift, and go to state 120

    t_shift_const  reduce using rule 119 (SHIFT_AC)
    t_dot          reduce using rule 123 (METHOD_FULFILL)
    $default       reduce using rule 132 (VALUE)

    PARAM        go to state 109
    PARAM_START  go to state 110


State 428

  194 EXPR: EXPR . t_sign VALUE
  203 POST_STATE: EXPR .

    t_sign  shift, and go to state 210

    $default  reduce using rule 203 (POST_STATE)


State 429

  205 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE . BODY_FOR_LOOP

    t_open_br  shift, and go to state 298

    BODY_FOR_LOOP        go to state 441
    BODY_FOR_LOOP_START  go to state 300


State 430

  224 SLICE: t_id t_open_sq VALUE t_colon VALUE t_close_sq .

    $default  reduce using rule 224 (SLICE)


State 431

  248 FIELD_FULFILL: VALUE t_colon . VALUE t_comma
  249              | VALUE t_colon . FIELD t_comma
  252 FIELD_END_FULFILL: VALUE t_colon . VALUE

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 442
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_pointer           shift, and go to state 79

    SHORT_FUNC      go to state 80
    FUNC_CALL       go to state 81
    SHIFT           go to state 82
    SHIFT_AC        go to state 83
    METHOD          go to state 84
    METHOD_FULFILL  go to state 85
    POINTER         go to state 86
    VALUE           go to state 443
    EXPR_START      go to state 88
    FIELD           go to state 444


State 432

  251 FIELD_END: FIELD_END_FULFILL t_close_br .

    $default  reduce using rule 251 (FIELD_END)


State 433

  222 MAKE: t_make t_open_paren MULTI_AR t_vtype . t_comma VALUE t_close_paren
  223     | t_make t_open_paren MULTI_AR t_vtype . t_comma VALUE t_comma t_int_const VALUE

    t_comma  shift, and go to state 445


State 434

   83 FULFILL_FOR_VAL: t_make t_open_paren MAPS t_close_paren .

    $default  reduce using rule 83 (FULFILL_FOR_VAL)


State 435

  218 PLENTY_OLD: t_open_br t_close_br .

    $default  reduce using rule 218 (PLENTY_OLD)


State 436

  219 PLENTY_OLD: t_open_br PLENTY . t_close_br

    t_close_br  shift, and go to state 446


State 437

  215 PLENTY: PLENTY_OLD .
  216       | PLENTY_OLD . t_comma PLENTY

    t_comma  shift, and go to state 447

    $default  reduce using rule 215 (PLENTY)


State 438

  217 PLENTY_OLD: t_open_br ENUM . t_close_br
  221 ENUM: ENUM . t_comma VALUE

    t_close_br  shift, and go to state 448
    t_comma     shift, and go to state 134


State 439

  227 MAPS: t_map t_open_sq t_vtype t_close_sq t_vtype .

    $default  reduce using rule 227 (MAPS)


State 440

  204 POST_STATE: t_id t_inc_const .

    $default  reduce using rule 204 (POST_STATE)


State 441

  205 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY_FOR_LOOP .

    $default  reduce using rule 205 (FOR)


State 442

  108 FUNC_CALL: t_id . PARAM
  119 SHIFT_AC: t_id .
  123 METHOD_FULFILL: t_id .
  132 VALUE: t_id .
  243 FIELD: t_id . FIELD_BODY

    t_open_br     shift, and go to state 381
    t_open_paren  shift, and go to state 120

    t_shift_const  reduce using rule 119 (SHIFT_AC)
    t_dot          reduce using rule 123 (METHOD_FULFILL)
    $default       reduce using rule 132 (VALUE)

    PARAM        go to state 109
    PARAM_START  go to state 110
    FIELD_BODY   go to state 383
    FIELD_START  go to state 384


State 443

  248 FIELD_FULFILL: VALUE t_colon VALUE . t_comma
  252 FIELD_END_FULFILL: VALUE t_colon VALUE .

    t_comma  shift, and go to state 449

    $default  reduce using rule 252 (FIELD_END_FULFILL)


State 444

  249 FIELD_FULFILL: VALUE t_colon FIELD . t_comma

    t_comma  shift, and go to state 450


State 445

  222 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma . VALUE t_close_paren
  223     | t_make t_open_paren MULTI_AR t_vtype t_comma . VALUE t_comma t_int_const VALUE

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 129
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_pointer           shift, and go to state 79

    SHORT_FUNC      go to state 80
    FUNC_CALL       go to state 81
    SHIFT           go to state 82
    SHIFT_AC        go to state 83
    METHOD          go to state 84
    METHOD_FULFILL  go to state 85
    POINTER         go to state 86
    VALUE           go to state 451
    EXPR_START      go to state 88


State 446

  219 PLENTY_OLD: t_open_br PLENTY t_close_br .

    $default  reduce using rule 219 (PLENTY_OLD)


State 447

  216 PLENTY: PLENTY_OLD t_comma . PLENTY

    t_open_br  shift, and go to state 420

    PLENTY      go to state 452
    PLENTY_OLD  go to state 437


State 448

  217 PLENTY_OLD: t_open_br ENUM t_close_br .

    $default  reduce using rule 217 (PLENTY_OLD)


State 449

  248 FIELD_FULFILL: VALUE t_colon VALUE t_comma .

    $default  reduce using rule 248 (FIELD_FULFILL)


State 450

  249 FIELD_FULFILL: VALUE t_colon FIELD t_comma .

    $default  reduce using rule 249 (FIELD_FULFILL)


State 451

  222 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE . t_close_paren
  223     | t_make t_open_paren MULTI_AR t_vtype t_comma VALUE . t_comma t_int_const VALUE

    t_comma        shift, and go to state 453
    t_close_paren  shift, and go to state 454


State 452

  216 PLENTY: PLENTY_OLD t_comma PLENTY .

    $default  reduce using rule 216 (PLENTY)


State 453

  223 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma . t_int_const VALUE

    t_int_const  shift, and go to state 455


State 454

  222 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren .

    $default  reduce using rule 222 (MAKE)


State 455

  223 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const . VALUE

    t_func              shift, and go to state 68
    t_int_const         shift, and go to state 69
    t_float_const       shift, and go to state 70
    t_id                shift, and go to state 129
    t_string            shift, and go to state 72
    t_sign              shift, and go to state 74
    t_open_paren        shift, and go to state 75
    t_rune              shift, and go to state 76
    t_blank_identifier  shift, and go to state 77
    t_pointer           shift, and go to state 79

    SHORT_FUNC      go to state 80
    FUNC_CALL       go to state 81
    SHIFT           go to state 82
    SHIFT_AC        go to state 83
    METHOD          go to state 84
    METHOD_FULFILL  go to state 85
    POINTER         go to state 86
    VALUE           go to state 456
    EXPR_START      go to state 88


State 456

  223 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE .

    $default  reduce using rule 223 (MAKE)
