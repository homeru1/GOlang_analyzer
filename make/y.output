Terminals unused in grammar

   t_constant
   t_chan
   t_go
   t_select
   t_fallthrough
   t_or_const
   t_and_const
   t_eq_const
   t_rel_const
   t_point_const
   t_punc
   t_char_const
   '+'
   '-'
   '*'
   '/'


State 170 conflicts: 16 shift/reduce
State 173 conflicts: 1 shift/reduce
State 372 conflicts: 2 shift/reduce


Grammar

    0 $accept: START $end

    1 START: START GLOBAL END_SYMBOLS
    2      | GLOBAL END_SYMBOLS
    3      | START END_SYMBOLS

    4 GLOBAL: PACKAGE
    5       | IMPORT
    6       | FUNC
    7       | STRUCT
    8       | INTERFACE
    9       | VAR
   10       | STRUCT_METHOD

   11 PACKAGE: t_package t_id

   12 IMPORT: t_import t_string
   13       | t_import t_open_paren PARAM_IMPORT t_close_paren
   14       | t_import t_open_paren t_enter PARAM_IMPORT t_close_paren
   15       | t_import t_id t_string

   16 FUNC: t_func t_id t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART

   17 FUNC_PARAM: FUNC_PARAM_FULFILL
   18           | FUNC_PARAM t_comma FUNC_PARAM_FULFILL

   19 FUNC_SECOND_PART: BODY
   20                 | TYPE_AND_STRUCT BODY
   21                 | FUNC_RETURN_VALUE TYPE_AND_STRUCT BODY
   22                 | FUNC_PARAM_SECOND BODY

   23 FUNC_PARAM_SECOND: FUNC_PARAM_SECOND_START FUNC_PARAM_SECOND_END
   24                  | t_open_paren t_close_paren

   25 FUNC_PARAM_SECOND_START: t_open_paren
   26                        | FUNC_PARAM_SECOND_START FUNC_PARAM_FULFILL_SECOND

   27 FUNC_PARAM_SECOND_END: FUNC_PARAM_FULFILL_SECOND_END t_close_paren

   28 FUNC_PARAM_FULFILL: t_id TYPE_AND_STRUCT
   29                   | t_id
   30                   | t_id INTERFACE
   31                   | t_id t_param_const INTERFACE
   32                   | t_id MULTI_AR t_vtype
   33                   | /* empty */

   34 FUNC_PARAM_FULFILL_SECOND: t_id TYPE_AND_STRUCT t_comma
   35                          | TYPE_AND_STRUCT t_comma
   36                          | t_enter

   37 FUNC_PARAM_FULFILL_SECOND_END: t_id TYPE_AND_STRUCT
   38                              | TYPE_AND_STRUCT
   39                              | t_enter

   40 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE_FULFILL
   41                  | FUNC_RETURN_VALUE FUNC_RETURN_VALUE_FULFILL

   42 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren TYPE_AND_STRUCT t_close_paren
   43                          | t_func t_open_paren t_close_paren

   44 TYPE_AND_STRUCT: t_vtype
   45                | t_param_const t_vtype
   46                | t_id

   47 STRUCT_METHOD: t_func t_open_paren t_id TYPE_AND_STRUCT t_close_paren STRUCT_METHOD_SECOND_PART

   48 STRUCT_METHOD_SECOND_PART: t_id FUNC_PARAM_SECOND BODY
   49                          | t_id FUNC_PARAM_SECOND TYPE_AND_STRUCT BODY
   50                          | t_id FUNC_PARAM_SECOND FUNC_PARAM_SECOND BODY

   51 SHORT_FUNC: t_func t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART

   52 BODY: BODY_START BODY_END

   53 BODY_END: t_close_br
   54         | BODY_FILLING t_close_br

   55 BODY_START: t_open_br
   56           | BODY_START BODY_FILLING END_SYMBOLS
   57           | BODY_START END_SYMBOLS

   58 BODY_FILLING: FOR
   59             | SWITCH
   60             | GOTO
   61             | LABEL
   62             | IF
   63             | FUNC_CALL
   64             | SHORT_EXPR
   65             | VAR
   66             | RETURN
   67             | STRUCT
   68             | SLICE
   69             | DEFER
   70             | METHOD
   71             | INTERFACE
   72             | PLENTY

   73 VAR: IDS SHORT_ASSIGN VALUES
   74    | t_var IDS TYPE_AND_STRUCT
   75    | t_var IDS ASSIGNMENT VALUES
   76    | t_var t_id MAPS

   77 IDS: FULFILL_FOR_IDS
   78    | FULFILL_FOR_IDS MANY_IDS

   79 VALUES: FULFILL_FOR_VAL
   80       | FULFILL_FOR_VAL MANY_VALUES

   81 FULFILL_FOR_VAL: EXPR
   82                | BOOLEAN
   83                | MULTI_AR t_vtype PLENTY
   84                | MAKE
   85                | SLICE
   86                | t_make t_open_paren MAPS t_close_paren
   87                | ST_EMBEDDED
   88                | t_id PLENTY

   89 FULFILL_FOR_IDS: t_id
   90                | t_id MULTI_AR
   91                | METHOD
   92                | t_pointer
   93                | t_id POINTER

   94 BOOLEAN: VALUE t_bool VALUE
   95        | BOOLEAN t_bool VALUE

   96 DEFER: t_defer FUNC_CALL

   97 ASSIGNMENT: TYPE_AND_STRUCT t_equality
   98           | t_equality
   99           | ASSIGNMENT t_enter

  100 SHORT_ASSIGN: t_short_dec

  101 MANY_IDS: MANY_IDS_START MANY_IDS_END

  102 MANY_IDS_START: t_comma
  103               | MANY_IDS_START MANY_IDS_FULFILL

  104 MANY_IDS_FULFILL: FULFILL_FOR_IDS t_comma
  105                 | t_enter

  106 MANY_IDS_END: FULFILL_FOR_IDS

  107 MANY_VALUES: MANY_VALUES_START MANY_VALUES_END

  108 MANY_VALUES_START: t_comma
  109                  | MANY_VALUES_START FULFILL_FOR_VALS

  110 FULFILL_FOR_VALS: FULFILL_FOR_VAL t_comma
  111                 | t_enter

  112 MANY_VALUES_END: FULFILL_FOR_VAL

  113 FUNC_CALL: t_id PARAM

  114 PARAM: PARAM_START PARAM_END
  115      | t_open_paren t_close_paren

  116 PARAM_START: t_open_paren
  117            | PARAM_START PARAM_FULFILL

  118 PARAM_END: PARAM_END_FULFILL t_close_paren

  119 PARAM_END_FULFILL: FULFILL_FOR_IDS
  120                  | EXPR t_param_const
  121                  | t_enter

  122 PARAM_FULFILL: FULFILL_FOR_IDS t_comma
  123              | t_enter

  124 SHIFT: SHIFT_AC t_shift_const SHIFT_AC

  125 SHIFT_AC: t_id
  126         | t_int_const

  127 METHOD: METHOD_FULFILL t_dot METHOD_FULFILL
  128       | METHOD t_dot METHOD_FULFILL

  129 METHOD_FULFILL: t_id
  130               | FUNC_CALL

  131 POINTER: t_pointer

  132 AMPERSAND: t_ampersand

  133 PARAM_IMPORT: t_string END_SYMBOLS
  134             | t_id t_string END_SYMBOLS
  135             | PARAM_IMPORT t_string END_SYMBOLS
  136             | PARAM_IMPORT t_id t_string END_SYMBOLS

  137 VALUE: t_int_const
  138      | t_float_const
  139      | t_id
  140      | t_sign t_id
  141      | t_string
  142      | t_rune
  143      | t_blank_identifier
  144      | SHORT_FUNC PARAM
  145      | FUNC_CALL
  146      | SHIFT
  147      | t_pointer
  148      | METHOD
  149      | EXPR_START EXPR EXPR_END
  150      | EXPR_START BOOLEAN EXPR_END
  151      | AMPERSAND
  152      | t_hex
  153      | t_ten_pow
  154      | t_true
  155      | t_false

  156 GOTO: t_goto t_id

  157 LABEL: t_id t_colon

  158 SWITCH: t_switch INIT_STATE t_semicolon EXPR SWITCH_BODY
  159       | t_switch EXPR SWITCH_BODY
  160       | t_switch SWITCH_BODY

  161 SWITCH_BODY: SWITCH_BODY_START SWITCH_BODY_END
  162            | SWITCH_BODY_START_WITH_DEFAULT SWITCH_BODY_END

  163 SWITCH_BODY_START: t_open_br
  164                  | SWITCH_BODY_START END_SYMBOLS
  165                  | SWITCH_BODY_START CASE

  166 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START DEFAULT
  167                               | SWITCH_BODY_START_WITH_DEFAULT CASE

  168 CASE: t_case CASE_STATEMENT CASE_BODY

  169 DEFAULT: t_default CASE_BODY

  170 MULTIPLE_ARG: FIRST_PART SECOND_PART

  171 FIRST_PART: EXPR t_comma
  172           | FIRST_PART EXPR t_comma

  173 SECOND_PART: EXPR

  174 CASE_STATEMENT: MULTIPLE_ARG
  175               | EXPR

  176 CASE_BODY: t_colon
  177          | CASE_BODY LOOP_FILLING END_SYMBOLS

  178 SWITCH_BODY_END: t_close_br

  179 IF: IF_FIRST MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD
  180   | IF_FIRST MULTY_ELSEIF_SECOND
  181   | IF_FIRST MULTY_ELSE_THIRD
  182   | IF_FIRST

  183 IF_FIRST: t_if CONDITION BODY_FOR_LOOP
  184         | t_if INIT_STATE t_semicolon CONDITION BODY_FOR_LOOP

  185 BODY_FOR_LOOP: BODY_FOR_LOOP_START BODY_FOR_LOOP_END

  186 BODY_FOR_LOOP_START: t_open_br
  187                    | t_open_br END_SYMBOLS
  188                    | BODY_FOR_LOOP_START LOOP_FILLING END_SYMBOLS

  189 BODY_FOR_LOOP_END: t_close_br

  190 LOOP_FILLING: BODY_FILLING
  191             | t_break
  192             | t_continue

  193 MULTY_ELSEIF_SECOND: ELSEIF_SECOND
  194                    | MULTY_ELSEIF_SECOND ELSEIF_SECOND

  195 ELSEIF_SECOND: t_else t_if CONDITION BODY_FOR_LOOP

  196 MULTY_ELSE_THIRD: ELSE_THIRD
  197                 | MULTY_ELSE_THIRD ELSE_THIRD

  198 ELSE_THIRD: t_else BODY_FOR_LOOP

  199 RETURN: t_return RETURN_FULFILL

  200 RETURN_FULFILL: VALUES
  201               | /* empty */

  202 EXPR: VALUE
  203     | EXPR t_sign VALUE

  204 SHORT_EXPR: t_id t_short_expr t_id

  205 INIT_STATE: VAR
  206           | FUNC_CALL
  207           | /* empty */

  208 CONDITION: BOOLEAN
  209          | t_true
  210          | t_false
  211          | /* empty */

  212 POST_STATE: EXPR
  213           | t_id t_inc_const

  214 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY_FOR_LOOP
  215    | t_for CONDITION BODY_FOR_LOOP
  216    | t_for RANGE_BLANK SHORT_ASSIGN t_range VALUE BODY_FOR_LOOP
  217    | t_for t_id t_comma t_id SHORT_ASSIGN t_range VALUE BODY_FOR_LOOP
  218    | t_for t_id SHORT_ASSIGN t_range VALUE BODY_FOR_LOOP

  219 RANGE_BLANK: t_blank_identifier t_comma t_id
  220            | t_id t_comma t_blank_identifier

  221 EXPR_START: t_open_paren

  222 EXPR_END: t_close_paren

  223 ARRAY_INDEX: t_open_sq t_int_const t_close_sq
  224            | t_open_sq t_id t_close_sq
  225            | t_open_sq t_string t_close_sq
  226            | t_open_sq t_close_sq

  227 MULTI_AR: ARRAY_INDEX
  228         | ARRAY_INDEX MULTI_AR
  229         | t_open_sq t_param_const t_close_sq

  230 PLENTY: PLENTY_BODY
  231       | PLENTY_BODY t_comma PLENTY
  232       | PLENTY_BODY t_comma END_SYMBOLS PLENTY

  233 PLENTY_BODY: t_open_br ENUM t_close_br
  234            | t_open_br END_SYMBOLS ENUM t_close_br
  235            | t_open_br END_SYMBOLS PLENTY t_close_br
  236            | t_open_br END_SYMBOLS ENUM t_comma END_SYMBOLS t_close_br
  237            | t_open_br END_SYMBOLS PLENTY t_comma END_SYMBOLS t_close_br

  238 ENUM: VALUE
  239     | ENUM t_comma VALUE
  240     | ENUM t_comma END_SYMBOLS VALUE

  241 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  242     | t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma VALUE t_close_paren

  243 SLICE: t_id t_open_sq VALUE t_colon VALUE t_close_sq
  244      | t_id t_open_sq t_colon VALUE t_close_sq
  245      | t_id t_open_sq VALUE t_colon t_close_sq

  246 MAPS: t_map t_open_sq t_vtype t_close_sq t_vtype
  247     | t_map t_open_sq t_vtype t_close_sq t_vtype FIELD_BODY
  248     | t_map t_open_sq t_vtype t_close_sq t_id

  249 STRUCT: STRUCT_START

  250 STRUCT_BODY: ENUM t_vtype
  251            | t_id t_id
  252            | t_id
  253            | t_id METHOD
  254            | STRUCT_BODY END_SYMBOLS t_id METHOD
  255            | STRUCT_BODY END_SYMBOLS t_id t_vtype
  256            | STRUCT_BODY END_SYMBOLS t_id t_id
  257            | STRUCT_BODY END_SYMBOLS t_id

  258 STRUCT_START: t_type t_id t_struct_const t_open_br STRUCT_END
  259             | t_type t_id t_struct_const t_open_br STRUCT_BODY STRUCT_END
  260             | t_type t_id t_struct_const t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END
  261             | t_type t_id t_struct_const t_enter

  262 STRUCT_END: t_close_br
  263           | t_enter t_close_br

  264 FIELD: t_id FIELD_BODY

  265 FIELD_BODY: FIELD_START FIELD_END
  266           | t_open_br t_close_br

  267 FIELD_START: t_open_br
  268            | FIELD_START FIELD_FULFILL

  269 FIELD_FULFILL: VALUE t_colon VALUE t_comma
  270              | VALUE t_colon FIELD t_comma
  271              | t_enter

  272 FIELD_END: FIELD_END_FULFILL t_close_br

  273 FIELD_END_FULFILL: VALUE t_colon VALUE
  274                  | t_enter

  275 ST_EMBEDDED: FIELD

  276 END_SYMBOLS: t_semicolon
  277            | t_enter
  278            | t_eof

  279 INTERFACE: INT_START

  280 INT_START: t_type t_id t_interface t_open_br INT_BODY INT_END
  281          | t_type t_id t_interface t_open_br END_SYMBOLS INT_BODY INT_END
  282          | t_type t_id t_interface t_enter t_open_br END_SYMBOLS INT_BODY INT_END
  283          | t_interface t_open_br INT_END

  284 INT_BODY: FUNC_CALL
  285         | FUNC_CALL t_vtype
  286         | t_id t_open_paren t_vtype t_close_paren
  287         | INT_BODY END_SYMBOLS t_id t_open_paren t_vtype t_close_paren
  288         | INT_BODY END_SYMBOLS FUNC_CALL t_vtype
  289         | INT_BODY END_SYMBOLS FUNC_CALL

  290 INT_END: t_close_br
  291        | t_enter t_close_br


Terminals, with rules where they appear

$end (0) 0
'*' (42)
'+' (43)
'-' (45)
'/' (47)
error (256)
t_vtype (258) 32 44 45 83 241 242 246 247 248 250 255 285 286 287 288
t_constant (259)
t_case (260) 168
t_func (261) 16 42 43 47 51
t_import (262) 12 13 14 15
t_chan (263)
t_defer (264) 96
t_go (265)
t_interface (266) 280 281 282 283
t_default (267) 169
t_var (268) 74 75 76
t_range (269) 216 217 218
t_map (270) 246 247 248
t_package (271) 11
t_if (272) 183 184 195
t_select (273)
t_switch (274) 158 159 160
t_fallthrough (275)
t_else (276) 195 198
t_type (277) 258 259 260 261 280 281 282
t_for (278) 214 215 216 217 218
t_goto (279) 156
t_continue (280) 192
t_break (281) 191
t_return (282) 199
t_struct_const (283) 258 259 260 261
t_or_const (284)
t_and_const (285)
t_param_const (286) 31 45 120 229
t_eq_const (287)
t_rel_const (288)
t_shift_const (289) 124
t_inc_const (290) 213
t_point_const (291)
t_punc (292)
t_int_const (293) 126 137 223
t_float_const (294) 138
t_char_const (295)
t_id (296) 11 15 16 28 29 30 31 32 34 37 46 47 48 49 50 76 88 89 90
    93 113 125 129 134 136 139 140 156 157 204 213 217 218 219 220
    224 243 244 245 248 251 252 253 254 255 256 257 258 259 260 261
    264 280 281 282 286 287
t_string (297) 12 15 133 134 135 136 141 225
t_short_dec (298) 100
t_open_br (299) 55 163 186 187 233 234 235 236 237 258 259 260 266
    267 280 281 282 283
t_close_br (300) 53 54 178 189 233 234 235 236 237 262 263 266 272
    290 291
t_sign (301) 140 203
t_comma (302) 18 34 35 102 104 108 110 122 171 172 217 219 220 231
    232 236 237 239 240 241 242 269 270
t_equality (303) 97 98
t_open_paren (304) 13 14 16 24 25 42 43 47 51 86 115 116 221 241 242
    286 287
t_close_paren (305) 13 14 16 24 27 42 43 47 51 86 115 118 222 241 242
    286 287
t_open_sq (306) 223 224 225 226 229 243 244 245 246 247 248
t_close_sq (307) 223 224 225 226 229 243 244 245 246 247 248
t_bool (308) 94 95
t_rune (309) 142
t_semicolon (310) 158 184 214 276
t_blank_identifier (311) 143 219 220
t_dot (312) 127 128
t_colon (313) 157 176 243 244 245 269 270 273
t_true (314) 154 209
t_false (315) 155 210
t_short_expr (316) 204
t_make (317) 86 241 242
t_enter (318) 14 36 39 99 105 111 121 123 261 263 271 274 277 282 291
t_eof (319) 278
t_pointer (320) 92 131 147
t_ampersand (321) 132
t_hex (322) 152
t_ten_pow (323) 153


Nonterminals, with rules where they appear

$accept (73)
    on left: 0
START (74)
    on left: 1 2 3, on right: 0 1 3
GLOBAL (75)
    on left: 4 5 6 7 8 9 10, on right: 1 2
PACKAGE (76)
    on left: 11, on right: 4
IMPORT (77)
    on left: 12 13 14 15, on right: 5
FUNC (78)
    on left: 16, on right: 6
FUNC_PARAM (79)
    on left: 17 18, on right: 16 18 51
FUNC_SECOND_PART (80)
    on left: 19 20 21 22, on right: 16 51
FUNC_PARAM_SECOND (81)
    on left: 23 24, on right: 22 48 49 50
FUNC_PARAM_SECOND_START (82)
    on left: 25 26, on right: 23 26
FUNC_PARAM_SECOND_END (83)
    on left: 27, on right: 23
FUNC_PARAM_FULFILL (84)
    on left: 28 29 30 31 32 33, on right: 17 18
FUNC_PARAM_FULFILL_SECOND (85)
    on left: 34 35 36, on right: 26
FUNC_PARAM_FULFILL_SECOND_END (86)
    on left: 37 38 39, on right: 27
FUNC_RETURN_VALUE (87)
    on left: 40 41, on right: 21 41
FUNC_RETURN_VALUE_FULFILL (88)
    on left: 42 43, on right: 40 41
TYPE_AND_STRUCT (89)
    on left: 44 45 46, on right: 20 21 28 34 35 37 38 42 47 49 74 97
STRUCT_METHOD (90)
    on left: 47, on right: 10
STRUCT_METHOD_SECOND_PART (91)
    on left: 48 49 50, on right: 47
SHORT_FUNC (92)
    on left: 51, on right: 144
BODY (93)
    on left: 52, on right: 19 20 21 22 48 49 50
BODY_END (94)
    on left: 53 54, on right: 52
BODY_START (95)
    on left: 55 56 57, on right: 52 56 57
BODY_FILLING (96)
    on left: 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72, on right:
    54 56 190
VAR (97)
    on left: 73 74 75 76, on right: 9 65 205
IDS (98)
    on left: 77 78, on right: 73 74 75
VALUES (99)
    on left: 79 80, on right: 73 75 200
FULFILL_FOR_VAL (100)
    on left: 81 82 83 84 85 86 87 88, on right: 79 80 110 112
FULFILL_FOR_IDS (101)
    on left: 89 90 91 92 93, on right: 77 78 104 106 119 122
BOOLEAN (102)
    on left: 94 95, on right: 82 95 150 208
DEFER (103)
    on left: 96, on right: 69
ASSIGNMENT (104)
    on left: 97 98 99, on right: 75 99
SHORT_ASSIGN (105)
    on left: 100, on right: 73 216 217 218
MANY_IDS (106)
    on left: 101, on right: 78
MANY_IDS_START (107)
    on left: 102 103, on right: 101 103
MANY_IDS_FULFILL (108)
    on left: 104 105, on right: 103
MANY_IDS_END (109)
    on left: 106, on right: 101
MANY_VALUES (110)
    on left: 107, on right: 80
MANY_VALUES_START (111)
    on left: 108 109, on right: 107 109
FULFILL_FOR_VALS (112)
    on left: 110 111, on right: 109
MANY_VALUES_END (113)
    on left: 112, on right: 107
FUNC_CALL (114)
    on left: 113, on right: 63 96 130 145 206 284 285 288 289
PARAM (115)
    on left: 114 115, on right: 113 144
PARAM_START (116)
    on left: 116 117, on right: 114 117
PARAM_END (117)
    on left: 118, on right: 114
PARAM_END_FULFILL (118)
    on left: 119 120 121, on right: 118
PARAM_FULFILL (119)
    on left: 122 123, on right: 117
SHIFT (120)
    on left: 124, on right: 146
SHIFT_AC (121)
    on left: 125 126, on right: 124
METHOD (122)
    on left: 127 128, on right: 70 91 128 148 253 254
METHOD_FULFILL (123)
    on left: 129 130, on right: 127 128
POINTER (124)
    on left: 131, on right: 93
AMPERSAND (125)
    on left: 132, on right: 151
PARAM_IMPORT (126)
    on left: 133 134 135 136, on right: 13 14 135 136
VALUE (127)
    on left: 137 138 139 140 141 142 143 144 145 146 147 148 149 150
    151 152 153 154 155, on right: 94 95 202 203 216 217 218 238 239
    240 241 242 243 244 245 269 270 273
GOTO (128)
    on left: 156, on right: 60
LABEL (129)
    on left: 157, on right: 61
SWITCH (130)
    on left: 158 159 160, on right: 59
SWITCH_BODY (131)
    on left: 161 162, on right: 158 159 160
SWITCH_BODY_START (132)
    on left: 163 164 165, on right: 161 164 165 166
SWITCH_BODY_START_WITH_DEFAULT (133)
    on left: 166 167, on right: 162 167
CASE (134)
    on left: 168, on right: 165 167
DEFAULT (135)
    on left: 169, on right: 166
MULTIPLE_ARG (136)
    on left: 170, on right: 174
FIRST_PART (137)
    on left: 171 172, on right: 170 172
SECOND_PART (138)
    on left: 173, on right: 170
CASE_STATEMENT (139)
    on left: 174 175, on right: 168
CASE_BODY (140)
    on left: 176 177, on right: 168 169 177
SWITCH_BODY_END (141)
    on left: 178, on right: 161 162
IF (142)
    on left: 179 180 181 182, on right: 62
IF_FIRST (143)
    on left: 183 184, on right: 179 180 181 182
BODY_FOR_LOOP (144)
    on left: 185, on right: 183 184 195 198 214 215 216 217 218
BODY_FOR_LOOP_START (145)
    on left: 186 187 188, on right: 185 188
BODY_FOR_LOOP_END (146)
    on left: 189, on right: 185
LOOP_FILLING (147)
    on left: 190 191 192, on right: 177 188
MULTY_ELSEIF_SECOND (148)
    on left: 193 194, on right: 179 180 194
ELSEIF_SECOND (149)
    on left: 195, on right: 193 194
MULTY_ELSE_THIRD (150)
    on left: 196 197, on right: 179 181 197
ELSE_THIRD (151)
    on left: 198, on right: 196 197
RETURN (152)
    on left: 199, on right: 66
RETURN_FULFILL (153)
    on left: 200 201, on right: 199
EXPR (154)
    on left: 202 203, on right: 81 120 149 158 159 171 172 173 175
    203 212
SHORT_EXPR (155)
    on left: 204, on right: 64
INIT_STATE (156)
    on left: 205 206 207, on right: 158 184 214
CONDITION (157)
    on left: 208 209 210 211, on right: 183 184 195 214 215
POST_STATE (158)
    on left: 212 213, on right: 214
FOR (159)
    on left: 214 215 216 217 218, on right: 58
RANGE_BLANK (160)
    on left: 219 220, on right: 216
EXPR_START (161)
    on left: 221, on right: 149 150
EXPR_END (162)
    on left: 222, on right: 149 150
ARRAY_INDEX (163)
    on left: 223 224 225 226, on right: 227 228
MULTI_AR (164)
    on left: 227 228 229, on right: 32 83 90 228 241 242
PLENTY (165)
    on left: 230 231 232, on right: 72 83 88 231 232 235 237
PLENTY_BODY (166)
    on left: 233 234 235 236 237, on right: 230 231 232
ENUM (167)
    on left: 238 239 240, on right: 233 234 236 239 240 250
MAKE (168)
    on left: 241 242, on right: 84
SLICE (169)
    on left: 243 244 245, on right: 68 85
MAPS (170)
    on left: 246 247 248, on right: 76 86
STRUCT (171)
    on left: 249, on right: 7 67
STRUCT_BODY (172)
    on left: 250 251 252 253 254 255 256 257, on right: 254 255 256
    257 259 260
STRUCT_START (173)
    on left: 258 259 260 261, on right: 249
STRUCT_END (174)
    on left: 262 263, on right: 258 259 260
FIELD (175)
    on left: 264, on right: 270 275
FIELD_BODY (176)
    on left: 265 266, on right: 247 264
FIELD_START (177)
    on left: 267 268, on right: 265 268
FIELD_FULFILL (178)
    on left: 269 270 271, on right: 268
FIELD_END (179)
    on left: 272, on right: 265
FIELD_END_FULFILL (180)
    on left: 273 274, on right: 272
ST_EMBEDDED (181)
    on left: 275, on right: 87
END_SYMBOLS (182)
    on left: 276 277 278, on right: 1 2 3 56 57 133 134 135 136 164
    177 187 188 232 234 235 236 237 240 254 255 256 257 260 281 282
    287 288 289
INTERFACE (183)
    on left: 279, on right: 8 30 31 71
INT_START (184)
    on left: 280 281 282 283, on right: 279
INT_BODY (185)
    on left: 284 285 286 287 288 289, on right: 280 281 282 287 288
    289
INT_END (186)
    on left: 290 291, on right: 280 281 282 283


State 0

    0 $accept: . START $end

    t_func       shift, and go to state 1
    t_import     shift, and go to state 2
    t_interface  shift, and go to state 3
    t_var        shift, and go to state 4
    t_package    shift, and go to state 5
    t_type       shift, and go to state 6
    t_id         shift, and go to state 7
    t_pointer    shift, and go to state 8

    START            go to state 9
    GLOBAL           go to state 10
    PACKAGE          go to state 11
    IMPORT           go to state 12
    FUNC             go to state 13
    STRUCT_METHOD    go to state 14
    VAR              go to state 15
    IDS              go to state 16
    FULFILL_FOR_IDS  go to state 17
    FUNC_CALL        go to state 18
    METHOD           go to state 19
    METHOD_FULFILL   go to state 20
    STRUCT           go to state 21
    STRUCT_START     go to state 22
    INTERFACE        go to state 23
    INT_START        go to state 24


State 1

   16 FUNC: t_func . t_id t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART
   47 STRUCT_METHOD: t_func . t_open_paren t_id TYPE_AND_STRUCT t_close_paren STRUCT_METHOD_SECOND_PART

    t_id          shift, and go to state 25
    t_open_paren  shift, and go to state 26


State 2

   12 IMPORT: t_import . t_string
   13       | t_import . t_open_paren PARAM_IMPORT t_close_paren
   14       | t_import . t_open_paren t_enter PARAM_IMPORT t_close_paren
   15       | t_import . t_id t_string

    t_id          shift, and go to state 27
    t_string      shift, and go to state 28
    t_open_paren  shift, and go to state 29


State 3

  283 INT_START: t_interface . t_open_br INT_END

    t_open_br  shift, and go to state 30


State 4

   74 VAR: t_var . IDS TYPE_AND_STRUCT
   75    | t_var . IDS ASSIGNMENT VALUES
   76    | t_var . t_id MAPS

    t_id       shift, and go to state 31
    t_pointer  shift, and go to state 8

    IDS              go to state 32
    FULFILL_FOR_IDS  go to state 17
    FUNC_CALL        go to state 18
    METHOD           go to state 19
    METHOD_FULFILL   go to state 20


State 5

   11 PACKAGE: t_package . t_id

    t_id  shift, and go to state 33


State 6

  258 STRUCT_START: t_type . t_id t_struct_const t_open_br STRUCT_END
  259             | t_type . t_id t_struct_const t_open_br STRUCT_BODY STRUCT_END
  260             | t_type . t_id t_struct_const t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END
  261             | t_type . t_id t_struct_const t_enter
  280 INT_START: t_type . t_id t_interface t_open_br INT_BODY INT_END
  281          | t_type . t_id t_interface t_open_br END_SYMBOLS INT_BODY INT_END
  282          | t_type . t_id t_interface t_enter t_open_br END_SYMBOLS INT_BODY INT_END

    t_id  shift, and go to state 34


State 7

   89 FULFILL_FOR_IDS: t_id .
   90                | t_id . MULTI_AR
   93                | t_id . POINTER
  113 FUNC_CALL: t_id . PARAM
  129 METHOD_FULFILL: t_id .

    t_open_paren  shift, and go to state 35
    t_open_sq     shift, and go to state 36
    t_pointer     shift, and go to state 37

    t_dot     reduce using rule 129 (METHOD_FULFILL)
    $default  reduce using rule 89 (FULFILL_FOR_IDS)

    PARAM        go to state 38
    PARAM_START  go to state 39
    POINTER      go to state 40
    ARRAY_INDEX  go to state 41
    MULTI_AR     go to state 42


State 8

   92 FULFILL_FOR_IDS: t_pointer .

    $default  reduce using rule 92 (FULFILL_FOR_IDS)


State 9

    0 $accept: START . $end
    1 START: START . GLOBAL END_SYMBOLS
    3      | START . END_SYMBOLS

    $end         shift, and go to state 43
    t_func       shift, and go to state 1
    t_import     shift, and go to state 2
    t_interface  shift, and go to state 3
    t_var        shift, and go to state 4
    t_package    shift, and go to state 5
    t_type       shift, and go to state 6
    t_id         shift, and go to state 7
    t_semicolon  shift, and go to state 44
    t_enter      shift, and go to state 45
    t_eof        shift, and go to state 46
    t_pointer    shift, and go to state 8

    GLOBAL           go to state 47
    PACKAGE          go to state 11
    IMPORT           go to state 12
    FUNC             go to state 13
    STRUCT_METHOD    go to state 14
    VAR              go to state 15
    IDS              go to state 16
    FULFILL_FOR_IDS  go to state 17
    FUNC_CALL        go to state 18
    METHOD           go to state 19
    METHOD_FULFILL   go to state 20
    STRUCT           go to state 21
    STRUCT_START     go to state 22
    END_SYMBOLS      go to state 48
    INTERFACE        go to state 23
    INT_START        go to state 24


State 10

    2 START: GLOBAL . END_SYMBOLS

    t_semicolon  shift, and go to state 44
    t_enter      shift, and go to state 45
    t_eof        shift, and go to state 46

    END_SYMBOLS  go to state 49


State 11

    4 GLOBAL: PACKAGE .

    $default  reduce using rule 4 (GLOBAL)


State 12

    5 GLOBAL: IMPORT .

    $default  reduce using rule 5 (GLOBAL)


State 13

    6 GLOBAL: FUNC .

    $default  reduce using rule 6 (GLOBAL)


State 14

   10 GLOBAL: STRUCT_METHOD .

    $default  reduce using rule 10 (GLOBAL)


State 15

    9 GLOBAL: VAR .

    $default  reduce using rule 9 (GLOBAL)


State 16

   73 VAR: IDS . SHORT_ASSIGN VALUES

    t_short_dec  shift, and go to state 50

    SHORT_ASSIGN  go to state 51


State 17

   77 IDS: FULFILL_FOR_IDS .
   78    | FULFILL_FOR_IDS . MANY_IDS

    t_comma  shift, and go to state 52

    $default  reduce using rule 77 (IDS)

    MANY_IDS        go to state 53
    MANY_IDS_START  go to state 54


State 18

  130 METHOD_FULFILL: FUNC_CALL .

    $default  reduce using rule 130 (METHOD_FULFILL)


State 19

   91 FULFILL_FOR_IDS: METHOD .
  128 METHOD: METHOD . t_dot METHOD_FULFILL

    t_dot  shift, and go to state 55

    $default  reduce using rule 91 (FULFILL_FOR_IDS)


State 20

  127 METHOD: METHOD_FULFILL . t_dot METHOD_FULFILL

    t_dot  shift, and go to state 56


State 21

    7 GLOBAL: STRUCT .

    $default  reduce using rule 7 (GLOBAL)


State 22

  249 STRUCT: STRUCT_START .

    $default  reduce using rule 249 (STRUCT)


State 23

    8 GLOBAL: INTERFACE .

    $default  reduce using rule 8 (GLOBAL)


State 24

  279 INTERFACE: INT_START .

    $default  reduce using rule 279 (INTERFACE)


State 25

   16 FUNC: t_func t_id . t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART

    t_open_paren  shift, and go to state 57


State 26

   47 STRUCT_METHOD: t_func t_open_paren . t_id TYPE_AND_STRUCT t_close_paren STRUCT_METHOD_SECOND_PART

    t_id  shift, and go to state 58


State 27

   15 IMPORT: t_import t_id . t_string

    t_string  shift, and go to state 59


State 28

   12 IMPORT: t_import t_string .

    $default  reduce using rule 12 (IMPORT)


State 29

   13 IMPORT: t_import t_open_paren . PARAM_IMPORT t_close_paren
   14       | t_import t_open_paren . t_enter PARAM_IMPORT t_close_paren

    t_id      shift, and go to state 60
    t_string  shift, and go to state 61
    t_enter   shift, and go to state 62

    PARAM_IMPORT  go to state 63


State 30

  283 INT_START: t_interface t_open_br . INT_END

    t_close_br  shift, and go to state 64
    t_enter     shift, and go to state 65

    INT_END  go to state 66


State 31

   76 VAR: t_var t_id . MAPS
   89 FULFILL_FOR_IDS: t_id .
   90                | t_id . MULTI_AR
   93                | t_id . POINTER
  113 FUNC_CALL: t_id . PARAM
  129 METHOD_FULFILL: t_id .

    t_map         shift, and go to state 67
    t_open_paren  shift, and go to state 35
    t_open_sq     shift, and go to state 36
    t_pointer     shift, and go to state 37

    t_dot     reduce using rule 129 (METHOD_FULFILL)
    $default  reduce using rule 89 (FULFILL_FOR_IDS)

    PARAM        go to state 38
    PARAM_START  go to state 39
    POINTER      go to state 40
    ARRAY_INDEX  go to state 41
    MULTI_AR     go to state 42
    MAPS         go to state 68


State 32

   74 VAR: t_var IDS . TYPE_AND_STRUCT
   75    | t_var IDS . ASSIGNMENT VALUES

    t_vtype        shift, and go to state 69
    t_param_const  shift, and go to state 70
    t_id           shift, and go to state 71
    t_equality     shift, and go to state 72

    TYPE_AND_STRUCT  go to state 73
    ASSIGNMENT       go to state 74


State 33

   11 PACKAGE: t_package t_id .

    $default  reduce using rule 11 (PACKAGE)


State 34

  258 STRUCT_START: t_type t_id . t_struct_const t_open_br STRUCT_END
  259             | t_type t_id . t_struct_const t_open_br STRUCT_BODY STRUCT_END
  260             | t_type t_id . t_struct_const t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END
  261             | t_type t_id . t_struct_const t_enter
  280 INT_START: t_type t_id . t_interface t_open_br INT_BODY INT_END
  281          | t_type t_id . t_interface t_open_br END_SYMBOLS INT_BODY INT_END
  282          | t_type t_id . t_interface t_enter t_open_br END_SYMBOLS INT_BODY INT_END

    t_interface     shift, and go to state 75
    t_struct_const  shift, and go to state 76


State 35

  115 PARAM: t_open_paren . t_close_paren
  116 PARAM_START: t_open_paren .

    t_close_paren  shift, and go to state 77

    $default  reduce using rule 116 (PARAM_START)


State 36

  223 ARRAY_INDEX: t_open_sq . t_int_const t_close_sq
  224            | t_open_sq . t_id t_close_sq
  225            | t_open_sq . t_string t_close_sq
  226            | t_open_sq . t_close_sq
  229 MULTI_AR: t_open_sq . t_param_const t_close_sq

    t_param_const  shift, and go to state 78
    t_int_const    shift, and go to state 79
    t_id           shift, and go to state 80
    t_string       shift, and go to state 81
    t_close_sq     shift, and go to state 82


State 37

  131 POINTER: t_pointer .

    $default  reduce using rule 131 (POINTER)


State 38

  113 FUNC_CALL: t_id PARAM .

    $default  reduce using rule 113 (FUNC_CALL)


State 39

  114 PARAM: PARAM_START . PARAM_END
  117 PARAM_START: PARAM_START . PARAM_FULFILL

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 86
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_enter             shift, and go to state 94
    t_pointer           shift, and go to state 95
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC         go to state 99
    FULFILL_FOR_IDS    go to state 100
    FUNC_CALL          go to state 101
    PARAM_END          go to state 102
    PARAM_END_FULFILL  go to state 103
    PARAM_FULFILL      go to state 104
    SHIFT              go to state 105
    SHIFT_AC           go to state 106
    METHOD             go to state 107
    METHOD_FULFILL     go to state 20
    AMPERSAND          go to state 108
    VALUE              go to state 109
    EXPR               go to state 110
    EXPR_START         go to state 111


State 40

   93 FULFILL_FOR_IDS: t_id POINTER .

    $default  reduce using rule 93 (FULFILL_FOR_IDS)


State 41

  227 MULTI_AR: ARRAY_INDEX .
  228         | ARRAY_INDEX . MULTI_AR

    t_open_sq  shift, and go to state 36

    $default  reduce using rule 227 (MULTI_AR)

    ARRAY_INDEX  go to state 41
    MULTI_AR     go to state 112


State 42

   90 FULFILL_FOR_IDS: t_id MULTI_AR .

    $default  reduce using rule 90 (FULFILL_FOR_IDS)


State 43

    0 $accept: START $end .

    $default  accept


State 44

  276 END_SYMBOLS: t_semicolon .

    $default  reduce using rule 276 (END_SYMBOLS)


State 45

  277 END_SYMBOLS: t_enter .

    $default  reduce using rule 277 (END_SYMBOLS)


State 46

  278 END_SYMBOLS: t_eof .

    $default  reduce using rule 278 (END_SYMBOLS)


State 47

    1 START: START GLOBAL . END_SYMBOLS

    t_semicolon  shift, and go to state 44
    t_enter      shift, and go to state 45
    t_eof        shift, and go to state 46

    END_SYMBOLS  go to state 113


State 48

    3 START: START END_SYMBOLS .

    $default  reduce using rule 3 (START)


State 49

    2 START: GLOBAL END_SYMBOLS .

    $default  reduce using rule 2 (START)


State 50

  100 SHORT_ASSIGN: t_short_dec .

    $default  reduce using rule 100 (SHORT_ASSIGN)


State 51

   73 VAR: IDS SHORT_ASSIGN . VALUES

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 114
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_open_sq           shift, and go to state 36
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_make              shift, and go to state 115
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC       go to state 99
    VALUES           go to state 117
    FULFILL_FOR_VAL  go to state 118
    BOOLEAN          go to state 119
    FUNC_CALL        go to state 101
    SHIFT            go to state 105
    SHIFT_AC         go to state 106
    METHOD           go to state 120
    METHOD_FULFILL   go to state 20
    AMPERSAND        go to state 108
    VALUE            go to state 121
    EXPR             go to state 122
    EXPR_START       go to state 111
    ARRAY_INDEX      go to state 41
    MULTI_AR         go to state 123
    MAKE             go to state 124
    SLICE            go to state 125
    FIELD            go to state 126
    ST_EMBEDDED      go to state 127


State 52

  102 MANY_IDS_START: t_comma .

    $default  reduce using rule 102 (MANY_IDS_START)


State 53

   78 IDS: FULFILL_FOR_IDS MANY_IDS .

    $default  reduce using rule 78 (IDS)


State 54

  101 MANY_IDS: MANY_IDS_START . MANY_IDS_END
  103 MANY_IDS_START: MANY_IDS_START . MANY_IDS_FULFILL

    t_id       shift, and go to state 7
    t_enter    shift, and go to state 128
    t_pointer  shift, and go to state 8

    FULFILL_FOR_IDS   go to state 129
    MANY_IDS_FULFILL  go to state 130
    MANY_IDS_END      go to state 131
    FUNC_CALL         go to state 18
    METHOD            go to state 19
    METHOD_FULFILL    go to state 20


State 55

  128 METHOD: METHOD t_dot . METHOD_FULFILL

    t_id  shift, and go to state 132

    FUNC_CALL       go to state 18
    METHOD_FULFILL  go to state 133


State 56

  127 METHOD: METHOD_FULFILL t_dot . METHOD_FULFILL

    t_id  shift, and go to state 132

    FUNC_CALL       go to state 18
    METHOD_FULFILL  go to state 134


State 57

   16 FUNC: t_func t_id t_open_paren . FUNC_PARAM t_close_paren FUNC_SECOND_PART

    t_id  shift, and go to state 135

    $default  reduce using rule 33 (FUNC_PARAM_FULFILL)

    FUNC_PARAM          go to state 136
    FUNC_PARAM_FULFILL  go to state 137


State 58

   47 STRUCT_METHOD: t_func t_open_paren t_id . TYPE_AND_STRUCT t_close_paren STRUCT_METHOD_SECOND_PART

    t_vtype        shift, and go to state 69
    t_param_const  shift, and go to state 70
    t_id           shift, and go to state 71

    TYPE_AND_STRUCT  go to state 138


State 59

   15 IMPORT: t_import t_id t_string .

    $default  reduce using rule 15 (IMPORT)


State 60

  134 PARAM_IMPORT: t_id . t_string END_SYMBOLS

    t_string  shift, and go to state 139


State 61

  133 PARAM_IMPORT: t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 44
    t_enter      shift, and go to state 45
    t_eof        shift, and go to state 46

    END_SYMBOLS  go to state 140


State 62

   14 IMPORT: t_import t_open_paren t_enter . PARAM_IMPORT t_close_paren

    t_id      shift, and go to state 60
    t_string  shift, and go to state 61

    PARAM_IMPORT  go to state 141


State 63

   13 IMPORT: t_import t_open_paren PARAM_IMPORT . t_close_paren
  135 PARAM_IMPORT: PARAM_IMPORT . t_string END_SYMBOLS
  136             | PARAM_IMPORT . t_id t_string END_SYMBOLS

    t_id           shift, and go to state 142
    t_string       shift, and go to state 143
    t_close_paren  shift, and go to state 144


State 64

  290 INT_END: t_close_br .

    $default  reduce using rule 290 (INT_END)


State 65

  291 INT_END: t_enter . t_close_br

    t_close_br  shift, and go to state 145


State 66

  283 INT_START: t_interface t_open_br INT_END .

    $default  reduce using rule 283 (INT_START)


State 67

  246 MAPS: t_map . t_open_sq t_vtype t_close_sq t_vtype
  247     | t_map . t_open_sq t_vtype t_close_sq t_vtype FIELD_BODY
  248     | t_map . t_open_sq t_vtype t_close_sq t_id

    t_open_sq  shift, and go to state 146


State 68

   76 VAR: t_var t_id MAPS .

    $default  reduce using rule 76 (VAR)


State 69

   44 TYPE_AND_STRUCT: t_vtype .

    $default  reduce using rule 44 (TYPE_AND_STRUCT)


State 70

   45 TYPE_AND_STRUCT: t_param_const . t_vtype

    t_vtype  shift, and go to state 147


State 71

   46 TYPE_AND_STRUCT: t_id .

    $default  reduce using rule 46 (TYPE_AND_STRUCT)


State 72

   98 ASSIGNMENT: t_equality .

    $default  reduce using rule 98 (ASSIGNMENT)


State 73

   74 VAR: t_var IDS TYPE_AND_STRUCT .
   97 ASSIGNMENT: TYPE_AND_STRUCT . t_equality

    t_equality  shift, and go to state 148

    $default  reduce using rule 74 (VAR)


State 74

   75 VAR: t_var IDS ASSIGNMENT . VALUES
   99 ASSIGNMENT: ASSIGNMENT . t_enter

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 114
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_open_sq           shift, and go to state 36
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_make              shift, and go to state 115
    t_enter             shift, and go to state 149
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC       go to state 99
    VALUES           go to state 150
    FULFILL_FOR_VAL  go to state 118
    BOOLEAN          go to state 119
    FUNC_CALL        go to state 101
    SHIFT            go to state 105
    SHIFT_AC         go to state 106
    METHOD           go to state 120
    METHOD_FULFILL   go to state 20
    AMPERSAND        go to state 108
    VALUE            go to state 121
    EXPR             go to state 122
    EXPR_START       go to state 111
    ARRAY_INDEX      go to state 41
    MULTI_AR         go to state 123
    MAKE             go to state 124
    SLICE            go to state 125
    FIELD            go to state 126
    ST_EMBEDDED      go to state 127


State 75

  280 INT_START: t_type t_id t_interface . t_open_br INT_BODY INT_END
  281          | t_type t_id t_interface . t_open_br END_SYMBOLS INT_BODY INT_END
  282          | t_type t_id t_interface . t_enter t_open_br END_SYMBOLS INT_BODY INT_END

    t_open_br  shift, and go to state 151
    t_enter    shift, and go to state 152


State 76

  258 STRUCT_START: t_type t_id t_struct_const . t_open_br STRUCT_END
  259             | t_type t_id t_struct_const . t_open_br STRUCT_BODY STRUCT_END
  260             | t_type t_id t_struct_const . t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END
  261             | t_type t_id t_struct_const . t_enter

    t_open_br  shift, and go to state 153
    t_enter    shift, and go to state 154


State 77

  115 PARAM: t_open_paren t_close_paren .

    $default  reduce using rule 115 (PARAM)


State 78

  229 MULTI_AR: t_open_sq t_param_const . t_close_sq

    t_close_sq  shift, and go to state 155


State 79

  223 ARRAY_INDEX: t_open_sq t_int_const . t_close_sq

    t_close_sq  shift, and go to state 156


State 80

  224 ARRAY_INDEX: t_open_sq t_id . t_close_sq

    t_close_sq  shift, and go to state 157


State 81

  225 ARRAY_INDEX: t_open_sq t_string . t_close_sq

    t_close_sq  shift, and go to state 158


State 82

  226 ARRAY_INDEX: t_open_sq t_close_sq .

    $default  reduce using rule 226 (ARRAY_INDEX)


State 83

   51 SHORT_FUNC: t_func . t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART

    t_open_paren  shift, and go to state 159


State 84

  126 SHIFT_AC: t_int_const .
  137 VALUE: t_int_const .

    t_shift_const  reduce using rule 126 (SHIFT_AC)
    $default       reduce using rule 137 (VALUE)


State 85

  138 VALUE: t_float_const .

    $default  reduce using rule 138 (VALUE)


State 86

   89 FULFILL_FOR_IDS: t_id .
   90                | t_id . MULTI_AR
   93                | t_id . POINTER
  113 FUNC_CALL: t_id . PARAM
  125 SHIFT_AC: t_id .
  129 METHOD_FULFILL: t_id .
  139 VALUE: t_id .

    t_open_paren  shift, and go to state 35
    t_open_sq     shift, and go to state 36
    t_pointer     shift, and go to state 37

    t_shift_const  reduce using rule 125 (SHIFT_AC)
    t_short_dec    reduce using rule 89 (FULFILL_FOR_IDS)
    t_comma        reduce using rule 89 (FULFILL_FOR_IDS)
    t_close_paren  reduce using rule 89 (FULFILL_FOR_IDS)
    t_dot          reduce using rule 129 (METHOD_FULFILL)
    $default       reduce using rule 139 (VALUE)

    PARAM        go to state 38
    PARAM_START  go to state 39
    POINTER      go to state 40
    ARRAY_INDEX  go to state 41
    MULTI_AR     go to state 42


State 87

  141 VALUE: t_string .

    $default  reduce using rule 141 (VALUE)


State 88

  140 VALUE: t_sign . t_id

    t_id  shift, and go to state 160


State 89

  221 EXPR_START: t_open_paren .

    $default  reduce using rule 221 (EXPR_START)


State 90

  142 VALUE: t_rune .

    $default  reduce using rule 142 (VALUE)


State 91

  143 VALUE: t_blank_identifier .

    $default  reduce using rule 143 (VALUE)


State 92

  154 VALUE: t_true .

    $default  reduce using rule 154 (VALUE)


State 93

  155 VALUE: t_false .

    $default  reduce using rule 155 (VALUE)


State 94

  121 PARAM_END_FULFILL: t_enter .
  123 PARAM_FULFILL: t_enter .

    t_close_paren  reduce using rule 121 (PARAM_END_FULFILL)
    $default       reduce using rule 123 (PARAM_FULFILL)


State 95

   92 FULFILL_FOR_IDS: t_pointer .
  147 VALUE: t_pointer .

    t_short_dec    reduce using rule 92 (FULFILL_FOR_IDS)
    t_comma        reduce using rule 92 (FULFILL_FOR_IDS)
    t_close_paren  reduce using rule 92 (FULFILL_FOR_IDS)
    $default       reduce using rule 147 (VALUE)


State 96

  132 AMPERSAND: t_ampersand .

    $default  reduce using rule 132 (AMPERSAND)


State 97

  152 VALUE: t_hex .

    $default  reduce using rule 152 (VALUE)


State 98

  153 VALUE: t_ten_pow .

    $default  reduce using rule 153 (VALUE)


State 99

  144 VALUE: SHORT_FUNC . PARAM

    t_open_paren  shift, and go to state 35

    PARAM        go to state 161
    PARAM_START  go to state 39


State 100

  119 PARAM_END_FULFILL: FULFILL_FOR_IDS .
  122 PARAM_FULFILL: FULFILL_FOR_IDS . t_comma

    t_comma  shift, and go to state 162

    $default  reduce using rule 119 (PARAM_END_FULFILL)


State 101

  130 METHOD_FULFILL: FUNC_CALL .
  145 VALUE: FUNC_CALL .

    t_dot     reduce using rule 130 (METHOD_FULFILL)
    $default  reduce using rule 145 (VALUE)


State 102

  114 PARAM: PARAM_START PARAM_END .

    $default  reduce using rule 114 (PARAM)


State 103

  118 PARAM_END: PARAM_END_FULFILL . t_close_paren

    t_close_paren  shift, and go to state 163


State 104

  117 PARAM_START: PARAM_START PARAM_FULFILL .

    $default  reduce using rule 117 (PARAM_START)


State 105

  146 VALUE: SHIFT .

    $default  reduce using rule 146 (VALUE)


State 106

  124 SHIFT: SHIFT_AC . t_shift_const SHIFT_AC

    t_shift_const  shift, and go to state 164


State 107

   91 FULFILL_FOR_IDS: METHOD .
  128 METHOD: METHOD . t_dot METHOD_FULFILL
  148 VALUE: METHOD .

    t_dot  shift, and go to state 55

    t_short_dec    reduce using rule 91 (FULFILL_FOR_IDS)
    t_comma        reduce using rule 91 (FULFILL_FOR_IDS)
    t_close_paren  reduce using rule 91 (FULFILL_FOR_IDS)
    $default       reduce using rule 148 (VALUE)


State 108

  151 VALUE: AMPERSAND .

    $default  reduce using rule 151 (VALUE)


State 109

  202 EXPR: VALUE .

    $default  reduce using rule 202 (EXPR)


State 110

  120 PARAM_END_FULFILL: EXPR . t_param_const
  203 EXPR: EXPR . t_sign VALUE

    t_param_const  shift, and go to state 165
    t_sign         shift, and go to state 166


State 111

  149 VALUE: EXPR_START . EXPR EXPR_END
  150      | EXPR_START . BOOLEAN EXPR_END

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 167
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC      go to state 99
    BOOLEAN         go to state 168
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 121
    EXPR            go to state 169
    EXPR_START      go to state 111


State 112

  228 MULTI_AR: ARRAY_INDEX MULTI_AR .

    $default  reduce using rule 228 (MULTI_AR)


State 113

    1 START: START GLOBAL END_SYMBOLS .

    $default  reduce using rule 1 (START)


State 114

   88 FULFILL_FOR_VAL: t_id . PLENTY
  113 FUNC_CALL: t_id . PARAM
  125 SHIFT_AC: t_id .
  129 METHOD_FULFILL: t_id .
  139 VALUE: t_id .
  243 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  244      | t_id . t_open_sq t_colon VALUE t_close_sq
  245      | t_id . t_open_sq VALUE t_colon t_close_sq
  264 FIELD: t_id . FIELD_BODY

    t_open_br     shift, and go to state 170
    t_open_paren  shift, and go to state 35
    t_open_sq     shift, and go to state 171

    t_shift_const  reduce using rule 125 (SHIFT_AC)
    t_dot          reduce using rule 129 (METHOD_FULFILL)
    $default       reduce using rule 139 (VALUE)

    PARAM        go to state 38
    PARAM_START  go to state 39
    PLENTY       go to state 172
    PLENTY_BODY  go to state 173
    FIELD_BODY   go to state 174
    FIELD_START  go to state 175


State 115

   86 FULFILL_FOR_VAL: t_make . t_open_paren MAPS t_close_paren
  241 MAKE: t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  242     | t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma VALUE t_close_paren

    t_open_paren  shift, and go to state 176


State 116

  147 VALUE: t_pointer .

    $default  reduce using rule 147 (VALUE)


State 117

   73 VAR: IDS SHORT_ASSIGN VALUES .

    $default  reduce using rule 73 (VAR)


State 118

   79 VALUES: FULFILL_FOR_VAL .
   80       | FULFILL_FOR_VAL . MANY_VALUES

    t_comma  shift, and go to state 177

    $default  reduce using rule 79 (VALUES)

    MANY_VALUES        go to state 178
    MANY_VALUES_START  go to state 179


State 119

   82 FULFILL_FOR_VAL: BOOLEAN .
   95 BOOLEAN: BOOLEAN . t_bool VALUE

    t_bool  shift, and go to state 180

    $default  reduce using rule 82 (FULFILL_FOR_VAL)


State 120

  128 METHOD: METHOD . t_dot METHOD_FULFILL
  148 VALUE: METHOD .

    t_dot  shift, and go to state 55

    $default  reduce using rule 148 (VALUE)


State 121

   94 BOOLEAN: VALUE . t_bool VALUE
  202 EXPR: VALUE .

    t_bool  shift, and go to state 181

    $default  reduce using rule 202 (EXPR)


State 122

   81 FULFILL_FOR_VAL: EXPR .
  203 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 166

    $default  reduce using rule 81 (FULFILL_FOR_VAL)


State 123

   83 FULFILL_FOR_VAL: MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 182


State 124

   84 FULFILL_FOR_VAL: MAKE .

    $default  reduce using rule 84 (FULFILL_FOR_VAL)


State 125

   85 FULFILL_FOR_VAL: SLICE .

    $default  reduce using rule 85 (FULFILL_FOR_VAL)


State 126

  275 ST_EMBEDDED: FIELD .

    $default  reduce using rule 275 (ST_EMBEDDED)


State 127

   87 FULFILL_FOR_VAL: ST_EMBEDDED .

    $default  reduce using rule 87 (FULFILL_FOR_VAL)


State 128

  105 MANY_IDS_FULFILL: t_enter .

    $default  reduce using rule 105 (MANY_IDS_FULFILL)


State 129

  104 MANY_IDS_FULFILL: FULFILL_FOR_IDS . t_comma
  106 MANY_IDS_END: FULFILL_FOR_IDS .

    t_comma  shift, and go to state 183

    $default  reduce using rule 106 (MANY_IDS_END)


State 130

  103 MANY_IDS_START: MANY_IDS_START MANY_IDS_FULFILL .

    $default  reduce using rule 103 (MANY_IDS_START)


State 131

  101 MANY_IDS: MANY_IDS_START MANY_IDS_END .

    $default  reduce using rule 101 (MANY_IDS)


State 132

  113 FUNC_CALL: t_id . PARAM
  129 METHOD_FULFILL: t_id .

    t_open_paren  shift, and go to state 35

    $default  reduce using rule 129 (METHOD_FULFILL)

    PARAM        go to state 38
    PARAM_START  go to state 39


State 133

  128 METHOD: METHOD t_dot METHOD_FULFILL .

    $default  reduce using rule 128 (METHOD)


State 134

  127 METHOD: METHOD_FULFILL t_dot METHOD_FULFILL .

    $default  reduce using rule 127 (METHOD)


State 135

   28 FUNC_PARAM_FULFILL: t_id . TYPE_AND_STRUCT
   29                   | t_id .
   30                   | t_id . INTERFACE
   31                   | t_id . t_param_const INTERFACE
   32                   | t_id . MULTI_AR t_vtype

    t_vtype        shift, and go to state 69
    t_interface    shift, and go to state 3
    t_type         shift, and go to state 184
    t_param_const  shift, and go to state 185
    t_id           shift, and go to state 71
    t_open_sq      shift, and go to state 36

    $default  reduce using rule 29 (FUNC_PARAM_FULFILL)

    TYPE_AND_STRUCT  go to state 186
    ARRAY_INDEX      go to state 41
    MULTI_AR         go to state 187
    INTERFACE        go to state 188
    INT_START        go to state 24


State 136

   16 FUNC: t_func t_id t_open_paren FUNC_PARAM . t_close_paren FUNC_SECOND_PART
   18 FUNC_PARAM: FUNC_PARAM . t_comma FUNC_PARAM_FULFILL

    t_comma        shift, and go to state 189
    t_close_paren  shift, and go to state 190


State 137

   17 FUNC_PARAM: FUNC_PARAM_FULFILL .

    $default  reduce using rule 17 (FUNC_PARAM)


State 138

   47 STRUCT_METHOD: t_func t_open_paren t_id TYPE_AND_STRUCT . t_close_paren STRUCT_METHOD_SECOND_PART

    t_close_paren  shift, and go to state 191


State 139

  134 PARAM_IMPORT: t_id t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 44
    t_enter      shift, and go to state 45
    t_eof        shift, and go to state 46

    END_SYMBOLS  go to state 192


State 140

  133 PARAM_IMPORT: t_string END_SYMBOLS .

    $default  reduce using rule 133 (PARAM_IMPORT)


State 141

   14 IMPORT: t_import t_open_paren t_enter PARAM_IMPORT . t_close_paren
  135 PARAM_IMPORT: PARAM_IMPORT . t_string END_SYMBOLS
  136             | PARAM_IMPORT . t_id t_string END_SYMBOLS

    t_id           shift, and go to state 142
    t_string       shift, and go to state 143
    t_close_paren  shift, and go to state 193


State 142

  136 PARAM_IMPORT: PARAM_IMPORT t_id . t_string END_SYMBOLS

    t_string  shift, and go to state 194


State 143

  135 PARAM_IMPORT: PARAM_IMPORT t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 44
    t_enter      shift, and go to state 45
    t_eof        shift, and go to state 46

    END_SYMBOLS  go to state 195


State 144

   13 IMPORT: t_import t_open_paren PARAM_IMPORT t_close_paren .

    $default  reduce using rule 13 (IMPORT)


State 145

  291 INT_END: t_enter t_close_br .

    $default  reduce using rule 291 (INT_END)


State 146

  246 MAPS: t_map t_open_sq . t_vtype t_close_sq t_vtype
  247     | t_map t_open_sq . t_vtype t_close_sq t_vtype FIELD_BODY
  248     | t_map t_open_sq . t_vtype t_close_sq t_id

    t_vtype  shift, and go to state 196


State 147

   45 TYPE_AND_STRUCT: t_param_const t_vtype .

    $default  reduce using rule 45 (TYPE_AND_STRUCT)


State 148

   97 ASSIGNMENT: TYPE_AND_STRUCT t_equality .

    $default  reduce using rule 97 (ASSIGNMENT)


State 149

   99 ASSIGNMENT: ASSIGNMENT t_enter .

    $default  reduce using rule 99 (ASSIGNMENT)


State 150

   75 VAR: t_var IDS ASSIGNMENT VALUES .

    $default  reduce using rule 75 (VAR)


State 151

  280 INT_START: t_type t_id t_interface t_open_br . INT_BODY INT_END
  281          | t_type t_id t_interface t_open_br . END_SYMBOLS INT_BODY INT_END

    t_id         shift, and go to state 197
    t_semicolon  shift, and go to state 44
    t_enter      shift, and go to state 45
    t_eof        shift, and go to state 46

    FUNC_CALL    go to state 198
    END_SYMBOLS  go to state 199
    INT_BODY     go to state 200


State 152

  282 INT_START: t_type t_id t_interface t_enter . t_open_br END_SYMBOLS INT_BODY INT_END

    t_open_br  shift, and go to state 201


State 153

  258 STRUCT_START: t_type t_id t_struct_const t_open_br . STRUCT_END
  259             | t_type t_id t_struct_const t_open_br . STRUCT_BODY STRUCT_END
  260             | t_type t_id t_struct_const t_open_br . END_SYMBOLS STRUCT_BODY STRUCT_END

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 202
    t_string            shift, and go to state 87
    t_close_br          shift, and go to state 203
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_semicolon         shift, and go to state 44
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_enter             shift, and go to state 204
    t_eof               shift, and go to state 46
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC      go to state 99
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 205
    EXPR_START      go to state 111
    ENUM            go to state 206
    STRUCT_BODY     go to state 207
    STRUCT_END      go to state 208
    END_SYMBOLS     go to state 209


State 154

  261 STRUCT_START: t_type t_id t_struct_const t_enter .

    $default  reduce using rule 261 (STRUCT_START)


State 155

  229 MULTI_AR: t_open_sq t_param_const t_close_sq .

    $default  reduce using rule 229 (MULTI_AR)


State 156

  223 ARRAY_INDEX: t_open_sq t_int_const t_close_sq .

    $default  reduce using rule 223 (ARRAY_INDEX)


State 157

  224 ARRAY_INDEX: t_open_sq t_id t_close_sq .

    $default  reduce using rule 224 (ARRAY_INDEX)


State 158

  225 ARRAY_INDEX: t_open_sq t_string t_close_sq .

    $default  reduce using rule 225 (ARRAY_INDEX)


State 159

   51 SHORT_FUNC: t_func t_open_paren . FUNC_PARAM t_close_paren FUNC_SECOND_PART

    t_id  shift, and go to state 135

    $default  reduce using rule 33 (FUNC_PARAM_FULFILL)

    FUNC_PARAM          go to state 210
    FUNC_PARAM_FULFILL  go to state 137


State 160

  140 VALUE: t_sign t_id .

    $default  reduce using rule 140 (VALUE)


State 161

  144 VALUE: SHORT_FUNC PARAM .

    $default  reduce using rule 144 (VALUE)


State 162

  122 PARAM_FULFILL: FULFILL_FOR_IDS t_comma .

    $default  reduce using rule 122 (PARAM_FULFILL)


State 163

  118 PARAM_END: PARAM_END_FULFILL t_close_paren .

    $default  reduce using rule 118 (PARAM_END)


State 164

  124 SHIFT: SHIFT_AC t_shift_const . SHIFT_AC

    t_int_const  shift, and go to state 211
    t_id         shift, and go to state 212

    SHIFT_AC  go to state 213


State 165

  120 PARAM_END_FULFILL: EXPR t_param_const .

    $default  reduce using rule 120 (PARAM_END_FULFILL)


State 166

  203 EXPR: EXPR t_sign . VALUE

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 167
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC      go to state 99
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 214
    EXPR_START      go to state 111


State 167

  113 FUNC_CALL: t_id . PARAM
  125 SHIFT_AC: t_id .
  129 METHOD_FULFILL: t_id .
  139 VALUE: t_id .

    t_open_paren  shift, and go to state 35

    t_shift_const  reduce using rule 125 (SHIFT_AC)
    t_dot          reduce using rule 129 (METHOD_FULFILL)
    $default       reduce using rule 139 (VALUE)

    PARAM        go to state 38
    PARAM_START  go to state 39


State 168

   95 BOOLEAN: BOOLEAN . t_bool VALUE
  150 VALUE: EXPR_START BOOLEAN . EXPR_END

    t_close_paren  shift, and go to state 215
    t_bool         shift, and go to state 180

    EXPR_END  go to state 216


State 169

  149 VALUE: EXPR_START EXPR . EXPR_END
  203 EXPR: EXPR . t_sign VALUE

    t_sign         shift, and go to state 166
    t_close_paren  shift, and go to state 215

    EXPR_END  go to state 217


State 170

  233 PLENTY_BODY: t_open_br . ENUM t_close_br
  234            | t_open_br . END_SYMBOLS ENUM t_close_br
  235            | t_open_br . END_SYMBOLS PLENTY t_close_br
  236            | t_open_br . END_SYMBOLS ENUM t_comma END_SYMBOLS t_close_br
  237            | t_open_br . END_SYMBOLS PLENTY t_comma END_SYMBOLS t_close_br
  266 FIELD_BODY: t_open_br . t_close_br
  267 FIELD_START: t_open_br .

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 167
    t_string            shift, and go to state 87
    t_close_br          shift, and go to state 218
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_semicolon         shift, and go to state 44
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_enter             shift, and go to state 45
    t_eof               shift, and go to state 46
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    t_func              [reduce using rule 267 (FIELD_START)]
    t_int_const         [reduce using rule 267 (FIELD_START)]
    t_float_const       [reduce using rule 267 (FIELD_START)]
    t_id                [reduce using rule 267 (FIELD_START)]
    t_string            [reduce using rule 267 (FIELD_START)]
    t_sign              [reduce using rule 267 (FIELD_START)]
    t_open_paren        [reduce using rule 267 (FIELD_START)]
    t_rune              [reduce using rule 267 (FIELD_START)]
    t_blank_identifier  [reduce using rule 267 (FIELD_START)]
    t_true              [reduce using rule 267 (FIELD_START)]
    t_false             [reduce using rule 267 (FIELD_START)]
    t_enter             [reduce using rule 267 (FIELD_START)]
    t_pointer           [reduce using rule 267 (FIELD_START)]
    t_ampersand         [reduce using rule 267 (FIELD_START)]
    t_hex               [reduce using rule 267 (FIELD_START)]
    t_ten_pow           [reduce using rule 267 (FIELD_START)]

    SHORT_FUNC      go to state 99
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 205
    EXPR_START      go to state 111
    ENUM            go to state 219
    END_SYMBOLS     go to state 220


State 171

  243 SLICE: t_id t_open_sq . VALUE t_colon VALUE t_close_sq
  244      | t_id t_open_sq . t_colon VALUE t_close_sq
  245      | t_id t_open_sq . VALUE t_colon t_close_sq

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 167
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_colon             shift, and go to state 221
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC      go to state 99
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 222
    EXPR_START      go to state 111


State 172

   88 FULFILL_FOR_VAL: t_id PLENTY .

    $default  reduce using rule 88 (FULFILL_FOR_VAL)


State 173

  230 PLENTY: PLENTY_BODY .
  231       | PLENTY_BODY . t_comma PLENTY
  232       | PLENTY_BODY . t_comma END_SYMBOLS PLENTY

    t_comma  shift, and go to state 223

    t_comma   [reduce using rule 230 (PLENTY)]
    $default  reduce using rule 230 (PLENTY)


State 174

  264 FIELD: t_id FIELD_BODY .

    $default  reduce using rule 264 (FIELD)


State 175

  265 FIELD_BODY: FIELD_START . FIELD_END
  268 FIELD_START: FIELD_START . FIELD_FULFILL

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 167
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_enter             shift, and go to state 224
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC         go to state 99
    FUNC_CALL          go to state 101
    SHIFT              go to state 105
    SHIFT_AC           go to state 106
    METHOD             go to state 120
    METHOD_FULFILL     go to state 20
    AMPERSAND          go to state 108
    VALUE              go to state 225
    EXPR_START         go to state 111
    FIELD_FULFILL      go to state 226
    FIELD_END          go to state 227
    FIELD_END_FULFILL  go to state 228


State 176

   86 FULFILL_FOR_VAL: t_make t_open_paren . MAPS t_close_paren
  241 MAKE: t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_close_paren
  242     | t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_comma VALUE t_close_paren

    t_map      shift, and go to state 67
    t_open_sq  shift, and go to state 36

    ARRAY_INDEX  go to state 41
    MULTI_AR     go to state 229
    MAPS         go to state 230


State 177

  108 MANY_VALUES_START: t_comma .

    $default  reduce using rule 108 (MANY_VALUES_START)


State 178

   80 VALUES: FULFILL_FOR_VAL MANY_VALUES .

    $default  reduce using rule 80 (VALUES)


State 179

  107 MANY_VALUES: MANY_VALUES_START . MANY_VALUES_END
  109 MANY_VALUES_START: MANY_VALUES_START . FULFILL_FOR_VALS

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 114
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_open_sq           shift, and go to state 36
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_make              shift, and go to state 115
    t_enter             shift, and go to state 231
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC        go to state 99
    FULFILL_FOR_VAL   go to state 232
    BOOLEAN           go to state 119
    FULFILL_FOR_VALS  go to state 233
    MANY_VALUES_END   go to state 234
    FUNC_CALL         go to state 101
    SHIFT             go to state 105
    SHIFT_AC          go to state 106
    METHOD            go to state 120
    METHOD_FULFILL    go to state 20
    AMPERSAND         go to state 108
    VALUE             go to state 121
    EXPR              go to state 122
    EXPR_START        go to state 111
    ARRAY_INDEX       go to state 41
    MULTI_AR          go to state 123
    MAKE              go to state 124
    SLICE             go to state 125
    FIELD             go to state 126
    ST_EMBEDDED       go to state 127


State 180

   95 BOOLEAN: BOOLEAN t_bool . VALUE

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 167
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC      go to state 99
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 235
    EXPR_START      go to state 111


State 181

   94 BOOLEAN: VALUE t_bool . VALUE

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 167
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC      go to state 99
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 236
    EXPR_START      go to state 111


State 182

   83 FULFILL_FOR_VAL: MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 237

    PLENTY       go to state 238
    PLENTY_BODY  go to state 173


State 183

  104 MANY_IDS_FULFILL: FULFILL_FOR_IDS t_comma .

    $default  reduce using rule 104 (MANY_IDS_FULFILL)


State 184

  280 INT_START: t_type . t_id t_interface t_open_br INT_BODY INT_END
  281          | t_type . t_id t_interface t_open_br END_SYMBOLS INT_BODY INT_END
  282          | t_type . t_id t_interface t_enter t_open_br END_SYMBOLS INT_BODY INT_END

    t_id  shift, and go to state 239


State 185

   31 FUNC_PARAM_FULFILL: t_id t_param_const . INTERFACE
   45 TYPE_AND_STRUCT: t_param_const . t_vtype

    t_vtype      shift, and go to state 147
    t_interface  shift, and go to state 3
    t_type       shift, and go to state 184

    INTERFACE  go to state 240
    INT_START  go to state 24


State 186

   28 FUNC_PARAM_FULFILL: t_id TYPE_AND_STRUCT .

    $default  reduce using rule 28 (FUNC_PARAM_FULFILL)


State 187

   32 FUNC_PARAM_FULFILL: t_id MULTI_AR . t_vtype

    t_vtype  shift, and go to state 241


State 188

   30 FUNC_PARAM_FULFILL: t_id INTERFACE .

    $default  reduce using rule 30 (FUNC_PARAM_FULFILL)


State 189

   18 FUNC_PARAM: FUNC_PARAM t_comma . FUNC_PARAM_FULFILL

    t_id  shift, and go to state 135

    $default  reduce using rule 33 (FUNC_PARAM_FULFILL)

    FUNC_PARAM_FULFILL  go to state 242


State 190

   16 FUNC: t_func t_id t_open_paren FUNC_PARAM t_close_paren . FUNC_SECOND_PART

    t_vtype        shift, and go to state 69
    t_func         shift, and go to state 243
    t_param_const  shift, and go to state 70
    t_id           shift, and go to state 71
    t_open_br      shift, and go to state 244
    t_open_paren   shift, and go to state 245

    FUNC_SECOND_PART           go to state 246
    FUNC_PARAM_SECOND          go to state 247
    FUNC_PARAM_SECOND_START    go to state 248
    FUNC_RETURN_VALUE          go to state 249
    FUNC_RETURN_VALUE_FULFILL  go to state 250
    TYPE_AND_STRUCT            go to state 251
    BODY                       go to state 252
    BODY_START                 go to state 253


State 191

   47 STRUCT_METHOD: t_func t_open_paren t_id TYPE_AND_STRUCT t_close_paren . STRUCT_METHOD_SECOND_PART

    t_id  shift, and go to state 254

    STRUCT_METHOD_SECOND_PART  go to state 255


State 192

  134 PARAM_IMPORT: t_id t_string END_SYMBOLS .

    $default  reduce using rule 134 (PARAM_IMPORT)


State 193

   14 IMPORT: t_import t_open_paren t_enter PARAM_IMPORT t_close_paren .

    $default  reduce using rule 14 (IMPORT)


State 194

  136 PARAM_IMPORT: PARAM_IMPORT t_id t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 44
    t_enter      shift, and go to state 45
    t_eof        shift, and go to state 46

    END_SYMBOLS  go to state 256


State 195

  135 PARAM_IMPORT: PARAM_IMPORT t_string END_SYMBOLS .

    $default  reduce using rule 135 (PARAM_IMPORT)


State 196

  246 MAPS: t_map t_open_sq t_vtype . t_close_sq t_vtype
  247     | t_map t_open_sq t_vtype . t_close_sq t_vtype FIELD_BODY
  248     | t_map t_open_sq t_vtype . t_close_sq t_id

    t_close_sq  shift, and go to state 257


State 197

  113 FUNC_CALL: t_id . PARAM
  286 INT_BODY: t_id . t_open_paren t_vtype t_close_paren

    t_open_paren  shift, and go to state 258

    PARAM        go to state 38
    PARAM_START  go to state 39


State 198

  284 INT_BODY: FUNC_CALL .
  285         | FUNC_CALL . t_vtype

    t_vtype  shift, and go to state 259

    $default  reduce using rule 284 (INT_BODY)


State 199

  281 INT_START: t_type t_id t_interface t_open_br END_SYMBOLS . INT_BODY INT_END

    t_id  shift, and go to state 197

    FUNC_CALL  go to state 198
    INT_BODY   go to state 260


State 200

  280 INT_START: t_type t_id t_interface t_open_br INT_BODY . INT_END
  287 INT_BODY: INT_BODY . END_SYMBOLS t_id t_open_paren t_vtype t_close_paren
  288         | INT_BODY . END_SYMBOLS FUNC_CALL t_vtype
  289         | INT_BODY . END_SYMBOLS FUNC_CALL

    t_close_br   shift, and go to state 64
    t_semicolon  shift, and go to state 44
    t_enter      shift, and go to state 261
    t_eof        shift, and go to state 46

    END_SYMBOLS  go to state 262
    INT_END      go to state 263


State 201

  282 INT_START: t_type t_id t_interface t_enter t_open_br . END_SYMBOLS INT_BODY INT_END

    t_semicolon  shift, and go to state 44
    t_enter      shift, and go to state 45
    t_eof        shift, and go to state 46

    END_SYMBOLS  go to state 264


State 202

  113 FUNC_CALL: t_id . PARAM
  125 SHIFT_AC: t_id .
  129 METHOD_FULFILL: t_id .
  139 VALUE: t_id .
  251 STRUCT_BODY: t_id . t_id
  252            | t_id .
  253            | t_id . METHOD

    t_id          shift, and go to state 265
    t_open_paren  shift, and go to state 35

    t_vtype        reduce using rule 139 (VALUE)
    t_shift_const  reduce using rule 125 (SHIFT_AC)
    t_comma        reduce using rule 139 (VALUE)
    t_dot          reduce using rule 129 (METHOD_FULFILL)
    $default       reduce using rule 252 (STRUCT_BODY)

    FUNC_CALL       go to state 18
    PARAM           go to state 38
    PARAM_START     go to state 39
    METHOD          go to state 266
    METHOD_FULFILL  go to state 20


State 203

  262 STRUCT_END: t_close_br .

    $default  reduce using rule 262 (STRUCT_END)


State 204

  263 STRUCT_END: t_enter . t_close_br
  277 END_SYMBOLS: t_enter .

    t_close_br  shift, and go to state 267

    $default  reduce using rule 277 (END_SYMBOLS)


State 205

  238 ENUM: VALUE .

    $default  reduce using rule 238 (ENUM)


State 206

  239 ENUM: ENUM . t_comma VALUE
  240     | ENUM . t_comma END_SYMBOLS VALUE
  250 STRUCT_BODY: ENUM . t_vtype

    t_vtype  shift, and go to state 268
    t_comma  shift, and go to state 269


State 207

  254 STRUCT_BODY: STRUCT_BODY . END_SYMBOLS t_id METHOD
  255            | STRUCT_BODY . END_SYMBOLS t_id t_vtype
  256            | STRUCT_BODY . END_SYMBOLS t_id t_id
  257            | STRUCT_BODY . END_SYMBOLS t_id
  259 STRUCT_START: t_type t_id t_struct_const t_open_br STRUCT_BODY . STRUCT_END

    t_close_br   shift, and go to state 203
    t_semicolon  shift, and go to state 44
    t_enter      shift, and go to state 204
    t_eof        shift, and go to state 46

    STRUCT_END   go to state 270
    END_SYMBOLS  go to state 271


State 208

  258 STRUCT_START: t_type t_id t_struct_const t_open_br STRUCT_END .

    $default  reduce using rule 258 (STRUCT_START)


State 209

  260 STRUCT_START: t_type t_id t_struct_const t_open_br END_SYMBOLS . STRUCT_BODY STRUCT_END

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 202
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC      go to state 99
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 205
    EXPR_START      go to state 111
    ENUM            go to state 206
    STRUCT_BODY     go to state 272


State 210

   18 FUNC_PARAM: FUNC_PARAM . t_comma FUNC_PARAM_FULFILL
   51 SHORT_FUNC: t_func t_open_paren FUNC_PARAM . t_close_paren FUNC_SECOND_PART

    t_comma        shift, and go to state 189
    t_close_paren  shift, and go to state 273


State 211

  126 SHIFT_AC: t_int_const .

    $default  reduce using rule 126 (SHIFT_AC)


State 212

  125 SHIFT_AC: t_id .

    $default  reduce using rule 125 (SHIFT_AC)


State 213

  124 SHIFT: SHIFT_AC t_shift_const SHIFT_AC .

    $default  reduce using rule 124 (SHIFT)


State 214

  203 EXPR: EXPR t_sign VALUE .

    $default  reduce using rule 203 (EXPR)


State 215

  222 EXPR_END: t_close_paren .

    $default  reduce using rule 222 (EXPR_END)


State 216

  150 VALUE: EXPR_START BOOLEAN EXPR_END .

    $default  reduce using rule 150 (VALUE)


State 217

  149 VALUE: EXPR_START EXPR EXPR_END .

    $default  reduce using rule 149 (VALUE)


State 218

  266 FIELD_BODY: t_open_br t_close_br .

    $default  reduce using rule 266 (FIELD_BODY)


State 219

  233 PLENTY_BODY: t_open_br ENUM . t_close_br
  239 ENUM: ENUM . t_comma VALUE
  240     | ENUM . t_comma END_SYMBOLS VALUE

    t_close_br  shift, and go to state 274
    t_comma     shift, and go to state 269


State 220

  234 PLENTY_BODY: t_open_br END_SYMBOLS . ENUM t_close_br
  235            | t_open_br END_SYMBOLS . PLENTY t_close_br
  236            | t_open_br END_SYMBOLS . ENUM t_comma END_SYMBOLS t_close_br
  237            | t_open_br END_SYMBOLS . PLENTY t_comma END_SYMBOLS t_close_br

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 167
    t_string            shift, and go to state 87
    t_open_br           shift, and go to state 237
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC      go to state 99
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 205
    EXPR_START      go to state 111
    PLENTY          go to state 275
    PLENTY_BODY     go to state 173
    ENUM            go to state 276


State 221

  244 SLICE: t_id t_open_sq t_colon . VALUE t_close_sq

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 167
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC      go to state 99
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 277
    EXPR_START      go to state 111


State 222

  243 SLICE: t_id t_open_sq VALUE . t_colon VALUE t_close_sq
  245      | t_id t_open_sq VALUE . t_colon t_close_sq

    t_colon  shift, and go to state 278


State 223

  231 PLENTY: PLENTY_BODY t_comma . PLENTY
  232       | PLENTY_BODY t_comma . END_SYMBOLS PLENTY

    t_open_br    shift, and go to state 237
    t_semicolon  shift, and go to state 44
    t_enter      shift, and go to state 45
    t_eof        shift, and go to state 46

    PLENTY       go to state 279
    PLENTY_BODY  go to state 173
    END_SYMBOLS  go to state 280


State 224

  271 FIELD_FULFILL: t_enter .
  274 FIELD_END_FULFILL: t_enter .

    t_close_br  reduce using rule 274 (FIELD_END_FULFILL)
    $default    reduce using rule 271 (FIELD_FULFILL)


State 225

  269 FIELD_FULFILL: VALUE . t_colon VALUE t_comma
  270              | VALUE . t_colon FIELD t_comma
  273 FIELD_END_FULFILL: VALUE . t_colon VALUE

    t_colon  shift, and go to state 281


State 226

  268 FIELD_START: FIELD_START FIELD_FULFILL .

    $default  reduce using rule 268 (FIELD_START)


State 227

  265 FIELD_BODY: FIELD_START FIELD_END .

    $default  reduce using rule 265 (FIELD_BODY)


State 228

  272 FIELD_END: FIELD_END_FULFILL . t_close_br

    t_close_br  shift, and go to state 282


State 229

  241 MAKE: t_make t_open_paren MULTI_AR . t_vtype t_comma VALUE t_close_paren
  242     | t_make t_open_paren MULTI_AR . t_vtype t_comma VALUE t_comma VALUE t_close_paren

    t_vtype  shift, and go to state 283


State 230

   86 FULFILL_FOR_VAL: t_make t_open_paren MAPS . t_close_paren

    t_close_paren  shift, and go to state 284


State 231

  111 FULFILL_FOR_VALS: t_enter .

    $default  reduce using rule 111 (FULFILL_FOR_VALS)


State 232

  110 FULFILL_FOR_VALS: FULFILL_FOR_VAL . t_comma
  112 MANY_VALUES_END: FULFILL_FOR_VAL .

    t_comma  shift, and go to state 285

    $default  reduce using rule 112 (MANY_VALUES_END)


State 233

  109 MANY_VALUES_START: MANY_VALUES_START FULFILL_FOR_VALS .

    $default  reduce using rule 109 (MANY_VALUES_START)


State 234

  107 MANY_VALUES: MANY_VALUES_START MANY_VALUES_END .

    $default  reduce using rule 107 (MANY_VALUES)


State 235

   95 BOOLEAN: BOOLEAN t_bool VALUE .

    $default  reduce using rule 95 (BOOLEAN)


State 236

   94 BOOLEAN: VALUE t_bool VALUE .

    $default  reduce using rule 94 (BOOLEAN)


State 237

  233 PLENTY_BODY: t_open_br . ENUM t_close_br
  234            | t_open_br . END_SYMBOLS ENUM t_close_br
  235            | t_open_br . END_SYMBOLS PLENTY t_close_br
  236            | t_open_br . END_SYMBOLS ENUM t_comma END_SYMBOLS t_close_br
  237            | t_open_br . END_SYMBOLS PLENTY t_comma END_SYMBOLS t_close_br

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 167
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_semicolon         shift, and go to state 44
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_enter             shift, and go to state 45
    t_eof               shift, and go to state 46
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC      go to state 99
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 205
    EXPR_START      go to state 111
    ENUM            go to state 219
    END_SYMBOLS     go to state 220


State 238

   83 FULFILL_FOR_VAL: MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 83 (FULFILL_FOR_VAL)


State 239

  280 INT_START: t_type t_id . t_interface t_open_br INT_BODY INT_END
  281          | t_type t_id . t_interface t_open_br END_SYMBOLS INT_BODY INT_END
  282          | t_type t_id . t_interface t_enter t_open_br END_SYMBOLS INT_BODY INT_END

    t_interface  shift, and go to state 75


State 240

   31 FUNC_PARAM_FULFILL: t_id t_param_const INTERFACE .

    $default  reduce using rule 31 (FUNC_PARAM_FULFILL)


State 241

   32 FUNC_PARAM_FULFILL: t_id MULTI_AR t_vtype .

    $default  reduce using rule 32 (FUNC_PARAM_FULFILL)


State 242

   18 FUNC_PARAM: FUNC_PARAM t_comma FUNC_PARAM_FULFILL .

    $default  reduce using rule 18 (FUNC_PARAM)


State 243

   42 FUNC_RETURN_VALUE_FULFILL: t_func . t_open_paren TYPE_AND_STRUCT t_close_paren
   43                          | t_func . t_open_paren t_close_paren

    t_open_paren  shift, and go to state 286


State 244

   55 BODY_START: t_open_br .

    $default  reduce using rule 55 (BODY_START)


State 245

   24 FUNC_PARAM_SECOND: t_open_paren . t_close_paren
   25 FUNC_PARAM_SECOND_START: t_open_paren .

    t_close_paren  shift, and go to state 287

    $default  reduce using rule 25 (FUNC_PARAM_SECOND_START)


State 246

   16 FUNC: t_func t_id t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART .

    $default  reduce using rule 16 (FUNC)


State 247

   22 FUNC_SECOND_PART: FUNC_PARAM_SECOND . BODY

    t_open_br  shift, and go to state 244

    BODY        go to state 288
    BODY_START  go to state 253


State 248

   23 FUNC_PARAM_SECOND: FUNC_PARAM_SECOND_START . FUNC_PARAM_SECOND_END
   26 FUNC_PARAM_SECOND_START: FUNC_PARAM_SECOND_START . FUNC_PARAM_FULFILL_SECOND

    t_vtype        shift, and go to state 69
    t_param_const  shift, and go to state 70
    t_id           shift, and go to state 289
    t_enter        shift, and go to state 290

    FUNC_PARAM_SECOND_END          go to state 291
    FUNC_PARAM_FULFILL_SECOND      go to state 292
    FUNC_PARAM_FULFILL_SECOND_END  go to state 293
    TYPE_AND_STRUCT                go to state 294


State 249

   21 FUNC_SECOND_PART: FUNC_RETURN_VALUE . TYPE_AND_STRUCT BODY
   41 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE . FUNC_RETURN_VALUE_FULFILL

    t_vtype        shift, and go to state 69
    t_func         shift, and go to state 243
    t_param_const  shift, and go to state 70
    t_id           shift, and go to state 71

    FUNC_RETURN_VALUE_FULFILL  go to state 295
    TYPE_AND_STRUCT            go to state 296


State 250

   40 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE_FULFILL .

    $default  reduce using rule 40 (FUNC_RETURN_VALUE)


State 251

   20 FUNC_SECOND_PART: TYPE_AND_STRUCT . BODY

    t_open_br  shift, and go to state 244

    BODY        go to state 297
    BODY_START  go to state 253


State 252

   19 FUNC_SECOND_PART: BODY .

    $default  reduce using rule 19 (FUNC_SECOND_PART)


State 253

   52 BODY: BODY_START . BODY_END
   56 BODY_START: BODY_START . BODY_FILLING END_SYMBOLS
   57           | BODY_START . END_SYMBOLS

    t_defer      shift, and go to state 298
    t_interface  shift, and go to state 3
    t_var        shift, and go to state 4
    t_if         shift, and go to state 299
    t_switch     shift, and go to state 300
    t_type       shift, and go to state 6
    t_for        shift, and go to state 301
    t_goto       shift, and go to state 302
    t_return     shift, and go to state 303
    t_id         shift, and go to state 304
    t_open_br    shift, and go to state 237
    t_close_br   shift, and go to state 305
    t_semicolon  shift, and go to state 44
    t_enter      shift, and go to state 45
    t_eof        shift, and go to state 46
    t_pointer    shift, and go to state 8

    BODY_END         go to state 306
    BODY_FILLING     go to state 307
    VAR              go to state 308
    IDS              go to state 16
    FULFILL_FOR_IDS  go to state 17
    DEFER            go to state 309
    FUNC_CALL        go to state 310
    METHOD           go to state 311
    METHOD_FULFILL   go to state 20
    GOTO             go to state 312
    LABEL            go to state 313
    SWITCH           go to state 314
    IF               go to state 315
    IF_FIRST         go to state 316
    RETURN           go to state 317
    SHORT_EXPR       go to state 318
    FOR              go to state 319
    PLENTY           go to state 320
    PLENTY_BODY      go to state 173
    SLICE            go to state 321
    STRUCT           go to state 322
    STRUCT_START     go to state 22
    END_SYMBOLS      go to state 323
    INTERFACE        go to state 324
    INT_START        go to state 24


State 254

   48 STRUCT_METHOD_SECOND_PART: t_id . FUNC_PARAM_SECOND BODY
   49                          | t_id . FUNC_PARAM_SECOND TYPE_AND_STRUCT BODY
   50                          | t_id . FUNC_PARAM_SECOND FUNC_PARAM_SECOND BODY

    t_open_paren  shift, and go to state 245

    FUNC_PARAM_SECOND        go to state 325
    FUNC_PARAM_SECOND_START  go to state 248


State 255

   47 STRUCT_METHOD: t_func t_open_paren t_id TYPE_AND_STRUCT t_close_paren STRUCT_METHOD_SECOND_PART .

    $default  reduce using rule 47 (STRUCT_METHOD)


State 256

  136 PARAM_IMPORT: PARAM_IMPORT t_id t_string END_SYMBOLS .

    $default  reduce using rule 136 (PARAM_IMPORT)


State 257

  246 MAPS: t_map t_open_sq t_vtype t_close_sq . t_vtype
  247     | t_map t_open_sq t_vtype t_close_sq . t_vtype FIELD_BODY
  248     | t_map t_open_sq t_vtype t_close_sq . t_id

    t_vtype  shift, and go to state 326
    t_id     shift, and go to state 327


State 258

  115 PARAM: t_open_paren . t_close_paren
  116 PARAM_START: t_open_paren .
  286 INT_BODY: t_id t_open_paren . t_vtype t_close_paren

    t_vtype        shift, and go to state 328
    t_close_paren  shift, and go to state 77

    $default  reduce using rule 116 (PARAM_START)


State 259

  285 INT_BODY: FUNC_CALL t_vtype .

    $default  reduce using rule 285 (INT_BODY)


State 260

  281 INT_START: t_type t_id t_interface t_open_br END_SYMBOLS INT_BODY . INT_END
  287 INT_BODY: INT_BODY . END_SYMBOLS t_id t_open_paren t_vtype t_close_paren
  288         | INT_BODY . END_SYMBOLS FUNC_CALL t_vtype
  289         | INT_BODY . END_SYMBOLS FUNC_CALL

    t_close_br   shift, and go to state 64
    t_semicolon  shift, and go to state 44
    t_enter      shift, and go to state 261
    t_eof        shift, and go to state 46

    END_SYMBOLS  go to state 262
    INT_END      go to state 329


State 261

  277 END_SYMBOLS: t_enter .
  291 INT_END: t_enter . t_close_br

    t_close_br  shift, and go to state 145

    $default  reduce using rule 277 (END_SYMBOLS)


State 262

  287 INT_BODY: INT_BODY END_SYMBOLS . t_id t_open_paren t_vtype t_close_paren
  288         | INT_BODY END_SYMBOLS . FUNC_CALL t_vtype
  289         | INT_BODY END_SYMBOLS . FUNC_CALL

    t_id  shift, and go to state 330

    FUNC_CALL  go to state 331


State 263

  280 INT_START: t_type t_id t_interface t_open_br INT_BODY INT_END .

    $default  reduce using rule 280 (INT_START)


State 264

  282 INT_START: t_type t_id t_interface t_enter t_open_br END_SYMBOLS . INT_BODY INT_END

    t_id  shift, and go to state 197

    FUNC_CALL  go to state 198
    INT_BODY   go to state 332


State 265

  113 FUNC_CALL: t_id . PARAM
  129 METHOD_FULFILL: t_id .
  251 STRUCT_BODY: t_id t_id .

    t_open_paren  shift, and go to state 35

    t_dot     reduce using rule 129 (METHOD_FULFILL)
    $default  reduce using rule 251 (STRUCT_BODY)

    PARAM        go to state 38
    PARAM_START  go to state 39


State 266

  128 METHOD: METHOD . t_dot METHOD_FULFILL
  253 STRUCT_BODY: t_id METHOD .

    t_dot  shift, and go to state 55

    $default  reduce using rule 253 (STRUCT_BODY)


State 267

  263 STRUCT_END: t_enter t_close_br .

    $default  reduce using rule 263 (STRUCT_END)


State 268

  250 STRUCT_BODY: ENUM t_vtype .

    $default  reduce using rule 250 (STRUCT_BODY)


State 269

  239 ENUM: ENUM t_comma . VALUE
  240     | ENUM t_comma . END_SYMBOLS VALUE

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 167
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_semicolon         shift, and go to state 44
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_enter             shift, and go to state 45
    t_eof               shift, and go to state 46
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC      go to state 99
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 333
    EXPR_START      go to state 111
    END_SYMBOLS     go to state 334


State 270

  259 STRUCT_START: t_type t_id t_struct_const t_open_br STRUCT_BODY STRUCT_END .

    $default  reduce using rule 259 (STRUCT_START)


State 271

  254 STRUCT_BODY: STRUCT_BODY END_SYMBOLS . t_id METHOD
  255            | STRUCT_BODY END_SYMBOLS . t_id t_vtype
  256            | STRUCT_BODY END_SYMBOLS . t_id t_id
  257            | STRUCT_BODY END_SYMBOLS . t_id

    t_id  shift, and go to state 335


State 272

  254 STRUCT_BODY: STRUCT_BODY . END_SYMBOLS t_id METHOD
  255            | STRUCT_BODY . END_SYMBOLS t_id t_vtype
  256            | STRUCT_BODY . END_SYMBOLS t_id t_id
  257            | STRUCT_BODY . END_SYMBOLS t_id
  260 STRUCT_START: t_type t_id t_struct_const t_open_br END_SYMBOLS STRUCT_BODY . STRUCT_END

    t_close_br   shift, and go to state 203
    t_semicolon  shift, and go to state 44
    t_enter      shift, and go to state 204
    t_eof        shift, and go to state 46

    STRUCT_END   go to state 336
    END_SYMBOLS  go to state 271


State 273

   51 SHORT_FUNC: t_func t_open_paren FUNC_PARAM t_close_paren . FUNC_SECOND_PART

    t_vtype        shift, and go to state 69
    t_func         shift, and go to state 243
    t_param_const  shift, and go to state 70
    t_id           shift, and go to state 71
    t_open_br      shift, and go to state 244
    t_open_paren   shift, and go to state 245

    FUNC_SECOND_PART           go to state 337
    FUNC_PARAM_SECOND          go to state 247
    FUNC_PARAM_SECOND_START    go to state 248
    FUNC_RETURN_VALUE          go to state 249
    FUNC_RETURN_VALUE_FULFILL  go to state 250
    TYPE_AND_STRUCT            go to state 251
    BODY                       go to state 252
    BODY_START                 go to state 253


State 274

  233 PLENTY_BODY: t_open_br ENUM t_close_br .

    $default  reduce using rule 233 (PLENTY_BODY)


State 275

  235 PLENTY_BODY: t_open_br END_SYMBOLS PLENTY . t_close_br
  237            | t_open_br END_SYMBOLS PLENTY . t_comma END_SYMBOLS t_close_br

    t_close_br  shift, and go to state 338
    t_comma     shift, and go to state 339


State 276

  234 PLENTY_BODY: t_open_br END_SYMBOLS ENUM . t_close_br
  236            | t_open_br END_SYMBOLS ENUM . t_comma END_SYMBOLS t_close_br
  239 ENUM: ENUM . t_comma VALUE
  240     | ENUM . t_comma END_SYMBOLS VALUE

    t_close_br  shift, and go to state 340
    t_comma     shift, and go to state 341


State 277

  244 SLICE: t_id t_open_sq t_colon VALUE . t_close_sq

    t_close_sq  shift, and go to state 342


State 278

  243 SLICE: t_id t_open_sq VALUE t_colon . VALUE t_close_sq
  245      | t_id t_open_sq VALUE t_colon . t_close_sq

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 167
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_close_sq          shift, and go to state 343
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC      go to state 99
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 344
    EXPR_START      go to state 111


State 279

  231 PLENTY: PLENTY_BODY t_comma PLENTY .

    $default  reduce using rule 231 (PLENTY)


State 280

  232 PLENTY: PLENTY_BODY t_comma END_SYMBOLS . PLENTY

    t_open_br  shift, and go to state 237

    PLENTY       go to state 345
    PLENTY_BODY  go to state 173


State 281

  269 FIELD_FULFILL: VALUE t_colon . VALUE t_comma
  270              | VALUE t_colon . FIELD t_comma
  273 FIELD_END_FULFILL: VALUE t_colon . VALUE

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 346
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC      go to state 99
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 347
    EXPR_START      go to state 111
    FIELD           go to state 348


State 282

  272 FIELD_END: FIELD_END_FULFILL t_close_br .

    $default  reduce using rule 272 (FIELD_END)


State 283

  241 MAKE: t_make t_open_paren MULTI_AR t_vtype . t_comma VALUE t_close_paren
  242     | t_make t_open_paren MULTI_AR t_vtype . t_comma VALUE t_comma VALUE t_close_paren

    t_comma  shift, and go to state 349


State 284

   86 FULFILL_FOR_VAL: t_make t_open_paren MAPS t_close_paren .

    $default  reduce using rule 86 (FULFILL_FOR_VAL)


State 285

  110 FULFILL_FOR_VALS: FULFILL_FOR_VAL t_comma .

    $default  reduce using rule 110 (FULFILL_FOR_VALS)


State 286

   42 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren . TYPE_AND_STRUCT t_close_paren
   43                          | t_func t_open_paren . t_close_paren

    t_vtype        shift, and go to state 69
    t_param_const  shift, and go to state 70
    t_id           shift, and go to state 71
    t_close_paren  shift, and go to state 350

    TYPE_AND_STRUCT  go to state 351


State 287

   24 FUNC_PARAM_SECOND: t_open_paren t_close_paren .

    $default  reduce using rule 24 (FUNC_PARAM_SECOND)


State 288

   22 FUNC_SECOND_PART: FUNC_PARAM_SECOND BODY .

    $default  reduce using rule 22 (FUNC_SECOND_PART)


State 289

   34 FUNC_PARAM_FULFILL_SECOND: t_id . TYPE_AND_STRUCT t_comma
   37 FUNC_PARAM_FULFILL_SECOND_END: t_id . TYPE_AND_STRUCT
   46 TYPE_AND_STRUCT: t_id .

    t_vtype        shift, and go to state 69
    t_param_const  shift, and go to state 70
    t_id           shift, and go to state 71

    $default  reduce using rule 46 (TYPE_AND_STRUCT)

    TYPE_AND_STRUCT  go to state 352


State 290

   36 FUNC_PARAM_FULFILL_SECOND: t_enter .
   39 FUNC_PARAM_FULFILL_SECOND_END: t_enter .

    t_close_paren  reduce using rule 39 (FUNC_PARAM_FULFILL_SECOND_END)
    $default       reduce using rule 36 (FUNC_PARAM_FULFILL_SECOND)


State 291

   23 FUNC_PARAM_SECOND: FUNC_PARAM_SECOND_START FUNC_PARAM_SECOND_END .

    $default  reduce using rule 23 (FUNC_PARAM_SECOND)


State 292

   26 FUNC_PARAM_SECOND_START: FUNC_PARAM_SECOND_START FUNC_PARAM_FULFILL_SECOND .

    $default  reduce using rule 26 (FUNC_PARAM_SECOND_START)


State 293

   27 FUNC_PARAM_SECOND_END: FUNC_PARAM_FULFILL_SECOND_END . t_close_paren

    t_close_paren  shift, and go to state 353


State 294

   35 FUNC_PARAM_FULFILL_SECOND: TYPE_AND_STRUCT . t_comma
   38 FUNC_PARAM_FULFILL_SECOND_END: TYPE_AND_STRUCT .

    t_comma  shift, and go to state 354

    $default  reduce using rule 38 (FUNC_PARAM_FULFILL_SECOND_END)


State 295

   41 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE FUNC_RETURN_VALUE_FULFILL .

    $default  reduce using rule 41 (FUNC_RETURN_VALUE)


State 296

   21 FUNC_SECOND_PART: FUNC_RETURN_VALUE TYPE_AND_STRUCT . BODY

    t_open_br  shift, and go to state 244

    BODY        go to state 355
    BODY_START  go to state 253


State 297

   20 FUNC_SECOND_PART: TYPE_AND_STRUCT BODY .

    $default  reduce using rule 20 (FUNC_SECOND_PART)


State 298

   96 DEFER: t_defer . FUNC_CALL

    t_id  shift, and go to state 356

    FUNC_CALL  go to state 357


State 299

  183 IF_FIRST: t_if . CONDITION BODY_FOR_LOOP
  184         | t_if . INIT_STATE t_semicolon CONDITION BODY_FOR_LOOP

    t_func              shift, and go to state 83
    t_var               shift, and go to state 4
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 86
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 358
    t_false             shift, and go to state 359
    t_pointer           shift, and go to state 95
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    t_open_br  reduce using rule 211 (CONDITION)
    $default   reduce using rule 207 (INIT_STATE)

    SHORT_FUNC       go to state 99
    VAR              go to state 360
    IDS              go to state 16
    FULFILL_FOR_IDS  go to state 17
    BOOLEAN          go to state 361
    FUNC_CALL        go to state 362
    SHIFT            go to state 105
    SHIFT_AC         go to state 106
    METHOD           go to state 107
    METHOD_FULFILL   go to state 20
    AMPERSAND        go to state 108
    VALUE            go to state 363
    INIT_STATE       go to state 364
    CONDITION        go to state 365
    EXPR_START       go to state 111


State 300

  158 SWITCH: t_switch . INIT_STATE t_semicolon EXPR SWITCH_BODY
  159       | t_switch . EXPR SWITCH_BODY
  160       | t_switch . SWITCH_BODY

    t_func              shift, and go to state 83
    t_var               shift, and go to state 4
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 86
    t_string            shift, and go to state 87
    t_open_br           shift, and go to state 366
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_pointer           shift, and go to state 95
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    $default  reduce using rule 207 (INIT_STATE)

    SHORT_FUNC                      go to state 99
    VAR                             go to state 360
    IDS                             go to state 16
    FULFILL_FOR_IDS                 go to state 17
    FUNC_CALL                       go to state 362
    SHIFT                           go to state 105
    SHIFT_AC                        go to state 106
    METHOD                          go to state 107
    METHOD_FULFILL                  go to state 20
    AMPERSAND                       go to state 108
    VALUE                           go to state 109
    SWITCH_BODY                     go to state 367
    SWITCH_BODY_START               go to state 368
    SWITCH_BODY_START_WITH_DEFAULT  go to state 369
    EXPR                            go to state 370
    INIT_STATE                      go to state 371
    EXPR_START                      go to state 111


State 301

  214 FOR: t_for . INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY_FOR_LOOP
  215    | t_for . CONDITION BODY_FOR_LOOP
  216    | t_for . RANGE_BLANK SHORT_ASSIGN t_range VALUE BODY_FOR_LOOP
  217    | t_for . t_id t_comma t_id SHORT_ASSIGN t_range VALUE BODY_FOR_LOOP
  218    | t_for . t_id SHORT_ASSIGN t_range VALUE BODY_FOR_LOOP

    t_func              shift, and go to state 83
    t_var               shift, and go to state 4
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 372
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 373
    t_true              shift, and go to state 358
    t_false             shift, and go to state 359
    t_pointer           shift, and go to state 95
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    t_open_br  reduce using rule 211 (CONDITION)
    $default   reduce using rule 207 (INIT_STATE)

    SHORT_FUNC       go to state 99
    VAR              go to state 360
    IDS              go to state 16
    FULFILL_FOR_IDS  go to state 17
    BOOLEAN          go to state 361
    FUNC_CALL        go to state 362
    SHIFT            go to state 105
    SHIFT_AC         go to state 106
    METHOD           go to state 107
    METHOD_FULFILL   go to state 20
    AMPERSAND        go to state 108
    VALUE            go to state 363
    INIT_STATE       go to state 374
    CONDITION        go to state 375
    RANGE_BLANK      go to state 376
    EXPR_START       go to state 111


State 302

  156 GOTO: t_goto . t_id

    t_id  shift, and go to state 377


State 303

  199 RETURN: t_return . RETURN_FULFILL

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 114
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_open_sq           shift, and go to state 36
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_make              shift, and go to state 115
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    $default  reduce using rule 201 (RETURN_FULFILL)

    SHORT_FUNC       go to state 99
    VALUES           go to state 378
    FULFILL_FOR_VAL  go to state 118
    BOOLEAN          go to state 119
    FUNC_CALL        go to state 101
    SHIFT            go to state 105
    SHIFT_AC         go to state 106
    METHOD           go to state 120
    METHOD_FULFILL   go to state 20
    AMPERSAND        go to state 108
    VALUE            go to state 121
    RETURN_FULFILL   go to state 379
    EXPR             go to state 122
    EXPR_START       go to state 111
    ARRAY_INDEX      go to state 41
    MULTI_AR         go to state 123
    MAKE             go to state 124
    SLICE            go to state 125
    FIELD            go to state 126
    ST_EMBEDDED      go to state 127


State 304

   89 FULFILL_FOR_IDS: t_id .
   90                | t_id . MULTI_AR
   93                | t_id . POINTER
  113 FUNC_CALL: t_id . PARAM
  129 METHOD_FULFILL: t_id .
  157 LABEL: t_id . t_colon
  204 SHORT_EXPR: t_id . t_short_expr t_id
  243 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  244      | t_id . t_open_sq t_colon VALUE t_close_sq
  245      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_open_paren  shift, and go to state 35
    t_open_sq     shift, and go to state 380
    t_colon       shift, and go to state 381
    t_short_expr  shift, and go to state 382
    t_pointer     shift, and go to state 37

    t_dot     reduce using rule 129 (METHOD_FULFILL)
    $default  reduce using rule 89 (FULFILL_FOR_IDS)

    PARAM        go to state 38
    PARAM_START  go to state 39
    POINTER      go to state 40
    ARRAY_INDEX  go to state 41
    MULTI_AR     go to state 42


State 305

   53 BODY_END: t_close_br .

    $default  reduce using rule 53 (BODY_END)


State 306

   52 BODY: BODY_START BODY_END .

    $default  reduce using rule 52 (BODY)


State 307

   54 BODY_END: BODY_FILLING . t_close_br
   56 BODY_START: BODY_START BODY_FILLING . END_SYMBOLS

    t_close_br   shift, and go to state 383
    t_semicolon  shift, and go to state 44
    t_enter      shift, and go to state 45
    t_eof        shift, and go to state 46

    END_SYMBOLS  go to state 384


State 308

   65 BODY_FILLING: VAR .

    $default  reduce using rule 65 (BODY_FILLING)


State 309

   69 BODY_FILLING: DEFER .

    $default  reduce using rule 69 (BODY_FILLING)


State 310

   63 BODY_FILLING: FUNC_CALL .
  130 METHOD_FULFILL: FUNC_CALL .

    t_dot     reduce using rule 130 (METHOD_FULFILL)
    $default  reduce using rule 63 (BODY_FILLING)


State 311

   70 BODY_FILLING: METHOD .
   91 FULFILL_FOR_IDS: METHOD .
  128 METHOD: METHOD . t_dot METHOD_FULFILL

    t_dot  shift, and go to state 55

    t_short_dec  reduce using rule 91 (FULFILL_FOR_IDS)
    t_comma      reduce using rule 91 (FULFILL_FOR_IDS)
    $default     reduce using rule 70 (BODY_FILLING)


State 312

   60 BODY_FILLING: GOTO .

    $default  reduce using rule 60 (BODY_FILLING)


State 313

   61 BODY_FILLING: LABEL .

    $default  reduce using rule 61 (BODY_FILLING)


State 314

   59 BODY_FILLING: SWITCH .

    $default  reduce using rule 59 (BODY_FILLING)


State 315

   62 BODY_FILLING: IF .

    $default  reduce using rule 62 (BODY_FILLING)


State 316

  179 IF: IF_FIRST . MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD
  180   | IF_FIRST . MULTY_ELSEIF_SECOND
  181   | IF_FIRST . MULTY_ELSE_THIRD
  182   | IF_FIRST .

    t_else  shift, and go to state 385

    $default  reduce using rule 182 (IF)

    MULTY_ELSEIF_SECOND  go to state 386
    ELSEIF_SECOND        go to state 387
    MULTY_ELSE_THIRD     go to state 388
    ELSE_THIRD           go to state 389


State 317

   66 BODY_FILLING: RETURN .

    $default  reduce using rule 66 (BODY_FILLING)


State 318

   64 BODY_FILLING: SHORT_EXPR .

    $default  reduce using rule 64 (BODY_FILLING)


State 319

   58 BODY_FILLING: FOR .

    $default  reduce using rule 58 (BODY_FILLING)


State 320

   72 BODY_FILLING: PLENTY .

    $default  reduce using rule 72 (BODY_FILLING)


State 321

   68 BODY_FILLING: SLICE .

    $default  reduce using rule 68 (BODY_FILLING)


State 322

   67 BODY_FILLING: STRUCT .

    $default  reduce using rule 67 (BODY_FILLING)


State 323

   57 BODY_START: BODY_START END_SYMBOLS .

    $default  reduce using rule 57 (BODY_START)


State 324

   71 BODY_FILLING: INTERFACE .

    $default  reduce using rule 71 (BODY_FILLING)


State 325

   48 STRUCT_METHOD_SECOND_PART: t_id FUNC_PARAM_SECOND . BODY
   49                          | t_id FUNC_PARAM_SECOND . TYPE_AND_STRUCT BODY
   50                          | t_id FUNC_PARAM_SECOND . FUNC_PARAM_SECOND BODY

    t_vtype        shift, and go to state 69
    t_param_const  shift, and go to state 70
    t_id           shift, and go to state 71
    t_open_br      shift, and go to state 244
    t_open_paren   shift, and go to state 245

    FUNC_PARAM_SECOND        go to state 390
    FUNC_PARAM_SECOND_START  go to state 248
    TYPE_AND_STRUCT          go to state 391
    BODY                     go to state 392
    BODY_START               go to state 253


State 326

  246 MAPS: t_map t_open_sq t_vtype t_close_sq t_vtype .
  247     | t_map t_open_sq t_vtype t_close_sq t_vtype . FIELD_BODY

    t_open_br  shift, and go to state 393

    $default  reduce using rule 246 (MAPS)

    FIELD_BODY   go to state 394
    FIELD_START  go to state 175


State 327

  248 MAPS: t_map t_open_sq t_vtype t_close_sq t_id .

    $default  reduce using rule 248 (MAPS)


State 328

  286 INT_BODY: t_id t_open_paren t_vtype . t_close_paren

    t_close_paren  shift, and go to state 395


State 329

  281 INT_START: t_type t_id t_interface t_open_br END_SYMBOLS INT_BODY INT_END .

    $default  reduce using rule 281 (INT_START)


State 330

  113 FUNC_CALL: t_id . PARAM
  287 INT_BODY: INT_BODY END_SYMBOLS t_id . t_open_paren t_vtype t_close_paren

    t_open_paren  shift, and go to state 396

    PARAM        go to state 38
    PARAM_START  go to state 39


State 331

  288 INT_BODY: INT_BODY END_SYMBOLS FUNC_CALL . t_vtype
  289         | INT_BODY END_SYMBOLS FUNC_CALL .

    t_vtype  shift, and go to state 397

    $default  reduce using rule 289 (INT_BODY)


State 332

  282 INT_START: t_type t_id t_interface t_enter t_open_br END_SYMBOLS INT_BODY . INT_END
  287 INT_BODY: INT_BODY . END_SYMBOLS t_id t_open_paren t_vtype t_close_paren
  288         | INT_BODY . END_SYMBOLS FUNC_CALL t_vtype
  289         | INT_BODY . END_SYMBOLS FUNC_CALL

    t_close_br   shift, and go to state 64
    t_semicolon  shift, and go to state 44
    t_enter      shift, and go to state 261
    t_eof        shift, and go to state 46

    END_SYMBOLS  go to state 262
    INT_END      go to state 398


State 333

  239 ENUM: ENUM t_comma VALUE .

    $default  reduce using rule 239 (ENUM)


State 334

  240 ENUM: ENUM t_comma END_SYMBOLS . VALUE

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 167
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC      go to state 99
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 399
    EXPR_START      go to state 111


State 335

  254 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id . METHOD
  255            | STRUCT_BODY END_SYMBOLS t_id . t_vtype
  256            | STRUCT_BODY END_SYMBOLS t_id . t_id
  257            | STRUCT_BODY END_SYMBOLS t_id .

    t_vtype  shift, and go to state 400
    t_id     shift, and go to state 401

    $default  reduce using rule 257 (STRUCT_BODY)

    FUNC_CALL       go to state 18
    METHOD          go to state 402
    METHOD_FULFILL  go to state 20


State 336

  260 STRUCT_START: t_type t_id t_struct_const t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END .

    $default  reduce using rule 260 (STRUCT_START)


State 337

   51 SHORT_FUNC: t_func t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART .

    $default  reduce using rule 51 (SHORT_FUNC)


State 338

  235 PLENTY_BODY: t_open_br END_SYMBOLS PLENTY t_close_br .

    $default  reduce using rule 235 (PLENTY_BODY)


State 339

  237 PLENTY_BODY: t_open_br END_SYMBOLS PLENTY t_comma . END_SYMBOLS t_close_br

    t_semicolon  shift, and go to state 44
    t_enter      shift, and go to state 45
    t_eof        shift, and go to state 46

    END_SYMBOLS  go to state 403


State 340

  234 PLENTY_BODY: t_open_br END_SYMBOLS ENUM t_close_br .

    $default  reduce using rule 234 (PLENTY_BODY)


State 341

  236 PLENTY_BODY: t_open_br END_SYMBOLS ENUM t_comma . END_SYMBOLS t_close_br
  239 ENUM: ENUM t_comma . VALUE
  240     | ENUM t_comma . END_SYMBOLS VALUE

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 167
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_semicolon         shift, and go to state 44
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_enter             shift, and go to state 45
    t_eof               shift, and go to state 46
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC      go to state 99
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 333
    EXPR_START      go to state 111
    END_SYMBOLS     go to state 404


State 342

  244 SLICE: t_id t_open_sq t_colon VALUE t_close_sq .

    $default  reduce using rule 244 (SLICE)


State 343

  245 SLICE: t_id t_open_sq VALUE t_colon t_close_sq .

    $default  reduce using rule 245 (SLICE)


State 344

  243 SLICE: t_id t_open_sq VALUE t_colon VALUE . t_close_sq

    t_close_sq  shift, and go to state 405


State 345

  232 PLENTY: PLENTY_BODY t_comma END_SYMBOLS PLENTY .

    $default  reduce using rule 232 (PLENTY)


State 346

  113 FUNC_CALL: t_id . PARAM
  125 SHIFT_AC: t_id .
  129 METHOD_FULFILL: t_id .
  139 VALUE: t_id .
  264 FIELD: t_id . FIELD_BODY

    t_open_br     shift, and go to state 393
    t_open_paren  shift, and go to state 35

    t_shift_const  reduce using rule 125 (SHIFT_AC)
    t_dot          reduce using rule 129 (METHOD_FULFILL)
    $default       reduce using rule 139 (VALUE)

    PARAM        go to state 38
    PARAM_START  go to state 39
    FIELD_BODY   go to state 174
    FIELD_START  go to state 175


State 347

  269 FIELD_FULFILL: VALUE t_colon VALUE . t_comma
  273 FIELD_END_FULFILL: VALUE t_colon VALUE .

    t_comma  shift, and go to state 406

    $default  reduce using rule 273 (FIELD_END_FULFILL)


State 348

  270 FIELD_FULFILL: VALUE t_colon FIELD . t_comma

    t_comma  shift, and go to state 407


State 349

  241 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma . VALUE t_close_paren
  242     | t_make t_open_paren MULTI_AR t_vtype t_comma . VALUE t_comma VALUE t_close_paren

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 167
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC      go to state 99
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 408
    EXPR_START      go to state 111


State 350

   43 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren t_close_paren .

    $default  reduce using rule 43 (FUNC_RETURN_VALUE_FULFILL)


State 351

   42 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren TYPE_AND_STRUCT . t_close_paren

    t_close_paren  shift, and go to state 409


State 352

   34 FUNC_PARAM_FULFILL_SECOND: t_id TYPE_AND_STRUCT . t_comma
   37 FUNC_PARAM_FULFILL_SECOND_END: t_id TYPE_AND_STRUCT .

    t_comma  shift, and go to state 410

    $default  reduce using rule 37 (FUNC_PARAM_FULFILL_SECOND_END)


State 353

   27 FUNC_PARAM_SECOND_END: FUNC_PARAM_FULFILL_SECOND_END t_close_paren .

    $default  reduce using rule 27 (FUNC_PARAM_SECOND_END)


State 354

   35 FUNC_PARAM_FULFILL_SECOND: TYPE_AND_STRUCT t_comma .

    $default  reduce using rule 35 (FUNC_PARAM_FULFILL_SECOND)


State 355

   21 FUNC_SECOND_PART: FUNC_RETURN_VALUE TYPE_AND_STRUCT BODY .

    $default  reduce using rule 21 (FUNC_SECOND_PART)


State 356

  113 FUNC_CALL: t_id . PARAM

    t_open_paren  shift, and go to state 35

    PARAM        go to state 38
    PARAM_START  go to state 39


State 357

   96 DEFER: t_defer FUNC_CALL .

    $default  reduce using rule 96 (DEFER)


State 358

  154 VALUE: t_true .
  209 CONDITION: t_true .

    t_bool    reduce using rule 154 (VALUE)
    $default  reduce using rule 209 (CONDITION)


State 359

  155 VALUE: t_false .
  210 CONDITION: t_false .

    t_bool    reduce using rule 155 (VALUE)
    $default  reduce using rule 210 (CONDITION)


State 360

  205 INIT_STATE: VAR .

    $default  reduce using rule 205 (INIT_STATE)


State 361

   95 BOOLEAN: BOOLEAN . t_bool VALUE
  208 CONDITION: BOOLEAN .

    t_bool  shift, and go to state 180

    $default  reduce using rule 208 (CONDITION)


State 362

  130 METHOD_FULFILL: FUNC_CALL .
  145 VALUE: FUNC_CALL .
  206 INIT_STATE: FUNC_CALL .

    t_semicolon  reduce using rule 206 (INIT_STATE)
    t_dot        reduce using rule 130 (METHOD_FULFILL)
    $default     reduce using rule 145 (VALUE)


State 363

   94 BOOLEAN: VALUE . t_bool VALUE

    t_bool  shift, and go to state 181


State 364

  184 IF_FIRST: t_if INIT_STATE . t_semicolon CONDITION BODY_FOR_LOOP

    t_semicolon  shift, and go to state 411


State 365

  183 IF_FIRST: t_if CONDITION . BODY_FOR_LOOP

    t_open_br  shift, and go to state 412

    BODY_FOR_LOOP        go to state 413
    BODY_FOR_LOOP_START  go to state 414


State 366

  163 SWITCH_BODY_START: t_open_br .

    $default  reduce using rule 163 (SWITCH_BODY_START)


State 367

  160 SWITCH: t_switch SWITCH_BODY .

    $default  reduce using rule 160 (SWITCH)


State 368

  161 SWITCH_BODY: SWITCH_BODY_START . SWITCH_BODY_END
  164 SWITCH_BODY_START: SWITCH_BODY_START . END_SYMBOLS
  165                  | SWITCH_BODY_START . CASE
  166 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START . DEFAULT

    t_case       shift, and go to state 415
    t_default    shift, and go to state 416
    t_close_br   shift, and go to state 417
    t_semicolon  shift, and go to state 44
    t_enter      shift, and go to state 45
    t_eof        shift, and go to state 46

    CASE             go to state 418
    DEFAULT          go to state 419
    SWITCH_BODY_END  go to state 420
    END_SYMBOLS      go to state 421


State 369

  162 SWITCH_BODY: SWITCH_BODY_START_WITH_DEFAULT . SWITCH_BODY_END
  167 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START_WITH_DEFAULT . CASE

    t_case      shift, and go to state 415
    t_close_br  shift, and go to state 417

    CASE             go to state 422
    SWITCH_BODY_END  go to state 423


State 370

  159 SWITCH: t_switch EXPR . SWITCH_BODY
  203 EXPR: EXPR . t_sign VALUE

    t_open_br  shift, and go to state 366
    t_sign     shift, and go to state 166

    SWITCH_BODY                     go to state 424
    SWITCH_BODY_START               go to state 368
    SWITCH_BODY_START_WITH_DEFAULT  go to state 369


State 371

  158 SWITCH: t_switch INIT_STATE . t_semicolon EXPR SWITCH_BODY

    t_semicolon  shift, and go to state 425


State 372

   89 FULFILL_FOR_IDS: t_id .
   90                | t_id . MULTI_AR
   93                | t_id . POINTER
  113 FUNC_CALL: t_id . PARAM
  125 SHIFT_AC: t_id .
  129 METHOD_FULFILL: t_id .
  139 VALUE: t_id .
  217 FOR: t_for t_id . t_comma t_id SHORT_ASSIGN t_range VALUE BODY_FOR_LOOP
  218    | t_for t_id . SHORT_ASSIGN t_range VALUE BODY_FOR_LOOP
  220 RANGE_BLANK: t_id . t_comma t_blank_identifier

    t_short_dec   shift, and go to state 50
    t_comma       shift, and go to state 426
    t_open_paren  shift, and go to state 35
    t_open_sq     shift, and go to state 36
    t_pointer     shift, and go to state 37

    t_short_dec  [reduce using rule 89 (FULFILL_FOR_IDS)]
    t_comma      [reduce using rule 89 (FULFILL_FOR_IDS)]
    t_bool       reduce using rule 139 (VALUE)
    t_dot        reduce using rule 129 (METHOD_FULFILL)
    $default     reduce using rule 125 (SHIFT_AC)

    SHORT_ASSIGN  go to state 427
    PARAM         go to state 38
    PARAM_START   go to state 39
    POINTER       go to state 40
    ARRAY_INDEX   go to state 41
    MULTI_AR      go to state 42


State 373

  143 VALUE: t_blank_identifier .
  219 RANGE_BLANK: t_blank_identifier . t_comma t_id

    t_comma  shift, and go to state 428

    $default  reduce using rule 143 (VALUE)


State 374

  214 FOR: t_for INIT_STATE . t_semicolon CONDITION t_semicolon POST_STATE BODY_FOR_LOOP

    t_semicolon  shift, and go to state 429


State 375

  215 FOR: t_for CONDITION . BODY_FOR_LOOP

    t_open_br  shift, and go to state 412

    BODY_FOR_LOOP        go to state 430
    BODY_FOR_LOOP_START  go to state 414


State 376

  216 FOR: t_for RANGE_BLANK . SHORT_ASSIGN t_range VALUE BODY_FOR_LOOP

    t_short_dec  shift, and go to state 50

    SHORT_ASSIGN  go to state 431


State 377

  156 GOTO: t_goto t_id .

    $default  reduce using rule 156 (GOTO)


State 378

  200 RETURN_FULFILL: VALUES .

    $default  reduce using rule 200 (RETURN_FULFILL)


State 379

  199 RETURN: t_return RETURN_FULFILL .

    $default  reduce using rule 199 (RETURN)


State 380

  223 ARRAY_INDEX: t_open_sq . t_int_const t_close_sq
  224            | t_open_sq . t_id t_close_sq
  225            | t_open_sq . t_string t_close_sq
  226            | t_open_sq . t_close_sq
  229 MULTI_AR: t_open_sq . t_param_const t_close_sq
  243 SLICE: t_id t_open_sq . VALUE t_colon VALUE t_close_sq
  244      | t_id t_open_sq . t_colon VALUE t_close_sq
  245      | t_id t_open_sq . VALUE t_colon t_close_sq

    t_func              shift, and go to state 83
    t_param_const       shift, and go to state 78
    t_int_const         shift, and go to state 432
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 433
    t_string            shift, and go to state 434
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_close_sq          shift, and go to state 82
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_colon             shift, and go to state 221
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC      go to state 99
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 222
    EXPR_START      go to state 111


State 381

  157 LABEL: t_id t_colon .

    $default  reduce using rule 157 (LABEL)


State 382

  204 SHORT_EXPR: t_id t_short_expr . t_id

    t_id  shift, and go to state 435


State 383

   54 BODY_END: BODY_FILLING t_close_br .

    $default  reduce using rule 54 (BODY_END)


State 384

   56 BODY_START: BODY_START BODY_FILLING END_SYMBOLS .

    $default  reduce using rule 56 (BODY_START)


State 385

  195 ELSEIF_SECOND: t_else . t_if CONDITION BODY_FOR_LOOP
  198 ELSE_THIRD: t_else . BODY_FOR_LOOP

    t_if       shift, and go to state 436
    t_open_br  shift, and go to state 412

    BODY_FOR_LOOP        go to state 437
    BODY_FOR_LOOP_START  go to state 414


State 386

  179 IF: IF_FIRST MULTY_ELSEIF_SECOND . MULTY_ELSE_THIRD
  180   | IF_FIRST MULTY_ELSEIF_SECOND .
  194 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND . ELSEIF_SECOND

    t_else  shift, and go to state 385

    $default  reduce using rule 180 (IF)

    ELSEIF_SECOND     go to state 438
    MULTY_ELSE_THIRD  go to state 439
    ELSE_THIRD        go to state 389


State 387

  193 MULTY_ELSEIF_SECOND: ELSEIF_SECOND .

    $default  reduce using rule 193 (MULTY_ELSEIF_SECOND)


State 388

  181 IF: IF_FIRST MULTY_ELSE_THIRD .
  197 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD . ELSE_THIRD

    t_else  shift, and go to state 440

    $default  reduce using rule 181 (IF)

    ELSE_THIRD  go to state 441


State 389

  196 MULTY_ELSE_THIRD: ELSE_THIRD .

    $default  reduce using rule 196 (MULTY_ELSE_THIRD)


State 390

   50 STRUCT_METHOD_SECOND_PART: t_id FUNC_PARAM_SECOND FUNC_PARAM_SECOND . BODY

    t_open_br  shift, and go to state 244

    BODY        go to state 442
    BODY_START  go to state 253


State 391

   49 STRUCT_METHOD_SECOND_PART: t_id FUNC_PARAM_SECOND TYPE_AND_STRUCT . BODY

    t_open_br  shift, and go to state 244

    BODY        go to state 443
    BODY_START  go to state 253


State 392

   48 STRUCT_METHOD_SECOND_PART: t_id FUNC_PARAM_SECOND BODY .

    $default  reduce using rule 48 (STRUCT_METHOD_SECOND_PART)


State 393

  266 FIELD_BODY: t_open_br . t_close_br
  267 FIELD_START: t_open_br .

    t_close_br  shift, and go to state 218

    $default  reduce using rule 267 (FIELD_START)


State 394

  247 MAPS: t_map t_open_sq t_vtype t_close_sq t_vtype FIELD_BODY .

    $default  reduce using rule 247 (MAPS)


State 395

  286 INT_BODY: t_id t_open_paren t_vtype t_close_paren .

    $default  reduce using rule 286 (INT_BODY)


State 396

  115 PARAM: t_open_paren . t_close_paren
  116 PARAM_START: t_open_paren .
  287 INT_BODY: INT_BODY END_SYMBOLS t_id t_open_paren . t_vtype t_close_paren

    t_vtype        shift, and go to state 444
    t_close_paren  shift, and go to state 77

    $default  reduce using rule 116 (PARAM_START)


State 397

  288 INT_BODY: INT_BODY END_SYMBOLS FUNC_CALL t_vtype .

    $default  reduce using rule 288 (INT_BODY)


State 398

  282 INT_START: t_type t_id t_interface t_enter t_open_br END_SYMBOLS INT_BODY INT_END .

    $default  reduce using rule 282 (INT_START)


State 399

  240 ENUM: ENUM t_comma END_SYMBOLS VALUE .

    $default  reduce using rule 240 (ENUM)


State 400

  255 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id t_vtype .

    $default  reduce using rule 255 (STRUCT_BODY)


State 401

  113 FUNC_CALL: t_id . PARAM
  129 METHOD_FULFILL: t_id .
  256 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id t_id .

    t_open_paren  shift, and go to state 35

    t_dot     reduce using rule 129 (METHOD_FULFILL)
    $default  reduce using rule 256 (STRUCT_BODY)

    PARAM        go to state 38
    PARAM_START  go to state 39


State 402

  128 METHOD: METHOD . t_dot METHOD_FULFILL
  254 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id METHOD .

    t_dot  shift, and go to state 55

    $default  reduce using rule 254 (STRUCT_BODY)


State 403

  237 PLENTY_BODY: t_open_br END_SYMBOLS PLENTY t_comma END_SYMBOLS . t_close_br

    t_close_br  shift, and go to state 445


State 404

  236 PLENTY_BODY: t_open_br END_SYMBOLS ENUM t_comma END_SYMBOLS . t_close_br
  240 ENUM: ENUM t_comma END_SYMBOLS . VALUE

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 167
    t_string            shift, and go to state 87
    t_close_br          shift, and go to state 446
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC      go to state 99
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 399
    EXPR_START      go to state 111


State 405

  243 SLICE: t_id t_open_sq VALUE t_colon VALUE t_close_sq .

    $default  reduce using rule 243 (SLICE)


State 406

  269 FIELD_FULFILL: VALUE t_colon VALUE t_comma .

    $default  reduce using rule 269 (FIELD_FULFILL)


State 407

  270 FIELD_FULFILL: VALUE t_colon FIELD t_comma .

    $default  reduce using rule 270 (FIELD_FULFILL)


State 408

  241 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE . t_close_paren
  242     | t_make t_open_paren MULTI_AR t_vtype t_comma VALUE . t_comma VALUE t_close_paren

    t_comma        shift, and go to state 447
    t_close_paren  shift, and go to state 448


State 409

   42 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren TYPE_AND_STRUCT t_close_paren .

    $default  reduce using rule 42 (FUNC_RETURN_VALUE_FULFILL)


State 410

   34 FUNC_PARAM_FULFILL_SECOND: t_id TYPE_AND_STRUCT t_comma .

    $default  reduce using rule 34 (FUNC_PARAM_FULFILL_SECOND)


State 411

  184 IF_FIRST: t_if INIT_STATE t_semicolon . CONDITION BODY_FOR_LOOP

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 167
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 358
    t_false             shift, and go to state 359
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    $default  reduce using rule 211 (CONDITION)

    SHORT_FUNC      go to state 99
    BOOLEAN         go to state 361
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 363
    CONDITION       go to state 449
    EXPR_START      go to state 111


State 412

  186 BODY_FOR_LOOP_START: t_open_br .
  187                    | t_open_br . END_SYMBOLS

    t_semicolon  shift, and go to state 44
    t_enter      shift, and go to state 45
    t_eof        shift, and go to state 46

    $default  reduce using rule 186 (BODY_FOR_LOOP_START)

    END_SYMBOLS  go to state 450


State 413

  183 IF_FIRST: t_if CONDITION BODY_FOR_LOOP .

    $default  reduce using rule 183 (IF_FIRST)


State 414

  185 BODY_FOR_LOOP: BODY_FOR_LOOP_START . BODY_FOR_LOOP_END
  188 BODY_FOR_LOOP_START: BODY_FOR_LOOP_START . LOOP_FILLING END_SYMBOLS

    t_defer      shift, and go to state 298
    t_interface  shift, and go to state 3
    t_var        shift, and go to state 4
    t_if         shift, and go to state 299
    t_switch     shift, and go to state 300
    t_type       shift, and go to state 6
    t_for        shift, and go to state 301
    t_goto       shift, and go to state 302
    t_continue   shift, and go to state 451
    t_break      shift, and go to state 452
    t_return     shift, and go to state 303
    t_id         shift, and go to state 304
    t_open_br    shift, and go to state 237
    t_close_br   shift, and go to state 453
    t_pointer    shift, and go to state 8

    BODY_FILLING       go to state 454
    VAR                go to state 308
    IDS                go to state 16
    FULFILL_FOR_IDS    go to state 17
    DEFER              go to state 309
    FUNC_CALL          go to state 310
    METHOD             go to state 311
    METHOD_FULFILL     go to state 20
    GOTO               go to state 312
    LABEL              go to state 313
    SWITCH             go to state 314
    IF                 go to state 315
    IF_FIRST           go to state 316
    BODY_FOR_LOOP_END  go to state 455
    LOOP_FILLING       go to state 456
    RETURN             go to state 317
    SHORT_EXPR         go to state 318
    FOR                go to state 319
    PLENTY             go to state 320
    PLENTY_BODY        go to state 173
    SLICE              go to state 321
    STRUCT             go to state 322
    STRUCT_START       go to state 22
    INTERFACE          go to state 324
    INT_START          go to state 24


State 415

  168 CASE: t_case . CASE_STATEMENT CASE_BODY

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 167
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC      go to state 99
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 109
    MULTIPLE_ARG    go to state 457
    FIRST_PART      go to state 458
    CASE_STATEMENT  go to state 459
    EXPR            go to state 460
    EXPR_START      go to state 111


State 416

  169 DEFAULT: t_default . CASE_BODY

    t_colon  shift, and go to state 461

    CASE_BODY  go to state 462


State 417

  178 SWITCH_BODY_END: t_close_br .

    $default  reduce using rule 178 (SWITCH_BODY_END)


State 418

  165 SWITCH_BODY_START: SWITCH_BODY_START CASE .

    $default  reduce using rule 165 (SWITCH_BODY_START)


State 419

  166 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START DEFAULT .

    $default  reduce using rule 166 (SWITCH_BODY_START_WITH_DEFAULT)


State 420

  161 SWITCH_BODY: SWITCH_BODY_START SWITCH_BODY_END .

    $default  reduce using rule 161 (SWITCH_BODY)


State 421

  164 SWITCH_BODY_START: SWITCH_BODY_START END_SYMBOLS .

    $default  reduce using rule 164 (SWITCH_BODY_START)


State 422

  167 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START_WITH_DEFAULT CASE .

    $default  reduce using rule 167 (SWITCH_BODY_START_WITH_DEFAULT)


State 423

  162 SWITCH_BODY: SWITCH_BODY_START_WITH_DEFAULT SWITCH_BODY_END .

    $default  reduce using rule 162 (SWITCH_BODY)


State 424

  159 SWITCH: t_switch EXPR SWITCH_BODY .

    $default  reduce using rule 159 (SWITCH)


State 425

  158 SWITCH: t_switch INIT_STATE t_semicolon . EXPR SWITCH_BODY

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 167
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC      go to state 99
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 109
    EXPR            go to state 463
    EXPR_START      go to state 111


State 426

  217 FOR: t_for t_id t_comma . t_id SHORT_ASSIGN t_range VALUE BODY_FOR_LOOP
  220 RANGE_BLANK: t_id t_comma . t_blank_identifier

    t_id                shift, and go to state 464
    t_blank_identifier  shift, and go to state 465


State 427

  218 FOR: t_for t_id SHORT_ASSIGN . t_range VALUE BODY_FOR_LOOP

    t_range  shift, and go to state 466


State 428

  219 RANGE_BLANK: t_blank_identifier t_comma . t_id

    t_id  shift, and go to state 467


State 429

  214 FOR: t_for INIT_STATE t_semicolon . CONDITION t_semicolon POST_STATE BODY_FOR_LOOP

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 167
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 358
    t_false             shift, and go to state 359
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    $default  reduce using rule 211 (CONDITION)

    SHORT_FUNC      go to state 99
    BOOLEAN         go to state 361
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 363
    CONDITION       go to state 468
    EXPR_START      go to state 111


State 430

  215 FOR: t_for CONDITION BODY_FOR_LOOP .

    $default  reduce using rule 215 (FOR)


State 431

  216 FOR: t_for RANGE_BLANK SHORT_ASSIGN . t_range VALUE BODY_FOR_LOOP

    t_range  shift, and go to state 469


State 432

  126 SHIFT_AC: t_int_const .
  137 VALUE: t_int_const .
  223 ARRAY_INDEX: t_open_sq t_int_const . t_close_sq

    t_close_sq  shift, and go to state 156

    t_colon   reduce using rule 137 (VALUE)
    $default  reduce using rule 126 (SHIFT_AC)


State 433

  113 FUNC_CALL: t_id . PARAM
  125 SHIFT_AC: t_id .
  129 METHOD_FULFILL: t_id .
  139 VALUE: t_id .
  224 ARRAY_INDEX: t_open_sq t_id . t_close_sq

    t_open_paren  shift, and go to state 35
    t_close_sq    shift, and go to state 157

    t_dot     reduce using rule 129 (METHOD_FULFILL)
    t_colon   reduce using rule 139 (VALUE)
    $default  reduce using rule 125 (SHIFT_AC)

    PARAM        go to state 38
    PARAM_START  go to state 39


State 434

  141 VALUE: t_string .
  225 ARRAY_INDEX: t_open_sq t_string . t_close_sq

    t_close_sq  shift, and go to state 158

    $default  reduce using rule 141 (VALUE)


State 435

  204 SHORT_EXPR: t_id t_short_expr t_id .

    $default  reduce using rule 204 (SHORT_EXPR)


State 436

  195 ELSEIF_SECOND: t_else t_if . CONDITION BODY_FOR_LOOP

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 167
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 358
    t_false             shift, and go to state 359
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    $default  reduce using rule 211 (CONDITION)

    SHORT_FUNC      go to state 99
    BOOLEAN         go to state 361
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 363
    CONDITION       go to state 470
    EXPR_START      go to state 111


State 437

  198 ELSE_THIRD: t_else BODY_FOR_LOOP .

    $default  reduce using rule 198 (ELSE_THIRD)


State 438

  194 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND ELSEIF_SECOND .

    $default  reduce using rule 194 (MULTY_ELSEIF_SECOND)


State 439

  179 IF: IF_FIRST MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD .
  197 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD . ELSE_THIRD

    t_else  shift, and go to state 440

    $default  reduce using rule 179 (IF)

    ELSE_THIRD  go to state 441


State 440

  198 ELSE_THIRD: t_else . BODY_FOR_LOOP

    t_open_br  shift, and go to state 412

    BODY_FOR_LOOP        go to state 437
    BODY_FOR_LOOP_START  go to state 414


State 441

  197 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD ELSE_THIRD .

    $default  reduce using rule 197 (MULTY_ELSE_THIRD)


State 442

   50 STRUCT_METHOD_SECOND_PART: t_id FUNC_PARAM_SECOND FUNC_PARAM_SECOND BODY .

    $default  reduce using rule 50 (STRUCT_METHOD_SECOND_PART)


State 443

   49 STRUCT_METHOD_SECOND_PART: t_id FUNC_PARAM_SECOND TYPE_AND_STRUCT BODY .

    $default  reduce using rule 49 (STRUCT_METHOD_SECOND_PART)


State 444

  287 INT_BODY: INT_BODY END_SYMBOLS t_id t_open_paren t_vtype . t_close_paren

    t_close_paren  shift, and go to state 471


State 445

  237 PLENTY_BODY: t_open_br END_SYMBOLS PLENTY t_comma END_SYMBOLS t_close_br .

    $default  reduce using rule 237 (PLENTY_BODY)


State 446

  236 PLENTY_BODY: t_open_br END_SYMBOLS ENUM t_comma END_SYMBOLS t_close_br .

    $default  reduce using rule 236 (PLENTY_BODY)


State 447

  242 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma . VALUE t_close_paren

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 167
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC      go to state 99
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 472
    EXPR_START      go to state 111


State 448

  241 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren .

    $default  reduce using rule 241 (MAKE)


State 449

  184 IF_FIRST: t_if INIT_STATE t_semicolon CONDITION . BODY_FOR_LOOP

    t_open_br  shift, and go to state 412

    BODY_FOR_LOOP        go to state 473
    BODY_FOR_LOOP_START  go to state 414


State 450

  187 BODY_FOR_LOOP_START: t_open_br END_SYMBOLS .

    $default  reduce using rule 187 (BODY_FOR_LOOP_START)


State 451

  192 LOOP_FILLING: t_continue .

    $default  reduce using rule 192 (LOOP_FILLING)


State 452

  191 LOOP_FILLING: t_break .

    $default  reduce using rule 191 (LOOP_FILLING)


State 453

  189 BODY_FOR_LOOP_END: t_close_br .

    $default  reduce using rule 189 (BODY_FOR_LOOP_END)


State 454

  190 LOOP_FILLING: BODY_FILLING .

    $default  reduce using rule 190 (LOOP_FILLING)


State 455

  185 BODY_FOR_LOOP: BODY_FOR_LOOP_START BODY_FOR_LOOP_END .

    $default  reduce using rule 185 (BODY_FOR_LOOP)


State 456

  188 BODY_FOR_LOOP_START: BODY_FOR_LOOP_START LOOP_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 44
    t_enter      shift, and go to state 45
    t_eof        shift, and go to state 46

    END_SYMBOLS  go to state 474


State 457

  174 CASE_STATEMENT: MULTIPLE_ARG .

    $default  reduce using rule 174 (CASE_STATEMENT)


State 458

  170 MULTIPLE_ARG: FIRST_PART . SECOND_PART
  172 FIRST_PART: FIRST_PART . EXPR t_comma

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 167
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC      go to state 99
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 109
    SECOND_PART     go to state 475
    EXPR            go to state 476
    EXPR_START      go to state 111


State 459

  168 CASE: t_case CASE_STATEMENT . CASE_BODY

    t_colon  shift, and go to state 461

    CASE_BODY  go to state 477


State 460

  171 FIRST_PART: EXPR . t_comma
  175 CASE_STATEMENT: EXPR .
  203 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 166
    t_comma  shift, and go to state 478

    $default  reduce using rule 175 (CASE_STATEMENT)


State 461

  176 CASE_BODY: t_colon .

    $default  reduce using rule 176 (CASE_BODY)


State 462

  169 DEFAULT: t_default CASE_BODY .
  177 CASE_BODY: CASE_BODY . LOOP_FILLING END_SYMBOLS

    t_defer      shift, and go to state 298
    t_interface  shift, and go to state 3
    t_var        shift, and go to state 4
    t_if         shift, and go to state 299
    t_switch     shift, and go to state 300
    t_type       shift, and go to state 6
    t_for        shift, and go to state 301
    t_goto       shift, and go to state 302
    t_continue   shift, and go to state 451
    t_break      shift, and go to state 452
    t_return     shift, and go to state 303
    t_id         shift, and go to state 304
    t_open_br    shift, and go to state 237
    t_pointer    shift, and go to state 8

    $default  reduce using rule 169 (DEFAULT)

    BODY_FILLING     go to state 454
    VAR              go to state 308
    IDS              go to state 16
    FULFILL_FOR_IDS  go to state 17
    DEFER            go to state 309
    FUNC_CALL        go to state 310
    METHOD           go to state 311
    METHOD_FULFILL   go to state 20
    GOTO             go to state 312
    LABEL            go to state 313
    SWITCH           go to state 314
    IF               go to state 315
    IF_FIRST         go to state 316
    LOOP_FILLING     go to state 479
    RETURN           go to state 317
    SHORT_EXPR       go to state 318
    FOR              go to state 319
    PLENTY           go to state 320
    PLENTY_BODY      go to state 173
    SLICE            go to state 321
    STRUCT           go to state 322
    STRUCT_START     go to state 22
    INTERFACE        go to state 324
    INT_START        go to state 24


State 463

  158 SWITCH: t_switch INIT_STATE t_semicolon EXPR . SWITCH_BODY
  203 EXPR: EXPR . t_sign VALUE

    t_open_br  shift, and go to state 366
    t_sign     shift, and go to state 166

    SWITCH_BODY                     go to state 480
    SWITCH_BODY_START               go to state 368
    SWITCH_BODY_START_WITH_DEFAULT  go to state 369


State 464

  217 FOR: t_for t_id t_comma t_id . SHORT_ASSIGN t_range VALUE BODY_FOR_LOOP

    t_short_dec  shift, and go to state 50

    SHORT_ASSIGN  go to state 481


State 465

  220 RANGE_BLANK: t_id t_comma t_blank_identifier .

    $default  reduce using rule 220 (RANGE_BLANK)


State 466

  218 FOR: t_for t_id SHORT_ASSIGN t_range . VALUE BODY_FOR_LOOP

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 167
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC      go to state 99
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 482
    EXPR_START      go to state 111


State 467

  219 RANGE_BLANK: t_blank_identifier t_comma t_id .

    $default  reduce using rule 219 (RANGE_BLANK)


State 468

  214 FOR: t_for INIT_STATE t_semicolon CONDITION . t_semicolon POST_STATE BODY_FOR_LOOP

    t_semicolon  shift, and go to state 483


State 469

  216 FOR: t_for RANGE_BLANK SHORT_ASSIGN t_range . VALUE BODY_FOR_LOOP

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 167
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC      go to state 99
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 484
    EXPR_START      go to state 111


State 470

  195 ELSEIF_SECOND: t_else t_if CONDITION . BODY_FOR_LOOP

    t_open_br  shift, and go to state 412

    BODY_FOR_LOOP        go to state 485
    BODY_FOR_LOOP_START  go to state 414


State 471

  287 INT_BODY: INT_BODY END_SYMBOLS t_id t_open_paren t_vtype t_close_paren .

    $default  reduce using rule 287 (INT_BODY)


State 472

  242 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma VALUE . t_close_paren

    t_close_paren  shift, and go to state 486


State 473

  184 IF_FIRST: t_if INIT_STATE t_semicolon CONDITION BODY_FOR_LOOP .

    $default  reduce using rule 184 (IF_FIRST)


State 474

  188 BODY_FOR_LOOP_START: BODY_FOR_LOOP_START LOOP_FILLING END_SYMBOLS .

    $default  reduce using rule 188 (BODY_FOR_LOOP_START)


State 475

  170 MULTIPLE_ARG: FIRST_PART SECOND_PART .

    $default  reduce using rule 170 (MULTIPLE_ARG)


State 476

  172 FIRST_PART: FIRST_PART EXPR . t_comma
  173 SECOND_PART: EXPR .
  203 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 166
    t_comma  shift, and go to state 487

    $default  reduce using rule 173 (SECOND_PART)


State 477

  168 CASE: t_case CASE_STATEMENT CASE_BODY .
  177 CASE_BODY: CASE_BODY . LOOP_FILLING END_SYMBOLS

    t_defer      shift, and go to state 298
    t_interface  shift, and go to state 3
    t_var        shift, and go to state 4
    t_if         shift, and go to state 299
    t_switch     shift, and go to state 300
    t_type       shift, and go to state 6
    t_for        shift, and go to state 301
    t_goto       shift, and go to state 302
    t_continue   shift, and go to state 451
    t_break      shift, and go to state 452
    t_return     shift, and go to state 303
    t_id         shift, and go to state 304
    t_open_br    shift, and go to state 237
    t_pointer    shift, and go to state 8

    $default  reduce using rule 168 (CASE)

    BODY_FILLING     go to state 454
    VAR              go to state 308
    IDS              go to state 16
    FULFILL_FOR_IDS  go to state 17
    DEFER            go to state 309
    FUNC_CALL        go to state 310
    METHOD           go to state 311
    METHOD_FULFILL   go to state 20
    GOTO             go to state 312
    LABEL            go to state 313
    SWITCH           go to state 314
    IF               go to state 315
    IF_FIRST         go to state 316
    LOOP_FILLING     go to state 479
    RETURN           go to state 317
    SHORT_EXPR       go to state 318
    FOR              go to state 319
    PLENTY           go to state 320
    PLENTY_BODY      go to state 173
    SLICE            go to state 321
    STRUCT           go to state 322
    STRUCT_START     go to state 22
    INTERFACE        go to state 324
    INT_START        go to state 24


State 478

  171 FIRST_PART: EXPR t_comma .

    $default  reduce using rule 171 (FIRST_PART)


State 479

  177 CASE_BODY: CASE_BODY LOOP_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 44
    t_enter      shift, and go to state 45
    t_eof        shift, and go to state 46

    END_SYMBOLS  go to state 488


State 480

  158 SWITCH: t_switch INIT_STATE t_semicolon EXPR SWITCH_BODY .

    $default  reduce using rule 158 (SWITCH)


State 481

  217 FOR: t_for t_id t_comma t_id SHORT_ASSIGN . t_range VALUE BODY_FOR_LOOP

    t_range  shift, and go to state 489


State 482

  218 FOR: t_for t_id SHORT_ASSIGN t_range VALUE . BODY_FOR_LOOP

    t_open_br  shift, and go to state 412

    BODY_FOR_LOOP        go to state 490
    BODY_FOR_LOOP_START  go to state 414


State 483

  214 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon . POST_STATE BODY_FOR_LOOP

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 491
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC      go to state 99
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 109
    EXPR            go to state 492
    POST_STATE      go to state 493
    EXPR_START      go to state 111


State 484

  216 FOR: t_for RANGE_BLANK SHORT_ASSIGN t_range VALUE . BODY_FOR_LOOP

    t_open_br  shift, and go to state 412

    BODY_FOR_LOOP        go to state 494
    BODY_FOR_LOOP_START  go to state 414


State 485

  195 ELSEIF_SECOND: t_else t_if CONDITION BODY_FOR_LOOP .

    $default  reduce using rule 195 (ELSEIF_SECOND)


State 486

  242 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma VALUE t_close_paren .

    $default  reduce using rule 242 (MAKE)


State 487

  172 FIRST_PART: FIRST_PART EXPR t_comma .

    $default  reduce using rule 172 (FIRST_PART)


State 488

  177 CASE_BODY: CASE_BODY LOOP_FILLING END_SYMBOLS .

    $default  reduce using rule 177 (CASE_BODY)


State 489

  217 FOR: t_for t_id t_comma t_id SHORT_ASSIGN t_range . VALUE BODY_FOR_LOOP

    t_func              shift, and go to state 83
    t_int_const         shift, and go to state 84
    t_float_const       shift, and go to state 85
    t_id                shift, and go to state 167
    t_string            shift, and go to state 87
    t_sign              shift, and go to state 88
    t_open_paren        shift, and go to state 89
    t_rune              shift, and go to state 90
    t_blank_identifier  shift, and go to state 91
    t_true              shift, and go to state 92
    t_false             shift, and go to state 93
    t_pointer           shift, and go to state 116
    t_ampersand         shift, and go to state 96
    t_hex               shift, and go to state 97
    t_ten_pow           shift, and go to state 98

    SHORT_FUNC      go to state 99
    FUNC_CALL       go to state 101
    SHIFT           go to state 105
    SHIFT_AC        go to state 106
    METHOD          go to state 120
    METHOD_FULFILL  go to state 20
    AMPERSAND       go to state 108
    VALUE           go to state 495
    EXPR_START      go to state 111


State 490

  218 FOR: t_for t_id SHORT_ASSIGN t_range VALUE BODY_FOR_LOOP .

    $default  reduce using rule 218 (FOR)


State 491

  113 FUNC_CALL: t_id . PARAM
  125 SHIFT_AC: t_id .
  129 METHOD_FULFILL: t_id .
  139 VALUE: t_id .
  213 POST_STATE: t_id . t_inc_const

    t_inc_const   shift, and go to state 496
    t_open_paren  shift, and go to state 35

    t_shift_const  reduce using rule 125 (SHIFT_AC)
    t_dot          reduce using rule 129 (METHOD_FULFILL)
    $default       reduce using rule 139 (VALUE)

    PARAM        go to state 38
    PARAM_START  go to state 39


State 492

  203 EXPR: EXPR . t_sign VALUE
  212 POST_STATE: EXPR .

    t_sign  shift, and go to state 166

    $default  reduce using rule 212 (POST_STATE)


State 493

  214 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE . BODY_FOR_LOOP

    t_open_br  shift, and go to state 412

    BODY_FOR_LOOP        go to state 497
    BODY_FOR_LOOP_START  go to state 414


State 494

  216 FOR: t_for RANGE_BLANK SHORT_ASSIGN t_range VALUE BODY_FOR_LOOP .

    $default  reduce using rule 216 (FOR)


State 495

  217 FOR: t_for t_id t_comma t_id SHORT_ASSIGN t_range VALUE . BODY_FOR_LOOP

    t_open_br  shift, and go to state 412

    BODY_FOR_LOOP        go to state 498
    BODY_FOR_LOOP_START  go to state 414


State 496

  213 POST_STATE: t_id t_inc_const .

    $default  reduce using rule 213 (POST_STATE)


State 497

  214 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY_FOR_LOOP .

    $default  reduce using rule 214 (FOR)


State 498

  217 FOR: t_for t_id t_comma t_id SHORT_ASSIGN t_range VALUE BODY_FOR_LOOP .

    $default  reduce using rule 217 (FOR)
