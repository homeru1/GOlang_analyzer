Terminals unused in grammar

   t_constant
   t_chan
   t_go
   t_range
   t_select
   t_fallthrough
   t_or_const
   t_and_const
   t_eq_const
   t_rel_const
   t_point_const
   t_punc
   t_char_const
   t_ampersand
   '+'
   '-'
   '*'
   '/'


Grammar

    0 $accept: START $end

    1 START: START GLOBAL END_SYMBOLS
    2      | GLOBAL END_SYMBOLS
    3      | START END_SYMBOLS

    4 GLOBAL: PACKAGE
    5       | IMPORT
    6       | FUNC
    7       | STRUCT
    8       | INTERFACE

    9 PACKAGE: t_package t_id

   10 IMPORT: t_import t_string
   11       | t_import t_open_paren PARAM_IMPORT t_close_paren
   12       | t_import t_open_paren t_enter PARAM_IMPORT t_close_paren
   13       | t_import t_id t_string

   14 FUNC: t_func t_id t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART

   15 FUNC_PARAM: FUNC_PARAM_FULFILL
   16           | FUNC_PARAM t_comma FUNC_PARAM_FULFILL

   17 FUNC_SECOND_PART: BODY
   18                 | FUNC_RETURN_VALUE TYPE_AND_STRUCT BODY
   19                 | FUNC_PARAM_SECOND BODY

   20 FUNC_PARAM_SECOND: FUNC_PARAM_SECOND_START FUNC_PARAM_SECOND_END
   21                  | t_open_paren t_close_paren

   22 FUNC_PARAM_SECOND_START: t_open_paren
   23                        | FUNC_PARAM_SECOND_START FUNC_PARAM_FULFILL_SECOND

   24 FUNC_PARAM_SECOND_END: FUNC_PARAM_FULFILL_SECOND_END t_close_paren

   25 FUNC_PARAM_FULFILL: t_id TYPE_AND_STRUCT
   26                   | t_id
   27                   | t_id INTERFACE
   28                   | t_id t_param_const INTERFACE
   29                   | /* empty */

   30 FUNC_PARAM_FULFILL_SECOND: t_id TYPE_AND_STRUCT t_comma
   31                          | TYPE_AND_STRUCT t_comma
   32                          | t_enter

   33 FUNC_PARAM_FULFILL_SECOND_END: t_id TYPE_AND_STRUCT
   34                              | TYPE_AND_STRUCT
   35                              | t_enter

   36 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE_FULFILL
   37                  | FUNC_RETURN_VALUE FUNC_RETURN_VALUE_FULFILL

   38 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren TYPE_AND_STRUCT t_close_paren
   39                          | t_func t_open_paren t_close_paren

   40 TYPE_AND_STRUCT: t_vtype
   41                | t_param_const t_vtype
   42                | t_id

   43 BODY: BODY_START BODY_END

   44 BODY_END: t_close_br

   45 BODY_START: t_open_br
   46           | BODY_START BODY_FILLING END_SYMBOLS
   47           | BODY_START END_SYMBOLS

   48 BODY_FILLING: VAR
   49             | FOR
   50             | SWITCH
   51             | GOTO
   52             | LABEL
   53             | IF
   54             | MULTI_AR
   55             | FUNC_CALL
   56             | SHORT_EXPR
   57             | ARRAY_BODY
   58             | RETURN
   59             | STRUCT
   60             | SLICE
   61             | DEFER
   62             | METHOD
   63             | INTERFACE

   64 VAR: t_var t_id ASSIGNMENT EXPR
   65    | t_var t_id ASSIGNMENT EXPR t_vtype
   66    | t_var t_id ASSIGNMENT BOOLEAN
   67    | t_id SHORT_ASSIGN EXPR
   68    | t_id ASSIGNMENT EXPR
   69    | t_var t_id t_id ASSIGNMENT VALUE
   70    | t_id SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   71    | t_var t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   72    | t_id SHORT_ASSIGN BOOLEAN
   73    | t_id MULTI_AR ASSIGNMENT EXPR
   74    | t_var t_id ASSIGNMENT MAKE
   75    | t_id SHORT_ASSIGN MAKE
   76    | t_id MULTI_AR ASSIGNMENT MAKE
   77    | t_id SHORT_ASSIGN SLICE
   78    | t_id ASSIGNMENT SLICE
   79    | t_var t_id ASSIGNMENT SLICE
   80    | t_var t_id MAPS
   81    | t_id SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   82    | t_var t_id t_id ASSIGNMENT ST_EMBEDDED
   83    | t_var t_id ASSIGNMENT ST_EMBEDDED
   84    | t_id SHORT_ASSIGN ST_EMBEDDED
   85    | METHOD ASSIGNMENT VALUE
   86    | POINTER ASSIGNMENT EXPR
   87    | t_var t_id POINTER
   88    | t_var t_id POINTER ASSIGNMENT EXPR

   89 BOOLEAN: VALUE t_bool VALUE
   90        | BOOLEAN t_bool VALUE

   91 DEFER: t_defer FUNC_CALL

   92 ASSIGNMENT: t_vtype t_equality
   93           | t_equality
   94           | t_comma t_id ASSIGNMENT EXPR t_comma
   95           | t_comma t_id ASSIGNMENT BOOLEAN t_comma

   96 SHORT_ASSIGN: t_short_dec
   97             | t_comma t_id SHORT_ASSIGN EXPR t_comma
   98             | t_comma t_id SHORT_ASSIGN BOOLEAN t_comma

   99 FUNC_CALL: t_id PARAM

  100 PARAM: PARAM_START PARAM_END
  101      | t_open_paren t_close_paren

  102 PARAM_START: t_open_paren
  103            | PARAM_START PARAM_FULFILL

  104 PARAM_END: PARAM_END_FULFILL t_close_paren

  105 PARAM_END_FULFILL: EXPR
  106                  | EXPR t_param_const
  107                  | t_enter

  108 PARAM_FULFILL: EXPR t_comma
  109              | t_enter

  110 SHIFT: SHIFT_AC t_shift_const SHIFT_AC

  111 SHIFT_AC: t_id
  112         | t_int_const

  113 METHOD: METHOD_FULFILL t_dot METHOD_FULFILL
  114       | METHOD t_dot METHOD_FULFILL

  115 METHOD_FULFILL: t_id
  116               | FUNC_CALL

  117 POINTER: t_pointer

  118 PARAM_IMPORT: t_string END_SYMBOLS
  119             | t_id t_string END_SYMBOLS
  120             | PARAM_IMPORT t_string END_SYMBOLS
  121             | PARAM_IMPORT t_id t_string END_SYMBOLS

  122 VALUE: t_int_const
  123      | t_float_const
  124      | t_id
  125      | t_string
  126      | t_rune
  127      | t_blank_identifier
  128      | FUNC_CALL
  129      | SHIFT
  130      | POINTER
  131      | METHOD
  132      | EXPR_START EXPR EXPR_END
  133      | EXPR_START BOOLEAN EXPR_END

  134 GOTO: t_goto t_id

  135 LABEL: t_id t_colon

  136 SWITCH: t_switch INIT_STATE t_semicolon EXPR SWITCH_BODY
  137       | t_switch EXPR SWITCH_BODY
  138       | t_switch SWITCH_BODY

  139 SWITCH_BODY: SWITCH_BODY_START SWITCH_BODY_END
  140            | SWITCH_BODY_START_WITH_DEFAULT SWITCH_BODY_END

  141 SWITCH_BODY_START: t_open_br
  142                  | SWITCH_BODY_START END_SYMBOLS
  143                  | SWITCH_BODY_START CASE

  144 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START DEFAULT
  145                               | SWITCH_BODY_START_WITH_DEFAULT CASE

  146 CASE: t_case CASE_STATEMENT CASE_BODY

  147 DEFAULT: t_default CASE_BODY

  148 MULTIPLE_ARG: FIRST_PART SECOND_PART

  149 FIRST_PART: EXPR t_comma
  150           | FIRST_PART EXPR t_comma

  151 SECOND_PART: EXPR

  152 CASE_STATEMENT: MULTIPLE_ARG
  153               | EXPR

  154 CASE_BODY: t_colon
  155          | CASE_BODY LOOP_FILLING END_SYMBOLS

  156 SWITCH_BODY_END: t_close_br

  157 IF: IF_FIRST MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD
  158   | IF_FIRST MULTY_ELSEIF_SECOND
  159   | IF_FIRST MULTY_ELSE_THIRD
  160   | IF_FIRST

  161 IF_FIRST: t_if CONDITION BODY_FOR_LOOP
  162         | t_if INIT_STATE t_semicolon CONDITION BODY_FOR_LOOP

  163 BODY_FOR_LOOP: BODY_FOR_LOOP_START BODY_FOR_LOOP_END

  164 BODY_FOR_LOOP_START: t_open_br
  165                    | t_open_br END_SYMBOLS
  166                    | BODY_FOR_LOOP_START LOOP_FILLING END_SYMBOLS

  167 BODY_FOR_LOOP_END: t_close_br

  168 LOOP_FILLING: BODY_FILLING
  169             | t_break
  170             | t_continue

  171 MULTY_ELSEIF_SECOND: ELSEIF_SECOND
  172                    | MULTY_ELSEIF_SECOND ELSEIF_SECOND

  173 ELSEIF_SECOND: t_else t_if CONDITION BODY_FOR_LOOP

  174 MULTY_ELSE_THIRD: ELSE_THIRD
  175                 | MULTY_ELSE_THIRD ELSE_THIRD

  176 ELSE_THIRD: t_else BODY_FOR_LOOP

  177 RETURN: t_return EXPR
  178       | t_return EXPR MANY_RETURN_START MANY_RETURN_START_END

  179 MANY_RETURN_START: t_comma
  180                  | MANY_RETURN_START EXPR t_comma

  181 MANY_RETURN_START_END: EXPR

  182 EXPR: VALUE
  183     | EXPR t_sign VALUE

  184 SHORT_EXPR: t_id t_short_expr t_id

  185 INIT_STATE: VAR
  186           | FUNC_CALL
  187           | /* empty */

  188 CONDITION: BOOLEAN
  189          | t_true
  190          | t_false
  191          | /* empty */

  192 POST_STATE: EXPR
  193           | t_id t_inc_const

  194 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY_FOR_LOOP
  195    | t_for CONDITION BODY_FOR_LOOP

  196 EXPR_START: t_open_paren

  197 EXPR_END: t_close_paren

  198 ARRAY_BODY: t_var t_id MULTI_AR t_vtype
  199           | t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  200           | t_var t_id MULTI_AR t_vtype ASSIGNMENT MAKE

  201 ARRAY_INDEX: t_open_sq t_int_const t_close_sq
  202            | t_open_sq t_id t_close_sq
  203            | t_open_sq t_string t_close_sq
  204            | t_open_sq t_close_sq

  205 MULTI_AR: ARRAY_INDEX
  206         | ARRAY_INDEX MULTI_AR
  207         | t_open_sq t_param_const t_close_sq

  208 PLENTY: PLENTY_OLD
  209       | PLENTY_OLD t_comma PLENTY

  210 PLENTY_OLD: t_open_br ENUM t_close_br
  211           | t_open_br t_close_br
  212           | t_open_br PLENTY t_close_br

  213 ENUM: VALUE
  214     | ENUM t_comma VALUE

  215 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  216     | t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

  217 SLICE: t_id t_open_sq VALUE t_colon VALUE t_close_sq
  218      | t_id t_open_sq t_colon VALUE t_close_sq
  219      | t_id t_open_sq VALUE t_colon t_close_sq

  220 MAPS: t_map t_open_sq t_vtype t_close_sq t_vtype

  221 STRUCT: STRUCT_START

  222 STRUCT_BODY: ENUM t_vtype
  223            | t_id t_id
  224            | t_id
  225            | t_id METHOD
  226            | STRUCT_BODY END_SYMBOLS t_id METHOD
  227            | STRUCT_BODY END_SYMBOLS t_id t_vtype
  228            | STRUCT_BODY END_SYMBOLS t_id t_id
  229            | STRUCT_BODY END_SYMBOLS t_id

  230 STRUCT_START: t_type t_id t_struct_const t_open_br STRUCT_END
  231             | t_type t_id t_struct_const t_open_br STRUCT_BODY STRUCT_END
  232             | t_type t_id t_struct_const t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END
  233             | t_type t_id t_struct_const t_enter

  234 STRUCT_END: t_close_br
  235           | t_enter t_close_br

  236 FIELD: t_id FIELD_BODY

  237 FIELD_BODY: FIELD_START FIELD_END

  238 FIELD_START: t_open_br
  239            | FIELD_START FIELD_FULFILL

  240 FIELD_FULFILL: VALUE t_colon VALUE t_comma
  241              | VALUE t_colon FIELD t_comma
  242              | t_enter

  243 FIELD_END: FIELD_END_FULFILL t_close_br

  244 FIELD_END_FULFILL: VALUE t_colon VALUE
  245                  | t_enter

  246 ST_EMBEDDED: FIELD

  247 END_SYMBOLS: t_semicolon
  248            | t_enter
  249            | t_eof

  250 INTERFACE: INT_START

  251 INT_START: t_type t_id t_interface t_open_br INT_BODY INT_END
  252          | t_type t_id t_interface t_open_br END_SYMBOLS INT_BODY INT_END
  253          | t_type t_id t_interface t_enter t_open_br END_SYMBOLS INT_BODY INT_END
  254          | t_interface t_open_br INT_END

  255 INT_BODY: FUNC_CALL
  256         | FUNC_CALL t_vtype
  257         | t_id t_open_paren t_vtype t_close_paren
  258         | INT_BODY END_SYMBOLS t_id t_open_paren t_vtype t_close_paren
  259         | INT_BODY END_SYMBOLS FUNC_CALL t_vtype
  260         | INT_BODY END_SYMBOLS FUNC_CALL

  261 INT_END: t_close_br
  262        | t_enter t_close_br


Terminals, with rules where they appear

$end (0) 0
'*' (42)
'+' (43)
'-' (45)
'/' (47)
error (256)
t_vtype (258) 40 41 65 70 71 92 198 199 200 215 216 220 222 227 256
    257 258 259
t_constant (259)
t_case (260) 146
t_func (261) 14 38 39
t_import (262) 10 11 12 13
t_chan (263)
t_defer (264) 91
t_go (265)
t_interface (266) 251 252 253 254
t_default (267) 147
t_var (268) 64 65 66 69 71 74 79 80 82 83 87 88 198 199 200
t_range (269)
t_map (270) 220
t_package (271) 9
t_if (272) 161 162 173
t_select (273)
t_switch (274) 136 137 138
t_fallthrough (275)
t_else (276) 173 176
t_type (277) 230 231 232 233 251 252 253
t_for (278) 194 195
t_goto (279) 134
t_continue (280) 170
t_break (281) 169
t_return (282) 177 178
t_struct_const (283) 230 231 232 233
t_or_const (284)
t_and_const (285)
t_param_const (286) 28 41 106 207
t_eq_const (287)
t_rel_const (288)
t_shift_const (289) 110
t_inc_const (290) 193
t_point_const (291)
t_punc (292)
t_int_const (293) 112 122 201 216
t_float_const (294) 123
t_char_const (295)
t_id (296) 9 13 14 25 26 27 28 30 33 42 64 65 66 67 68 69 70 71 72
    73 74 75 76 77 78 79 80 81 82 83 84 87 88 94 95 97 98 99 111 115
    119 121 124 134 135 184 193 198 199 200 202 217 218 219 223 224
    225 226 227 228 229 230 231 232 233 236 251 252 253 257 258
t_string (297) 10 13 118 119 120 121 125 203
t_short_dec (298) 96
t_open_br (299) 45 141 164 165 210 211 212 230 231 232 238 251 252
    253 254
t_close_br (300) 44 156 167 210 211 212 234 235 243 261 262
t_sign (301) 183
t_comma (302) 16 30 31 94 95 97 98 108 149 150 179 180 209 214 215
    216 240 241
t_equality (303) 92 93
t_open_paren (304) 11 12 14 21 22 38 39 81 101 102 196 215 216 257
    258
t_close_paren (305) 11 12 14 21 24 38 39 81 101 104 197 215 257 258
t_open_sq (306) 201 202 203 204 207 217 218 219 220
t_close_sq (307) 201 202 203 204 207 217 218 219 220
t_bool (308) 89 90
t_rune (309) 126
t_semicolon (310) 136 162 194 247
t_blank_identifier (311) 127
t_dot (312) 113 114
t_colon (313) 135 154 217 218 219 240 241 244
t_true (314) 189
t_false (315) 190
t_short_expr (316) 184
t_make (317) 81 215 216
t_enter (318) 12 32 35 107 109 233 235 242 245 248 253 262
t_eof (319) 249
t_pointer (320) 117
t_ampersand (321)


Nonterminals, with rules where they appear

$accept (71)
    on left: 0
START (72)
    on left: 1 2 3, on right: 0 1 3
GLOBAL (73)
    on left: 4 5 6 7 8, on right: 1 2
PACKAGE (74)
    on left: 9, on right: 4
IMPORT (75)
    on left: 10 11 12 13, on right: 5
FUNC (76)
    on left: 14, on right: 6
FUNC_PARAM (77)
    on left: 15 16, on right: 14 16
FUNC_SECOND_PART (78)
    on left: 17 18 19, on right: 14
FUNC_PARAM_SECOND (79)
    on left: 20 21, on right: 19
FUNC_PARAM_SECOND_START (80)
    on left: 22 23, on right: 20 23
FUNC_PARAM_SECOND_END (81)
    on left: 24, on right: 20
FUNC_PARAM_FULFILL (82)
    on left: 25 26 27 28 29, on right: 15 16
FUNC_PARAM_FULFILL_SECOND (83)
    on left: 30 31 32, on right: 23
FUNC_PARAM_FULFILL_SECOND_END (84)
    on left: 33 34 35, on right: 24
FUNC_RETURN_VALUE (85)
    on left: 36 37, on right: 18 37
FUNC_RETURN_VALUE_FULFILL (86)
    on left: 38 39, on right: 36 37
TYPE_AND_STRUCT (87)
    on left: 40 41 42, on right: 18 25 30 31 33 34 38
BODY (88)
    on left: 43, on right: 17 18 19
BODY_END (89)
    on left: 44, on right: 43
BODY_START (90)
    on left: 45 46 47, on right: 43 46 47
BODY_FILLING (91)
    on left: 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63, on right:
    46 168
VAR (92)
    on left: 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81
    82 83 84 85 86 87 88, on right: 48 185
BOOLEAN (93)
    on left: 89 90, on right: 66 72 90 95 98 133 188
DEFER (94)
    on left: 91, on right: 61
ASSIGNMENT (95)
    on left: 92 93 94 95, on right: 64 65 66 68 69 71 73 74 76 78 79
    82 83 85 86 88 94 95 199 200
SHORT_ASSIGN (96)
    on left: 96 97 98, on right: 67 70 72 75 77 81 84 97 98
FUNC_CALL (97)
    on left: 99, on right: 55 91 116 128 186 255 256 259 260
PARAM (98)
    on left: 100 101, on right: 99
PARAM_START (99)
    on left: 102 103, on right: 100 103
PARAM_END (100)
    on left: 104, on right: 100
PARAM_END_FULFILL (101)
    on left: 105 106 107, on right: 104
PARAM_FULFILL (102)
    on left: 108 109, on right: 103
SHIFT (103)
    on left: 110, on right: 129
SHIFT_AC (104)
    on left: 111 112, on right: 110
METHOD (105)
    on left: 113 114, on right: 62 85 114 131 225 226
METHOD_FULFILL (106)
    on left: 115 116, on right: 113 114
POINTER (107)
    on left: 117, on right: 86 87 88 130
PARAM_IMPORT (108)
    on left: 118 119 120 121, on right: 11 12 120 121
VALUE (109)
    on left: 122 123 124 125 126 127 128 129 130 131 132 133, on right:
    69 85 89 90 182 183 213 214 215 216 217 218 219 240 241 244
GOTO (110)
    on left: 134, on right: 51
LABEL (111)
    on left: 135, on right: 52
SWITCH (112)
    on left: 136 137 138, on right: 50
SWITCH_BODY (113)
    on left: 139 140, on right: 136 137 138
SWITCH_BODY_START (114)
    on left: 141 142 143, on right: 139 142 143 144
SWITCH_BODY_START_WITH_DEFAULT (115)
    on left: 144 145, on right: 140 145
CASE (116)
    on left: 146, on right: 143 145
DEFAULT (117)
    on left: 147, on right: 144
MULTIPLE_ARG (118)
    on left: 148, on right: 152
FIRST_PART (119)
    on left: 149 150, on right: 148 150
SECOND_PART (120)
    on left: 151, on right: 148
CASE_STATEMENT (121)
    on left: 152 153, on right: 146
CASE_BODY (122)
    on left: 154 155, on right: 146 147 155
SWITCH_BODY_END (123)
    on left: 156, on right: 139 140
IF (124)
    on left: 157 158 159 160, on right: 53
IF_FIRST (125)
    on left: 161 162, on right: 157 158 159 160
BODY_FOR_LOOP (126)
    on left: 163, on right: 161 162 173 176 194 195
BODY_FOR_LOOP_START (127)
    on left: 164 165 166, on right: 163 166
BODY_FOR_LOOP_END (128)
    on left: 167, on right: 163
LOOP_FILLING (129)
    on left: 168 169 170, on right: 155 166
MULTY_ELSEIF_SECOND (130)
    on left: 171 172, on right: 157 158 172
ELSEIF_SECOND (131)
    on left: 173, on right: 171 172
MULTY_ELSE_THIRD (132)
    on left: 174 175, on right: 157 159 175
ELSE_THIRD (133)
    on left: 176, on right: 174 175
RETURN (134)
    on left: 177 178, on right: 58
MANY_RETURN_START (135)
    on left: 179 180, on right: 178 180
MANY_RETURN_START_END (136)
    on left: 181, on right: 178
EXPR (137)
    on left: 182 183, on right: 64 65 67 68 73 86 88 94 97 105 106
    108 132 136 137 149 150 151 153 177 178 180 181 183 192
SHORT_EXPR (138)
    on left: 184, on right: 56
INIT_STATE (139)
    on left: 185 186 187, on right: 136 162 194
CONDITION (140)
    on left: 188 189 190 191, on right: 161 162 173 194 195
POST_STATE (141)
    on left: 192 193, on right: 194
FOR (142)
    on left: 194 195, on right: 49
EXPR_START (143)
    on left: 196, on right: 132 133
EXPR_END (144)
    on left: 197, on right: 132 133
ARRAY_BODY (145)
    on left: 198 199 200, on right: 57
ARRAY_INDEX (146)
    on left: 201 202 203 204, on right: 205 206
MULTI_AR (147)
    on left: 205 206 207, on right: 54 70 71 73 76 198 199 200 206
    215 216
PLENTY (148)
    on left: 208 209, on right: 70 71 199 209 212
PLENTY_OLD (149)
    on left: 210 211 212, on right: 208 209
ENUM (150)
    on left: 213 214, on right: 210 214 222
MAKE (151)
    on left: 215 216, on right: 74 75 76 200
SLICE (152)
    on left: 217 218 219, on right: 60 77 78 79
MAPS (153)
    on left: 220, on right: 80 81
STRUCT (154)
    on left: 221, on right: 7 59
STRUCT_BODY (155)
    on left: 222 223 224 225 226 227 228 229, on right: 226 227 228
    229 231 232
STRUCT_START (156)
    on left: 230 231 232 233, on right: 221
STRUCT_END (157)
    on left: 234 235, on right: 230 231 232
FIELD (158)
    on left: 236, on right: 241 246
FIELD_BODY (159)
    on left: 237, on right: 236
FIELD_START (160)
    on left: 238 239, on right: 237 239
FIELD_FULFILL (161)
    on left: 240 241 242, on right: 239
FIELD_END (162)
    on left: 243, on right: 237
FIELD_END_FULFILL (163)
    on left: 244 245, on right: 243
ST_EMBEDDED (164)
    on left: 246, on right: 82 83 84
END_SYMBOLS (165)
    on left: 247 248 249, on right: 1 2 3 46 47 118 119 120 121 142
    155 165 166 226 227 228 229 232 252 253 258 259 260
INTERFACE (166)
    on left: 250, on right: 8 27 28 63
INT_START (167)
    on left: 251 252 253 254, on right: 250
INT_BODY (168)
    on left: 255 256 257 258 259 260, on right: 251 252 253 258 259
    260
INT_END (169)
    on left: 261 262, on right: 251 252 253 254


State 0

    0 $accept: . START $end

    t_func       shift, and go to state 1
    t_import     shift, and go to state 2
    t_interface  shift, and go to state 3
    t_package    shift, and go to state 4
    t_type       shift, and go to state 5

    START         go to state 6
    GLOBAL        go to state 7
    PACKAGE       go to state 8
    IMPORT        go to state 9
    FUNC          go to state 10
    STRUCT        go to state 11
    STRUCT_START  go to state 12
    INTERFACE     go to state 13
    INT_START     go to state 14


State 1

   14 FUNC: t_func . t_id t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART

    t_id  shift, and go to state 15


State 2

   10 IMPORT: t_import . t_string
   11       | t_import . t_open_paren PARAM_IMPORT t_close_paren
   12       | t_import . t_open_paren t_enter PARAM_IMPORT t_close_paren
   13       | t_import . t_id t_string

    t_id          shift, and go to state 16
    t_string      shift, and go to state 17
    t_open_paren  shift, and go to state 18


State 3

  254 INT_START: t_interface . t_open_br INT_END

    t_open_br  shift, and go to state 19


State 4

    9 PACKAGE: t_package . t_id

    t_id  shift, and go to state 20


State 5

  230 STRUCT_START: t_type . t_id t_struct_const t_open_br STRUCT_END
  231             | t_type . t_id t_struct_const t_open_br STRUCT_BODY STRUCT_END
  232             | t_type . t_id t_struct_const t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END
  233             | t_type . t_id t_struct_const t_enter
  251 INT_START: t_type . t_id t_interface t_open_br INT_BODY INT_END
  252          | t_type . t_id t_interface t_open_br END_SYMBOLS INT_BODY INT_END
  253          | t_type . t_id t_interface t_enter t_open_br END_SYMBOLS INT_BODY INT_END

    t_id  shift, and go to state 21


State 6

    0 $accept: START . $end
    1 START: START . GLOBAL END_SYMBOLS
    3      | START . END_SYMBOLS

    $end         shift, and go to state 22
    t_func       shift, and go to state 1
    t_import     shift, and go to state 2
    t_interface  shift, and go to state 3
    t_package    shift, and go to state 4
    t_type       shift, and go to state 5
    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    GLOBAL        go to state 26
    PACKAGE       go to state 8
    IMPORT        go to state 9
    FUNC          go to state 10
    STRUCT        go to state 11
    STRUCT_START  go to state 12
    END_SYMBOLS   go to state 27
    INTERFACE     go to state 13
    INT_START     go to state 14


State 7

    2 START: GLOBAL . END_SYMBOLS

    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 28


State 8

    4 GLOBAL: PACKAGE .

    $default  reduce using rule 4 (GLOBAL)


State 9

    5 GLOBAL: IMPORT .

    $default  reduce using rule 5 (GLOBAL)


State 10

    6 GLOBAL: FUNC .

    $default  reduce using rule 6 (GLOBAL)


State 11

    7 GLOBAL: STRUCT .

    $default  reduce using rule 7 (GLOBAL)


State 12

  221 STRUCT: STRUCT_START .

    $default  reduce using rule 221 (STRUCT)


State 13

    8 GLOBAL: INTERFACE .

    $default  reduce using rule 8 (GLOBAL)


State 14

  250 INTERFACE: INT_START .

    $default  reduce using rule 250 (INTERFACE)


State 15

   14 FUNC: t_func t_id . t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART

    t_open_paren  shift, and go to state 29


State 16

   13 IMPORT: t_import t_id . t_string

    t_string  shift, and go to state 30


State 17

   10 IMPORT: t_import t_string .

    $default  reduce using rule 10 (IMPORT)


State 18

   11 IMPORT: t_import t_open_paren . PARAM_IMPORT t_close_paren
   12       | t_import t_open_paren . t_enter PARAM_IMPORT t_close_paren

    t_id      shift, and go to state 31
    t_string  shift, and go to state 32
    t_enter   shift, and go to state 33

    PARAM_IMPORT  go to state 34


State 19

  254 INT_START: t_interface t_open_br . INT_END

    t_close_br  shift, and go to state 35
    t_enter     shift, and go to state 36

    INT_END  go to state 37


State 20

    9 PACKAGE: t_package t_id .

    $default  reduce using rule 9 (PACKAGE)


State 21

  230 STRUCT_START: t_type t_id . t_struct_const t_open_br STRUCT_END
  231             | t_type t_id . t_struct_const t_open_br STRUCT_BODY STRUCT_END
  232             | t_type t_id . t_struct_const t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END
  233             | t_type t_id . t_struct_const t_enter
  251 INT_START: t_type t_id . t_interface t_open_br INT_BODY INT_END
  252          | t_type t_id . t_interface t_open_br END_SYMBOLS INT_BODY INT_END
  253          | t_type t_id . t_interface t_enter t_open_br END_SYMBOLS INT_BODY INT_END

    t_interface     shift, and go to state 38
    t_struct_const  shift, and go to state 39


State 22

    0 $accept: START $end .

    $default  accept


State 23

  247 END_SYMBOLS: t_semicolon .

    $default  reduce using rule 247 (END_SYMBOLS)


State 24

  248 END_SYMBOLS: t_enter .

    $default  reduce using rule 248 (END_SYMBOLS)


State 25

  249 END_SYMBOLS: t_eof .

    $default  reduce using rule 249 (END_SYMBOLS)


State 26

    1 START: START GLOBAL . END_SYMBOLS

    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 40


State 27

    3 START: START END_SYMBOLS .

    $default  reduce using rule 3 (START)


State 28

    2 START: GLOBAL END_SYMBOLS .

    $default  reduce using rule 2 (START)


State 29

   14 FUNC: t_func t_id t_open_paren . FUNC_PARAM t_close_paren FUNC_SECOND_PART

    t_id  shift, and go to state 41

    $default  reduce using rule 29 (FUNC_PARAM_FULFILL)

    FUNC_PARAM          go to state 42
    FUNC_PARAM_FULFILL  go to state 43


State 30

   13 IMPORT: t_import t_id t_string .

    $default  reduce using rule 13 (IMPORT)


State 31

  119 PARAM_IMPORT: t_id . t_string END_SYMBOLS

    t_string  shift, and go to state 44


State 32

  118 PARAM_IMPORT: t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 45


State 33

   12 IMPORT: t_import t_open_paren t_enter . PARAM_IMPORT t_close_paren

    t_id      shift, and go to state 31
    t_string  shift, and go to state 32

    PARAM_IMPORT  go to state 46


State 34

   11 IMPORT: t_import t_open_paren PARAM_IMPORT . t_close_paren
  120 PARAM_IMPORT: PARAM_IMPORT . t_string END_SYMBOLS
  121             | PARAM_IMPORT . t_id t_string END_SYMBOLS

    t_id           shift, and go to state 47
    t_string       shift, and go to state 48
    t_close_paren  shift, and go to state 49


State 35

  261 INT_END: t_close_br .

    $default  reduce using rule 261 (INT_END)


State 36

  262 INT_END: t_enter . t_close_br

    t_close_br  shift, and go to state 50


State 37

  254 INT_START: t_interface t_open_br INT_END .

    $default  reduce using rule 254 (INT_START)


State 38

  251 INT_START: t_type t_id t_interface . t_open_br INT_BODY INT_END
  252          | t_type t_id t_interface . t_open_br END_SYMBOLS INT_BODY INT_END
  253          | t_type t_id t_interface . t_enter t_open_br END_SYMBOLS INT_BODY INT_END

    t_open_br  shift, and go to state 51
    t_enter    shift, and go to state 52


State 39

  230 STRUCT_START: t_type t_id t_struct_const . t_open_br STRUCT_END
  231             | t_type t_id t_struct_const . t_open_br STRUCT_BODY STRUCT_END
  232             | t_type t_id t_struct_const . t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END
  233             | t_type t_id t_struct_const . t_enter

    t_open_br  shift, and go to state 53
    t_enter    shift, and go to state 54


State 40

    1 START: START GLOBAL END_SYMBOLS .

    $default  reduce using rule 1 (START)


State 41

   25 FUNC_PARAM_FULFILL: t_id . TYPE_AND_STRUCT
   26                   | t_id .
   27                   | t_id . INTERFACE
   28                   | t_id . t_param_const INTERFACE

    t_vtype        shift, and go to state 55
    t_interface    shift, and go to state 3
    t_type         shift, and go to state 56
    t_param_const  shift, and go to state 57
    t_id           shift, and go to state 58

    $default  reduce using rule 26 (FUNC_PARAM_FULFILL)

    TYPE_AND_STRUCT  go to state 59
    INTERFACE        go to state 60
    INT_START        go to state 14


State 42

   14 FUNC: t_func t_id t_open_paren FUNC_PARAM . t_close_paren FUNC_SECOND_PART
   16 FUNC_PARAM: FUNC_PARAM . t_comma FUNC_PARAM_FULFILL

    t_comma        shift, and go to state 61
    t_close_paren  shift, and go to state 62


State 43

   15 FUNC_PARAM: FUNC_PARAM_FULFILL .

    $default  reduce using rule 15 (FUNC_PARAM)


State 44

  119 PARAM_IMPORT: t_id t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 63


State 45

  118 PARAM_IMPORT: t_string END_SYMBOLS .

    $default  reduce using rule 118 (PARAM_IMPORT)


State 46

   12 IMPORT: t_import t_open_paren t_enter PARAM_IMPORT . t_close_paren
  120 PARAM_IMPORT: PARAM_IMPORT . t_string END_SYMBOLS
  121             | PARAM_IMPORT . t_id t_string END_SYMBOLS

    t_id           shift, and go to state 47
    t_string       shift, and go to state 48
    t_close_paren  shift, and go to state 64


State 47

  121 PARAM_IMPORT: PARAM_IMPORT t_id . t_string END_SYMBOLS

    t_string  shift, and go to state 65


State 48

  120 PARAM_IMPORT: PARAM_IMPORT t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 66


State 49

   11 IMPORT: t_import t_open_paren PARAM_IMPORT t_close_paren .

    $default  reduce using rule 11 (IMPORT)


State 50

  262 INT_END: t_enter t_close_br .

    $default  reduce using rule 262 (INT_END)


State 51

  251 INT_START: t_type t_id t_interface t_open_br . INT_BODY INT_END
  252          | t_type t_id t_interface t_open_br . END_SYMBOLS INT_BODY INT_END

    t_id         shift, and go to state 67
    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    FUNC_CALL    go to state 68
    END_SYMBOLS  go to state 69
    INT_BODY     go to state 70


State 52

  253 INT_START: t_type t_id t_interface t_enter . t_open_br END_SYMBOLS INT_BODY INT_END

    t_open_br  shift, and go to state 71


State 53

  230 STRUCT_START: t_type t_id t_struct_const t_open_br . STRUCT_END
  231             | t_type t_id t_struct_const t_open_br . STRUCT_BODY STRUCT_END
  232             | t_type t_id t_struct_const t_open_br . END_SYMBOLS STRUCT_BODY STRUCT_END

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 74
    t_string            shift, and go to state 75
    t_close_br          shift, and go to state 76
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_semicolon         shift, and go to state 23
    t_blank_identifier  shift, and go to state 79
    t_enter             shift, and go to state 80
    t_eof               shift, and go to state 25
    t_pointer           shift, and go to state 81

    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 88
    EXPR_START      go to state 89
    ENUM            go to state 90
    STRUCT_BODY     go to state 91
    STRUCT_END      go to state 92
    END_SYMBOLS     go to state 93


State 54

  233 STRUCT_START: t_type t_id t_struct_const t_enter .

    $default  reduce using rule 233 (STRUCT_START)


State 55

   40 TYPE_AND_STRUCT: t_vtype .

    $default  reduce using rule 40 (TYPE_AND_STRUCT)


State 56

  251 INT_START: t_type . t_id t_interface t_open_br INT_BODY INT_END
  252          | t_type . t_id t_interface t_open_br END_SYMBOLS INT_BODY INT_END
  253          | t_type . t_id t_interface t_enter t_open_br END_SYMBOLS INT_BODY INT_END

    t_id  shift, and go to state 94


State 57

   28 FUNC_PARAM_FULFILL: t_id t_param_const . INTERFACE
   41 TYPE_AND_STRUCT: t_param_const . t_vtype

    t_vtype      shift, and go to state 95
    t_interface  shift, and go to state 3
    t_type       shift, and go to state 56

    INTERFACE  go to state 96
    INT_START  go to state 14


State 58

   42 TYPE_AND_STRUCT: t_id .

    $default  reduce using rule 42 (TYPE_AND_STRUCT)


State 59

   25 FUNC_PARAM_FULFILL: t_id TYPE_AND_STRUCT .

    $default  reduce using rule 25 (FUNC_PARAM_FULFILL)


State 60

   27 FUNC_PARAM_FULFILL: t_id INTERFACE .

    $default  reduce using rule 27 (FUNC_PARAM_FULFILL)


State 61

   16 FUNC_PARAM: FUNC_PARAM t_comma . FUNC_PARAM_FULFILL

    t_id  shift, and go to state 41

    $default  reduce using rule 29 (FUNC_PARAM_FULFILL)

    FUNC_PARAM_FULFILL  go to state 97


State 62

   14 FUNC: t_func t_id t_open_paren FUNC_PARAM t_close_paren . FUNC_SECOND_PART

    t_func        shift, and go to state 98
    t_open_br     shift, and go to state 99
    t_open_paren  shift, and go to state 100

    FUNC_SECOND_PART           go to state 101
    FUNC_PARAM_SECOND          go to state 102
    FUNC_PARAM_SECOND_START    go to state 103
    FUNC_RETURN_VALUE          go to state 104
    FUNC_RETURN_VALUE_FULFILL  go to state 105
    BODY                       go to state 106
    BODY_START                 go to state 107


State 63

  119 PARAM_IMPORT: t_id t_string END_SYMBOLS .

    $default  reduce using rule 119 (PARAM_IMPORT)


State 64

   12 IMPORT: t_import t_open_paren t_enter PARAM_IMPORT t_close_paren .

    $default  reduce using rule 12 (IMPORT)


State 65

  121 PARAM_IMPORT: PARAM_IMPORT t_id t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 108


State 66

  120 PARAM_IMPORT: PARAM_IMPORT t_string END_SYMBOLS .

    $default  reduce using rule 120 (PARAM_IMPORT)


State 67

   99 FUNC_CALL: t_id . PARAM
  257 INT_BODY: t_id . t_open_paren t_vtype t_close_paren

    t_open_paren  shift, and go to state 109

    PARAM        go to state 110
    PARAM_START  go to state 111


State 68

  255 INT_BODY: FUNC_CALL .
  256         | FUNC_CALL . t_vtype

    t_vtype  shift, and go to state 112

    $default  reduce using rule 255 (INT_BODY)


State 69

  252 INT_START: t_type t_id t_interface t_open_br END_SYMBOLS . INT_BODY INT_END

    t_id  shift, and go to state 67

    FUNC_CALL  go to state 68
    INT_BODY   go to state 113


State 70

  251 INT_START: t_type t_id t_interface t_open_br INT_BODY . INT_END
  258 INT_BODY: INT_BODY . END_SYMBOLS t_id t_open_paren t_vtype t_close_paren
  259         | INT_BODY . END_SYMBOLS FUNC_CALL t_vtype
  260         | INT_BODY . END_SYMBOLS FUNC_CALL

    t_close_br   shift, and go to state 35
    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 114
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 115
    INT_END      go to state 116


State 71

  253 INT_START: t_type t_id t_interface t_enter t_open_br . END_SYMBOLS INT_BODY INT_END

    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 117


State 72

  112 SHIFT_AC: t_int_const .
  122 VALUE: t_int_const .

    t_shift_const  reduce using rule 112 (SHIFT_AC)
    $default       reduce using rule 122 (VALUE)


State 73

  123 VALUE: t_float_const .

    $default  reduce using rule 123 (VALUE)


State 74

   99 FUNC_CALL: t_id . PARAM
  111 SHIFT_AC: t_id .
  115 METHOD_FULFILL: t_id .
  124 VALUE: t_id .
  223 STRUCT_BODY: t_id . t_id
  224            | t_id .
  225            | t_id . METHOD

    t_id          shift, and go to state 118
    t_open_paren  shift, and go to state 119

    t_vtype        reduce using rule 124 (VALUE)
    t_shift_const  reduce using rule 111 (SHIFT_AC)
    t_comma        reduce using rule 124 (VALUE)
    t_dot          reduce using rule 115 (METHOD_FULFILL)
    $default       reduce using rule 224 (STRUCT_BODY)

    FUNC_CALL       go to state 120
    PARAM           go to state 110
    PARAM_START     go to state 111
    METHOD          go to state 121
    METHOD_FULFILL  go to state 86


State 75

  125 VALUE: t_string .

    $default  reduce using rule 125 (VALUE)


State 76

  234 STRUCT_END: t_close_br .

    $default  reduce using rule 234 (STRUCT_END)


State 77

  196 EXPR_START: t_open_paren .

    $default  reduce using rule 196 (EXPR_START)


State 78

  126 VALUE: t_rune .

    $default  reduce using rule 126 (VALUE)


State 79

  127 VALUE: t_blank_identifier .

    $default  reduce using rule 127 (VALUE)


State 80

  235 STRUCT_END: t_enter . t_close_br
  248 END_SYMBOLS: t_enter .

    t_close_br  shift, and go to state 122

    $default  reduce using rule 248 (END_SYMBOLS)


State 81

  117 POINTER: t_pointer .

    $default  reduce using rule 117 (POINTER)


State 82

  116 METHOD_FULFILL: FUNC_CALL .
  128 VALUE: FUNC_CALL .

    t_dot     reduce using rule 116 (METHOD_FULFILL)
    $default  reduce using rule 128 (VALUE)


State 83

  129 VALUE: SHIFT .

    $default  reduce using rule 129 (VALUE)


State 84

  110 SHIFT: SHIFT_AC . t_shift_const SHIFT_AC

    t_shift_const  shift, and go to state 123


State 85

  114 METHOD: METHOD . t_dot METHOD_FULFILL
  131 VALUE: METHOD .

    t_dot  shift, and go to state 124

    $default  reduce using rule 131 (VALUE)


State 86

  113 METHOD: METHOD_FULFILL . t_dot METHOD_FULFILL

    t_dot  shift, and go to state 125


State 87

  130 VALUE: POINTER .

    $default  reduce using rule 130 (VALUE)


State 88

  213 ENUM: VALUE .

    $default  reduce using rule 213 (ENUM)


State 89

  132 VALUE: EXPR_START . EXPR EXPR_END
  133      | EXPR_START . BOOLEAN EXPR_END

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 126
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_pointer           shift, and go to state 81

    BOOLEAN         go to state 127
    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 128
    EXPR            go to state 129
    EXPR_START      go to state 89


State 90

  214 ENUM: ENUM . t_comma VALUE
  222 STRUCT_BODY: ENUM . t_vtype

    t_vtype  shift, and go to state 130
    t_comma  shift, and go to state 131


State 91

  226 STRUCT_BODY: STRUCT_BODY . END_SYMBOLS t_id METHOD
  227            | STRUCT_BODY . END_SYMBOLS t_id t_vtype
  228            | STRUCT_BODY . END_SYMBOLS t_id t_id
  229            | STRUCT_BODY . END_SYMBOLS t_id
  231 STRUCT_START: t_type t_id t_struct_const t_open_br STRUCT_BODY . STRUCT_END

    t_close_br   shift, and go to state 76
    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 80
    t_eof        shift, and go to state 25

    STRUCT_END   go to state 132
    END_SYMBOLS  go to state 133


State 92

  230 STRUCT_START: t_type t_id t_struct_const t_open_br STRUCT_END .

    $default  reduce using rule 230 (STRUCT_START)


State 93

  232 STRUCT_START: t_type t_id t_struct_const t_open_br END_SYMBOLS . STRUCT_BODY STRUCT_END

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 74
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_pointer           shift, and go to state 81

    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 88
    EXPR_START      go to state 89
    ENUM            go to state 90
    STRUCT_BODY     go to state 134


State 94

  251 INT_START: t_type t_id . t_interface t_open_br INT_BODY INT_END
  252          | t_type t_id . t_interface t_open_br END_SYMBOLS INT_BODY INT_END
  253          | t_type t_id . t_interface t_enter t_open_br END_SYMBOLS INT_BODY INT_END

    t_interface  shift, and go to state 38


State 95

   41 TYPE_AND_STRUCT: t_param_const t_vtype .

    $default  reduce using rule 41 (TYPE_AND_STRUCT)


State 96

   28 FUNC_PARAM_FULFILL: t_id t_param_const INTERFACE .

    $default  reduce using rule 28 (FUNC_PARAM_FULFILL)


State 97

   16 FUNC_PARAM: FUNC_PARAM t_comma FUNC_PARAM_FULFILL .

    $default  reduce using rule 16 (FUNC_PARAM)


State 98

   38 FUNC_RETURN_VALUE_FULFILL: t_func . t_open_paren TYPE_AND_STRUCT t_close_paren
   39                          | t_func . t_open_paren t_close_paren

    t_open_paren  shift, and go to state 135


State 99

   45 BODY_START: t_open_br .

    $default  reduce using rule 45 (BODY_START)


State 100

   21 FUNC_PARAM_SECOND: t_open_paren . t_close_paren
   22 FUNC_PARAM_SECOND_START: t_open_paren .

    t_close_paren  shift, and go to state 136

    $default  reduce using rule 22 (FUNC_PARAM_SECOND_START)


State 101

   14 FUNC: t_func t_id t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART .

    $default  reduce using rule 14 (FUNC)


State 102

   19 FUNC_SECOND_PART: FUNC_PARAM_SECOND . BODY

    t_open_br  shift, and go to state 99

    BODY        go to state 137
    BODY_START  go to state 107


State 103

   20 FUNC_PARAM_SECOND: FUNC_PARAM_SECOND_START . FUNC_PARAM_SECOND_END
   23 FUNC_PARAM_SECOND_START: FUNC_PARAM_SECOND_START . FUNC_PARAM_FULFILL_SECOND

    t_vtype        shift, and go to state 55
    t_param_const  shift, and go to state 138
    t_id           shift, and go to state 139
    t_enter        shift, and go to state 140

    FUNC_PARAM_SECOND_END          go to state 141
    FUNC_PARAM_FULFILL_SECOND      go to state 142
    FUNC_PARAM_FULFILL_SECOND_END  go to state 143
    TYPE_AND_STRUCT                go to state 144


State 104

   18 FUNC_SECOND_PART: FUNC_RETURN_VALUE . TYPE_AND_STRUCT BODY
   37 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE . FUNC_RETURN_VALUE_FULFILL

    t_vtype        shift, and go to state 55
    t_func         shift, and go to state 98
    t_param_const  shift, and go to state 138
    t_id           shift, and go to state 58

    FUNC_RETURN_VALUE_FULFILL  go to state 145
    TYPE_AND_STRUCT            go to state 146


State 105

   36 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE_FULFILL .

    $default  reduce using rule 36 (FUNC_RETURN_VALUE)


State 106

   17 FUNC_SECOND_PART: BODY .

    $default  reduce using rule 17 (FUNC_SECOND_PART)


State 107

   43 BODY: BODY_START . BODY_END
   46 BODY_START: BODY_START . BODY_FILLING END_SYMBOLS
   47           | BODY_START . END_SYMBOLS

    t_defer      shift, and go to state 147
    t_interface  shift, and go to state 3
    t_var        shift, and go to state 148
    t_if         shift, and go to state 149
    t_switch     shift, and go to state 150
    t_type       shift, and go to state 5
    t_for        shift, and go to state 151
    t_goto       shift, and go to state 152
    t_return     shift, and go to state 153
    t_id         shift, and go to state 154
    t_close_br   shift, and go to state 155
    t_open_sq    shift, and go to state 156
    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25
    t_pointer    shift, and go to state 81

    BODY_END        go to state 157
    BODY_FILLING    go to state 158
    VAR             go to state 159
    DEFER           go to state 160
    FUNC_CALL       go to state 161
    METHOD          go to state 162
    METHOD_FULFILL  go to state 86
    POINTER         go to state 163
    GOTO            go to state 164
    LABEL           go to state 165
    SWITCH          go to state 166
    IF              go to state 167
    IF_FIRST        go to state 168
    RETURN          go to state 169
    SHORT_EXPR      go to state 170
    FOR             go to state 171
    ARRAY_BODY      go to state 172
    ARRAY_INDEX     go to state 173
    MULTI_AR        go to state 174
    SLICE           go to state 175
    STRUCT          go to state 176
    STRUCT_START    go to state 12
    END_SYMBOLS     go to state 177
    INTERFACE       go to state 178
    INT_START       go to state 14


State 108

  121 PARAM_IMPORT: PARAM_IMPORT t_id t_string END_SYMBOLS .

    $default  reduce using rule 121 (PARAM_IMPORT)


State 109

  101 PARAM: t_open_paren . t_close_paren
  102 PARAM_START: t_open_paren .
  257 INT_BODY: t_id t_open_paren . t_vtype t_close_paren

    t_vtype        shift, and go to state 179
    t_close_paren  shift, and go to state 180

    $default  reduce using rule 102 (PARAM_START)


State 110

   99 FUNC_CALL: t_id PARAM .

    $default  reduce using rule 99 (FUNC_CALL)


State 111

  100 PARAM: PARAM_START . PARAM_END
  103 PARAM_START: PARAM_START . PARAM_FULFILL

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 126
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_enter             shift, and go to state 181
    t_pointer           shift, and go to state 81

    FUNC_CALL          go to state 82
    PARAM_END          go to state 182
    PARAM_END_FULFILL  go to state 183
    PARAM_FULFILL      go to state 184
    SHIFT              go to state 83
    SHIFT_AC           go to state 84
    METHOD             go to state 85
    METHOD_FULFILL     go to state 86
    POINTER            go to state 87
    VALUE              go to state 185
    EXPR               go to state 186
    EXPR_START         go to state 89


State 112

  256 INT_BODY: FUNC_CALL t_vtype .

    $default  reduce using rule 256 (INT_BODY)


State 113

  252 INT_START: t_type t_id t_interface t_open_br END_SYMBOLS INT_BODY . INT_END
  258 INT_BODY: INT_BODY . END_SYMBOLS t_id t_open_paren t_vtype t_close_paren
  259         | INT_BODY . END_SYMBOLS FUNC_CALL t_vtype
  260         | INT_BODY . END_SYMBOLS FUNC_CALL

    t_close_br   shift, and go to state 35
    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 114
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 115
    INT_END      go to state 187


State 114

  248 END_SYMBOLS: t_enter .
  262 INT_END: t_enter . t_close_br

    t_close_br  shift, and go to state 50

    $default  reduce using rule 248 (END_SYMBOLS)


State 115

  258 INT_BODY: INT_BODY END_SYMBOLS . t_id t_open_paren t_vtype t_close_paren
  259         | INT_BODY END_SYMBOLS . FUNC_CALL t_vtype
  260         | INT_BODY END_SYMBOLS . FUNC_CALL

    t_id  shift, and go to state 188

    FUNC_CALL  go to state 189


State 116

  251 INT_START: t_type t_id t_interface t_open_br INT_BODY INT_END .

    $default  reduce using rule 251 (INT_START)


State 117

  253 INT_START: t_type t_id t_interface t_enter t_open_br END_SYMBOLS . INT_BODY INT_END

    t_id  shift, and go to state 67

    FUNC_CALL  go to state 68
    INT_BODY   go to state 190


State 118

   99 FUNC_CALL: t_id . PARAM
  115 METHOD_FULFILL: t_id .
  223 STRUCT_BODY: t_id t_id .

    t_open_paren  shift, and go to state 119

    t_dot     reduce using rule 115 (METHOD_FULFILL)
    $default  reduce using rule 223 (STRUCT_BODY)

    PARAM        go to state 110
    PARAM_START  go to state 111


State 119

  101 PARAM: t_open_paren . t_close_paren
  102 PARAM_START: t_open_paren .

    t_close_paren  shift, and go to state 180

    $default  reduce using rule 102 (PARAM_START)


State 120

  116 METHOD_FULFILL: FUNC_CALL .

    $default  reduce using rule 116 (METHOD_FULFILL)


State 121

  114 METHOD: METHOD . t_dot METHOD_FULFILL
  225 STRUCT_BODY: t_id METHOD .

    t_dot  shift, and go to state 124

    $default  reduce using rule 225 (STRUCT_BODY)


State 122

  235 STRUCT_END: t_enter t_close_br .

    $default  reduce using rule 235 (STRUCT_END)


State 123

  110 SHIFT: SHIFT_AC t_shift_const . SHIFT_AC

    t_int_const  shift, and go to state 191
    t_id         shift, and go to state 192

    SHIFT_AC  go to state 193


State 124

  114 METHOD: METHOD t_dot . METHOD_FULFILL

    t_id  shift, and go to state 194

    FUNC_CALL       go to state 120
    METHOD_FULFILL  go to state 195


State 125

  113 METHOD: METHOD_FULFILL t_dot . METHOD_FULFILL

    t_id  shift, and go to state 194

    FUNC_CALL       go to state 120
    METHOD_FULFILL  go to state 196


State 126

   99 FUNC_CALL: t_id . PARAM
  111 SHIFT_AC: t_id .
  115 METHOD_FULFILL: t_id .
  124 VALUE: t_id .

    t_open_paren  shift, and go to state 119

    t_shift_const  reduce using rule 111 (SHIFT_AC)
    t_dot          reduce using rule 115 (METHOD_FULFILL)
    $default       reduce using rule 124 (VALUE)

    PARAM        go to state 110
    PARAM_START  go to state 111


State 127

   90 BOOLEAN: BOOLEAN . t_bool VALUE
  133 VALUE: EXPR_START BOOLEAN . EXPR_END

    t_close_paren  shift, and go to state 197
    t_bool         shift, and go to state 198

    EXPR_END  go to state 199


State 128

   89 BOOLEAN: VALUE . t_bool VALUE
  182 EXPR: VALUE .

    t_bool  shift, and go to state 200

    $default  reduce using rule 182 (EXPR)


State 129

  132 VALUE: EXPR_START EXPR . EXPR_END
  183 EXPR: EXPR . t_sign VALUE

    t_sign         shift, and go to state 201
    t_close_paren  shift, and go to state 197

    EXPR_END  go to state 202


State 130

  222 STRUCT_BODY: ENUM t_vtype .

    $default  reduce using rule 222 (STRUCT_BODY)


State 131

  214 ENUM: ENUM t_comma . VALUE

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 126
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_pointer           shift, and go to state 81

    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 203
    EXPR_START      go to state 89


State 132

  231 STRUCT_START: t_type t_id t_struct_const t_open_br STRUCT_BODY STRUCT_END .

    $default  reduce using rule 231 (STRUCT_START)


State 133

  226 STRUCT_BODY: STRUCT_BODY END_SYMBOLS . t_id METHOD
  227            | STRUCT_BODY END_SYMBOLS . t_id t_vtype
  228            | STRUCT_BODY END_SYMBOLS . t_id t_id
  229            | STRUCT_BODY END_SYMBOLS . t_id

    t_id  shift, and go to state 204


State 134

  226 STRUCT_BODY: STRUCT_BODY . END_SYMBOLS t_id METHOD
  227            | STRUCT_BODY . END_SYMBOLS t_id t_vtype
  228            | STRUCT_BODY . END_SYMBOLS t_id t_id
  229            | STRUCT_BODY . END_SYMBOLS t_id
  232 STRUCT_START: t_type t_id t_struct_const t_open_br END_SYMBOLS STRUCT_BODY . STRUCT_END

    t_close_br   shift, and go to state 76
    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 80
    t_eof        shift, and go to state 25

    STRUCT_END   go to state 205
    END_SYMBOLS  go to state 133


State 135

   38 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren . TYPE_AND_STRUCT t_close_paren
   39                          | t_func t_open_paren . t_close_paren

    t_vtype        shift, and go to state 55
    t_param_const  shift, and go to state 138
    t_id           shift, and go to state 58
    t_close_paren  shift, and go to state 206

    TYPE_AND_STRUCT  go to state 207


State 136

   21 FUNC_PARAM_SECOND: t_open_paren t_close_paren .

    $default  reduce using rule 21 (FUNC_PARAM_SECOND)


State 137

   19 FUNC_SECOND_PART: FUNC_PARAM_SECOND BODY .

    $default  reduce using rule 19 (FUNC_SECOND_PART)


State 138

   41 TYPE_AND_STRUCT: t_param_const . t_vtype

    t_vtype  shift, and go to state 95


State 139

   30 FUNC_PARAM_FULFILL_SECOND: t_id . TYPE_AND_STRUCT t_comma
   33 FUNC_PARAM_FULFILL_SECOND_END: t_id . TYPE_AND_STRUCT
   42 TYPE_AND_STRUCT: t_id .

    t_vtype        shift, and go to state 55
    t_param_const  shift, and go to state 138
    t_id           shift, and go to state 58

    $default  reduce using rule 42 (TYPE_AND_STRUCT)

    TYPE_AND_STRUCT  go to state 208


State 140

   32 FUNC_PARAM_FULFILL_SECOND: t_enter .
   35 FUNC_PARAM_FULFILL_SECOND_END: t_enter .

    t_close_paren  reduce using rule 35 (FUNC_PARAM_FULFILL_SECOND_END)
    $default       reduce using rule 32 (FUNC_PARAM_FULFILL_SECOND)


State 141

   20 FUNC_PARAM_SECOND: FUNC_PARAM_SECOND_START FUNC_PARAM_SECOND_END .

    $default  reduce using rule 20 (FUNC_PARAM_SECOND)


State 142

   23 FUNC_PARAM_SECOND_START: FUNC_PARAM_SECOND_START FUNC_PARAM_FULFILL_SECOND .

    $default  reduce using rule 23 (FUNC_PARAM_SECOND_START)


State 143

   24 FUNC_PARAM_SECOND_END: FUNC_PARAM_FULFILL_SECOND_END . t_close_paren

    t_close_paren  shift, and go to state 209


State 144

   31 FUNC_PARAM_FULFILL_SECOND: TYPE_AND_STRUCT . t_comma
   34 FUNC_PARAM_FULFILL_SECOND_END: TYPE_AND_STRUCT .

    t_comma  shift, and go to state 210

    $default  reduce using rule 34 (FUNC_PARAM_FULFILL_SECOND_END)


State 145

   37 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE FUNC_RETURN_VALUE_FULFILL .

    $default  reduce using rule 37 (FUNC_RETURN_VALUE)


State 146

   18 FUNC_SECOND_PART: FUNC_RETURN_VALUE TYPE_AND_STRUCT . BODY

    t_open_br  shift, and go to state 99

    BODY        go to state 211
    BODY_START  go to state 107


State 147

   91 DEFER: t_defer . FUNC_CALL

    t_id  shift, and go to state 212

    FUNC_CALL  go to state 213


State 148

   64 VAR: t_var . t_id ASSIGNMENT EXPR
   65    | t_var . t_id ASSIGNMENT EXPR t_vtype
   66    | t_var . t_id ASSIGNMENT BOOLEAN
   69    | t_var . t_id t_id ASSIGNMENT VALUE
   71    | t_var . t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   74    | t_var . t_id ASSIGNMENT MAKE
   79    | t_var . t_id ASSIGNMENT SLICE
   80    | t_var . t_id MAPS
   82    | t_var . t_id t_id ASSIGNMENT ST_EMBEDDED
   83    | t_var . t_id ASSIGNMENT ST_EMBEDDED
   87    | t_var . t_id POINTER
   88    | t_var . t_id POINTER ASSIGNMENT EXPR
  198 ARRAY_BODY: t_var . t_id MULTI_AR t_vtype
  199           | t_var . t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  200           | t_var . t_id MULTI_AR t_vtype ASSIGNMENT MAKE

    t_id  shift, and go to state 214


State 149

  161 IF_FIRST: t_if . CONDITION BODY_FOR_LOOP
  162         | t_if . INIT_STATE t_semicolon CONDITION BODY_FOR_LOOP

    t_var               shift, and go to state 215
    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 216
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_true              shift, and go to state 217
    t_false             shift, and go to state 218
    t_pointer           shift, and go to state 81

    t_open_br  reduce using rule 191 (CONDITION)
    $default   reduce using rule 187 (INIT_STATE)

    VAR             go to state 219
    BOOLEAN         go to state 220
    FUNC_CALL       go to state 221
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 222
    METHOD_FULFILL  go to state 86
    POINTER         go to state 223
    VALUE           go to state 224
    INIT_STATE      go to state 225
    CONDITION       go to state 226
    EXPR_START      go to state 89


State 150

  136 SWITCH: t_switch . INIT_STATE t_semicolon EXPR SWITCH_BODY
  137       | t_switch . EXPR SWITCH_BODY
  138       | t_switch . SWITCH_BODY

    t_var               shift, and go to state 215
    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 216
    t_string            shift, and go to state 75
    t_open_br           shift, and go to state 227
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_pointer           shift, and go to state 81

    $default  reduce using rule 187 (INIT_STATE)

    VAR                             go to state 219
    FUNC_CALL                       go to state 221
    SHIFT                           go to state 83
    SHIFT_AC                        go to state 84
    METHOD                          go to state 222
    METHOD_FULFILL                  go to state 86
    POINTER                         go to state 223
    VALUE                           go to state 185
    SWITCH_BODY                     go to state 228
    SWITCH_BODY_START               go to state 229
    SWITCH_BODY_START_WITH_DEFAULT  go to state 230
    EXPR                            go to state 231
    INIT_STATE                      go to state 232
    EXPR_START                      go to state 89


State 151

  194 FOR: t_for . INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY_FOR_LOOP
  195    | t_for . CONDITION BODY_FOR_LOOP

    t_var               shift, and go to state 215
    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 216
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_true              shift, and go to state 217
    t_false             shift, and go to state 218
    t_pointer           shift, and go to state 81

    t_open_br  reduce using rule 191 (CONDITION)
    $default   reduce using rule 187 (INIT_STATE)

    VAR             go to state 219
    BOOLEAN         go to state 220
    FUNC_CALL       go to state 221
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 222
    METHOD_FULFILL  go to state 86
    POINTER         go to state 223
    VALUE           go to state 224
    INIT_STATE      go to state 233
    CONDITION       go to state 234
    EXPR_START      go to state 89


State 152

  134 GOTO: t_goto . t_id

    t_id  shift, and go to state 235


State 153

  177 RETURN: t_return . EXPR
  178       | t_return . EXPR MANY_RETURN_START MANY_RETURN_START_END

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 126
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_pointer           shift, and go to state 81

    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 185
    EXPR            go to state 236
    EXPR_START      go to state 89


State 154

   67 VAR: t_id . SHORT_ASSIGN EXPR
   68    | t_id . ASSIGNMENT EXPR
   70    | t_id . SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   72    | t_id . SHORT_ASSIGN BOOLEAN
   73    | t_id . MULTI_AR ASSIGNMENT EXPR
   75    | t_id . SHORT_ASSIGN MAKE
   76    | t_id . MULTI_AR ASSIGNMENT MAKE
   77    | t_id . SHORT_ASSIGN SLICE
   78    | t_id . ASSIGNMENT SLICE
   81    | t_id . SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   84    | t_id . SHORT_ASSIGN ST_EMBEDDED
   99 FUNC_CALL: t_id . PARAM
  115 METHOD_FULFILL: t_id .
  135 LABEL: t_id . t_colon
  184 SHORT_EXPR: t_id . t_short_expr t_id
  217 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  218      | t_id . t_open_sq t_colon VALUE t_close_sq
  219      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_vtype       shift, and go to state 237
    t_short_dec   shift, and go to state 238
    t_comma       shift, and go to state 239
    t_equality    shift, and go to state 240
    t_open_paren  shift, and go to state 119
    t_open_sq     shift, and go to state 241
    t_colon       shift, and go to state 242
    t_short_expr  shift, and go to state 243

    $default  reduce using rule 115 (METHOD_FULFILL)

    ASSIGNMENT    go to state 244
    SHORT_ASSIGN  go to state 245
    PARAM         go to state 110
    PARAM_START   go to state 111
    ARRAY_INDEX   go to state 173
    MULTI_AR      go to state 246


State 155

   44 BODY_END: t_close_br .

    $default  reduce using rule 44 (BODY_END)


State 156

  201 ARRAY_INDEX: t_open_sq . t_int_const t_close_sq
  202            | t_open_sq . t_id t_close_sq
  203            | t_open_sq . t_string t_close_sq
  204            | t_open_sq . t_close_sq
  207 MULTI_AR: t_open_sq . t_param_const t_close_sq

    t_param_const  shift, and go to state 247
    t_int_const    shift, and go to state 248
    t_id           shift, and go to state 249
    t_string       shift, and go to state 250
    t_close_sq     shift, and go to state 251


State 157

   43 BODY: BODY_START BODY_END .

    $default  reduce using rule 43 (BODY)


State 158

   46 BODY_START: BODY_START BODY_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 252


State 159

   48 BODY_FILLING: VAR .

    $default  reduce using rule 48 (BODY_FILLING)


State 160

   61 BODY_FILLING: DEFER .

    $default  reduce using rule 61 (BODY_FILLING)


State 161

   55 BODY_FILLING: FUNC_CALL .
  116 METHOD_FULFILL: FUNC_CALL .

    t_dot     reduce using rule 116 (METHOD_FULFILL)
    $default  reduce using rule 55 (BODY_FILLING)


State 162

   62 BODY_FILLING: METHOD .
   85 VAR: METHOD . ASSIGNMENT VALUE
  114 METHOD: METHOD . t_dot METHOD_FULFILL

    t_vtype     shift, and go to state 237
    t_comma     shift, and go to state 253
    t_equality  shift, and go to state 240
    t_dot       shift, and go to state 124

    $default  reduce using rule 62 (BODY_FILLING)

    ASSIGNMENT  go to state 254


State 163

   86 VAR: POINTER . ASSIGNMENT EXPR

    t_vtype     shift, and go to state 237
    t_comma     shift, and go to state 253
    t_equality  shift, and go to state 240

    ASSIGNMENT  go to state 255


State 164

   51 BODY_FILLING: GOTO .

    $default  reduce using rule 51 (BODY_FILLING)


State 165

   52 BODY_FILLING: LABEL .

    $default  reduce using rule 52 (BODY_FILLING)


State 166

   50 BODY_FILLING: SWITCH .

    $default  reduce using rule 50 (BODY_FILLING)


State 167

   53 BODY_FILLING: IF .

    $default  reduce using rule 53 (BODY_FILLING)


State 168

  157 IF: IF_FIRST . MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD
  158   | IF_FIRST . MULTY_ELSEIF_SECOND
  159   | IF_FIRST . MULTY_ELSE_THIRD
  160   | IF_FIRST .

    t_else  shift, and go to state 256

    $default  reduce using rule 160 (IF)

    MULTY_ELSEIF_SECOND  go to state 257
    ELSEIF_SECOND        go to state 258
    MULTY_ELSE_THIRD     go to state 259
    ELSE_THIRD           go to state 260


State 169

   58 BODY_FILLING: RETURN .

    $default  reduce using rule 58 (BODY_FILLING)


State 170

   56 BODY_FILLING: SHORT_EXPR .

    $default  reduce using rule 56 (BODY_FILLING)


State 171

   49 BODY_FILLING: FOR .

    $default  reduce using rule 49 (BODY_FILLING)


State 172

   57 BODY_FILLING: ARRAY_BODY .

    $default  reduce using rule 57 (BODY_FILLING)


State 173

  205 MULTI_AR: ARRAY_INDEX .
  206         | ARRAY_INDEX . MULTI_AR

    t_open_sq  shift, and go to state 156

    $default  reduce using rule 205 (MULTI_AR)

    ARRAY_INDEX  go to state 173
    MULTI_AR     go to state 261


State 174

   54 BODY_FILLING: MULTI_AR .

    $default  reduce using rule 54 (BODY_FILLING)


State 175

   60 BODY_FILLING: SLICE .

    $default  reduce using rule 60 (BODY_FILLING)


State 176

   59 BODY_FILLING: STRUCT .

    $default  reduce using rule 59 (BODY_FILLING)


State 177

   47 BODY_START: BODY_START END_SYMBOLS .

    $default  reduce using rule 47 (BODY_START)


State 178

   63 BODY_FILLING: INTERFACE .

    $default  reduce using rule 63 (BODY_FILLING)


State 179

  257 INT_BODY: t_id t_open_paren t_vtype . t_close_paren

    t_close_paren  shift, and go to state 262


State 180

  101 PARAM: t_open_paren t_close_paren .

    $default  reduce using rule 101 (PARAM)


State 181

  107 PARAM_END_FULFILL: t_enter .
  109 PARAM_FULFILL: t_enter .

    t_close_paren  reduce using rule 107 (PARAM_END_FULFILL)
    $default       reduce using rule 109 (PARAM_FULFILL)


State 182

  100 PARAM: PARAM_START PARAM_END .

    $default  reduce using rule 100 (PARAM)


State 183

  104 PARAM_END: PARAM_END_FULFILL . t_close_paren

    t_close_paren  shift, and go to state 263


State 184

  103 PARAM_START: PARAM_START PARAM_FULFILL .

    $default  reduce using rule 103 (PARAM_START)


State 185

  182 EXPR: VALUE .

    $default  reduce using rule 182 (EXPR)


State 186

  105 PARAM_END_FULFILL: EXPR .
  106                  | EXPR . t_param_const
  108 PARAM_FULFILL: EXPR . t_comma
  183 EXPR: EXPR . t_sign VALUE

    t_param_const  shift, and go to state 264
    t_sign         shift, and go to state 201
    t_comma        shift, and go to state 265

    $default  reduce using rule 105 (PARAM_END_FULFILL)


State 187

  252 INT_START: t_type t_id t_interface t_open_br END_SYMBOLS INT_BODY INT_END .

    $default  reduce using rule 252 (INT_START)


State 188

   99 FUNC_CALL: t_id . PARAM
  258 INT_BODY: INT_BODY END_SYMBOLS t_id . t_open_paren t_vtype t_close_paren

    t_open_paren  shift, and go to state 266

    PARAM        go to state 110
    PARAM_START  go to state 111


State 189

  259 INT_BODY: INT_BODY END_SYMBOLS FUNC_CALL . t_vtype
  260         | INT_BODY END_SYMBOLS FUNC_CALL .

    t_vtype  shift, and go to state 267

    $default  reduce using rule 260 (INT_BODY)


State 190

  253 INT_START: t_type t_id t_interface t_enter t_open_br END_SYMBOLS INT_BODY . INT_END
  258 INT_BODY: INT_BODY . END_SYMBOLS t_id t_open_paren t_vtype t_close_paren
  259         | INT_BODY . END_SYMBOLS FUNC_CALL t_vtype
  260         | INT_BODY . END_SYMBOLS FUNC_CALL

    t_close_br   shift, and go to state 35
    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 114
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 115
    INT_END      go to state 268


State 191

  112 SHIFT_AC: t_int_const .

    $default  reduce using rule 112 (SHIFT_AC)


State 192

  111 SHIFT_AC: t_id .

    $default  reduce using rule 111 (SHIFT_AC)


State 193

  110 SHIFT: SHIFT_AC t_shift_const SHIFT_AC .

    $default  reduce using rule 110 (SHIFT)


State 194

   99 FUNC_CALL: t_id . PARAM
  115 METHOD_FULFILL: t_id .

    t_open_paren  shift, and go to state 119

    $default  reduce using rule 115 (METHOD_FULFILL)

    PARAM        go to state 110
    PARAM_START  go to state 111


State 195

  114 METHOD: METHOD t_dot METHOD_FULFILL .

    $default  reduce using rule 114 (METHOD)


State 196

  113 METHOD: METHOD_FULFILL t_dot METHOD_FULFILL .

    $default  reduce using rule 113 (METHOD)


State 197

  197 EXPR_END: t_close_paren .

    $default  reduce using rule 197 (EXPR_END)


State 198

   90 BOOLEAN: BOOLEAN t_bool . VALUE

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 126
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_pointer           shift, and go to state 81

    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 269
    EXPR_START      go to state 89


State 199

  133 VALUE: EXPR_START BOOLEAN EXPR_END .

    $default  reduce using rule 133 (VALUE)


State 200

   89 BOOLEAN: VALUE t_bool . VALUE

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 126
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_pointer           shift, and go to state 81

    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 270
    EXPR_START      go to state 89


State 201

  183 EXPR: EXPR t_sign . VALUE

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 126
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_pointer           shift, and go to state 81

    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 271
    EXPR_START      go to state 89


State 202

  132 VALUE: EXPR_START EXPR EXPR_END .

    $default  reduce using rule 132 (VALUE)


State 203

  214 ENUM: ENUM t_comma VALUE .

    $default  reduce using rule 214 (ENUM)


State 204

  226 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id . METHOD
  227            | STRUCT_BODY END_SYMBOLS t_id . t_vtype
  228            | STRUCT_BODY END_SYMBOLS t_id . t_id
  229            | STRUCT_BODY END_SYMBOLS t_id .

    t_vtype  shift, and go to state 272
    t_id     shift, and go to state 273

    $default  reduce using rule 229 (STRUCT_BODY)

    FUNC_CALL       go to state 120
    METHOD          go to state 274
    METHOD_FULFILL  go to state 86


State 205

  232 STRUCT_START: t_type t_id t_struct_const t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END .

    $default  reduce using rule 232 (STRUCT_START)


State 206

   39 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren t_close_paren .

    $default  reduce using rule 39 (FUNC_RETURN_VALUE_FULFILL)


State 207

   38 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren TYPE_AND_STRUCT . t_close_paren

    t_close_paren  shift, and go to state 275


State 208

   30 FUNC_PARAM_FULFILL_SECOND: t_id TYPE_AND_STRUCT . t_comma
   33 FUNC_PARAM_FULFILL_SECOND_END: t_id TYPE_AND_STRUCT .

    t_comma  shift, and go to state 276

    $default  reduce using rule 33 (FUNC_PARAM_FULFILL_SECOND_END)


State 209

   24 FUNC_PARAM_SECOND_END: FUNC_PARAM_FULFILL_SECOND_END t_close_paren .

    $default  reduce using rule 24 (FUNC_PARAM_SECOND_END)


State 210

   31 FUNC_PARAM_FULFILL_SECOND: TYPE_AND_STRUCT t_comma .

    $default  reduce using rule 31 (FUNC_PARAM_FULFILL_SECOND)


State 211

   18 FUNC_SECOND_PART: FUNC_RETURN_VALUE TYPE_AND_STRUCT BODY .

    $default  reduce using rule 18 (FUNC_SECOND_PART)


State 212

   99 FUNC_CALL: t_id . PARAM

    t_open_paren  shift, and go to state 119

    PARAM        go to state 110
    PARAM_START  go to state 111


State 213

   91 DEFER: t_defer FUNC_CALL .

    $default  reduce using rule 91 (DEFER)


State 214

   64 VAR: t_var t_id . ASSIGNMENT EXPR
   65    | t_var t_id . ASSIGNMENT EXPR t_vtype
   66    | t_var t_id . ASSIGNMENT BOOLEAN
   69    | t_var t_id . t_id ASSIGNMENT VALUE
   71    | t_var t_id . ASSIGNMENT MULTI_AR t_vtype PLENTY
   74    | t_var t_id . ASSIGNMENT MAKE
   79    | t_var t_id . ASSIGNMENT SLICE
   80    | t_var t_id . MAPS
   82    | t_var t_id . t_id ASSIGNMENT ST_EMBEDDED
   83    | t_var t_id . ASSIGNMENT ST_EMBEDDED
   87    | t_var t_id . POINTER
   88    | t_var t_id . POINTER ASSIGNMENT EXPR
  198 ARRAY_BODY: t_var t_id . MULTI_AR t_vtype
  199           | t_var t_id . MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  200           | t_var t_id . MULTI_AR t_vtype ASSIGNMENT MAKE

    t_vtype     shift, and go to state 237
    t_map       shift, and go to state 277
    t_id        shift, and go to state 278
    t_comma     shift, and go to state 253
    t_equality  shift, and go to state 240
    t_open_sq   shift, and go to state 156
    t_pointer   shift, and go to state 81

    ASSIGNMENT   go to state 279
    POINTER      go to state 280
    ARRAY_INDEX  go to state 173
    MULTI_AR     go to state 281
    MAPS         go to state 282


State 215

   64 VAR: t_var . t_id ASSIGNMENT EXPR
   65    | t_var . t_id ASSIGNMENT EXPR t_vtype
   66    | t_var . t_id ASSIGNMENT BOOLEAN
   69    | t_var . t_id t_id ASSIGNMENT VALUE
   71    | t_var . t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   74    | t_var . t_id ASSIGNMENT MAKE
   79    | t_var . t_id ASSIGNMENT SLICE
   80    | t_var . t_id MAPS
   82    | t_var . t_id t_id ASSIGNMENT ST_EMBEDDED
   83    | t_var . t_id ASSIGNMENT ST_EMBEDDED
   87    | t_var . t_id POINTER
   88    | t_var . t_id POINTER ASSIGNMENT EXPR

    t_id  shift, and go to state 283


State 216

   67 VAR: t_id . SHORT_ASSIGN EXPR
   68    | t_id . ASSIGNMENT EXPR
   70    | t_id . SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   72    | t_id . SHORT_ASSIGN BOOLEAN
   73    | t_id . MULTI_AR ASSIGNMENT EXPR
   75    | t_id . SHORT_ASSIGN MAKE
   76    | t_id . MULTI_AR ASSIGNMENT MAKE
   77    | t_id . SHORT_ASSIGN SLICE
   78    | t_id . ASSIGNMENT SLICE
   81    | t_id . SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   84    | t_id . SHORT_ASSIGN ST_EMBEDDED
   99 FUNC_CALL: t_id . PARAM
  111 SHIFT_AC: t_id .
  115 METHOD_FULFILL: t_id .
  124 VALUE: t_id .

    t_vtype       shift, and go to state 237
    t_short_dec   shift, and go to state 238
    t_comma       shift, and go to state 239
    t_equality    shift, and go to state 240
    t_open_paren  shift, and go to state 119
    t_open_sq     shift, and go to state 156

    t_shift_const  reduce using rule 111 (SHIFT_AC)
    t_dot          reduce using rule 115 (METHOD_FULFILL)
    $default       reduce using rule 124 (VALUE)

    ASSIGNMENT    go to state 244
    SHORT_ASSIGN  go to state 245
    PARAM         go to state 110
    PARAM_START   go to state 111
    ARRAY_INDEX   go to state 173
    MULTI_AR      go to state 246


State 217

  189 CONDITION: t_true .

    $default  reduce using rule 189 (CONDITION)


State 218

  190 CONDITION: t_false .

    $default  reduce using rule 190 (CONDITION)


State 219

  185 INIT_STATE: VAR .

    $default  reduce using rule 185 (INIT_STATE)


State 220

   90 BOOLEAN: BOOLEAN . t_bool VALUE
  188 CONDITION: BOOLEAN .

    t_bool  shift, and go to state 198

    $default  reduce using rule 188 (CONDITION)


State 221

  116 METHOD_FULFILL: FUNC_CALL .
  128 VALUE: FUNC_CALL .
  186 INIT_STATE: FUNC_CALL .

    t_semicolon  reduce using rule 186 (INIT_STATE)
    t_dot        reduce using rule 116 (METHOD_FULFILL)
    $default     reduce using rule 128 (VALUE)


State 222

   85 VAR: METHOD . ASSIGNMENT VALUE
  114 METHOD: METHOD . t_dot METHOD_FULFILL
  131 VALUE: METHOD .

    t_vtype     shift, and go to state 237
    t_comma     shift, and go to state 253
    t_equality  shift, and go to state 240
    t_dot       shift, and go to state 124

    $default  reduce using rule 131 (VALUE)

    ASSIGNMENT  go to state 254


State 223

   86 VAR: POINTER . ASSIGNMENT EXPR
  130 VALUE: POINTER .

    t_vtype     shift, and go to state 237
    t_comma     shift, and go to state 253
    t_equality  shift, and go to state 240

    $default  reduce using rule 130 (VALUE)

    ASSIGNMENT  go to state 255


State 224

   89 BOOLEAN: VALUE . t_bool VALUE

    t_bool  shift, and go to state 200


State 225

  162 IF_FIRST: t_if INIT_STATE . t_semicolon CONDITION BODY_FOR_LOOP

    t_semicolon  shift, and go to state 284


State 226

  161 IF_FIRST: t_if CONDITION . BODY_FOR_LOOP

    t_open_br  shift, and go to state 285

    BODY_FOR_LOOP        go to state 286
    BODY_FOR_LOOP_START  go to state 287


State 227

  141 SWITCH_BODY_START: t_open_br .

    $default  reduce using rule 141 (SWITCH_BODY_START)


State 228

  138 SWITCH: t_switch SWITCH_BODY .

    $default  reduce using rule 138 (SWITCH)


State 229

  139 SWITCH_BODY: SWITCH_BODY_START . SWITCH_BODY_END
  142 SWITCH_BODY_START: SWITCH_BODY_START . END_SYMBOLS
  143                  | SWITCH_BODY_START . CASE
  144 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START . DEFAULT

    t_case       shift, and go to state 288
    t_default    shift, and go to state 289
    t_close_br   shift, and go to state 290
    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    CASE             go to state 291
    DEFAULT          go to state 292
    SWITCH_BODY_END  go to state 293
    END_SYMBOLS      go to state 294


State 230

  140 SWITCH_BODY: SWITCH_BODY_START_WITH_DEFAULT . SWITCH_BODY_END
  145 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START_WITH_DEFAULT . CASE

    t_case      shift, and go to state 288
    t_close_br  shift, and go to state 290

    CASE             go to state 295
    SWITCH_BODY_END  go to state 296


State 231

  137 SWITCH: t_switch EXPR . SWITCH_BODY
  183 EXPR: EXPR . t_sign VALUE

    t_open_br  shift, and go to state 227
    t_sign     shift, and go to state 201

    SWITCH_BODY                     go to state 297
    SWITCH_BODY_START               go to state 229
    SWITCH_BODY_START_WITH_DEFAULT  go to state 230


State 232

  136 SWITCH: t_switch INIT_STATE . t_semicolon EXPR SWITCH_BODY

    t_semicolon  shift, and go to state 298


State 233

  194 FOR: t_for INIT_STATE . t_semicolon CONDITION t_semicolon POST_STATE BODY_FOR_LOOP

    t_semicolon  shift, and go to state 299


State 234

  195 FOR: t_for CONDITION . BODY_FOR_LOOP

    t_open_br  shift, and go to state 285

    BODY_FOR_LOOP        go to state 300
    BODY_FOR_LOOP_START  go to state 287


State 235

  134 GOTO: t_goto t_id .

    $default  reduce using rule 134 (GOTO)


State 236

  177 RETURN: t_return EXPR .
  178       | t_return EXPR . MANY_RETURN_START MANY_RETURN_START_END
  183 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 201
    t_comma  shift, and go to state 301

    $default  reduce using rule 177 (RETURN)

    MANY_RETURN_START  go to state 302


State 237

   92 ASSIGNMENT: t_vtype . t_equality

    t_equality  shift, and go to state 303


State 238

   96 SHORT_ASSIGN: t_short_dec .

    $default  reduce using rule 96 (SHORT_ASSIGN)


State 239

   94 ASSIGNMENT: t_comma . t_id ASSIGNMENT EXPR t_comma
   95           | t_comma . t_id ASSIGNMENT BOOLEAN t_comma
   97 SHORT_ASSIGN: t_comma . t_id SHORT_ASSIGN EXPR t_comma
   98             | t_comma . t_id SHORT_ASSIGN BOOLEAN t_comma

    t_id  shift, and go to state 304


State 240

   93 ASSIGNMENT: t_equality .

    $default  reduce using rule 93 (ASSIGNMENT)


State 241

  201 ARRAY_INDEX: t_open_sq . t_int_const t_close_sq
  202            | t_open_sq . t_id t_close_sq
  203            | t_open_sq . t_string t_close_sq
  204            | t_open_sq . t_close_sq
  207 MULTI_AR: t_open_sq . t_param_const t_close_sq
  217 SLICE: t_id t_open_sq . VALUE t_colon VALUE t_close_sq
  218      | t_id t_open_sq . t_colon VALUE t_close_sq
  219      | t_id t_open_sq . VALUE t_colon t_close_sq

    t_param_const       shift, and go to state 247
    t_int_const         shift, and go to state 305
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 306
    t_string            shift, and go to state 307
    t_open_paren        shift, and go to state 77
    t_close_sq          shift, and go to state 251
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_colon             shift, and go to state 308
    t_pointer           shift, and go to state 81

    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 309
    EXPR_START      go to state 89


State 242

  135 LABEL: t_id t_colon .

    $default  reduce using rule 135 (LABEL)


State 243

  184 SHORT_EXPR: t_id t_short_expr . t_id

    t_id  shift, and go to state 310


State 244

   68 VAR: t_id ASSIGNMENT . EXPR
   78    | t_id ASSIGNMENT . SLICE

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 311
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_pointer           shift, and go to state 81

    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 185
    EXPR            go to state 312
    EXPR_START      go to state 89
    SLICE           go to state 313


State 245

   67 VAR: t_id SHORT_ASSIGN . EXPR
   70    | t_id SHORT_ASSIGN . MULTI_AR t_vtype PLENTY
   72    | t_id SHORT_ASSIGN . BOOLEAN
   75    | t_id SHORT_ASSIGN . MAKE
   77    | t_id SHORT_ASSIGN . SLICE
   81    | t_id SHORT_ASSIGN . t_make t_open_paren MAPS t_close_paren
   84    | t_id SHORT_ASSIGN . ST_EMBEDDED

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 314
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_open_sq           shift, and go to state 156
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_make              shift, and go to state 315
    t_pointer           shift, and go to state 81

    BOOLEAN         go to state 316
    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 128
    EXPR            go to state 317
    EXPR_START      go to state 89
    ARRAY_INDEX     go to state 173
    MULTI_AR        go to state 318
    MAKE            go to state 319
    SLICE           go to state 320
    FIELD           go to state 321
    ST_EMBEDDED     go to state 322


State 246

   73 VAR: t_id MULTI_AR . ASSIGNMENT EXPR
   76    | t_id MULTI_AR . ASSIGNMENT MAKE

    t_vtype     shift, and go to state 237
    t_comma     shift, and go to state 253
    t_equality  shift, and go to state 240

    ASSIGNMENT  go to state 323


State 247

  207 MULTI_AR: t_open_sq t_param_const . t_close_sq

    t_close_sq  shift, and go to state 324


State 248

  201 ARRAY_INDEX: t_open_sq t_int_const . t_close_sq

    t_close_sq  shift, and go to state 325


State 249

  202 ARRAY_INDEX: t_open_sq t_id . t_close_sq

    t_close_sq  shift, and go to state 326


State 250

  203 ARRAY_INDEX: t_open_sq t_string . t_close_sq

    t_close_sq  shift, and go to state 327


State 251

  204 ARRAY_INDEX: t_open_sq t_close_sq .

    $default  reduce using rule 204 (ARRAY_INDEX)


State 252

   46 BODY_START: BODY_START BODY_FILLING END_SYMBOLS .

    $default  reduce using rule 46 (BODY_START)


State 253

   94 ASSIGNMENT: t_comma . t_id ASSIGNMENT EXPR t_comma
   95           | t_comma . t_id ASSIGNMENT BOOLEAN t_comma

    t_id  shift, and go to state 328


State 254

   85 VAR: METHOD ASSIGNMENT . VALUE

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 126
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_pointer           shift, and go to state 81

    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 329
    EXPR_START      go to state 89


State 255

   86 VAR: POINTER ASSIGNMENT . EXPR

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 126
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_pointer           shift, and go to state 81

    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 185
    EXPR            go to state 330
    EXPR_START      go to state 89


State 256

  173 ELSEIF_SECOND: t_else . t_if CONDITION BODY_FOR_LOOP
  176 ELSE_THIRD: t_else . BODY_FOR_LOOP

    t_if       shift, and go to state 331
    t_open_br  shift, and go to state 285

    BODY_FOR_LOOP        go to state 332
    BODY_FOR_LOOP_START  go to state 287


State 257

  157 IF: IF_FIRST MULTY_ELSEIF_SECOND . MULTY_ELSE_THIRD
  158   | IF_FIRST MULTY_ELSEIF_SECOND .
  172 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND . ELSEIF_SECOND

    t_else  shift, and go to state 256

    $default  reduce using rule 158 (IF)

    ELSEIF_SECOND     go to state 333
    MULTY_ELSE_THIRD  go to state 334
    ELSE_THIRD        go to state 260


State 258

  171 MULTY_ELSEIF_SECOND: ELSEIF_SECOND .

    $default  reduce using rule 171 (MULTY_ELSEIF_SECOND)


State 259

  159 IF: IF_FIRST MULTY_ELSE_THIRD .
  175 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD . ELSE_THIRD

    t_else  shift, and go to state 335

    $default  reduce using rule 159 (IF)

    ELSE_THIRD  go to state 336


State 260

  174 MULTY_ELSE_THIRD: ELSE_THIRD .

    $default  reduce using rule 174 (MULTY_ELSE_THIRD)


State 261

  206 MULTI_AR: ARRAY_INDEX MULTI_AR .

    $default  reduce using rule 206 (MULTI_AR)


State 262

  257 INT_BODY: t_id t_open_paren t_vtype t_close_paren .

    $default  reduce using rule 257 (INT_BODY)


State 263

  104 PARAM_END: PARAM_END_FULFILL t_close_paren .

    $default  reduce using rule 104 (PARAM_END)


State 264

  106 PARAM_END_FULFILL: EXPR t_param_const .

    $default  reduce using rule 106 (PARAM_END_FULFILL)


State 265

  108 PARAM_FULFILL: EXPR t_comma .

    $default  reduce using rule 108 (PARAM_FULFILL)


State 266

  101 PARAM: t_open_paren . t_close_paren
  102 PARAM_START: t_open_paren .
  258 INT_BODY: INT_BODY END_SYMBOLS t_id t_open_paren . t_vtype t_close_paren

    t_vtype        shift, and go to state 337
    t_close_paren  shift, and go to state 180

    $default  reduce using rule 102 (PARAM_START)


State 267

  259 INT_BODY: INT_BODY END_SYMBOLS FUNC_CALL t_vtype .

    $default  reduce using rule 259 (INT_BODY)


State 268

  253 INT_START: t_type t_id t_interface t_enter t_open_br END_SYMBOLS INT_BODY INT_END .

    $default  reduce using rule 253 (INT_START)


State 269

   90 BOOLEAN: BOOLEAN t_bool VALUE .

    $default  reduce using rule 90 (BOOLEAN)


State 270

   89 BOOLEAN: VALUE t_bool VALUE .

    $default  reduce using rule 89 (BOOLEAN)


State 271

  183 EXPR: EXPR t_sign VALUE .

    $default  reduce using rule 183 (EXPR)


State 272

  227 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id t_vtype .

    $default  reduce using rule 227 (STRUCT_BODY)


State 273

   99 FUNC_CALL: t_id . PARAM
  115 METHOD_FULFILL: t_id .
  228 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id t_id .

    t_open_paren  shift, and go to state 119

    t_dot     reduce using rule 115 (METHOD_FULFILL)
    $default  reduce using rule 228 (STRUCT_BODY)

    PARAM        go to state 110
    PARAM_START  go to state 111


State 274

  114 METHOD: METHOD . t_dot METHOD_FULFILL
  226 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id METHOD .

    t_dot  shift, and go to state 124

    $default  reduce using rule 226 (STRUCT_BODY)


State 275

   38 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren TYPE_AND_STRUCT t_close_paren .

    $default  reduce using rule 38 (FUNC_RETURN_VALUE_FULFILL)


State 276

   30 FUNC_PARAM_FULFILL_SECOND: t_id TYPE_AND_STRUCT t_comma .

    $default  reduce using rule 30 (FUNC_PARAM_FULFILL_SECOND)


State 277

  220 MAPS: t_map . t_open_sq t_vtype t_close_sq t_vtype

    t_open_sq  shift, and go to state 338


State 278

   69 VAR: t_var t_id t_id . ASSIGNMENT VALUE
   82    | t_var t_id t_id . ASSIGNMENT ST_EMBEDDED

    t_vtype     shift, and go to state 237
    t_comma     shift, and go to state 253
    t_equality  shift, and go to state 240

    ASSIGNMENT  go to state 339


State 279

   64 VAR: t_var t_id ASSIGNMENT . EXPR
   65    | t_var t_id ASSIGNMENT . EXPR t_vtype
   66    | t_var t_id ASSIGNMENT . BOOLEAN
   71    | t_var t_id ASSIGNMENT . MULTI_AR t_vtype PLENTY
   74    | t_var t_id ASSIGNMENT . MAKE
   79    | t_var t_id ASSIGNMENT . SLICE
   83    | t_var t_id ASSIGNMENT . ST_EMBEDDED

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 314
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_open_sq           shift, and go to state 156
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_make              shift, and go to state 340
    t_pointer           shift, and go to state 81

    BOOLEAN         go to state 341
    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 128
    EXPR            go to state 342
    EXPR_START      go to state 89
    ARRAY_INDEX     go to state 173
    MULTI_AR        go to state 343
    MAKE            go to state 344
    SLICE           go to state 345
    FIELD           go to state 321
    ST_EMBEDDED     go to state 346


State 280

   87 VAR: t_var t_id POINTER .
   88    | t_var t_id POINTER . ASSIGNMENT EXPR

    t_vtype     shift, and go to state 237
    t_comma     shift, and go to state 253
    t_equality  shift, and go to state 240

    $default  reduce using rule 87 (VAR)

    ASSIGNMENT  go to state 347


State 281

  198 ARRAY_BODY: t_var t_id MULTI_AR . t_vtype
  199           | t_var t_id MULTI_AR . t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  200           | t_var t_id MULTI_AR . t_vtype ASSIGNMENT MAKE

    t_vtype  shift, and go to state 348


State 282

   80 VAR: t_var t_id MAPS .

    $default  reduce using rule 80 (VAR)


State 283

   64 VAR: t_var t_id . ASSIGNMENT EXPR
   65    | t_var t_id . ASSIGNMENT EXPR t_vtype
   66    | t_var t_id . ASSIGNMENT BOOLEAN
   69    | t_var t_id . t_id ASSIGNMENT VALUE
   71    | t_var t_id . ASSIGNMENT MULTI_AR t_vtype PLENTY
   74    | t_var t_id . ASSIGNMENT MAKE
   79    | t_var t_id . ASSIGNMENT SLICE
   80    | t_var t_id . MAPS
   82    | t_var t_id . t_id ASSIGNMENT ST_EMBEDDED
   83    | t_var t_id . ASSIGNMENT ST_EMBEDDED
   87    | t_var t_id . POINTER
   88    | t_var t_id . POINTER ASSIGNMENT EXPR

    t_vtype     shift, and go to state 237
    t_map       shift, and go to state 277
    t_id        shift, and go to state 278
    t_comma     shift, and go to state 253
    t_equality  shift, and go to state 240
    t_pointer   shift, and go to state 81

    ASSIGNMENT  go to state 279
    POINTER     go to state 280
    MAPS        go to state 282


State 284

  162 IF_FIRST: t_if INIT_STATE t_semicolon . CONDITION BODY_FOR_LOOP

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 126
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_true              shift, and go to state 217
    t_false             shift, and go to state 218
    t_pointer           shift, and go to state 81

    $default  reduce using rule 191 (CONDITION)

    BOOLEAN         go to state 220
    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 224
    CONDITION       go to state 349
    EXPR_START      go to state 89


State 285

  164 BODY_FOR_LOOP_START: t_open_br .
  165                    | t_open_br . END_SYMBOLS

    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    $default  reduce using rule 164 (BODY_FOR_LOOP_START)

    END_SYMBOLS  go to state 350


State 286

  161 IF_FIRST: t_if CONDITION BODY_FOR_LOOP .

    $default  reduce using rule 161 (IF_FIRST)


State 287

  163 BODY_FOR_LOOP: BODY_FOR_LOOP_START . BODY_FOR_LOOP_END
  166 BODY_FOR_LOOP_START: BODY_FOR_LOOP_START . LOOP_FILLING END_SYMBOLS

    t_defer      shift, and go to state 147
    t_interface  shift, and go to state 3
    t_var        shift, and go to state 148
    t_if         shift, and go to state 149
    t_switch     shift, and go to state 150
    t_type       shift, and go to state 5
    t_for        shift, and go to state 151
    t_goto       shift, and go to state 152
    t_continue   shift, and go to state 351
    t_break      shift, and go to state 352
    t_return     shift, and go to state 153
    t_id         shift, and go to state 154
    t_close_br   shift, and go to state 353
    t_open_sq    shift, and go to state 156
    t_pointer    shift, and go to state 81

    BODY_FILLING       go to state 354
    VAR                go to state 159
    DEFER              go to state 160
    FUNC_CALL          go to state 161
    METHOD             go to state 162
    METHOD_FULFILL     go to state 86
    POINTER            go to state 163
    GOTO               go to state 164
    LABEL              go to state 165
    SWITCH             go to state 166
    IF                 go to state 167
    IF_FIRST           go to state 168
    BODY_FOR_LOOP_END  go to state 355
    LOOP_FILLING       go to state 356
    RETURN             go to state 169
    SHORT_EXPR         go to state 170
    FOR                go to state 171
    ARRAY_BODY         go to state 172
    ARRAY_INDEX        go to state 173
    MULTI_AR           go to state 174
    SLICE              go to state 175
    STRUCT             go to state 176
    STRUCT_START       go to state 12
    INTERFACE          go to state 178
    INT_START          go to state 14


State 288

  146 CASE: t_case . CASE_STATEMENT CASE_BODY

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 126
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_pointer           shift, and go to state 81

    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 185
    MULTIPLE_ARG    go to state 357
    FIRST_PART      go to state 358
    CASE_STATEMENT  go to state 359
    EXPR            go to state 360
    EXPR_START      go to state 89


State 289

  147 DEFAULT: t_default . CASE_BODY

    t_colon  shift, and go to state 361

    CASE_BODY  go to state 362


State 290

  156 SWITCH_BODY_END: t_close_br .

    $default  reduce using rule 156 (SWITCH_BODY_END)


State 291

  143 SWITCH_BODY_START: SWITCH_BODY_START CASE .

    $default  reduce using rule 143 (SWITCH_BODY_START)


State 292

  144 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START DEFAULT .

    $default  reduce using rule 144 (SWITCH_BODY_START_WITH_DEFAULT)


State 293

  139 SWITCH_BODY: SWITCH_BODY_START SWITCH_BODY_END .

    $default  reduce using rule 139 (SWITCH_BODY)


State 294

  142 SWITCH_BODY_START: SWITCH_BODY_START END_SYMBOLS .

    $default  reduce using rule 142 (SWITCH_BODY_START)


State 295

  145 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START_WITH_DEFAULT CASE .

    $default  reduce using rule 145 (SWITCH_BODY_START_WITH_DEFAULT)


State 296

  140 SWITCH_BODY: SWITCH_BODY_START_WITH_DEFAULT SWITCH_BODY_END .

    $default  reduce using rule 140 (SWITCH_BODY)


State 297

  137 SWITCH: t_switch EXPR SWITCH_BODY .

    $default  reduce using rule 137 (SWITCH)


State 298

  136 SWITCH: t_switch INIT_STATE t_semicolon . EXPR SWITCH_BODY

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 126
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_pointer           shift, and go to state 81

    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 185
    EXPR            go to state 363
    EXPR_START      go to state 89


State 299

  194 FOR: t_for INIT_STATE t_semicolon . CONDITION t_semicolon POST_STATE BODY_FOR_LOOP

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 126
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_true              shift, and go to state 217
    t_false             shift, and go to state 218
    t_pointer           shift, and go to state 81

    $default  reduce using rule 191 (CONDITION)

    BOOLEAN         go to state 220
    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 224
    CONDITION       go to state 364
    EXPR_START      go to state 89


State 300

  195 FOR: t_for CONDITION BODY_FOR_LOOP .

    $default  reduce using rule 195 (FOR)


State 301

  179 MANY_RETURN_START: t_comma .

    $default  reduce using rule 179 (MANY_RETURN_START)


State 302

  178 RETURN: t_return EXPR MANY_RETURN_START . MANY_RETURN_START_END
  180 MANY_RETURN_START: MANY_RETURN_START . EXPR t_comma

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 126
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_pointer           shift, and go to state 81

    FUNC_CALL              go to state 82
    SHIFT                  go to state 83
    SHIFT_AC               go to state 84
    METHOD                 go to state 85
    METHOD_FULFILL         go to state 86
    POINTER                go to state 87
    VALUE                  go to state 185
    MANY_RETURN_START_END  go to state 365
    EXPR                   go to state 366
    EXPR_START             go to state 89


State 303

   92 ASSIGNMENT: t_vtype t_equality .

    $default  reduce using rule 92 (ASSIGNMENT)


State 304

   94 ASSIGNMENT: t_comma t_id . ASSIGNMENT EXPR t_comma
   95           | t_comma t_id . ASSIGNMENT BOOLEAN t_comma
   97 SHORT_ASSIGN: t_comma t_id . SHORT_ASSIGN EXPR t_comma
   98             | t_comma t_id . SHORT_ASSIGN BOOLEAN t_comma

    t_vtype      shift, and go to state 237
    t_short_dec  shift, and go to state 238
    t_comma      shift, and go to state 239
    t_equality   shift, and go to state 240

    ASSIGNMENT    go to state 367
    SHORT_ASSIGN  go to state 368


State 305

  112 SHIFT_AC: t_int_const .
  122 VALUE: t_int_const .
  201 ARRAY_INDEX: t_open_sq t_int_const . t_close_sq

    t_close_sq  shift, and go to state 325

    t_colon   reduce using rule 122 (VALUE)
    $default  reduce using rule 112 (SHIFT_AC)


State 306

   99 FUNC_CALL: t_id . PARAM
  111 SHIFT_AC: t_id .
  115 METHOD_FULFILL: t_id .
  124 VALUE: t_id .
  202 ARRAY_INDEX: t_open_sq t_id . t_close_sq

    t_open_paren  shift, and go to state 119
    t_close_sq    shift, and go to state 326

    t_dot     reduce using rule 115 (METHOD_FULFILL)
    t_colon   reduce using rule 124 (VALUE)
    $default  reduce using rule 111 (SHIFT_AC)

    PARAM        go to state 110
    PARAM_START  go to state 111


State 307

  125 VALUE: t_string .
  203 ARRAY_INDEX: t_open_sq t_string . t_close_sq

    t_close_sq  shift, and go to state 327

    $default  reduce using rule 125 (VALUE)


State 308

  218 SLICE: t_id t_open_sq t_colon . VALUE t_close_sq

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 126
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_pointer           shift, and go to state 81

    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 369
    EXPR_START      go to state 89


State 309

  217 SLICE: t_id t_open_sq VALUE . t_colon VALUE t_close_sq
  219      | t_id t_open_sq VALUE . t_colon t_close_sq

    t_colon  shift, and go to state 370


State 310

  184 SHORT_EXPR: t_id t_short_expr t_id .

    $default  reduce using rule 184 (SHORT_EXPR)


State 311

   99 FUNC_CALL: t_id . PARAM
  111 SHIFT_AC: t_id .
  115 METHOD_FULFILL: t_id .
  124 VALUE: t_id .
  217 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  218      | t_id . t_open_sq t_colon VALUE t_close_sq
  219      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_open_paren  shift, and go to state 119
    t_open_sq     shift, and go to state 371

    t_shift_const  reduce using rule 111 (SHIFT_AC)
    t_dot          reduce using rule 115 (METHOD_FULFILL)
    $default       reduce using rule 124 (VALUE)

    PARAM        go to state 110
    PARAM_START  go to state 111


State 312

   68 VAR: t_id ASSIGNMENT EXPR .
  183 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 201

    $default  reduce using rule 68 (VAR)


State 313

   78 VAR: t_id ASSIGNMENT SLICE .

    $default  reduce using rule 78 (VAR)


State 314

   99 FUNC_CALL: t_id . PARAM
  111 SHIFT_AC: t_id .
  115 METHOD_FULFILL: t_id .
  124 VALUE: t_id .
  217 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  218      | t_id . t_open_sq t_colon VALUE t_close_sq
  219      | t_id . t_open_sq VALUE t_colon t_close_sq
  236 FIELD: t_id . FIELD_BODY

    t_open_br     shift, and go to state 372
    t_open_paren  shift, and go to state 119
    t_open_sq     shift, and go to state 371

    t_shift_const  reduce using rule 111 (SHIFT_AC)
    t_dot          reduce using rule 115 (METHOD_FULFILL)
    $default       reduce using rule 124 (VALUE)

    PARAM        go to state 110
    PARAM_START  go to state 111
    FIELD_BODY   go to state 373
    FIELD_START  go to state 374


State 315

   81 VAR: t_id SHORT_ASSIGN t_make . t_open_paren MAPS t_close_paren
  215 MAKE: t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  216     | t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_paren  shift, and go to state 375


State 316

   72 VAR: t_id SHORT_ASSIGN BOOLEAN .
   90 BOOLEAN: BOOLEAN . t_bool VALUE

    t_bool  shift, and go to state 198

    $default  reduce using rule 72 (VAR)


State 317

   67 VAR: t_id SHORT_ASSIGN EXPR .
  183 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 201

    $default  reduce using rule 67 (VAR)


State 318

   70 VAR: t_id SHORT_ASSIGN MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 376


State 319

   75 VAR: t_id SHORT_ASSIGN MAKE .

    $default  reduce using rule 75 (VAR)


State 320

   77 VAR: t_id SHORT_ASSIGN SLICE .

    $default  reduce using rule 77 (VAR)


State 321

  246 ST_EMBEDDED: FIELD .

    $default  reduce using rule 246 (ST_EMBEDDED)


State 322

   84 VAR: t_id SHORT_ASSIGN ST_EMBEDDED .

    $default  reduce using rule 84 (VAR)


State 323

   73 VAR: t_id MULTI_AR ASSIGNMENT . EXPR
   76    | t_id MULTI_AR ASSIGNMENT . MAKE

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 126
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_make              shift, and go to state 340
    t_pointer           shift, and go to state 81

    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 185
    EXPR            go to state 377
    EXPR_START      go to state 89
    MAKE            go to state 378


State 324

  207 MULTI_AR: t_open_sq t_param_const t_close_sq .

    $default  reduce using rule 207 (MULTI_AR)


State 325

  201 ARRAY_INDEX: t_open_sq t_int_const t_close_sq .

    $default  reduce using rule 201 (ARRAY_INDEX)


State 326

  202 ARRAY_INDEX: t_open_sq t_id t_close_sq .

    $default  reduce using rule 202 (ARRAY_INDEX)


State 327

  203 ARRAY_INDEX: t_open_sq t_string t_close_sq .

    $default  reduce using rule 203 (ARRAY_INDEX)


State 328

   94 ASSIGNMENT: t_comma t_id . ASSIGNMENT EXPR t_comma
   95           | t_comma t_id . ASSIGNMENT BOOLEAN t_comma

    t_vtype     shift, and go to state 237
    t_comma     shift, and go to state 253
    t_equality  shift, and go to state 240

    ASSIGNMENT  go to state 367


State 329

   85 VAR: METHOD ASSIGNMENT VALUE .

    $default  reduce using rule 85 (VAR)


State 330

   86 VAR: POINTER ASSIGNMENT EXPR .
  183 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 201

    $default  reduce using rule 86 (VAR)


State 331

  173 ELSEIF_SECOND: t_else t_if . CONDITION BODY_FOR_LOOP

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 126
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_true              shift, and go to state 217
    t_false             shift, and go to state 218
    t_pointer           shift, and go to state 81

    $default  reduce using rule 191 (CONDITION)

    BOOLEAN         go to state 220
    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 224
    CONDITION       go to state 379
    EXPR_START      go to state 89


State 332

  176 ELSE_THIRD: t_else BODY_FOR_LOOP .

    $default  reduce using rule 176 (ELSE_THIRD)


State 333

  172 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND ELSEIF_SECOND .

    $default  reduce using rule 172 (MULTY_ELSEIF_SECOND)


State 334

  157 IF: IF_FIRST MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD .
  175 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD . ELSE_THIRD

    t_else  shift, and go to state 335

    $default  reduce using rule 157 (IF)

    ELSE_THIRD  go to state 336


State 335

  176 ELSE_THIRD: t_else . BODY_FOR_LOOP

    t_open_br  shift, and go to state 285

    BODY_FOR_LOOP        go to state 332
    BODY_FOR_LOOP_START  go to state 287


State 336

  175 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD ELSE_THIRD .

    $default  reduce using rule 175 (MULTY_ELSE_THIRD)


State 337

  258 INT_BODY: INT_BODY END_SYMBOLS t_id t_open_paren t_vtype . t_close_paren

    t_close_paren  shift, and go to state 380


State 338

  220 MAPS: t_map t_open_sq . t_vtype t_close_sq t_vtype

    t_vtype  shift, and go to state 381


State 339

   69 VAR: t_var t_id t_id ASSIGNMENT . VALUE
   82    | t_var t_id t_id ASSIGNMENT . ST_EMBEDDED

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 382
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_pointer           shift, and go to state 81

    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 383
    EXPR_START      go to state 89
    FIELD           go to state 321
    ST_EMBEDDED     go to state 384


State 340

  215 MAKE: t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  216     | t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_paren  shift, and go to state 385


State 341

   66 VAR: t_var t_id ASSIGNMENT BOOLEAN .
   90 BOOLEAN: BOOLEAN . t_bool VALUE

    t_bool  shift, and go to state 198

    $default  reduce using rule 66 (VAR)


State 342

   64 VAR: t_var t_id ASSIGNMENT EXPR .
   65    | t_var t_id ASSIGNMENT EXPR . t_vtype
  183 EXPR: EXPR . t_sign VALUE

    t_vtype  shift, and go to state 386
    t_sign   shift, and go to state 201

    $default  reduce using rule 64 (VAR)


State 343

   71 VAR: t_var t_id ASSIGNMENT MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 387


State 344

   74 VAR: t_var t_id ASSIGNMENT MAKE .

    $default  reduce using rule 74 (VAR)


State 345

   79 VAR: t_var t_id ASSIGNMENT SLICE .

    $default  reduce using rule 79 (VAR)


State 346

   83 VAR: t_var t_id ASSIGNMENT ST_EMBEDDED .

    $default  reduce using rule 83 (VAR)


State 347

   88 VAR: t_var t_id POINTER ASSIGNMENT . EXPR

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 126
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_pointer           shift, and go to state 81

    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 185
    EXPR            go to state 388
    EXPR_START      go to state 89


State 348

  198 ARRAY_BODY: t_var t_id MULTI_AR t_vtype .
  199           | t_var t_id MULTI_AR t_vtype . ASSIGNMENT MULTI_AR t_vtype PLENTY
  200           | t_var t_id MULTI_AR t_vtype . ASSIGNMENT MAKE

    t_vtype     shift, and go to state 237
    t_comma     shift, and go to state 253
    t_equality  shift, and go to state 240

    $default  reduce using rule 198 (ARRAY_BODY)

    ASSIGNMENT  go to state 389


State 349

  162 IF_FIRST: t_if INIT_STATE t_semicolon CONDITION . BODY_FOR_LOOP

    t_open_br  shift, and go to state 285

    BODY_FOR_LOOP        go to state 390
    BODY_FOR_LOOP_START  go to state 287


State 350

  165 BODY_FOR_LOOP_START: t_open_br END_SYMBOLS .

    $default  reduce using rule 165 (BODY_FOR_LOOP_START)


State 351

  170 LOOP_FILLING: t_continue .

    $default  reduce using rule 170 (LOOP_FILLING)


State 352

  169 LOOP_FILLING: t_break .

    $default  reduce using rule 169 (LOOP_FILLING)


State 353

  167 BODY_FOR_LOOP_END: t_close_br .

    $default  reduce using rule 167 (BODY_FOR_LOOP_END)


State 354

  168 LOOP_FILLING: BODY_FILLING .

    $default  reduce using rule 168 (LOOP_FILLING)


State 355

  163 BODY_FOR_LOOP: BODY_FOR_LOOP_START BODY_FOR_LOOP_END .

    $default  reduce using rule 163 (BODY_FOR_LOOP)


State 356

  166 BODY_FOR_LOOP_START: BODY_FOR_LOOP_START LOOP_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 391


State 357

  152 CASE_STATEMENT: MULTIPLE_ARG .

    $default  reduce using rule 152 (CASE_STATEMENT)


State 358

  148 MULTIPLE_ARG: FIRST_PART . SECOND_PART
  150 FIRST_PART: FIRST_PART . EXPR t_comma

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 126
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_pointer           shift, and go to state 81

    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 185
    SECOND_PART     go to state 392
    EXPR            go to state 393
    EXPR_START      go to state 89


State 359

  146 CASE: t_case CASE_STATEMENT . CASE_BODY

    t_colon  shift, and go to state 361

    CASE_BODY  go to state 394


State 360

  149 FIRST_PART: EXPR . t_comma
  153 CASE_STATEMENT: EXPR .
  183 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 201
    t_comma  shift, and go to state 395

    $default  reduce using rule 153 (CASE_STATEMENT)


State 361

  154 CASE_BODY: t_colon .

    $default  reduce using rule 154 (CASE_BODY)


State 362

  147 DEFAULT: t_default CASE_BODY .
  155 CASE_BODY: CASE_BODY . LOOP_FILLING END_SYMBOLS

    t_defer      shift, and go to state 147
    t_interface  shift, and go to state 3
    t_var        shift, and go to state 148
    t_if         shift, and go to state 149
    t_switch     shift, and go to state 150
    t_type       shift, and go to state 5
    t_for        shift, and go to state 151
    t_goto       shift, and go to state 152
    t_continue   shift, and go to state 351
    t_break      shift, and go to state 352
    t_return     shift, and go to state 153
    t_id         shift, and go to state 154
    t_open_sq    shift, and go to state 156
    t_pointer    shift, and go to state 81

    $default  reduce using rule 147 (DEFAULT)

    BODY_FILLING    go to state 354
    VAR             go to state 159
    DEFER           go to state 160
    FUNC_CALL       go to state 161
    METHOD          go to state 162
    METHOD_FULFILL  go to state 86
    POINTER         go to state 163
    GOTO            go to state 164
    LABEL           go to state 165
    SWITCH          go to state 166
    IF              go to state 167
    IF_FIRST        go to state 168
    LOOP_FILLING    go to state 396
    RETURN          go to state 169
    SHORT_EXPR      go to state 170
    FOR             go to state 171
    ARRAY_BODY      go to state 172
    ARRAY_INDEX     go to state 173
    MULTI_AR        go to state 174
    SLICE           go to state 175
    STRUCT          go to state 176
    STRUCT_START    go to state 12
    INTERFACE       go to state 178
    INT_START       go to state 14


State 363

  136 SWITCH: t_switch INIT_STATE t_semicolon EXPR . SWITCH_BODY
  183 EXPR: EXPR . t_sign VALUE

    t_open_br  shift, and go to state 227
    t_sign     shift, and go to state 201

    SWITCH_BODY                     go to state 397
    SWITCH_BODY_START               go to state 229
    SWITCH_BODY_START_WITH_DEFAULT  go to state 230


State 364

  194 FOR: t_for INIT_STATE t_semicolon CONDITION . t_semicolon POST_STATE BODY_FOR_LOOP

    t_semicolon  shift, and go to state 398


State 365

  178 RETURN: t_return EXPR MANY_RETURN_START MANY_RETURN_START_END .

    $default  reduce using rule 178 (RETURN)


State 366

  180 MANY_RETURN_START: MANY_RETURN_START EXPR . t_comma
  181 MANY_RETURN_START_END: EXPR .
  183 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 201
    t_comma  shift, and go to state 399

    $default  reduce using rule 181 (MANY_RETURN_START_END)


State 367

   94 ASSIGNMENT: t_comma t_id ASSIGNMENT . EXPR t_comma
   95           | t_comma t_id ASSIGNMENT . BOOLEAN t_comma

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 126
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_pointer           shift, and go to state 81

    BOOLEAN         go to state 400
    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 128
    EXPR            go to state 401
    EXPR_START      go to state 89


State 368

   97 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN . EXPR t_comma
   98             | t_comma t_id SHORT_ASSIGN . BOOLEAN t_comma

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 126
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_pointer           shift, and go to state 81

    BOOLEAN         go to state 402
    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 128
    EXPR            go to state 403
    EXPR_START      go to state 89


State 369

  218 SLICE: t_id t_open_sq t_colon VALUE . t_close_sq

    t_close_sq  shift, and go to state 404


State 370

  217 SLICE: t_id t_open_sq VALUE t_colon . VALUE t_close_sq
  219      | t_id t_open_sq VALUE t_colon . t_close_sq

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 126
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_close_sq          shift, and go to state 405
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_pointer           shift, and go to state 81

    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 406
    EXPR_START      go to state 89


State 371

  217 SLICE: t_id t_open_sq . VALUE t_colon VALUE t_close_sq
  218      | t_id t_open_sq . t_colon VALUE t_close_sq
  219      | t_id t_open_sq . VALUE t_colon t_close_sq

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 126
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_colon             shift, and go to state 308
    t_pointer           shift, and go to state 81

    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 309
    EXPR_START      go to state 89


State 372

  238 FIELD_START: t_open_br .

    $default  reduce using rule 238 (FIELD_START)


State 373

  236 FIELD: t_id FIELD_BODY .

    $default  reduce using rule 236 (FIELD)


State 374

  237 FIELD_BODY: FIELD_START . FIELD_END
  239 FIELD_START: FIELD_START . FIELD_FULFILL

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 126
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_enter             shift, and go to state 407
    t_pointer           shift, and go to state 81

    FUNC_CALL          go to state 82
    SHIFT              go to state 83
    SHIFT_AC           go to state 84
    METHOD             go to state 85
    METHOD_FULFILL     go to state 86
    POINTER            go to state 87
    VALUE              go to state 408
    EXPR_START         go to state 89
    FIELD_FULFILL      go to state 409
    FIELD_END          go to state 410
    FIELD_END_FULFILL  go to state 411


State 375

   81 VAR: t_id SHORT_ASSIGN t_make t_open_paren . MAPS t_close_paren
  215 MAKE: t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_close_paren
  216     | t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_map      shift, and go to state 277
    t_open_sq  shift, and go to state 156

    ARRAY_INDEX  go to state 173
    MULTI_AR     go to state 412
    MAPS         go to state 413


State 376

   70 VAR: t_id SHORT_ASSIGN MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 414

    PLENTY      go to state 415
    PLENTY_OLD  go to state 416


State 377

   73 VAR: t_id MULTI_AR ASSIGNMENT EXPR .
  183 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 201

    $default  reduce using rule 73 (VAR)


State 378

   76 VAR: t_id MULTI_AR ASSIGNMENT MAKE .

    $default  reduce using rule 76 (VAR)


State 379

  173 ELSEIF_SECOND: t_else t_if CONDITION . BODY_FOR_LOOP

    t_open_br  shift, and go to state 285

    BODY_FOR_LOOP        go to state 417
    BODY_FOR_LOOP_START  go to state 287


State 380

  258 INT_BODY: INT_BODY END_SYMBOLS t_id t_open_paren t_vtype t_close_paren .

    $default  reduce using rule 258 (INT_BODY)


State 381

  220 MAPS: t_map t_open_sq t_vtype . t_close_sq t_vtype

    t_close_sq  shift, and go to state 418


State 382

   99 FUNC_CALL: t_id . PARAM
  111 SHIFT_AC: t_id .
  115 METHOD_FULFILL: t_id .
  124 VALUE: t_id .
  236 FIELD: t_id . FIELD_BODY

    t_open_br     shift, and go to state 372
    t_open_paren  shift, and go to state 119

    t_shift_const  reduce using rule 111 (SHIFT_AC)
    t_dot          reduce using rule 115 (METHOD_FULFILL)
    $default       reduce using rule 124 (VALUE)

    PARAM        go to state 110
    PARAM_START  go to state 111
    FIELD_BODY   go to state 373
    FIELD_START  go to state 374


State 383

   69 VAR: t_var t_id t_id ASSIGNMENT VALUE .

    $default  reduce using rule 69 (VAR)


State 384

   82 VAR: t_var t_id t_id ASSIGNMENT ST_EMBEDDED .

    $default  reduce using rule 82 (VAR)


State 385

  215 MAKE: t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_close_paren
  216     | t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_sq  shift, and go to state 156

    ARRAY_INDEX  go to state 173
    MULTI_AR     go to state 412


State 386

   65 VAR: t_var t_id ASSIGNMENT EXPR t_vtype .

    $default  reduce using rule 65 (VAR)


State 387

   71 VAR: t_var t_id ASSIGNMENT MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 414

    PLENTY      go to state 419
    PLENTY_OLD  go to state 416


State 388

   88 VAR: t_var t_id POINTER ASSIGNMENT EXPR .
  183 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 201

    $default  reduce using rule 88 (VAR)


State 389

  199 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT . MULTI_AR t_vtype PLENTY
  200           | t_var t_id MULTI_AR t_vtype ASSIGNMENT . MAKE

    t_open_sq  shift, and go to state 156
    t_make     shift, and go to state 340

    ARRAY_INDEX  go to state 173
    MULTI_AR     go to state 420
    MAKE         go to state 421


State 390

  162 IF_FIRST: t_if INIT_STATE t_semicolon CONDITION BODY_FOR_LOOP .

    $default  reduce using rule 162 (IF_FIRST)


State 391

  166 BODY_FOR_LOOP_START: BODY_FOR_LOOP_START LOOP_FILLING END_SYMBOLS .

    $default  reduce using rule 166 (BODY_FOR_LOOP_START)


State 392

  148 MULTIPLE_ARG: FIRST_PART SECOND_PART .

    $default  reduce using rule 148 (MULTIPLE_ARG)


State 393

  150 FIRST_PART: FIRST_PART EXPR . t_comma
  151 SECOND_PART: EXPR .
  183 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 201
    t_comma  shift, and go to state 422

    $default  reduce using rule 151 (SECOND_PART)


State 394

  146 CASE: t_case CASE_STATEMENT CASE_BODY .
  155 CASE_BODY: CASE_BODY . LOOP_FILLING END_SYMBOLS

    t_defer      shift, and go to state 147
    t_interface  shift, and go to state 3
    t_var        shift, and go to state 148
    t_if         shift, and go to state 149
    t_switch     shift, and go to state 150
    t_type       shift, and go to state 5
    t_for        shift, and go to state 151
    t_goto       shift, and go to state 152
    t_continue   shift, and go to state 351
    t_break      shift, and go to state 352
    t_return     shift, and go to state 153
    t_id         shift, and go to state 154
    t_open_sq    shift, and go to state 156
    t_pointer    shift, and go to state 81

    $default  reduce using rule 146 (CASE)

    BODY_FILLING    go to state 354
    VAR             go to state 159
    DEFER           go to state 160
    FUNC_CALL       go to state 161
    METHOD          go to state 162
    METHOD_FULFILL  go to state 86
    POINTER         go to state 163
    GOTO            go to state 164
    LABEL           go to state 165
    SWITCH          go to state 166
    IF              go to state 167
    IF_FIRST        go to state 168
    LOOP_FILLING    go to state 396
    RETURN          go to state 169
    SHORT_EXPR      go to state 170
    FOR             go to state 171
    ARRAY_BODY      go to state 172
    ARRAY_INDEX     go to state 173
    MULTI_AR        go to state 174
    SLICE           go to state 175
    STRUCT          go to state 176
    STRUCT_START    go to state 12
    INTERFACE       go to state 178
    INT_START       go to state 14


State 395

  149 FIRST_PART: EXPR t_comma .

    $default  reduce using rule 149 (FIRST_PART)


State 396

  155 CASE_BODY: CASE_BODY LOOP_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 23
    t_enter      shift, and go to state 24
    t_eof        shift, and go to state 25

    END_SYMBOLS  go to state 423


State 397

  136 SWITCH: t_switch INIT_STATE t_semicolon EXPR SWITCH_BODY .

    $default  reduce using rule 136 (SWITCH)


State 398

  194 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon . POST_STATE BODY_FOR_LOOP

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 424
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_pointer           shift, and go to state 81

    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 185
    EXPR            go to state 425
    POST_STATE      go to state 426
    EXPR_START      go to state 89


State 399

  180 MANY_RETURN_START: MANY_RETURN_START EXPR t_comma .

    $default  reduce using rule 180 (MANY_RETURN_START)


State 400

   90 BOOLEAN: BOOLEAN . t_bool VALUE
   95 ASSIGNMENT: t_comma t_id ASSIGNMENT BOOLEAN . t_comma

    t_comma  shift, and go to state 427
    t_bool   shift, and go to state 198


State 401

   94 ASSIGNMENT: t_comma t_id ASSIGNMENT EXPR . t_comma
  183 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 201
    t_comma  shift, and go to state 428


State 402

   90 BOOLEAN: BOOLEAN . t_bool VALUE
   98 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN BOOLEAN . t_comma

    t_comma  shift, and go to state 429
    t_bool   shift, and go to state 198


State 403

   97 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN EXPR . t_comma
  183 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 201
    t_comma  shift, and go to state 430


State 404

  218 SLICE: t_id t_open_sq t_colon VALUE t_close_sq .

    $default  reduce using rule 218 (SLICE)


State 405

  219 SLICE: t_id t_open_sq VALUE t_colon t_close_sq .

    $default  reduce using rule 219 (SLICE)


State 406

  217 SLICE: t_id t_open_sq VALUE t_colon VALUE . t_close_sq

    t_close_sq  shift, and go to state 431


State 407

  242 FIELD_FULFILL: t_enter .
  245 FIELD_END_FULFILL: t_enter .

    t_close_br  reduce using rule 245 (FIELD_END_FULFILL)
    $default    reduce using rule 242 (FIELD_FULFILL)


State 408

  240 FIELD_FULFILL: VALUE . t_colon VALUE t_comma
  241              | VALUE . t_colon FIELD t_comma
  244 FIELD_END_FULFILL: VALUE . t_colon VALUE

    t_colon  shift, and go to state 432


State 409

  239 FIELD_START: FIELD_START FIELD_FULFILL .

    $default  reduce using rule 239 (FIELD_START)


State 410

  237 FIELD_BODY: FIELD_START FIELD_END .

    $default  reduce using rule 237 (FIELD_BODY)


State 411

  243 FIELD_END: FIELD_END_FULFILL . t_close_br

    t_close_br  shift, and go to state 433


State 412

  215 MAKE: t_make t_open_paren MULTI_AR . t_vtype t_comma VALUE t_close_paren
  216     | t_make t_open_paren MULTI_AR . t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_vtype  shift, and go to state 434


State 413

   81 VAR: t_id SHORT_ASSIGN t_make t_open_paren MAPS . t_close_paren

    t_close_paren  shift, and go to state 435


State 414

  210 PLENTY_OLD: t_open_br . ENUM t_close_br
  211           | t_open_br . t_close_br
  212           | t_open_br . PLENTY t_close_br

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 126
    t_string            shift, and go to state 75
    t_open_br           shift, and go to state 414
    t_close_br          shift, and go to state 436
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_pointer           shift, and go to state 81

    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 88
    EXPR_START      go to state 89
    PLENTY          go to state 437
    PLENTY_OLD      go to state 416
    ENUM            go to state 438


State 415

   70 VAR: t_id SHORT_ASSIGN MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 70 (VAR)


State 416

  208 PLENTY: PLENTY_OLD .
  209       | PLENTY_OLD . t_comma PLENTY

    t_comma  shift, and go to state 439

    $default  reduce using rule 208 (PLENTY)


State 417

  173 ELSEIF_SECOND: t_else t_if CONDITION BODY_FOR_LOOP .

    $default  reduce using rule 173 (ELSEIF_SECOND)


State 418

  220 MAPS: t_map t_open_sq t_vtype t_close_sq . t_vtype

    t_vtype  shift, and go to state 440


State 419

   71 VAR: t_var t_id ASSIGNMENT MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 71 (VAR)


State 420

  199 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 441


State 421

  200 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MAKE .

    $default  reduce using rule 200 (ARRAY_BODY)


State 422

  150 FIRST_PART: FIRST_PART EXPR t_comma .

    $default  reduce using rule 150 (FIRST_PART)


State 423

  155 CASE_BODY: CASE_BODY LOOP_FILLING END_SYMBOLS .

    $default  reduce using rule 155 (CASE_BODY)


State 424

   99 FUNC_CALL: t_id . PARAM
  111 SHIFT_AC: t_id .
  115 METHOD_FULFILL: t_id .
  124 VALUE: t_id .
  193 POST_STATE: t_id . t_inc_const

    t_inc_const   shift, and go to state 442
    t_open_paren  shift, and go to state 119

    t_shift_const  reduce using rule 111 (SHIFT_AC)
    t_dot          reduce using rule 115 (METHOD_FULFILL)
    $default       reduce using rule 124 (VALUE)

    PARAM        go to state 110
    PARAM_START  go to state 111


State 425

  183 EXPR: EXPR . t_sign VALUE
  192 POST_STATE: EXPR .

    t_sign  shift, and go to state 201

    $default  reduce using rule 192 (POST_STATE)


State 426

  194 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE . BODY_FOR_LOOP

    t_open_br  shift, and go to state 285

    BODY_FOR_LOOP        go to state 443
    BODY_FOR_LOOP_START  go to state 287


State 427

   95 ASSIGNMENT: t_comma t_id ASSIGNMENT BOOLEAN t_comma .

    $default  reduce using rule 95 (ASSIGNMENT)


State 428

   94 ASSIGNMENT: t_comma t_id ASSIGNMENT EXPR t_comma .

    $default  reduce using rule 94 (ASSIGNMENT)


State 429

   98 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN BOOLEAN t_comma .

    $default  reduce using rule 98 (SHORT_ASSIGN)


State 430

   97 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN EXPR t_comma .

    $default  reduce using rule 97 (SHORT_ASSIGN)


State 431

  217 SLICE: t_id t_open_sq VALUE t_colon VALUE t_close_sq .

    $default  reduce using rule 217 (SLICE)


State 432

  240 FIELD_FULFILL: VALUE t_colon . VALUE t_comma
  241              | VALUE t_colon . FIELD t_comma
  244 FIELD_END_FULFILL: VALUE t_colon . VALUE

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 382
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_pointer           shift, and go to state 81

    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 444
    EXPR_START      go to state 89
    FIELD           go to state 445


State 433

  243 FIELD_END: FIELD_END_FULFILL t_close_br .

    $default  reduce using rule 243 (FIELD_END)


State 434

  215 MAKE: t_make t_open_paren MULTI_AR t_vtype . t_comma VALUE t_close_paren
  216     | t_make t_open_paren MULTI_AR t_vtype . t_comma VALUE t_comma t_int_const VALUE

    t_comma  shift, and go to state 446


State 435

   81 VAR: t_id SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren .

    $default  reduce using rule 81 (VAR)


State 436

  211 PLENTY_OLD: t_open_br t_close_br .

    $default  reduce using rule 211 (PLENTY_OLD)


State 437

  212 PLENTY_OLD: t_open_br PLENTY . t_close_br

    t_close_br  shift, and go to state 447


State 438

  210 PLENTY_OLD: t_open_br ENUM . t_close_br
  214 ENUM: ENUM . t_comma VALUE

    t_close_br  shift, and go to state 448
    t_comma     shift, and go to state 131


State 439

  209 PLENTY: PLENTY_OLD t_comma . PLENTY

    t_open_br  shift, and go to state 414

    PLENTY      go to state 449
    PLENTY_OLD  go to state 416


State 440

  220 MAPS: t_map t_open_sq t_vtype t_close_sq t_vtype .

    $default  reduce using rule 220 (MAPS)


State 441

  199 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 414

    PLENTY      go to state 450
    PLENTY_OLD  go to state 416


State 442

  193 POST_STATE: t_id t_inc_const .

    $default  reduce using rule 193 (POST_STATE)


State 443

  194 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY_FOR_LOOP .

    $default  reduce using rule 194 (FOR)


State 444

  240 FIELD_FULFILL: VALUE t_colon VALUE . t_comma
  244 FIELD_END_FULFILL: VALUE t_colon VALUE .

    t_comma  shift, and go to state 451

    $default  reduce using rule 244 (FIELD_END_FULFILL)


State 445

  241 FIELD_FULFILL: VALUE t_colon FIELD . t_comma

    t_comma  shift, and go to state 452


State 446

  215 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma . VALUE t_close_paren
  216     | t_make t_open_paren MULTI_AR t_vtype t_comma . VALUE t_comma t_int_const VALUE

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 126
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_pointer           shift, and go to state 81

    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 453
    EXPR_START      go to state 89


State 447

  212 PLENTY_OLD: t_open_br PLENTY t_close_br .

    $default  reduce using rule 212 (PLENTY_OLD)


State 448

  210 PLENTY_OLD: t_open_br ENUM t_close_br .

    $default  reduce using rule 210 (PLENTY_OLD)


State 449

  209 PLENTY: PLENTY_OLD t_comma PLENTY .

    $default  reduce using rule 209 (PLENTY)


State 450

  199 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 199 (ARRAY_BODY)


State 451

  240 FIELD_FULFILL: VALUE t_colon VALUE t_comma .

    $default  reduce using rule 240 (FIELD_FULFILL)


State 452

  241 FIELD_FULFILL: VALUE t_colon FIELD t_comma .

    $default  reduce using rule 241 (FIELD_FULFILL)


State 453

  215 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE . t_close_paren
  216     | t_make t_open_paren MULTI_AR t_vtype t_comma VALUE . t_comma t_int_const VALUE

    t_comma        shift, and go to state 454
    t_close_paren  shift, and go to state 455


State 454

  216 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma . t_int_const VALUE

    t_int_const  shift, and go to state 456


State 455

  215 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren .

    $default  reduce using rule 215 (MAKE)


State 456

  216 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const . VALUE

    t_int_const         shift, and go to state 72
    t_float_const       shift, and go to state 73
    t_id                shift, and go to state 126
    t_string            shift, and go to state 75
    t_open_paren        shift, and go to state 77
    t_rune              shift, and go to state 78
    t_blank_identifier  shift, and go to state 79
    t_pointer           shift, and go to state 81

    FUNC_CALL       go to state 82
    SHIFT           go to state 83
    SHIFT_AC        go to state 84
    METHOD          go to state 85
    METHOD_FULFILL  go to state 86
    POINTER         go to state 87
    VALUE           go to state 457
    EXPR_START      go to state 89


State 457

  216 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE .

    $default  reduce using rule 216 (MAKE)
