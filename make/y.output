Terminals unused in grammar

   t_constant
   t_chan
   t_defer
   t_go
   t_interface
   t_range
   t_select
   t_fallthrough
   t_continue
   t_break
   t_or_const
   t_and_const
   t_param_const
   t_eq_const
   t_rel_const
   t_inc_const
   t_point_const
   t_punc
   t_char_const
   '+'
   '-'
   '*'
   '/'


Grammar

    0 $accept: START $end

    1 START: START GLOBAL END_SYMBOLS
    2      | GLOBAL END_SYMBOLS
    3      | START END_SYMBOLS

    4 GLOBAL: PACKAGE
    5       | IMPORT
    6       | FUNC
    7       | STRUCT

    8 PACKAGE: t_package t_id

    9 IMPORT: t_import t_string

   10 FUNC: t_func t_id BODY

   11 BODY: BODY_START BODY_END

   12 BODY_END: t_close_br

   13 BODY_START: t_open_br
   14           | t_open_br t_enter
   15           | BODY_START BODY_FILLING END_SYMBOLS

   16 BODY_FILLING: VAR
   17             | FOR
   18             | SWITCH
   19             | GOTO
   20             | LABEL
   21             | IF
   22             | MULTI_AR
   23             | FUNC_CALL
   24             | SHORT_EXPR
   25             | ARRAY_BODY
   26             | RETURN

   27 VAR: t_var t_id ASSIGNMENT EXPR
   28    | t_var t_id ASSIGNMENT EXPR t_vtype
   29    | t_var t_id ASSIGNMENT BOOLEAN
   30    | t_id SHORT_ASSIGN EXPR
   31    | t_id SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   32    | t_var t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   33    | t_id SHORT_ASSIGN BOOLEAN
   34    | t_id MULTI_AR ASSIGNMENT EXPR
   35    | t_var t_id ASSIGNMENT MAKE
   36    | t_id SHORT_ASSIGN MAKE
   37    | t_id MULTI_AR ASSIGNMENT MAKE
   38    | t_id SHORT_ASSIGN SLICE
   39    | t_id ASSIGNMENT SLICE
   40    | t_var t_id ASSIGNMENT SLICE
   41    | t_var t_id MAPS
   42    | t_id SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren

   43 BOOLEAN: EXPR t_bool EXPR

   44 ASSIGNMENT: t_vtype t_equality
   45           | t_equality
   46           | t_comma t_id ASSIGNMENT EXPR t_comma
   47           | t_comma t_id ASSIGNMENT BOOLEAN t_comma

   48 SHORT_ASSIGN: t_short_dec
   49             | t_comma t_id SHORT_ASSIGN EXPR t_comma
   50             | t_comma t_id SHORT_ASSIGN BOOLEAN t_comma

   51 FUNC_CALL: t_id t_open_paren PARAM t_close_paren
   52          | METHOD FUNC_CALL

   53 SHIFT: SHIFT_AC t_shift_const SHIFT_AC

   54 SHIFT_AC: t_id
   55         | t_int_const

   56 METHOD: t_id t_dot

   57 VALUE: t_int_const
   58      | t_float_const
   59      | t_id
   60      | t_string
   61      | t_rune
   62      | t_blank_identifier
   63      | FUNC_CALL
   64      | SHIFT

   65 GOTO: t_goto t_id

   66 LABEL: t_id t_colon

   67 SWITCH: t_switch INIT_STATE t_semicolon EXPR SWITCH_BODY
   68       | t_switch EXPR SWITCH_BODY
   69       | t_switch SWITCH_BODY

   70 SWITCH_BODY: SWITCH_BODY_START SWITCH_BODY_END
   71            | SWITCH_BODY_START_WITH_DEFAULT SWITCH_BODY_END

   72 SWITCH_BODY_START: t_open_br
   73                  | t_open_br END_SYMBOLS
   74                  | SWITCH_BODY_START CASE

   75 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START DEFAULT
   76                               | SWITCH_BODY_START_WITH_DEFAULT CASE

   77 CASE: t_case CASE_STATEMENT CASE_BODY

   78 DEFAULT: t_default CASE_BODY

   79 MULTIPLE_ARG: FIRST_PART SECOND_PART

   80 FIRST_PART: EXPR t_comma
   81           | FIRST_PART EXPR t_comma

   82 SECOND_PART: EXPR

   83 CASE_STATEMENT: MULTIPLE_ARG
   84               | EXPR

   85 CASE_BODY: t_colon
   86          | t_colon t_enter
   87          | CASE_BODY BODY_FILLING END_SYMBOLS

   88 SWITCH_BODY_END: t_close_br

   89 IF: IF_FIRST MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD
   90   | IF_FIRST MULTY_ELSEIF_SECOND
   91   | IF_FIRST MULTY_ELSE_THIRD
   92   | IF_FIRST

   93 IF_FIRST: t_if CONDITION BODY

   94 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND ELSEIF_SECOND
   95                    | ELSEIF_SECOND

   96 ELSEIF_SECOND: t_else t_if CONDITION BODY

   97 MULTY_ELSE_THIRD: ELSE_THIRD
   98                 | MULTY_ELSE_THIRD ELSE_THIRD

   99 ELSE_THIRD: t_else BODY

  100 RETURN: t_return PARAM

  101 PARAM: PARAM t_comma EXPR
  102      | EXPR
  103      | /* empty */

  104 EXPR: EXPR t_sign VALUE
  105     | EXPR_START EXPR EXPR_END
  106     | VALUE

  107 SHORT_EXPR: t_id t_short_expr t_id

  108 INIT_STATE: VAR
  109           | FUNC_CALL
  110           | /* empty */

  111 CONDITION: BOOLEAN
  112          | t_true
  113          | t_false
  114          | /* empty */

  115 POST_STATE: EXPR
  116           | /* empty */

  117 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY
  118    | t_for CONDITION BODY

  119 EXPR_START: t_open_paren

  120 EXPR_END: t_close_paren

  121 ARRAY_BODY: t_var t_id MULTI_AR t_vtype
  122           | t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  123           | t_var t_id MULTI_AR t_vtype ASSIGNMENT MAKE

  124 ARRAY_INDEX: t_open_sq t_int_const t_close_sq
  125            | t_open_sq t_id t_close_sq
  126            | t_open_sq t_string t_close_sq
  127            | t_open_sq t_close_sq

  128 MULTI_AR: ARRAY_INDEX
  129         | ARRAY_INDEX MULTI_AR

  130 PLENTY: PLENTY_OLD
  131       | PLENTY_OLD t_comma PLENTY

  132 PLENTY_OLD: t_open_br ENUM t_close_br
  133           | t_open_br t_close_br
  134           | t_open_br PLENTY t_close_br

  135 ENUM: VALUE
  136     | ENUM t_comma VALUE

  137 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  138     | t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

  139 SLICE: t_id t_open_sq VALUE t_colon VALUE t_close_sq
  140      | t_id t_open_sq t_colon VALUE t_close_sq
  141      | t_id t_open_sq VALUE t_colon t_close_sq

  142 MAPS: t_map t_open_sq t_vtype t_close_sq t_vtype

  143 STRUCT: STRUCT_START STRUCT_BODY STRUCT_END

  144 STRUCT_START: t_type t_id t_struct_const t_open_br

  145 STRUCT_BODY: t_id t_vtype
  146            | t_id t_vtype STRUCT_BODY

  147 STRUCT_END: t_close_br

  148 END_SYMBOLS: t_semicolon
  149            | t_enter
  150            | t_eof


Terminals, with rules where they appear

$end (0) 0
'*' (42)
'+' (43)
'-' (45)
'/' (47)
error (256)
t_vtype (258) 28 31 32 44 121 122 123 137 138 142 145 146
t_constant (259)
t_case (260) 77
t_func (261) 10
t_import (262) 9
t_chan (263)
t_defer (264)
t_go (265)
t_interface (266)
t_default (267) 78
t_var (268) 27 28 29 32 35 40 41 121 122 123
t_range (269)
t_map (270) 142
t_package (271) 8
t_if (272) 93 96
t_select (273)
t_switch (274) 67 68 69
t_fallthrough (275)
t_else (276) 96 99
t_type (277) 144
t_for (278) 117 118
t_goto (279) 65
t_continue (280)
t_break (281)
t_return (282) 100
t_struct_const (283) 144
t_or_const (284)
t_and_const (285)
t_param_const (286)
t_eq_const (287)
t_rel_const (288)
t_shift_const (289) 53
t_inc_const (290)
t_point_const (291)
t_punc (292)
t_int_const (293) 55 57 124 138
t_float_const (294) 58
t_char_const (295)
t_id (296) 8 10 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 46
    47 49 50 51 54 56 59 65 66 107 121 122 123 125 139 140 141 144
    145 146
t_string (297) 9 60 126
t_short_dec (298) 48
t_open_br (299) 13 14 72 73 132 133 134 144
t_close_br (300) 12 88 132 133 134 147
t_sign (301) 104
t_comma (302) 46 47 49 50 80 81 101 131 136 137 138
t_equality (303) 44 45
t_open_paren (304) 42 51 119 137 138
t_close_paren (305) 42 51 120 137
t_open_sq (306) 124 125 126 127 139 140 141 142
t_close_sq (307) 124 125 126 127 139 140 141 142
t_bool (308) 43
t_rune (309) 61
t_semicolon (310) 67 117 148
t_blank_identifier (311) 62
t_dot (312) 56
t_colon (313) 66 85 86 139 140 141
t_true (314) 112
t_false (315) 113
t_short_expr (316) 107
t_make (317) 42 137 138
t_enter (318) 14 86 149
t_eof (319) 150


Nonterminals, with rules where they appear

$accept (69)
    on left: 0
START (70)
    on left: 1 2 3, on right: 0 1 3
GLOBAL (71)
    on left: 4 5 6 7, on right: 1 2
PACKAGE (72)
    on left: 8, on right: 4
IMPORT (73)
    on left: 9, on right: 5
FUNC (74)
    on left: 10, on right: 6
BODY (75)
    on left: 11, on right: 10 93 96 99 117 118
BODY_END (76)
    on left: 12, on right: 11
BODY_START (77)
    on left: 13 14 15, on right: 11 15
BODY_FILLING (78)
    on left: 16 17 18 19 20 21 22 23 24 25 26, on right: 15 87
VAR (79)
    on left: 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42, on right:
    16 108
BOOLEAN (80)
    on left: 43, on right: 29 33 47 50 111
ASSIGNMENT (81)
    on left: 44 45 46 47, on right: 27 28 29 32 34 35 37 39 40 46 47
    122 123
SHORT_ASSIGN (82)
    on left: 48 49 50, on right: 30 31 33 36 38 42 49 50
FUNC_CALL (83)
    on left: 51 52, on right: 23 52 63 109
SHIFT (84)
    on left: 53, on right: 64
SHIFT_AC (85)
    on left: 54 55, on right: 53
METHOD (86)
    on left: 56, on right: 52
VALUE (87)
    on left: 57 58 59 60 61 62 63 64, on right: 104 106 135 136 137
    138 139 140 141
GOTO (88)
    on left: 65, on right: 19
LABEL (89)
    on left: 66, on right: 20
SWITCH (90)
    on left: 67 68 69, on right: 18
SWITCH_BODY (91)
    on left: 70 71, on right: 67 68 69
SWITCH_BODY_START (92)
    on left: 72 73 74, on right: 70 74 75
SWITCH_BODY_START_WITH_DEFAULT (93)
    on left: 75 76, on right: 71 76
CASE (94)
    on left: 77, on right: 74 76
DEFAULT (95)
    on left: 78, on right: 75
MULTIPLE_ARG (96)
    on left: 79, on right: 83
FIRST_PART (97)
    on left: 80 81, on right: 79 81
SECOND_PART (98)
    on left: 82, on right: 79
CASE_STATEMENT (99)
    on left: 83 84, on right: 77
CASE_BODY (100)
    on left: 85 86 87, on right: 77 78 87
SWITCH_BODY_END (101)
    on left: 88, on right: 70 71
IF (102)
    on left: 89 90 91 92, on right: 21
IF_FIRST (103)
    on left: 93, on right: 89 90 91 92
MULTY_ELSEIF_SECOND (104)
    on left: 94 95, on right: 89 90 94
ELSEIF_SECOND (105)
    on left: 96, on right: 94 95
MULTY_ELSE_THIRD (106)
    on left: 97 98, on right: 89 91 98
ELSE_THIRD (107)
    on left: 99, on right: 97 98
RETURN (108)
    on left: 100, on right: 26
PARAM (109)
    on left: 101 102 103, on right: 51 100 101
EXPR (110)
    on left: 104 105 106, on right: 27 28 30 34 43 46 49 67 68 80 81
    82 84 101 102 104 105 115
SHORT_EXPR (111)
    on left: 107, on right: 24
INIT_STATE (112)
    on left: 108 109 110, on right: 67 117
CONDITION (113)
    on left: 111 112 113 114, on right: 93 96 117 118
POST_STATE (114)
    on left: 115 116, on right: 117
FOR (115)
    on left: 117 118, on right: 17
EXPR_START (116)
    on left: 119, on right: 105
EXPR_END (117)
    on left: 120, on right: 105
ARRAY_BODY (118)
    on left: 121 122 123, on right: 25
ARRAY_INDEX (119)
    on left: 124 125 126 127, on right: 128 129
MULTI_AR (120)
    on left: 128 129, on right: 22 31 32 34 37 121 122 123 129 137
    138
PLENTY (121)
    on left: 130 131, on right: 31 32 122 131 134
PLENTY_OLD (122)
    on left: 132 133 134, on right: 130 131
ENUM (123)
    on left: 135 136, on right: 132 136
MAKE (124)
    on left: 137 138, on right: 35 36 37 123
SLICE (125)
    on left: 139 140 141, on right: 38 39 40
MAPS (126)
    on left: 142, on right: 41 42
STRUCT (127)
    on left: 143, on right: 7
STRUCT_START (128)
    on left: 144, on right: 143
STRUCT_BODY (129)
    on left: 145 146, on right: 143 146
STRUCT_END (130)
    on left: 147, on right: 143
END_SYMBOLS (131)
    on left: 148 149 150, on right: 1 2 3 15 73 87


State 0

    0 $accept: . START $end

    t_func     shift, and go to state 1
    t_import   shift, and go to state 2
    t_package  shift, and go to state 3
    t_type     shift, and go to state 4

    START         go to state 5
    GLOBAL        go to state 6
    PACKAGE       go to state 7
    IMPORT        go to state 8
    FUNC          go to state 9
    STRUCT        go to state 10
    STRUCT_START  go to state 11


State 1

   10 FUNC: t_func . t_id BODY

    t_id  shift, and go to state 12


State 2

    9 IMPORT: t_import . t_string

    t_string  shift, and go to state 13


State 3

    8 PACKAGE: t_package . t_id

    t_id  shift, and go to state 14


State 4

  144 STRUCT_START: t_type . t_id t_struct_const t_open_br

    t_id  shift, and go to state 15


State 5

    0 $accept: START . $end
    1 START: START . GLOBAL END_SYMBOLS
    3      | START . END_SYMBOLS

    $end         shift, and go to state 16
    t_func       shift, and go to state 1
    t_import     shift, and go to state 2
    t_package    shift, and go to state 3
    t_type       shift, and go to state 4
    t_semicolon  shift, and go to state 17
    t_enter      shift, and go to state 18
    t_eof        shift, and go to state 19

    GLOBAL        go to state 20
    PACKAGE       go to state 7
    IMPORT        go to state 8
    FUNC          go to state 9
    STRUCT        go to state 10
    STRUCT_START  go to state 11
    END_SYMBOLS   go to state 21


State 6

    2 START: GLOBAL . END_SYMBOLS

    t_semicolon  shift, and go to state 17
    t_enter      shift, and go to state 18
    t_eof        shift, and go to state 19

    END_SYMBOLS  go to state 22


State 7

    4 GLOBAL: PACKAGE .

    $default  reduce using rule 4 (GLOBAL)


State 8

    5 GLOBAL: IMPORT .

    $default  reduce using rule 5 (GLOBAL)


State 9

    6 GLOBAL: FUNC .

    $default  reduce using rule 6 (GLOBAL)


State 10

    7 GLOBAL: STRUCT .

    $default  reduce using rule 7 (GLOBAL)


State 11

  143 STRUCT: STRUCT_START . STRUCT_BODY STRUCT_END

    t_id  shift, and go to state 23

    STRUCT_BODY  go to state 24


State 12

   10 FUNC: t_func t_id . BODY

    t_open_br  shift, and go to state 25

    BODY        go to state 26
    BODY_START  go to state 27


State 13

    9 IMPORT: t_import t_string .

    $default  reduce using rule 9 (IMPORT)


State 14

    8 PACKAGE: t_package t_id .

    $default  reduce using rule 8 (PACKAGE)


State 15

  144 STRUCT_START: t_type t_id . t_struct_const t_open_br

    t_struct_const  shift, and go to state 28


State 16

    0 $accept: START $end .

    $default  accept


State 17

  148 END_SYMBOLS: t_semicolon .

    $default  reduce using rule 148 (END_SYMBOLS)


State 18

  149 END_SYMBOLS: t_enter .

    $default  reduce using rule 149 (END_SYMBOLS)


State 19

  150 END_SYMBOLS: t_eof .

    $default  reduce using rule 150 (END_SYMBOLS)


State 20

    1 START: START GLOBAL . END_SYMBOLS

    t_semicolon  shift, and go to state 17
    t_enter      shift, and go to state 18
    t_eof        shift, and go to state 19

    END_SYMBOLS  go to state 29


State 21

    3 START: START END_SYMBOLS .

    $default  reduce using rule 3 (START)


State 22

    2 START: GLOBAL END_SYMBOLS .

    $default  reduce using rule 2 (START)


State 23

  145 STRUCT_BODY: t_id . t_vtype
  146            | t_id . t_vtype STRUCT_BODY

    t_vtype  shift, and go to state 30


State 24

  143 STRUCT: STRUCT_START STRUCT_BODY . STRUCT_END

    t_close_br  shift, and go to state 31

    STRUCT_END  go to state 32


State 25

   13 BODY_START: t_open_br .
   14           | t_open_br . t_enter

    t_enter  shift, and go to state 33

    $default  reduce using rule 13 (BODY_START)


State 26

   10 FUNC: t_func t_id BODY .

    $default  reduce using rule 10 (FUNC)


State 27

   11 BODY: BODY_START . BODY_END
   15 BODY_START: BODY_START . BODY_FILLING END_SYMBOLS

    t_var       shift, and go to state 34
    t_if        shift, and go to state 35
    t_switch    shift, and go to state 36
    t_for       shift, and go to state 37
    t_goto      shift, and go to state 38
    t_return    shift, and go to state 39
    t_id        shift, and go to state 40
    t_close_br  shift, and go to state 41
    t_open_sq   shift, and go to state 42

    BODY_END      go to state 43
    BODY_FILLING  go to state 44
    VAR           go to state 45
    FUNC_CALL     go to state 46
    METHOD        go to state 47
    GOTO          go to state 48
    LABEL         go to state 49
    SWITCH        go to state 50
    IF            go to state 51
    IF_FIRST      go to state 52
    RETURN        go to state 53
    SHORT_EXPR    go to state 54
    FOR           go to state 55
    ARRAY_BODY    go to state 56
    ARRAY_INDEX   go to state 57
    MULTI_AR      go to state 58


State 28

  144 STRUCT_START: t_type t_id t_struct_const . t_open_br

    t_open_br  shift, and go to state 59


State 29

    1 START: START GLOBAL END_SYMBOLS .

    $default  reduce using rule 1 (START)


State 30

  145 STRUCT_BODY: t_id t_vtype .
  146            | t_id t_vtype . STRUCT_BODY

    t_id  shift, and go to state 23

    $default  reduce using rule 145 (STRUCT_BODY)

    STRUCT_BODY  go to state 60


State 31

  147 STRUCT_END: t_close_br .

    $default  reduce using rule 147 (STRUCT_END)


State 32

  143 STRUCT: STRUCT_START STRUCT_BODY STRUCT_END .

    $default  reduce using rule 143 (STRUCT)


State 33

   14 BODY_START: t_open_br t_enter .

    $default  reduce using rule 14 (BODY_START)


State 34

   27 VAR: t_var . t_id ASSIGNMENT EXPR
   28    | t_var . t_id ASSIGNMENT EXPR t_vtype
   29    | t_var . t_id ASSIGNMENT BOOLEAN
   32    | t_var . t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   35    | t_var . t_id ASSIGNMENT MAKE
   40    | t_var . t_id ASSIGNMENT SLICE
   41    | t_var . t_id MAPS
  121 ARRAY_BODY: t_var . t_id MULTI_AR t_vtype
  122           | t_var . t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  123           | t_var . t_id MULTI_AR t_vtype ASSIGNMENT MAKE

    t_id  shift, and go to state 61


State 35

   93 IF_FIRST: t_if . CONDITION BODY

    t_int_const         shift, and go to state 62
    t_float_const       shift, and go to state 63
    t_id                shift, and go to state 64
    t_string            shift, and go to state 65
    t_open_paren        shift, and go to state 66
    t_rune              shift, and go to state 67
    t_blank_identifier  shift, and go to state 68
    t_true              shift, and go to state 69
    t_false             shift, and go to state 70

    $default  reduce using rule 114 (CONDITION)

    BOOLEAN     go to state 71
    FUNC_CALL   go to state 72
    SHIFT       go to state 73
    SHIFT_AC    go to state 74
    METHOD      go to state 47
    VALUE       go to state 75
    EXPR        go to state 76
    CONDITION   go to state 77
    EXPR_START  go to state 78


State 36

   67 SWITCH: t_switch . INIT_STATE t_semicolon EXPR SWITCH_BODY
   68       | t_switch . EXPR SWITCH_BODY
   69       | t_switch . SWITCH_BODY

    t_var               shift, and go to state 79
    t_int_const         shift, and go to state 62
    t_float_const       shift, and go to state 63
    t_id                shift, and go to state 80
    t_string            shift, and go to state 65
    t_open_br           shift, and go to state 81
    t_open_paren        shift, and go to state 66
    t_rune              shift, and go to state 67
    t_blank_identifier  shift, and go to state 68

    $default  reduce using rule 110 (INIT_STATE)

    VAR                             go to state 82
    FUNC_CALL                       go to state 83
    SHIFT                           go to state 73
    SHIFT_AC                        go to state 74
    METHOD                          go to state 47
    VALUE                           go to state 75
    SWITCH_BODY                     go to state 84
    SWITCH_BODY_START               go to state 85
    SWITCH_BODY_START_WITH_DEFAULT  go to state 86
    EXPR                            go to state 87
    INIT_STATE                      go to state 88
    EXPR_START                      go to state 78


State 37

  117 FOR: t_for . INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY
  118    | t_for . CONDITION BODY

    t_var               shift, and go to state 79
    t_int_const         shift, and go to state 62
    t_float_const       shift, and go to state 63
    t_id                shift, and go to state 80
    t_string            shift, and go to state 65
    t_open_paren        shift, and go to state 66
    t_rune              shift, and go to state 67
    t_blank_identifier  shift, and go to state 68
    t_true              shift, and go to state 69
    t_false             shift, and go to state 70

    t_open_br  reduce using rule 114 (CONDITION)
    $default   reduce using rule 110 (INIT_STATE)

    VAR         go to state 82
    BOOLEAN     go to state 71
    FUNC_CALL   go to state 83
    SHIFT       go to state 73
    SHIFT_AC    go to state 74
    METHOD      go to state 47
    VALUE       go to state 75
    EXPR        go to state 76
    INIT_STATE  go to state 89
    CONDITION   go to state 90
    EXPR_START  go to state 78


State 38

   65 GOTO: t_goto . t_id

    t_id  shift, and go to state 91


State 39

  100 RETURN: t_return . PARAM

    t_int_const         shift, and go to state 62
    t_float_const       shift, and go to state 63
    t_id                shift, and go to state 64
    t_string            shift, and go to state 65
    t_open_paren        shift, and go to state 66
    t_rune              shift, and go to state 67
    t_blank_identifier  shift, and go to state 68

    $default  reduce using rule 103 (PARAM)

    FUNC_CALL   go to state 72
    SHIFT       go to state 73
    SHIFT_AC    go to state 74
    METHOD      go to state 47
    VALUE       go to state 75
    PARAM       go to state 92
    EXPR        go to state 93
    EXPR_START  go to state 78


State 40

   30 VAR: t_id . SHORT_ASSIGN EXPR
   31    | t_id . SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   33    | t_id . SHORT_ASSIGN BOOLEAN
   34    | t_id . MULTI_AR ASSIGNMENT EXPR
   36    | t_id . SHORT_ASSIGN MAKE
   37    | t_id . MULTI_AR ASSIGNMENT MAKE
   38    | t_id . SHORT_ASSIGN SLICE
   39    | t_id . ASSIGNMENT SLICE
   42    | t_id . SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   51 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   56 METHOD: t_id . t_dot
   66 LABEL: t_id . t_colon
  107 SHORT_EXPR: t_id . t_short_expr t_id

    t_vtype       shift, and go to state 94
    t_short_dec   shift, and go to state 95
    t_comma       shift, and go to state 96
    t_equality    shift, and go to state 97
    t_open_paren  shift, and go to state 98
    t_open_sq     shift, and go to state 42
    t_dot         shift, and go to state 99
    t_colon       shift, and go to state 100
    t_short_expr  shift, and go to state 101

    ASSIGNMENT    go to state 102
    SHORT_ASSIGN  go to state 103
    ARRAY_INDEX   go to state 57
    MULTI_AR      go to state 104


State 41

   12 BODY_END: t_close_br .

    $default  reduce using rule 12 (BODY_END)


State 42

  124 ARRAY_INDEX: t_open_sq . t_int_const t_close_sq
  125            | t_open_sq . t_id t_close_sq
  126            | t_open_sq . t_string t_close_sq
  127            | t_open_sq . t_close_sq

    t_int_const  shift, and go to state 105
    t_id         shift, and go to state 106
    t_string     shift, and go to state 107
    t_close_sq   shift, and go to state 108


State 43

   11 BODY: BODY_START BODY_END .

    $default  reduce using rule 11 (BODY)


State 44

   15 BODY_START: BODY_START BODY_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 17
    t_enter      shift, and go to state 18
    t_eof        shift, and go to state 19

    END_SYMBOLS  go to state 109


State 45

   16 BODY_FILLING: VAR .

    $default  reduce using rule 16 (BODY_FILLING)


State 46

   23 BODY_FILLING: FUNC_CALL .

    $default  reduce using rule 23 (BODY_FILLING)


State 47

   52 FUNC_CALL: METHOD . FUNC_CALL

    t_id  shift, and go to state 110

    FUNC_CALL  go to state 111
    METHOD     go to state 47


State 48

   19 BODY_FILLING: GOTO .

    $default  reduce using rule 19 (BODY_FILLING)


State 49

   20 BODY_FILLING: LABEL .

    $default  reduce using rule 20 (BODY_FILLING)


State 50

   18 BODY_FILLING: SWITCH .

    $default  reduce using rule 18 (BODY_FILLING)


State 51

   21 BODY_FILLING: IF .

    $default  reduce using rule 21 (BODY_FILLING)


State 52

   89 IF: IF_FIRST . MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD
   90   | IF_FIRST . MULTY_ELSEIF_SECOND
   91   | IF_FIRST . MULTY_ELSE_THIRD
   92   | IF_FIRST .

    t_else  shift, and go to state 112

    $default  reduce using rule 92 (IF)

    MULTY_ELSEIF_SECOND  go to state 113
    ELSEIF_SECOND        go to state 114
    MULTY_ELSE_THIRD     go to state 115
    ELSE_THIRD           go to state 116


State 53

   26 BODY_FILLING: RETURN .

    $default  reduce using rule 26 (BODY_FILLING)


State 54

   24 BODY_FILLING: SHORT_EXPR .

    $default  reduce using rule 24 (BODY_FILLING)


State 55

   17 BODY_FILLING: FOR .

    $default  reduce using rule 17 (BODY_FILLING)


State 56

   25 BODY_FILLING: ARRAY_BODY .

    $default  reduce using rule 25 (BODY_FILLING)


State 57

  128 MULTI_AR: ARRAY_INDEX .
  129         | ARRAY_INDEX . MULTI_AR

    t_open_sq  shift, and go to state 42

    $default  reduce using rule 128 (MULTI_AR)

    ARRAY_INDEX  go to state 57
    MULTI_AR     go to state 117


State 58

   22 BODY_FILLING: MULTI_AR .

    $default  reduce using rule 22 (BODY_FILLING)


State 59

  144 STRUCT_START: t_type t_id t_struct_const t_open_br .

    $default  reduce using rule 144 (STRUCT_START)


State 60

  146 STRUCT_BODY: t_id t_vtype STRUCT_BODY .

    $default  reduce using rule 146 (STRUCT_BODY)


State 61

   27 VAR: t_var t_id . ASSIGNMENT EXPR
   28    | t_var t_id . ASSIGNMENT EXPR t_vtype
   29    | t_var t_id . ASSIGNMENT BOOLEAN
   32    | t_var t_id . ASSIGNMENT MULTI_AR t_vtype PLENTY
   35    | t_var t_id . ASSIGNMENT MAKE
   40    | t_var t_id . ASSIGNMENT SLICE
   41    | t_var t_id . MAPS
  121 ARRAY_BODY: t_var t_id . MULTI_AR t_vtype
  122           | t_var t_id . MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  123           | t_var t_id . MULTI_AR t_vtype ASSIGNMENT MAKE

    t_vtype     shift, and go to state 94
    t_map       shift, and go to state 118
    t_comma     shift, and go to state 119
    t_equality  shift, and go to state 97
    t_open_sq   shift, and go to state 42

    ASSIGNMENT   go to state 120
    ARRAY_INDEX  go to state 57
    MULTI_AR     go to state 121
    MAPS         go to state 122


State 62

   55 SHIFT_AC: t_int_const .
   57 VALUE: t_int_const .

    t_shift_const  reduce using rule 55 (SHIFT_AC)
    $default       reduce using rule 57 (VALUE)


State 63

   58 VALUE: t_float_const .

    $default  reduce using rule 58 (VALUE)


State 64

   51 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   54 SHIFT_AC: t_id .
   56 METHOD: t_id . t_dot
   59 VALUE: t_id .

    t_open_paren  shift, and go to state 98
    t_dot         shift, and go to state 99

    t_shift_const  reduce using rule 54 (SHIFT_AC)
    $default       reduce using rule 59 (VALUE)


State 65

   60 VALUE: t_string .

    $default  reduce using rule 60 (VALUE)


State 66

  119 EXPR_START: t_open_paren .

    $default  reduce using rule 119 (EXPR_START)


State 67

   61 VALUE: t_rune .

    $default  reduce using rule 61 (VALUE)


State 68

   62 VALUE: t_blank_identifier .

    $default  reduce using rule 62 (VALUE)


State 69

  112 CONDITION: t_true .

    $default  reduce using rule 112 (CONDITION)


State 70

  113 CONDITION: t_false .

    $default  reduce using rule 113 (CONDITION)


State 71

  111 CONDITION: BOOLEAN .

    $default  reduce using rule 111 (CONDITION)


State 72

   63 VALUE: FUNC_CALL .

    $default  reduce using rule 63 (VALUE)


State 73

   64 VALUE: SHIFT .

    $default  reduce using rule 64 (VALUE)


State 74

   53 SHIFT: SHIFT_AC . t_shift_const SHIFT_AC

    t_shift_const  shift, and go to state 123


State 75

  106 EXPR: VALUE .

    $default  reduce using rule 106 (EXPR)


State 76

   43 BOOLEAN: EXPR . t_bool EXPR
  104 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 124
    t_bool  shift, and go to state 125


State 77

   93 IF_FIRST: t_if CONDITION . BODY

    t_open_br  shift, and go to state 25

    BODY        go to state 126
    BODY_START  go to state 27


State 78

  105 EXPR: EXPR_START . EXPR EXPR_END

    t_int_const         shift, and go to state 62
    t_float_const       shift, and go to state 63
    t_id                shift, and go to state 64
    t_string            shift, and go to state 65
    t_open_paren        shift, and go to state 66
    t_rune              shift, and go to state 67
    t_blank_identifier  shift, and go to state 68

    FUNC_CALL   go to state 72
    SHIFT       go to state 73
    SHIFT_AC    go to state 74
    METHOD      go to state 47
    VALUE       go to state 75
    EXPR        go to state 127
    EXPR_START  go to state 78


State 79

   27 VAR: t_var . t_id ASSIGNMENT EXPR
   28    | t_var . t_id ASSIGNMENT EXPR t_vtype
   29    | t_var . t_id ASSIGNMENT BOOLEAN
   32    | t_var . t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   35    | t_var . t_id ASSIGNMENT MAKE
   40    | t_var . t_id ASSIGNMENT SLICE
   41    | t_var . t_id MAPS

    t_id  shift, and go to state 128


State 80

   30 VAR: t_id . SHORT_ASSIGN EXPR
   31    | t_id . SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   33    | t_id . SHORT_ASSIGN BOOLEAN
   34    | t_id . MULTI_AR ASSIGNMENT EXPR
   36    | t_id . SHORT_ASSIGN MAKE
   37    | t_id . MULTI_AR ASSIGNMENT MAKE
   38    | t_id . SHORT_ASSIGN SLICE
   39    | t_id . ASSIGNMENT SLICE
   42    | t_id . SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   51 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   54 SHIFT_AC: t_id .
   56 METHOD: t_id . t_dot
   59 VALUE: t_id .

    t_vtype       shift, and go to state 94
    t_short_dec   shift, and go to state 95
    t_comma       shift, and go to state 96
    t_equality    shift, and go to state 97
    t_open_paren  shift, and go to state 98
    t_open_sq     shift, and go to state 42
    t_dot         shift, and go to state 99

    t_shift_const  reduce using rule 54 (SHIFT_AC)
    $default       reduce using rule 59 (VALUE)

    ASSIGNMENT    go to state 102
    SHORT_ASSIGN  go to state 103
    ARRAY_INDEX   go to state 57
    MULTI_AR      go to state 104


State 81

   72 SWITCH_BODY_START: t_open_br .
   73                  | t_open_br . END_SYMBOLS

    t_semicolon  shift, and go to state 17
    t_enter      shift, and go to state 18
    t_eof        shift, and go to state 19

    $default  reduce using rule 72 (SWITCH_BODY_START)

    END_SYMBOLS  go to state 129


State 82

  108 INIT_STATE: VAR .

    $default  reduce using rule 108 (INIT_STATE)


State 83

   63 VALUE: FUNC_CALL .
  109 INIT_STATE: FUNC_CALL .

    t_semicolon  reduce using rule 109 (INIT_STATE)
    $default     reduce using rule 63 (VALUE)


State 84

   69 SWITCH: t_switch SWITCH_BODY .

    $default  reduce using rule 69 (SWITCH)


State 85

   70 SWITCH_BODY: SWITCH_BODY_START . SWITCH_BODY_END
   74 SWITCH_BODY_START: SWITCH_BODY_START . CASE
   75 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START . DEFAULT

    t_case      shift, and go to state 130
    t_default   shift, and go to state 131
    t_close_br  shift, and go to state 132

    CASE             go to state 133
    DEFAULT          go to state 134
    SWITCH_BODY_END  go to state 135


State 86

   71 SWITCH_BODY: SWITCH_BODY_START_WITH_DEFAULT . SWITCH_BODY_END
   76 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START_WITH_DEFAULT . CASE

    t_case      shift, and go to state 130
    t_close_br  shift, and go to state 132

    CASE             go to state 136
    SWITCH_BODY_END  go to state 137


State 87

   68 SWITCH: t_switch EXPR . SWITCH_BODY
  104 EXPR: EXPR . t_sign VALUE

    t_open_br  shift, and go to state 81
    t_sign     shift, and go to state 124

    SWITCH_BODY                     go to state 138
    SWITCH_BODY_START               go to state 85
    SWITCH_BODY_START_WITH_DEFAULT  go to state 86


State 88

   67 SWITCH: t_switch INIT_STATE . t_semicolon EXPR SWITCH_BODY

    t_semicolon  shift, and go to state 139


State 89

  117 FOR: t_for INIT_STATE . t_semicolon CONDITION t_semicolon POST_STATE BODY

    t_semicolon  shift, and go to state 140


State 90

  118 FOR: t_for CONDITION . BODY

    t_open_br  shift, and go to state 25

    BODY        go to state 141
    BODY_START  go to state 27


State 91

   65 GOTO: t_goto t_id .

    $default  reduce using rule 65 (GOTO)


State 92

  100 RETURN: t_return PARAM .
  101 PARAM: PARAM . t_comma EXPR

    t_comma  shift, and go to state 142

    $default  reduce using rule 100 (RETURN)


State 93

  102 PARAM: EXPR .
  104 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 124

    $default  reduce using rule 102 (PARAM)


State 94

   44 ASSIGNMENT: t_vtype . t_equality

    t_equality  shift, and go to state 143


State 95

   48 SHORT_ASSIGN: t_short_dec .

    $default  reduce using rule 48 (SHORT_ASSIGN)


State 96

   46 ASSIGNMENT: t_comma . t_id ASSIGNMENT EXPR t_comma
   47           | t_comma . t_id ASSIGNMENT BOOLEAN t_comma
   49 SHORT_ASSIGN: t_comma . t_id SHORT_ASSIGN EXPR t_comma
   50             | t_comma . t_id SHORT_ASSIGN BOOLEAN t_comma

    t_id  shift, and go to state 144


State 97

   45 ASSIGNMENT: t_equality .

    $default  reduce using rule 45 (ASSIGNMENT)


State 98

   51 FUNC_CALL: t_id t_open_paren . PARAM t_close_paren

    t_int_const         shift, and go to state 62
    t_float_const       shift, and go to state 63
    t_id                shift, and go to state 64
    t_string            shift, and go to state 65
    t_open_paren        shift, and go to state 66
    t_rune              shift, and go to state 67
    t_blank_identifier  shift, and go to state 68

    $default  reduce using rule 103 (PARAM)

    FUNC_CALL   go to state 72
    SHIFT       go to state 73
    SHIFT_AC    go to state 74
    METHOD      go to state 47
    VALUE       go to state 75
    PARAM       go to state 145
    EXPR        go to state 93
    EXPR_START  go to state 78


State 99

   56 METHOD: t_id t_dot .

    $default  reduce using rule 56 (METHOD)


State 100

   66 LABEL: t_id t_colon .

    $default  reduce using rule 66 (LABEL)


State 101

  107 SHORT_EXPR: t_id t_short_expr . t_id

    t_id  shift, and go to state 146


State 102

   39 VAR: t_id ASSIGNMENT . SLICE

    t_id  shift, and go to state 147

    SLICE  go to state 148


State 103

   30 VAR: t_id SHORT_ASSIGN . EXPR
   31    | t_id SHORT_ASSIGN . MULTI_AR t_vtype PLENTY
   33    | t_id SHORT_ASSIGN . BOOLEAN
   36    | t_id SHORT_ASSIGN . MAKE
   38    | t_id SHORT_ASSIGN . SLICE
   42    | t_id SHORT_ASSIGN . t_make t_open_paren MAPS t_close_paren

    t_int_const         shift, and go to state 62
    t_float_const       shift, and go to state 63
    t_id                shift, and go to state 149
    t_string            shift, and go to state 65
    t_open_paren        shift, and go to state 66
    t_open_sq           shift, and go to state 42
    t_rune              shift, and go to state 67
    t_blank_identifier  shift, and go to state 68
    t_make              shift, and go to state 150

    BOOLEAN      go to state 151
    FUNC_CALL    go to state 72
    SHIFT        go to state 73
    SHIFT_AC     go to state 74
    METHOD       go to state 47
    VALUE        go to state 75
    EXPR         go to state 152
    EXPR_START   go to state 78
    ARRAY_INDEX  go to state 57
    MULTI_AR     go to state 153
    MAKE         go to state 154
    SLICE        go to state 155


State 104

   34 VAR: t_id MULTI_AR . ASSIGNMENT EXPR
   37    | t_id MULTI_AR . ASSIGNMENT MAKE

    t_vtype     shift, and go to state 94
    t_comma     shift, and go to state 119
    t_equality  shift, and go to state 97

    ASSIGNMENT  go to state 156


State 105

  124 ARRAY_INDEX: t_open_sq t_int_const . t_close_sq

    t_close_sq  shift, and go to state 157


State 106

  125 ARRAY_INDEX: t_open_sq t_id . t_close_sq

    t_close_sq  shift, and go to state 158


State 107

  126 ARRAY_INDEX: t_open_sq t_string . t_close_sq

    t_close_sq  shift, and go to state 159


State 108

  127 ARRAY_INDEX: t_open_sq t_close_sq .

    $default  reduce using rule 127 (ARRAY_INDEX)


State 109

   15 BODY_START: BODY_START BODY_FILLING END_SYMBOLS .

    $default  reduce using rule 15 (BODY_START)


State 110

   51 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   56 METHOD: t_id . t_dot

    t_open_paren  shift, and go to state 98
    t_dot         shift, and go to state 99


State 111

   52 FUNC_CALL: METHOD FUNC_CALL .

    $default  reduce using rule 52 (FUNC_CALL)


State 112

   96 ELSEIF_SECOND: t_else . t_if CONDITION BODY
   99 ELSE_THIRD: t_else . BODY

    t_if       shift, and go to state 160
    t_open_br  shift, and go to state 25

    BODY        go to state 161
    BODY_START  go to state 27


State 113

   89 IF: IF_FIRST MULTY_ELSEIF_SECOND . MULTY_ELSE_THIRD
   90   | IF_FIRST MULTY_ELSEIF_SECOND .
   94 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND . ELSEIF_SECOND

    t_else  shift, and go to state 112

    $default  reduce using rule 90 (IF)

    ELSEIF_SECOND     go to state 162
    MULTY_ELSE_THIRD  go to state 163
    ELSE_THIRD        go to state 116


State 114

   95 MULTY_ELSEIF_SECOND: ELSEIF_SECOND .

    $default  reduce using rule 95 (MULTY_ELSEIF_SECOND)


State 115

   91 IF: IF_FIRST MULTY_ELSE_THIRD .
   98 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD . ELSE_THIRD

    t_else  shift, and go to state 164

    $default  reduce using rule 91 (IF)

    ELSE_THIRD  go to state 165


State 116

   97 MULTY_ELSE_THIRD: ELSE_THIRD .

    $default  reduce using rule 97 (MULTY_ELSE_THIRD)


State 117

  129 MULTI_AR: ARRAY_INDEX MULTI_AR .

    $default  reduce using rule 129 (MULTI_AR)


State 118

  142 MAPS: t_map . t_open_sq t_vtype t_close_sq t_vtype

    t_open_sq  shift, and go to state 166


State 119

   46 ASSIGNMENT: t_comma . t_id ASSIGNMENT EXPR t_comma
   47           | t_comma . t_id ASSIGNMENT BOOLEAN t_comma

    t_id  shift, and go to state 167


State 120

   27 VAR: t_var t_id ASSIGNMENT . EXPR
   28    | t_var t_id ASSIGNMENT . EXPR t_vtype
   29    | t_var t_id ASSIGNMENT . BOOLEAN
   32    | t_var t_id ASSIGNMENT . MULTI_AR t_vtype PLENTY
   35    | t_var t_id ASSIGNMENT . MAKE
   40    | t_var t_id ASSIGNMENT . SLICE

    t_int_const         shift, and go to state 62
    t_float_const       shift, and go to state 63
    t_id                shift, and go to state 149
    t_string            shift, and go to state 65
    t_open_paren        shift, and go to state 66
    t_open_sq           shift, and go to state 42
    t_rune              shift, and go to state 67
    t_blank_identifier  shift, and go to state 68
    t_make              shift, and go to state 168

    BOOLEAN      go to state 169
    FUNC_CALL    go to state 72
    SHIFT        go to state 73
    SHIFT_AC     go to state 74
    METHOD       go to state 47
    VALUE        go to state 75
    EXPR         go to state 170
    EXPR_START   go to state 78
    ARRAY_INDEX  go to state 57
    MULTI_AR     go to state 171
    MAKE         go to state 172
    SLICE        go to state 173


State 121

  121 ARRAY_BODY: t_var t_id MULTI_AR . t_vtype
  122           | t_var t_id MULTI_AR . t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  123           | t_var t_id MULTI_AR . t_vtype ASSIGNMENT MAKE

    t_vtype  shift, and go to state 174


State 122

   41 VAR: t_var t_id MAPS .

    $default  reduce using rule 41 (VAR)


State 123

   53 SHIFT: SHIFT_AC t_shift_const . SHIFT_AC

    t_int_const  shift, and go to state 175
    t_id         shift, and go to state 176

    SHIFT_AC  go to state 177


State 124

  104 EXPR: EXPR t_sign . VALUE

    t_int_const         shift, and go to state 62
    t_float_const       shift, and go to state 63
    t_id                shift, and go to state 64
    t_string            shift, and go to state 65
    t_rune              shift, and go to state 67
    t_blank_identifier  shift, and go to state 68

    FUNC_CALL  go to state 72
    SHIFT      go to state 73
    SHIFT_AC   go to state 74
    METHOD     go to state 47
    VALUE      go to state 178


State 125

   43 BOOLEAN: EXPR t_bool . EXPR

    t_int_const         shift, and go to state 62
    t_float_const       shift, and go to state 63
    t_id                shift, and go to state 64
    t_string            shift, and go to state 65
    t_open_paren        shift, and go to state 66
    t_rune              shift, and go to state 67
    t_blank_identifier  shift, and go to state 68

    FUNC_CALL   go to state 72
    SHIFT       go to state 73
    SHIFT_AC    go to state 74
    METHOD      go to state 47
    VALUE       go to state 75
    EXPR        go to state 179
    EXPR_START  go to state 78


State 126

   93 IF_FIRST: t_if CONDITION BODY .

    $default  reduce using rule 93 (IF_FIRST)


State 127

  104 EXPR: EXPR . t_sign VALUE
  105     | EXPR_START EXPR . EXPR_END

    t_sign         shift, and go to state 124
    t_close_paren  shift, and go to state 180

    EXPR_END  go to state 181


State 128

   27 VAR: t_var t_id . ASSIGNMENT EXPR
   28    | t_var t_id . ASSIGNMENT EXPR t_vtype
   29    | t_var t_id . ASSIGNMENT BOOLEAN
   32    | t_var t_id . ASSIGNMENT MULTI_AR t_vtype PLENTY
   35    | t_var t_id . ASSIGNMENT MAKE
   40    | t_var t_id . ASSIGNMENT SLICE
   41    | t_var t_id . MAPS

    t_vtype     shift, and go to state 94
    t_map       shift, and go to state 118
    t_comma     shift, and go to state 119
    t_equality  shift, and go to state 97

    ASSIGNMENT  go to state 120
    MAPS        go to state 122


State 129

   73 SWITCH_BODY_START: t_open_br END_SYMBOLS .

    $default  reduce using rule 73 (SWITCH_BODY_START)


State 130

   77 CASE: t_case . CASE_STATEMENT CASE_BODY

    t_int_const         shift, and go to state 62
    t_float_const       shift, and go to state 63
    t_id                shift, and go to state 64
    t_string            shift, and go to state 65
    t_open_paren        shift, and go to state 66
    t_rune              shift, and go to state 67
    t_blank_identifier  shift, and go to state 68

    FUNC_CALL       go to state 72
    SHIFT           go to state 73
    SHIFT_AC        go to state 74
    METHOD          go to state 47
    VALUE           go to state 75
    MULTIPLE_ARG    go to state 182
    FIRST_PART      go to state 183
    CASE_STATEMENT  go to state 184
    EXPR            go to state 185
    EXPR_START      go to state 78


State 131

   78 DEFAULT: t_default . CASE_BODY

    t_colon  shift, and go to state 186

    CASE_BODY  go to state 187


State 132

   88 SWITCH_BODY_END: t_close_br .

    $default  reduce using rule 88 (SWITCH_BODY_END)


State 133

   74 SWITCH_BODY_START: SWITCH_BODY_START CASE .

    $default  reduce using rule 74 (SWITCH_BODY_START)


State 134

   75 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START DEFAULT .

    $default  reduce using rule 75 (SWITCH_BODY_START_WITH_DEFAULT)


State 135

   70 SWITCH_BODY: SWITCH_BODY_START SWITCH_BODY_END .

    $default  reduce using rule 70 (SWITCH_BODY)


State 136

   76 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START_WITH_DEFAULT CASE .

    $default  reduce using rule 76 (SWITCH_BODY_START_WITH_DEFAULT)


State 137

   71 SWITCH_BODY: SWITCH_BODY_START_WITH_DEFAULT SWITCH_BODY_END .

    $default  reduce using rule 71 (SWITCH_BODY)


State 138

   68 SWITCH: t_switch EXPR SWITCH_BODY .

    $default  reduce using rule 68 (SWITCH)


State 139

   67 SWITCH: t_switch INIT_STATE t_semicolon . EXPR SWITCH_BODY

    t_int_const         shift, and go to state 62
    t_float_const       shift, and go to state 63
    t_id                shift, and go to state 64
    t_string            shift, and go to state 65
    t_open_paren        shift, and go to state 66
    t_rune              shift, and go to state 67
    t_blank_identifier  shift, and go to state 68

    FUNC_CALL   go to state 72
    SHIFT       go to state 73
    SHIFT_AC    go to state 74
    METHOD      go to state 47
    VALUE       go to state 75
    EXPR        go to state 188
    EXPR_START  go to state 78


State 140

  117 FOR: t_for INIT_STATE t_semicolon . CONDITION t_semicolon POST_STATE BODY

    t_int_const         shift, and go to state 62
    t_float_const       shift, and go to state 63
    t_id                shift, and go to state 64
    t_string            shift, and go to state 65
    t_open_paren        shift, and go to state 66
    t_rune              shift, and go to state 67
    t_blank_identifier  shift, and go to state 68
    t_true              shift, and go to state 69
    t_false             shift, and go to state 70

    $default  reduce using rule 114 (CONDITION)

    BOOLEAN     go to state 71
    FUNC_CALL   go to state 72
    SHIFT       go to state 73
    SHIFT_AC    go to state 74
    METHOD      go to state 47
    VALUE       go to state 75
    EXPR        go to state 76
    CONDITION   go to state 189
    EXPR_START  go to state 78


State 141

  118 FOR: t_for CONDITION BODY .

    $default  reduce using rule 118 (FOR)


State 142

  101 PARAM: PARAM t_comma . EXPR

    t_int_const         shift, and go to state 62
    t_float_const       shift, and go to state 63
    t_id                shift, and go to state 64
    t_string            shift, and go to state 65
    t_open_paren        shift, and go to state 66
    t_rune              shift, and go to state 67
    t_blank_identifier  shift, and go to state 68

    FUNC_CALL   go to state 72
    SHIFT       go to state 73
    SHIFT_AC    go to state 74
    METHOD      go to state 47
    VALUE       go to state 75
    EXPR        go to state 190
    EXPR_START  go to state 78


State 143

   44 ASSIGNMENT: t_vtype t_equality .

    $default  reduce using rule 44 (ASSIGNMENT)


State 144

   46 ASSIGNMENT: t_comma t_id . ASSIGNMENT EXPR t_comma
   47           | t_comma t_id . ASSIGNMENT BOOLEAN t_comma
   49 SHORT_ASSIGN: t_comma t_id . SHORT_ASSIGN EXPR t_comma
   50             | t_comma t_id . SHORT_ASSIGN BOOLEAN t_comma

    t_vtype      shift, and go to state 94
    t_short_dec  shift, and go to state 95
    t_comma      shift, and go to state 96
    t_equality   shift, and go to state 97

    ASSIGNMENT    go to state 191
    SHORT_ASSIGN  go to state 192


State 145

   51 FUNC_CALL: t_id t_open_paren PARAM . t_close_paren
  101 PARAM: PARAM . t_comma EXPR

    t_comma        shift, and go to state 142
    t_close_paren  shift, and go to state 193


State 146

  107 SHORT_EXPR: t_id t_short_expr t_id .

    $default  reduce using rule 107 (SHORT_EXPR)


State 147

  139 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  140      | t_id . t_open_sq t_colon VALUE t_close_sq
  141      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_open_sq  shift, and go to state 194


State 148

   39 VAR: t_id ASSIGNMENT SLICE .

    $default  reduce using rule 39 (VAR)


State 149

   51 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   54 SHIFT_AC: t_id .
   56 METHOD: t_id . t_dot
   59 VALUE: t_id .
  139 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  140      | t_id . t_open_sq t_colon VALUE t_close_sq
  141      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_open_paren  shift, and go to state 98
    t_open_sq     shift, and go to state 194
    t_dot         shift, and go to state 99

    t_shift_const  reduce using rule 54 (SHIFT_AC)
    $default       reduce using rule 59 (VALUE)


State 150

   42 VAR: t_id SHORT_ASSIGN t_make . t_open_paren MAPS t_close_paren
  137 MAKE: t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  138     | t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_paren  shift, and go to state 195


State 151

   33 VAR: t_id SHORT_ASSIGN BOOLEAN .

    $default  reduce using rule 33 (VAR)


State 152

   30 VAR: t_id SHORT_ASSIGN EXPR .
   43 BOOLEAN: EXPR . t_bool EXPR
  104 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 124
    t_bool  shift, and go to state 125

    $default  reduce using rule 30 (VAR)


State 153

   31 VAR: t_id SHORT_ASSIGN MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 196


State 154

   36 VAR: t_id SHORT_ASSIGN MAKE .

    $default  reduce using rule 36 (VAR)


State 155

   38 VAR: t_id SHORT_ASSIGN SLICE .

    $default  reduce using rule 38 (VAR)


State 156

   34 VAR: t_id MULTI_AR ASSIGNMENT . EXPR
   37    | t_id MULTI_AR ASSIGNMENT . MAKE

    t_int_const         shift, and go to state 62
    t_float_const       shift, and go to state 63
    t_id                shift, and go to state 64
    t_string            shift, and go to state 65
    t_open_paren        shift, and go to state 66
    t_rune              shift, and go to state 67
    t_blank_identifier  shift, and go to state 68
    t_make              shift, and go to state 168

    FUNC_CALL   go to state 72
    SHIFT       go to state 73
    SHIFT_AC    go to state 74
    METHOD      go to state 47
    VALUE       go to state 75
    EXPR        go to state 197
    EXPR_START  go to state 78
    MAKE        go to state 198


State 157

  124 ARRAY_INDEX: t_open_sq t_int_const t_close_sq .

    $default  reduce using rule 124 (ARRAY_INDEX)


State 158

  125 ARRAY_INDEX: t_open_sq t_id t_close_sq .

    $default  reduce using rule 125 (ARRAY_INDEX)


State 159

  126 ARRAY_INDEX: t_open_sq t_string t_close_sq .

    $default  reduce using rule 126 (ARRAY_INDEX)


State 160

   96 ELSEIF_SECOND: t_else t_if . CONDITION BODY

    t_int_const         shift, and go to state 62
    t_float_const       shift, and go to state 63
    t_id                shift, and go to state 64
    t_string            shift, and go to state 65
    t_open_paren        shift, and go to state 66
    t_rune              shift, and go to state 67
    t_blank_identifier  shift, and go to state 68
    t_true              shift, and go to state 69
    t_false             shift, and go to state 70

    $default  reduce using rule 114 (CONDITION)

    BOOLEAN     go to state 71
    FUNC_CALL   go to state 72
    SHIFT       go to state 73
    SHIFT_AC    go to state 74
    METHOD      go to state 47
    VALUE       go to state 75
    EXPR        go to state 76
    CONDITION   go to state 199
    EXPR_START  go to state 78


State 161

   99 ELSE_THIRD: t_else BODY .

    $default  reduce using rule 99 (ELSE_THIRD)


State 162

   94 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND ELSEIF_SECOND .

    $default  reduce using rule 94 (MULTY_ELSEIF_SECOND)


State 163

   89 IF: IF_FIRST MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD .
   98 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD . ELSE_THIRD

    t_else  shift, and go to state 164

    $default  reduce using rule 89 (IF)

    ELSE_THIRD  go to state 165


State 164

   99 ELSE_THIRD: t_else . BODY

    t_open_br  shift, and go to state 25

    BODY        go to state 161
    BODY_START  go to state 27


State 165

   98 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD ELSE_THIRD .

    $default  reduce using rule 98 (MULTY_ELSE_THIRD)


State 166

  142 MAPS: t_map t_open_sq . t_vtype t_close_sq t_vtype

    t_vtype  shift, and go to state 200


State 167

   46 ASSIGNMENT: t_comma t_id . ASSIGNMENT EXPR t_comma
   47           | t_comma t_id . ASSIGNMENT BOOLEAN t_comma

    t_vtype     shift, and go to state 94
    t_comma     shift, and go to state 119
    t_equality  shift, and go to state 97

    ASSIGNMENT  go to state 191


State 168

  137 MAKE: t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  138     | t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_paren  shift, and go to state 201


State 169

   29 VAR: t_var t_id ASSIGNMENT BOOLEAN .

    $default  reduce using rule 29 (VAR)


State 170

   27 VAR: t_var t_id ASSIGNMENT EXPR .
   28    | t_var t_id ASSIGNMENT EXPR . t_vtype
   43 BOOLEAN: EXPR . t_bool EXPR
  104 EXPR: EXPR . t_sign VALUE

    t_vtype  shift, and go to state 202
    t_sign   shift, and go to state 124
    t_bool   shift, and go to state 125

    $default  reduce using rule 27 (VAR)


State 171

   32 VAR: t_var t_id ASSIGNMENT MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 203


State 172

   35 VAR: t_var t_id ASSIGNMENT MAKE .

    $default  reduce using rule 35 (VAR)


State 173

   40 VAR: t_var t_id ASSIGNMENT SLICE .

    $default  reduce using rule 40 (VAR)


State 174

  121 ARRAY_BODY: t_var t_id MULTI_AR t_vtype .
  122           | t_var t_id MULTI_AR t_vtype . ASSIGNMENT MULTI_AR t_vtype PLENTY
  123           | t_var t_id MULTI_AR t_vtype . ASSIGNMENT MAKE

    t_vtype     shift, and go to state 94
    t_comma     shift, and go to state 119
    t_equality  shift, and go to state 97

    $default  reduce using rule 121 (ARRAY_BODY)

    ASSIGNMENT  go to state 204


State 175

   55 SHIFT_AC: t_int_const .

    $default  reduce using rule 55 (SHIFT_AC)


State 176

   54 SHIFT_AC: t_id .

    $default  reduce using rule 54 (SHIFT_AC)


State 177

   53 SHIFT: SHIFT_AC t_shift_const SHIFT_AC .

    $default  reduce using rule 53 (SHIFT)


State 178

  104 EXPR: EXPR t_sign VALUE .

    $default  reduce using rule 104 (EXPR)


State 179

   43 BOOLEAN: EXPR t_bool EXPR .
  104 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 124

    $default  reduce using rule 43 (BOOLEAN)


State 180

  120 EXPR_END: t_close_paren .

    $default  reduce using rule 120 (EXPR_END)


State 181

  105 EXPR: EXPR_START EXPR EXPR_END .

    $default  reduce using rule 105 (EXPR)


State 182

   83 CASE_STATEMENT: MULTIPLE_ARG .

    $default  reduce using rule 83 (CASE_STATEMENT)


State 183

   79 MULTIPLE_ARG: FIRST_PART . SECOND_PART
   81 FIRST_PART: FIRST_PART . EXPR t_comma

    t_int_const         shift, and go to state 62
    t_float_const       shift, and go to state 63
    t_id                shift, and go to state 64
    t_string            shift, and go to state 65
    t_open_paren        shift, and go to state 66
    t_rune              shift, and go to state 67
    t_blank_identifier  shift, and go to state 68

    FUNC_CALL    go to state 72
    SHIFT        go to state 73
    SHIFT_AC     go to state 74
    METHOD       go to state 47
    VALUE        go to state 75
    SECOND_PART  go to state 205
    EXPR         go to state 206
    EXPR_START   go to state 78


State 184

   77 CASE: t_case CASE_STATEMENT . CASE_BODY

    t_colon  shift, and go to state 186

    CASE_BODY  go to state 207


State 185

   80 FIRST_PART: EXPR . t_comma
   84 CASE_STATEMENT: EXPR .
  104 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 124
    t_comma  shift, and go to state 208

    $default  reduce using rule 84 (CASE_STATEMENT)


State 186

   85 CASE_BODY: t_colon .
   86          | t_colon . t_enter

    t_enter  shift, and go to state 209

    $default  reduce using rule 85 (CASE_BODY)


State 187

   78 DEFAULT: t_default CASE_BODY .
   87 CASE_BODY: CASE_BODY . BODY_FILLING END_SYMBOLS

    t_var      shift, and go to state 34
    t_if       shift, and go to state 35
    t_switch   shift, and go to state 36
    t_for      shift, and go to state 37
    t_goto     shift, and go to state 38
    t_return   shift, and go to state 39
    t_id       shift, and go to state 40
    t_open_sq  shift, and go to state 42

    $default  reduce using rule 78 (DEFAULT)

    BODY_FILLING  go to state 210
    VAR           go to state 45
    FUNC_CALL     go to state 46
    METHOD        go to state 47
    GOTO          go to state 48
    LABEL         go to state 49
    SWITCH        go to state 50
    IF            go to state 51
    IF_FIRST      go to state 52
    RETURN        go to state 53
    SHORT_EXPR    go to state 54
    FOR           go to state 55
    ARRAY_BODY    go to state 56
    ARRAY_INDEX   go to state 57
    MULTI_AR      go to state 58


State 188

   67 SWITCH: t_switch INIT_STATE t_semicolon EXPR . SWITCH_BODY
  104 EXPR: EXPR . t_sign VALUE

    t_open_br  shift, and go to state 81
    t_sign     shift, and go to state 124

    SWITCH_BODY                     go to state 211
    SWITCH_BODY_START               go to state 85
    SWITCH_BODY_START_WITH_DEFAULT  go to state 86


State 189

  117 FOR: t_for INIT_STATE t_semicolon CONDITION . t_semicolon POST_STATE BODY

    t_semicolon  shift, and go to state 212


State 190

  101 PARAM: PARAM t_comma EXPR .
  104 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 124

    $default  reduce using rule 101 (PARAM)


State 191

   46 ASSIGNMENT: t_comma t_id ASSIGNMENT . EXPR t_comma
   47           | t_comma t_id ASSIGNMENT . BOOLEAN t_comma

    t_int_const         shift, and go to state 62
    t_float_const       shift, and go to state 63
    t_id                shift, and go to state 64
    t_string            shift, and go to state 65
    t_open_paren        shift, and go to state 66
    t_rune              shift, and go to state 67
    t_blank_identifier  shift, and go to state 68

    BOOLEAN     go to state 213
    FUNC_CALL   go to state 72
    SHIFT       go to state 73
    SHIFT_AC    go to state 74
    METHOD      go to state 47
    VALUE       go to state 75
    EXPR        go to state 214
    EXPR_START  go to state 78


State 192

   49 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN . EXPR t_comma
   50             | t_comma t_id SHORT_ASSIGN . BOOLEAN t_comma

    t_int_const         shift, and go to state 62
    t_float_const       shift, and go to state 63
    t_id                shift, and go to state 64
    t_string            shift, and go to state 65
    t_open_paren        shift, and go to state 66
    t_rune              shift, and go to state 67
    t_blank_identifier  shift, and go to state 68

    BOOLEAN     go to state 215
    FUNC_CALL   go to state 72
    SHIFT       go to state 73
    SHIFT_AC    go to state 74
    METHOD      go to state 47
    VALUE       go to state 75
    EXPR        go to state 216
    EXPR_START  go to state 78


State 193

   51 FUNC_CALL: t_id t_open_paren PARAM t_close_paren .

    $default  reduce using rule 51 (FUNC_CALL)


State 194

  139 SLICE: t_id t_open_sq . VALUE t_colon VALUE t_close_sq
  140      | t_id t_open_sq . t_colon VALUE t_close_sq
  141      | t_id t_open_sq . VALUE t_colon t_close_sq

    t_int_const         shift, and go to state 62
    t_float_const       shift, and go to state 63
    t_id                shift, and go to state 64
    t_string            shift, and go to state 65
    t_rune              shift, and go to state 67
    t_blank_identifier  shift, and go to state 68
    t_colon             shift, and go to state 217

    FUNC_CALL  go to state 72
    SHIFT      go to state 73
    SHIFT_AC   go to state 74
    METHOD     go to state 47
    VALUE      go to state 218


State 195

   42 VAR: t_id SHORT_ASSIGN t_make t_open_paren . MAPS t_close_paren
  137 MAKE: t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_close_paren
  138     | t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_map      shift, and go to state 118
    t_open_sq  shift, and go to state 42

    ARRAY_INDEX  go to state 57
    MULTI_AR     go to state 219
    MAPS         go to state 220


State 196

   31 VAR: t_id SHORT_ASSIGN MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 221

    PLENTY      go to state 222
    PLENTY_OLD  go to state 223


State 197

   34 VAR: t_id MULTI_AR ASSIGNMENT EXPR .
  104 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 124

    $default  reduce using rule 34 (VAR)


State 198

   37 VAR: t_id MULTI_AR ASSIGNMENT MAKE .

    $default  reduce using rule 37 (VAR)


State 199

   96 ELSEIF_SECOND: t_else t_if CONDITION . BODY

    t_open_br  shift, and go to state 25

    BODY        go to state 224
    BODY_START  go to state 27


State 200

  142 MAPS: t_map t_open_sq t_vtype . t_close_sq t_vtype

    t_close_sq  shift, and go to state 225


State 201

  137 MAKE: t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_close_paren
  138     | t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_sq  shift, and go to state 42

    ARRAY_INDEX  go to state 57
    MULTI_AR     go to state 219


State 202

   28 VAR: t_var t_id ASSIGNMENT EXPR t_vtype .

    $default  reduce using rule 28 (VAR)


State 203

   32 VAR: t_var t_id ASSIGNMENT MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 221

    PLENTY      go to state 226
    PLENTY_OLD  go to state 223


State 204

  122 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT . MULTI_AR t_vtype PLENTY
  123           | t_var t_id MULTI_AR t_vtype ASSIGNMENT . MAKE

    t_open_sq  shift, and go to state 42
    t_make     shift, and go to state 168

    ARRAY_INDEX  go to state 57
    MULTI_AR     go to state 227
    MAKE         go to state 228


State 205

   79 MULTIPLE_ARG: FIRST_PART SECOND_PART .

    $default  reduce using rule 79 (MULTIPLE_ARG)


State 206

   81 FIRST_PART: FIRST_PART EXPR . t_comma
   82 SECOND_PART: EXPR .
  104 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 124
    t_comma  shift, and go to state 229

    $default  reduce using rule 82 (SECOND_PART)


State 207

   77 CASE: t_case CASE_STATEMENT CASE_BODY .
   87 CASE_BODY: CASE_BODY . BODY_FILLING END_SYMBOLS

    t_var      shift, and go to state 34
    t_if       shift, and go to state 35
    t_switch   shift, and go to state 36
    t_for      shift, and go to state 37
    t_goto     shift, and go to state 38
    t_return   shift, and go to state 39
    t_id       shift, and go to state 40
    t_open_sq  shift, and go to state 42

    $default  reduce using rule 77 (CASE)

    BODY_FILLING  go to state 210
    VAR           go to state 45
    FUNC_CALL     go to state 46
    METHOD        go to state 47
    GOTO          go to state 48
    LABEL         go to state 49
    SWITCH        go to state 50
    IF            go to state 51
    IF_FIRST      go to state 52
    RETURN        go to state 53
    SHORT_EXPR    go to state 54
    FOR           go to state 55
    ARRAY_BODY    go to state 56
    ARRAY_INDEX   go to state 57
    MULTI_AR      go to state 58


State 208

   80 FIRST_PART: EXPR t_comma .

    $default  reduce using rule 80 (FIRST_PART)


State 209

   86 CASE_BODY: t_colon t_enter .

    $default  reduce using rule 86 (CASE_BODY)


State 210

   87 CASE_BODY: CASE_BODY BODY_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 17
    t_enter      shift, and go to state 18
    t_eof        shift, and go to state 19

    END_SYMBOLS  go to state 230


State 211

   67 SWITCH: t_switch INIT_STATE t_semicolon EXPR SWITCH_BODY .

    $default  reduce using rule 67 (SWITCH)


State 212

  117 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon . POST_STATE BODY

    t_int_const         shift, and go to state 62
    t_float_const       shift, and go to state 63
    t_id                shift, and go to state 64
    t_string            shift, and go to state 65
    t_open_paren        shift, and go to state 66
    t_rune              shift, and go to state 67
    t_blank_identifier  shift, and go to state 68

    $default  reduce using rule 116 (POST_STATE)

    FUNC_CALL   go to state 72
    SHIFT       go to state 73
    SHIFT_AC    go to state 74
    METHOD      go to state 47
    VALUE       go to state 75
    EXPR        go to state 231
    POST_STATE  go to state 232
    EXPR_START  go to state 78


State 213

   47 ASSIGNMENT: t_comma t_id ASSIGNMENT BOOLEAN . t_comma

    t_comma  shift, and go to state 233


State 214

   43 BOOLEAN: EXPR . t_bool EXPR
   46 ASSIGNMENT: t_comma t_id ASSIGNMENT EXPR . t_comma
  104 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 124
    t_comma  shift, and go to state 234
    t_bool   shift, and go to state 125


State 215

   50 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN BOOLEAN . t_comma

    t_comma  shift, and go to state 235


State 216

   43 BOOLEAN: EXPR . t_bool EXPR
   49 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN EXPR . t_comma
  104 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 124
    t_comma  shift, and go to state 236
    t_bool   shift, and go to state 125


State 217

  140 SLICE: t_id t_open_sq t_colon . VALUE t_close_sq

    t_int_const         shift, and go to state 62
    t_float_const       shift, and go to state 63
    t_id                shift, and go to state 64
    t_string            shift, and go to state 65
    t_rune              shift, and go to state 67
    t_blank_identifier  shift, and go to state 68

    FUNC_CALL  go to state 72
    SHIFT      go to state 73
    SHIFT_AC   go to state 74
    METHOD     go to state 47
    VALUE      go to state 237


State 218

  139 SLICE: t_id t_open_sq VALUE . t_colon VALUE t_close_sq
  141      | t_id t_open_sq VALUE . t_colon t_close_sq

    t_colon  shift, and go to state 238


State 219

  137 MAKE: t_make t_open_paren MULTI_AR . t_vtype t_comma VALUE t_close_paren
  138     | t_make t_open_paren MULTI_AR . t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_vtype  shift, and go to state 239


State 220

   42 VAR: t_id SHORT_ASSIGN t_make t_open_paren MAPS . t_close_paren

    t_close_paren  shift, and go to state 240


State 221

  132 PLENTY_OLD: t_open_br . ENUM t_close_br
  133           | t_open_br . t_close_br
  134           | t_open_br . PLENTY t_close_br

    t_int_const         shift, and go to state 62
    t_float_const       shift, and go to state 63
    t_id                shift, and go to state 64
    t_string            shift, and go to state 65
    t_open_br           shift, and go to state 221
    t_close_br          shift, and go to state 241
    t_rune              shift, and go to state 67
    t_blank_identifier  shift, and go to state 68

    FUNC_CALL   go to state 72
    SHIFT       go to state 73
    SHIFT_AC    go to state 74
    METHOD      go to state 47
    VALUE       go to state 242
    PLENTY      go to state 243
    PLENTY_OLD  go to state 223
    ENUM        go to state 244


State 222

   31 VAR: t_id SHORT_ASSIGN MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 31 (VAR)


State 223

  130 PLENTY: PLENTY_OLD .
  131       | PLENTY_OLD . t_comma PLENTY

    t_comma  shift, and go to state 245

    $default  reduce using rule 130 (PLENTY)


State 224

   96 ELSEIF_SECOND: t_else t_if CONDITION BODY .

    $default  reduce using rule 96 (ELSEIF_SECOND)


State 225

  142 MAPS: t_map t_open_sq t_vtype t_close_sq . t_vtype

    t_vtype  shift, and go to state 246


State 226

   32 VAR: t_var t_id ASSIGNMENT MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 32 (VAR)


State 227

  122 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 247


State 228

  123 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MAKE .

    $default  reduce using rule 123 (ARRAY_BODY)


State 229

   81 FIRST_PART: FIRST_PART EXPR t_comma .

    $default  reduce using rule 81 (FIRST_PART)


State 230

   87 CASE_BODY: CASE_BODY BODY_FILLING END_SYMBOLS .

    $default  reduce using rule 87 (CASE_BODY)


State 231

  104 EXPR: EXPR . t_sign VALUE
  115 POST_STATE: EXPR .

    t_sign  shift, and go to state 124

    $default  reduce using rule 115 (POST_STATE)


State 232

  117 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE . BODY

    t_open_br  shift, and go to state 25

    BODY        go to state 248
    BODY_START  go to state 27


State 233

   47 ASSIGNMENT: t_comma t_id ASSIGNMENT BOOLEAN t_comma .

    $default  reduce using rule 47 (ASSIGNMENT)


State 234

   46 ASSIGNMENT: t_comma t_id ASSIGNMENT EXPR t_comma .

    $default  reduce using rule 46 (ASSIGNMENT)


State 235

   50 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN BOOLEAN t_comma .

    $default  reduce using rule 50 (SHORT_ASSIGN)


State 236

   49 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN EXPR t_comma .

    $default  reduce using rule 49 (SHORT_ASSIGN)


State 237

  140 SLICE: t_id t_open_sq t_colon VALUE . t_close_sq

    t_close_sq  shift, and go to state 249


State 238

  139 SLICE: t_id t_open_sq VALUE t_colon . VALUE t_close_sq
  141      | t_id t_open_sq VALUE t_colon . t_close_sq

    t_int_const         shift, and go to state 62
    t_float_const       shift, and go to state 63
    t_id                shift, and go to state 64
    t_string            shift, and go to state 65
    t_close_sq          shift, and go to state 250
    t_rune              shift, and go to state 67
    t_blank_identifier  shift, and go to state 68

    FUNC_CALL  go to state 72
    SHIFT      go to state 73
    SHIFT_AC   go to state 74
    METHOD     go to state 47
    VALUE      go to state 251


State 239

  137 MAKE: t_make t_open_paren MULTI_AR t_vtype . t_comma VALUE t_close_paren
  138     | t_make t_open_paren MULTI_AR t_vtype . t_comma VALUE t_comma t_int_const VALUE

    t_comma  shift, and go to state 252


State 240

   42 VAR: t_id SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren .

    $default  reduce using rule 42 (VAR)


State 241

  133 PLENTY_OLD: t_open_br t_close_br .

    $default  reduce using rule 133 (PLENTY_OLD)


State 242

  135 ENUM: VALUE .

    $default  reduce using rule 135 (ENUM)


State 243

  134 PLENTY_OLD: t_open_br PLENTY . t_close_br

    t_close_br  shift, and go to state 253


State 244

  132 PLENTY_OLD: t_open_br ENUM . t_close_br
  136 ENUM: ENUM . t_comma VALUE

    t_close_br  shift, and go to state 254
    t_comma     shift, and go to state 255


State 245

  131 PLENTY: PLENTY_OLD t_comma . PLENTY

    t_open_br  shift, and go to state 221

    PLENTY      go to state 256
    PLENTY_OLD  go to state 223


State 246

  142 MAPS: t_map t_open_sq t_vtype t_close_sq t_vtype .

    $default  reduce using rule 142 (MAPS)


State 247

  122 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 221

    PLENTY      go to state 257
    PLENTY_OLD  go to state 223


State 248

  117 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY .

    $default  reduce using rule 117 (FOR)


State 249

  140 SLICE: t_id t_open_sq t_colon VALUE t_close_sq .

    $default  reduce using rule 140 (SLICE)


State 250

  141 SLICE: t_id t_open_sq VALUE t_colon t_close_sq .

    $default  reduce using rule 141 (SLICE)


State 251

  139 SLICE: t_id t_open_sq VALUE t_colon VALUE . t_close_sq

    t_close_sq  shift, and go to state 258


State 252

  137 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma . VALUE t_close_paren
  138     | t_make t_open_paren MULTI_AR t_vtype t_comma . VALUE t_comma t_int_const VALUE

    t_int_const         shift, and go to state 62
    t_float_const       shift, and go to state 63
    t_id                shift, and go to state 64
    t_string            shift, and go to state 65
    t_rune              shift, and go to state 67
    t_blank_identifier  shift, and go to state 68

    FUNC_CALL  go to state 72
    SHIFT      go to state 73
    SHIFT_AC   go to state 74
    METHOD     go to state 47
    VALUE      go to state 259


State 253

  134 PLENTY_OLD: t_open_br PLENTY t_close_br .

    $default  reduce using rule 134 (PLENTY_OLD)


State 254

  132 PLENTY_OLD: t_open_br ENUM t_close_br .

    $default  reduce using rule 132 (PLENTY_OLD)


State 255

  136 ENUM: ENUM t_comma . VALUE

    t_int_const         shift, and go to state 62
    t_float_const       shift, and go to state 63
    t_id                shift, and go to state 64
    t_string            shift, and go to state 65
    t_rune              shift, and go to state 67
    t_blank_identifier  shift, and go to state 68

    FUNC_CALL  go to state 72
    SHIFT      go to state 73
    SHIFT_AC   go to state 74
    METHOD     go to state 47
    VALUE      go to state 260


State 256

  131 PLENTY: PLENTY_OLD t_comma PLENTY .

    $default  reduce using rule 131 (PLENTY)


State 257

  122 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 122 (ARRAY_BODY)


State 258

  139 SLICE: t_id t_open_sq VALUE t_colon VALUE t_close_sq .

    $default  reduce using rule 139 (SLICE)


State 259

  137 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE . t_close_paren
  138     | t_make t_open_paren MULTI_AR t_vtype t_comma VALUE . t_comma t_int_const VALUE

    t_comma        shift, and go to state 261
    t_close_paren  shift, and go to state 262


State 260

  136 ENUM: ENUM t_comma VALUE .

    $default  reduce using rule 136 (ENUM)


State 261

  138 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma . t_int_const VALUE

    t_int_const  shift, and go to state 263


State 262

  137 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren .

    $default  reduce using rule 137 (MAKE)


State 263

  138 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const . VALUE

    t_int_const         shift, and go to state 62
    t_float_const       shift, and go to state 63
    t_id                shift, and go to state 64
    t_string            shift, and go to state 65
    t_rune              shift, and go to state 67
    t_blank_identifier  shift, and go to state 68

    FUNC_CALL  go to state 72
    SHIFT      go to state 73
    SHIFT_AC   go to state 74
    METHOD     go to state 47
    VALUE      go to state 264


State 264

  138 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE .

    $default  reduce using rule 138 (MAKE)
