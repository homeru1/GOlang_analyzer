Terminals unused in grammar

   t_constant
   t_case
   t_chan
   t_defer
   t_go
   t_interface
   t_default
   t_range
   t_map
   t_select
   t_switch
   t_fallthrough
   t_else
   t_type
   t_goto
   t_continue
   t_break
   t_struct_const
   t_or_const
   t_and_const
   t_param_const
   t_eq_const
   t_rel_const
   t_shift_const
   t_inc_const
   t_point_const
   t_punc
   t_char_const
   t_bool
   '+'
   '-'
   '*'
   '/'


Grammar

    0 $accept: START $end

    1 START: START GLOBAL
    2      | GLOBAL

    3 GLOBAL: PACKAGE
    4       | IMPORT
    5       | FUNC

    6 PACKAGE: t_package t_id

    7 IMPORT: t_import t_string

    8 FUNC: t_func t_id BODY

    9 BODY: BODY_START BODY_END

   10 BODY_END: t_close_br
   11         | RETURN BODY_END

   12 BODY_START: t_open_br
   13           | BODY_START VAR
   14           | BODY_START OPERATORS

   15 VAR: t_var t_id ASSIGNMENT VALUE
   16    | t_id SHORT_ASSIGN VALUE

   17 ASSIGNMENT: t_vtype t_equality
   18           | t_equality
   19           | t_comma t_id ASSIGNMENT VALUE t_comma

   20 SHORT_ASSIGN: t_short_dec
   21             | t_comma t_id SHORT_ASSIGN VALUE t_comma

   22 VALUE: t_int_const
   23      | t_float_const
   24      | t_id
   25      | t_string
   26      | EXPR_BR

   27 OPERATORS: IF
   28          | FOR

   29 FOR: t_for BODY

   30 IF: t_if BODY

   31 RETURN: t_return RET_PARAM
   32       | t_return

   33 RET_PARAM: RET_PARAM t_comma EXPR
   34          | RET_PARAM t_comma VALUE
   35          | EXPR
   36          | VALUE

   37 EXPR: VALUE t_sign VALUE
   38     | EXPR t_sign VALUE

   39 EXPR_BR: EXPR_START EXPR EXPR_END
   40        | EXPR_START VALUE EXPR_END

   41 EXPR_START: t_open_paren

   42 EXPR_END: t_close_paren


Terminals, with rules where they appear

$end (0) 0
'*' (42)
'+' (43)
'-' (45)
'/' (47)
error (256)
t_vtype (258) 17
t_constant (259)
t_case (260)
t_func (261) 8
t_import (262) 7
t_chan (263)
t_defer (264)
t_go (265)
t_interface (266)
t_default (267)
t_var (268) 15
t_range (269)
t_map (270)
t_package (271) 6
t_if (272) 30
t_select (273)
t_switch (274)
t_fallthrough (275)
t_else (276)
t_type (277)
t_for (278) 29
t_goto (279)
t_continue (280)
t_break (281)
t_return (282) 31 32
t_struct_const (283)
t_or_const (284)
t_and_const (285)
t_param_const (286)
t_eq_const (287)
t_rel_const (288)
t_shift_const (289)
t_inc_const (290)
t_point_const (291)
t_punc (292)
t_int_const (293) 22
t_float_const (294) 23
t_char_const (295)
t_id (296) 6 8 15 16 19 21 24
t_string (297) 7 25
t_short_dec (298) 20
t_open_br (299) 12
t_close_br (300) 10
t_sign (301) 37 38
t_comma (302) 19 21 33 34
t_equality (303) 17 18
t_open_paren (304) 41
t_close_paren (305) 42
t_bool (306)


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
START (57)
    on left: 1 2, on right: 0 1
GLOBAL (58)
    on left: 3 4 5, on right: 1 2
PACKAGE (59)
    on left: 6, on right: 3
IMPORT (60)
    on left: 7, on right: 4
FUNC (61)
    on left: 8, on right: 5
BODY (62)
    on left: 9, on right: 8 29 30
BODY_END (63)
    on left: 10 11, on right: 9 11
BODY_START (64)
    on left: 12 13 14, on right: 9 13 14
VAR (65)
    on left: 15 16, on right: 13
ASSIGNMENT (66)
    on left: 17 18 19, on right: 15 19
SHORT_ASSIGN (67)
    on left: 20 21, on right: 16 21
VALUE (68)
    on left: 22 23 24 25 26, on right: 15 16 19 21 34 36 37 38 40
OPERATORS (69)
    on left: 27 28, on right: 14
FOR (70)
    on left: 29, on right: 28
IF (71)
    on left: 30, on right: 27
RETURN (72)
    on left: 31 32, on right: 11
RET_PARAM (73)
    on left: 33 34 35 36, on right: 31 33 34
EXPR (74)
    on left: 37 38, on right: 33 35 38 39
EXPR_BR (75)
    on left: 39 40, on right: 26
EXPR_START (76)
    on left: 41, on right: 39 40
EXPR_END (77)
    on left: 42, on right: 39 40


State 0

    0 $accept: . START $end

    t_func     shift, and go to state 1
    t_import   shift, and go to state 2
    t_package  shift, and go to state 3

    START    go to state 4
    GLOBAL   go to state 5
    PACKAGE  go to state 6
    IMPORT   go to state 7
    FUNC     go to state 8


State 1

    8 FUNC: t_func . t_id BODY

    t_id  shift, and go to state 9


State 2

    7 IMPORT: t_import . t_string

    t_string  shift, and go to state 10


State 3

    6 PACKAGE: t_package . t_id

    t_id  shift, and go to state 11


State 4

    0 $accept: START . $end
    1 START: START . GLOBAL

    $end       shift, and go to state 12
    t_func     shift, and go to state 1
    t_import   shift, and go to state 2
    t_package  shift, and go to state 3

    GLOBAL   go to state 13
    PACKAGE  go to state 6
    IMPORT   go to state 7
    FUNC     go to state 8


State 5

    2 START: GLOBAL .

    $default  reduce using rule 2 (START)


State 6

    3 GLOBAL: PACKAGE .

    $default  reduce using rule 3 (GLOBAL)


State 7

    4 GLOBAL: IMPORT .

    $default  reduce using rule 4 (GLOBAL)


State 8

    5 GLOBAL: FUNC .

    $default  reduce using rule 5 (GLOBAL)


State 9

    8 FUNC: t_func t_id . BODY

    t_open_br  shift, and go to state 14

    BODY        go to state 15
    BODY_START  go to state 16


State 10

    7 IMPORT: t_import t_string .

    $default  reduce using rule 7 (IMPORT)


State 11

    6 PACKAGE: t_package t_id .

    $default  reduce using rule 6 (PACKAGE)


State 12

    0 $accept: START $end .

    $default  accept


State 13

    1 START: START GLOBAL .

    $default  reduce using rule 1 (START)


State 14

   12 BODY_START: t_open_br .

    $default  reduce using rule 12 (BODY_START)


State 15

    8 FUNC: t_func t_id BODY .

    $default  reduce using rule 8 (FUNC)


State 16

    9 BODY: BODY_START . BODY_END
   13 BODY_START: BODY_START . VAR
   14           | BODY_START . OPERATORS

    t_var       shift, and go to state 17
    t_if        shift, and go to state 18
    t_for       shift, and go to state 19
    t_return    shift, and go to state 20
    t_id        shift, and go to state 21
    t_close_br  shift, and go to state 22

    BODY_END   go to state 23
    VAR        go to state 24
    OPERATORS  go to state 25
    FOR        go to state 26
    IF         go to state 27
    RETURN     go to state 28


State 17

   15 VAR: t_var . t_id ASSIGNMENT VALUE

    t_id  shift, and go to state 29


State 18

   30 IF: t_if . BODY

    t_open_br  shift, and go to state 14

    BODY        go to state 30
    BODY_START  go to state 16


State 19

   29 FOR: t_for . BODY

    t_open_br  shift, and go to state 14

    BODY        go to state 31
    BODY_START  go to state 16


State 20

   31 RETURN: t_return . RET_PARAM
   32       | t_return .

    t_int_const    shift, and go to state 32
    t_float_const  shift, and go to state 33
    t_id           shift, and go to state 34
    t_string       shift, and go to state 35
    t_open_paren   shift, and go to state 36

    $default  reduce using rule 32 (RETURN)

    VALUE       go to state 37
    RET_PARAM   go to state 38
    EXPR        go to state 39
    EXPR_BR     go to state 40
    EXPR_START  go to state 41


State 21

   16 VAR: t_id . SHORT_ASSIGN VALUE

    t_short_dec  shift, and go to state 42
    t_comma      shift, and go to state 43

    SHORT_ASSIGN  go to state 44


State 22

   10 BODY_END: t_close_br .

    $default  reduce using rule 10 (BODY_END)


State 23

    9 BODY: BODY_START BODY_END .

    $default  reduce using rule 9 (BODY)


State 24

   13 BODY_START: BODY_START VAR .

    $default  reduce using rule 13 (BODY_START)


State 25

   14 BODY_START: BODY_START OPERATORS .

    $default  reduce using rule 14 (BODY_START)


State 26

   28 OPERATORS: FOR .

    $default  reduce using rule 28 (OPERATORS)


State 27

   27 OPERATORS: IF .

    $default  reduce using rule 27 (OPERATORS)


State 28

   11 BODY_END: RETURN . BODY_END

    t_return    shift, and go to state 20
    t_close_br  shift, and go to state 22

    BODY_END  go to state 45
    RETURN    go to state 28


State 29

   15 VAR: t_var t_id . ASSIGNMENT VALUE

    t_vtype     shift, and go to state 46
    t_comma     shift, and go to state 47
    t_equality  shift, and go to state 48

    ASSIGNMENT  go to state 49


State 30

   30 IF: t_if BODY .

    $default  reduce using rule 30 (IF)


State 31

   29 FOR: t_for BODY .

    $default  reduce using rule 29 (FOR)


State 32

   22 VALUE: t_int_const .

    $default  reduce using rule 22 (VALUE)


State 33

   23 VALUE: t_float_const .

    $default  reduce using rule 23 (VALUE)


State 34

   24 VALUE: t_id .

    $default  reduce using rule 24 (VALUE)


State 35

   25 VALUE: t_string .

    $default  reduce using rule 25 (VALUE)


State 36

   41 EXPR_START: t_open_paren .

    $default  reduce using rule 41 (EXPR_START)


State 37

   36 RET_PARAM: VALUE .
   37 EXPR: VALUE . t_sign VALUE

    t_sign  shift, and go to state 50

    $default  reduce using rule 36 (RET_PARAM)


State 38

   31 RETURN: t_return RET_PARAM .
   33 RET_PARAM: RET_PARAM . t_comma EXPR
   34          | RET_PARAM . t_comma VALUE

    t_comma  shift, and go to state 51

    $default  reduce using rule 31 (RETURN)


State 39

   35 RET_PARAM: EXPR .
   38 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 52

    $default  reduce using rule 35 (RET_PARAM)


State 40

   26 VALUE: EXPR_BR .

    $default  reduce using rule 26 (VALUE)


State 41

   39 EXPR_BR: EXPR_START . EXPR EXPR_END
   40        | EXPR_START . VALUE EXPR_END

    t_int_const    shift, and go to state 32
    t_float_const  shift, and go to state 33
    t_id           shift, and go to state 34
    t_string       shift, and go to state 35
    t_open_paren   shift, and go to state 36

    VALUE       go to state 53
    EXPR        go to state 54
    EXPR_BR     go to state 40
    EXPR_START  go to state 41


State 42

   20 SHORT_ASSIGN: t_short_dec .

    $default  reduce using rule 20 (SHORT_ASSIGN)


State 43

   21 SHORT_ASSIGN: t_comma . t_id SHORT_ASSIGN VALUE t_comma

    t_id  shift, and go to state 55


State 44

   16 VAR: t_id SHORT_ASSIGN . VALUE

    t_int_const    shift, and go to state 32
    t_float_const  shift, and go to state 33
    t_id           shift, and go to state 34
    t_string       shift, and go to state 35
    t_open_paren   shift, and go to state 36

    VALUE       go to state 56
    EXPR_BR     go to state 40
    EXPR_START  go to state 41


State 45

   11 BODY_END: RETURN BODY_END .

    $default  reduce using rule 11 (BODY_END)


State 46

   17 ASSIGNMENT: t_vtype . t_equality

    t_equality  shift, and go to state 57


State 47

   19 ASSIGNMENT: t_comma . t_id ASSIGNMENT VALUE t_comma

    t_id  shift, and go to state 58


State 48

   18 ASSIGNMENT: t_equality .

    $default  reduce using rule 18 (ASSIGNMENT)


State 49

   15 VAR: t_var t_id ASSIGNMENT . VALUE

    t_int_const    shift, and go to state 32
    t_float_const  shift, and go to state 33
    t_id           shift, and go to state 34
    t_string       shift, and go to state 35
    t_open_paren   shift, and go to state 36

    VALUE       go to state 59
    EXPR_BR     go to state 40
    EXPR_START  go to state 41


State 50

   37 EXPR: VALUE t_sign . VALUE

    t_int_const    shift, and go to state 32
    t_float_const  shift, and go to state 33
    t_id           shift, and go to state 34
    t_string       shift, and go to state 35
    t_open_paren   shift, and go to state 36

    VALUE       go to state 60
    EXPR_BR     go to state 40
    EXPR_START  go to state 41


State 51

   33 RET_PARAM: RET_PARAM t_comma . EXPR
   34          | RET_PARAM t_comma . VALUE

    t_int_const    shift, and go to state 32
    t_float_const  shift, and go to state 33
    t_id           shift, and go to state 34
    t_string       shift, and go to state 35
    t_open_paren   shift, and go to state 36

    VALUE       go to state 61
    EXPR        go to state 62
    EXPR_BR     go to state 40
    EXPR_START  go to state 41


State 52

   38 EXPR: EXPR t_sign . VALUE

    t_int_const    shift, and go to state 32
    t_float_const  shift, and go to state 33
    t_id           shift, and go to state 34
    t_string       shift, and go to state 35
    t_open_paren   shift, and go to state 36

    VALUE       go to state 63
    EXPR_BR     go to state 40
    EXPR_START  go to state 41


State 53

   37 EXPR: VALUE . t_sign VALUE
   40 EXPR_BR: EXPR_START VALUE . EXPR_END

    t_sign         shift, and go to state 50
    t_close_paren  shift, and go to state 64

    EXPR_END  go to state 65


State 54

   38 EXPR: EXPR . t_sign VALUE
   39 EXPR_BR: EXPR_START EXPR . EXPR_END

    t_sign         shift, and go to state 52
    t_close_paren  shift, and go to state 64

    EXPR_END  go to state 66


State 55

   21 SHORT_ASSIGN: t_comma t_id . SHORT_ASSIGN VALUE t_comma

    t_short_dec  shift, and go to state 42
    t_comma      shift, and go to state 43

    SHORT_ASSIGN  go to state 67


State 56

   16 VAR: t_id SHORT_ASSIGN VALUE .

    $default  reduce using rule 16 (VAR)


State 57

   17 ASSIGNMENT: t_vtype t_equality .

    $default  reduce using rule 17 (ASSIGNMENT)


State 58

   19 ASSIGNMENT: t_comma t_id . ASSIGNMENT VALUE t_comma

    t_vtype     shift, and go to state 46
    t_comma     shift, and go to state 47
    t_equality  shift, and go to state 48

    ASSIGNMENT  go to state 68


State 59

   15 VAR: t_var t_id ASSIGNMENT VALUE .

    $default  reduce using rule 15 (VAR)


State 60

   37 EXPR: VALUE t_sign VALUE .

    $default  reduce using rule 37 (EXPR)


State 61

   34 RET_PARAM: RET_PARAM t_comma VALUE .
   37 EXPR: VALUE . t_sign VALUE

    t_sign  shift, and go to state 50

    $default  reduce using rule 34 (RET_PARAM)


State 62

   33 RET_PARAM: RET_PARAM t_comma EXPR .
   38 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 52

    $default  reduce using rule 33 (RET_PARAM)


State 63

   38 EXPR: EXPR t_sign VALUE .

    $default  reduce using rule 38 (EXPR)


State 64

   42 EXPR_END: t_close_paren .

    $default  reduce using rule 42 (EXPR_END)


State 65

   40 EXPR_BR: EXPR_START VALUE EXPR_END .

    $default  reduce using rule 40 (EXPR_BR)


State 66

   39 EXPR_BR: EXPR_START EXPR EXPR_END .

    $default  reduce using rule 39 (EXPR_BR)


State 67

   21 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN . VALUE t_comma

    t_int_const    shift, and go to state 32
    t_float_const  shift, and go to state 33
    t_id           shift, and go to state 34
    t_string       shift, and go to state 35
    t_open_paren   shift, and go to state 36

    VALUE       go to state 69
    EXPR_BR     go to state 40
    EXPR_START  go to state 41


State 68

   19 ASSIGNMENT: t_comma t_id ASSIGNMENT . VALUE t_comma

    t_int_const    shift, and go to state 32
    t_float_const  shift, and go to state 33
    t_id           shift, and go to state 34
    t_string       shift, and go to state 35
    t_open_paren   shift, and go to state 36

    VALUE       go to state 70
    EXPR_BR     go to state 40
    EXPR_START  go to state 41


State 69

   21 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN VALUE . t_comma

    t_comma  shift, and go to state 71


State 70

   19 ASSIGNMENT: t_comma t_id ASSIGNMENT VALUE . t_comma

    t_comma  shift, and go to state 72


State 71

   21 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN VALUE t_comma .

    $default  reduce using rule 21 (SHORT_ASSIGN)


State 72

   19 ASSIGNMENT: t_comma t_id ASSIGNMENT VALUE t_comma .

    $default  reduce using rule 19 (ASSIGNMENT)
