Terminals unused in grammar

   t_constant
   t_chan
   t_defer
   t_go
   t_range
   t_select
   t_fallthrough
   t_continue
   t_break
   t_or_const
   t_and_const
   t_param_const
   t_eq_const
   t_rel_const
   t_point_const
   t_punc
   t_char_const
   '+'
   '-'
   '*'
   '/'


Grammar

    0 $accept: START $end

    1 START: START GLOBAL END_SYMBOLS
    2      | GLOBAL END_SYMBOLS
    3      | START END_SYMBOLS

    4 GLOBAL: PACKAGE
    5       | IMPORT
    6       | FUNC
    7       | STRUCT
    8       | INTERFACE

    9 PACKAGE: t_package t_id

   10 IMPORT: t_import t_string
   11       | t_import t_open_paren PARAM_IMPORT t_close_paren
   12       | t_import t_open_paren t_enter PARAM_IMPORT t_close_paren
   13       | t_import t_id t_string

   14 FUNC: t_func t_id FUNC_CALL BODY
   15     | t_func t_id FUNC_CALL POINTER BODY

   16 BODY: BODY_START BODY_END

   17 BODY_END: t_close_br

   18 BODY_START: t_open_br
   19           | BODY_START BODY_FILLING END_SYMBOLS
   20           | BODY_START END_SYMBOLS

   21 BODY_FILLING: VAR
   22             | FOR
   23             | SWITCH
   24             | GOTO
   25             | LABEL
   26             | IF
   27             | MULTI_AR
   28             | FUNC_CALL
   29             | SHORT_EXPR
   30             | ARRAY_BODY
   31             | RETURN
   32             | STRUCT
   33             | ACCESS_FIELDS
   34             | SLICE

   35 VAR: t_var t_id ASSIGNMENT EXPR
   36    | t_var t_id ASSIGNMENT EXPR t_vtype
   37    | t_var t_id ASSIGNMENT BOOLEAN
   38    | t_id SHORT_ASSIGN EXPR
   39    | t_id ASSIGNMENT EXPR
   40    | t_id SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   41    | t_var t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   42    | t_id SHORT_ASSIGN BOOLEAN
   43    | t_id MULTI_AR ASSIGNMENT EXPR
   44    | t_var t_id ASSIGNMENT MAKE
   45    | t_id SHORT_ASSIGN MAKE
   46    | t_id MULTI_AR ASSIGNMENT MAKE
   47    | t_id SHORT_ASSIGN SLICE
   48    | t_id ASSIGNMENT SLICE
   49    | t_var t_id ASSIGNMENT SLICE
   50    | t_var t_id MAPS
   51    | t_id SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   52    | t_var t_id t_id ASSIGNMENT t_id ST_EMBEDDED
   53    | t_var t_id ASSIGNMENT t_id ST_EMBEDDED
   54    | t_id SHORT_ASSIGN t_id ST_EMBEDDED
   55    | t_id ACCESS_FIELDS ASSIGNMENT VALUE
   56    | POINTER ASSIGNMENT EXPR
   57    | t_var t_id POINTER
   58    | t_var t_id POINTER ASSIGNMENT EXPR

   59 BOOLEAN: EXPR t_bool EXPR

   60 ASSIGNMENT: t_vtype t_equality
   61           | t_equality
   62           | t_comma t_id ASSIGNMENT EXPR t_comma
   63           | t_comma t_id ASSIGNMENT BOOLEAN t_comma

   64 SHORT_ASSIGN: t_short_dec
   65             | t_comma t_id SHORT_ASSIGN EXPR t_comma
   66             | t_comma t_id SHORT_ASSIGN BOOLEAN t_comma

   67 FUNC_CALL: t_id t_open_paren PARAM t_close_paren
   68          | METHOD FUNC_CALL
   69          | t_open_paren t_close_paren

   70 SHIFT: SHIFT_AC t_shift_const SHIFT_AC

   71 SHIFT_AC: t_id
   72         | t_int_const

   73 METHOD: t_id t_dot

   74 POINTER: t_pointer t_id
   75        | t_pointer t_vtype
   76        | t_ampersand t_id

   77 PARAM_IMPORT: t_string END_SYMBOLS
   78             | t_string t_path_pack t_string END_SYMBOLS
   79             | t_id t_string END_SYMBOLS
   80             | PARAM_IMPORT t_string END_SYMBOLS
   81             | PARAM_IMPORT t_id t_string END_SYMBOLS

   82 VALUE: t_int_const
   83      | t_float_const
   84      | t_id
   85      | t_string
   86      | t_rune
   87      | t_blank_identifier
   88      | FUNC_CALL
   89      | SHIFT
   90      | POINTER

   91 GOTO: t_goto t_id

   92 LABEL: t_id t_colon

   93 SWITCH: t_switch INIT_STATE t_semicolon EXPR SWITCH_BODY
   94       | t_switch EXPR SWITCH_BODY
   95       | t_switch SWITCH_BODY

   96 SWITCH_BODY: SWITCH_BODY_START SWITCH_BODY_END
   97            | SWITCH_BODY_START_WITH_DEFAULT SWITCH_BODY_END

   98 SWITCH_BODY_START: t_open_br
   99                  | t_open_br END_SYMBOLS
  100                  | SWITCH_BODY_START CASE

  101 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START DEFAULT
  102                               | SWITCH_BODY_START_WITH_DEFAULT CASE

  103 CASE: t_case CASE_STATEMENT CASE_BODY

  104 DEFAULT: t_default CASE_BODY

  105 MULTIPLE_ARG: FIRST_PART SECOND_PART

  106 FIRST_PART: EXPR t_comma
  107           | FIRST_PART EXPR t_comma

  108 SECOND_PART: EXPR

  109 CASE_STATEMENT: MULTIPLE_ARG
  110               | EXPR

  111 CASE_BODY: t_colon
  112          | t_colon t_enter
  113          | CASE_BODY BODY_FILLING END_SYMBOLS

  114 SWITCH_BODY_END: t_close_br

  115 IF: IF_FIRST MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD
  116   | IF_FIRST MULTY_ELSEIF_SECOND
  117   | IF_FIRST MULTY_ELSE_THIRD
  118   | IF_FIRST

  119 IF_FIRST: t_if CONDITION BODY

  120 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND ELSEIF_SECOND
  121                    | ELSEIF_SECOND

  122 ELSEIF_SECOND: t_else t_if CONDITION BODY

  123 MULTY_ELSE_THIRD: ELSE_THIRD
  124                 | MULTY_ELSE_THIRD ELSE_THIRD

  125 ELSE_THIRD: t_else BODY

  126 RETURN: t_return PARAM

  127 PARAM: PARAM t_comma EXPR
  128      | EXPR
  129      | /* empty */

  130 EXPR: EXPR t_sign VALUE
  131     | EXPR_START EXPR EXPR_END
  132     | VALUE

  133 SHORT_EXPR: t_id t_short_expr t_id

  134 INIT_STATE: VAR
  135           | FUNC_CALL
  136           | /* empty */

  137 CONDITION: BOOLEAN
  138          | t_true
  139          | t_false
  140          | /* empty */

  141 POST_STATE: EXPR
  142           | t_id t_inc_const

  143 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY
  144    | t_for CONDITION BODY

  145 EXPR_START: t_open_paren

  146 EXPR_END: t_close_paren

  147 ARRAY_BODY: t_var t_id MULTI_AR t_vtype
  148           | t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  149           | t_var t_id MULTI_AR t_vtype ASSIGNMENT MAKE

  150 ARRAY_INDEX: t_open_sq t_int_const t_close_sq
  151            | t_open_sq t_id t_close_sq
  152            | t_open_sq t_string t_close_sq
  153            | t_open_sq t_close_sq

  154 MULTI_AR: ARRAY_INDEX
  155         | ARRAY_INDEX MULTI_AR

  156 PLENTY: PLENTY_OLD
  157       | PLENTY_OLD t_comma PLENTY

  158 PLENTY_OLD: t_open_br ENUM t_close_br
  159           | t_open_br t_close_br
  160           | t_open_br PLENTY t_close_br

  161 ENUM: VALUE
  162     | ENUM t_comma VALUE

  163 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  164     | t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

  165 SLICE: t_id t_open_sq VALUE t_colon VALUE t_close_sq
  166      | t_id t_open_sq t_colon VALUE t_close_sq
  167      | t_id t_open_sq VALUE t_colon t_close_sq

  168 MAPS: t_map t_open_sq t_vtype t_close_sq t_vtype

  169 STRUCT: STRUCT_START STRUCT_BODY END_SYMBOLS STRUCT_END

  170 STRUCT_START: t_type t_id t_struct_const

  171 STRUCT_BODY: t_open_br
  172            | STRUCT_BODY END_SYMBOLS t_id t_vtype
  173            | STRUCT_BODY END_SYMBOLS t_id t_id
  174            | STRUCT_BODY END_SYMBOLS t_id

  175 STRUCT_END: t_close_br

  176 STRUCT_ENUM: t_id t_colon VALUE
  177            | STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon VALUE
  178            | t_id t_colon t_id STRUCT_FIELD
  179            | STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon t_id STRUCT_FIELD

  180 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_close_br
  181             | t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS
  182             | PLENTY_OLD

  183 ST_EMBEDDED: STRUCT_FIELD
  184            | STRUCT_FIELD t_comma ST_EMBEDDED

  185 ACCESS_FIELDS: METHOD
  186              | METHOD ACCESS_FIELDS

  187 END_SYMBOLS: t_semicolon
  188            | t_enter
  189            | t_eof

  190 INTERFACE: t_type t_id t_interface INT_BODY END_SYMBOLS INT_END

  191 INT_BODY: t_open_br END_SYMBOLS t_id t_open_paren t_close_paren

  192 INT_END: t_close_br


Terminals, with rules where they appear

$end (0) 0
'*' (42)
'+' (43)
'-' (45)
'/' (47)
error (256)
t_vtype (258) 36 40 41 60 75 147 148 149 163 164 168 172
t_constant (259)
t_case (260) 103
t_func (261) 14 15
t_import (262) 10 11 12 13
t_chan (263)
t_defer (264)
t_go (265)
t_interface (266) 190
t_default (267) 104
t_var (268) 35 36 37 41 44 49 50 52 53 57 58 147 148 149
t_range (269)
t_map (270) 168
t_package (271) 9
t_if (272) 119 122
t_select (273)
t_switch (274) 93 94 95
t_fallthrough (275)
t_else (276) 122 125
t_type (277) 170 190
t_for (278) 143 144
t_goto (279) 91
t_continue (280)
t_break (281)
t_return (282) 126
t_struct_const (283) 170
t_or_const (284)
t_and_const (285)
t_param_const (286)
t_eq_const (287)
t_rel_const (288)
t_shift_const (289) 70
t_inc_const (290) 142
t_point_const (291)
t_punc (292)
t_int_const (293) 72 82 150 164
t_float_const (294) 83
t_char_const (295)
t_id (296) 9 13 14 15 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
    50 51 52 53 54 55 57 58 62 63 65 66 67 71 73 74 76 79 81 84 91
    92 133 142 147 148 149 151 165 166 167 170 172 173 174 176 177
    178 179 190 191
t_string (297) 10 13 77 78 79 80 81 85 152
t_short_dec (298) 64
t_open_br (299) 18 98 99 158 159 160 171 180 181 191
t_close_br (300) 17 114 158 159 160 175 180 181 192
t_sign (301) 130
t_comma (302) 62 63 65 66 106 107 127 157 162 163 164 177 179 181 184
t_equality (303) 60 61
t_open_paren (304) 11 12 51 67 69 145 163 164 191
t_close_paren (305) 11 12 51 67 69 146 163 191
t_open_sq (306) 150 151 152 153 165 166 167 168
t_close_sq (307) 150 151 152 153 165 166 167 168
t_bool (308) 59
t_rune (309) 86
t_semicolon (310) 93 143 187
t_blank_identifier (311) 87
t_dot (312) 73
t_colon (313) 92 111 112 165 166 167 176 177 178 179
t_true (314) 138
t_false (315) 139
t_short_expr (316) 133
t_make (317) 51 163 164
t_enter (318) 12 112 188
t_eof (319) 189
t_pointer (320) 74 75
t_ampersand (321) 76
t_path_pack (322) 78


Nonterminals, with rules where they appear

$accept (72)
    on left: 0
START (73)
    on left: 1 2 3, on right: 0 1 3
GLOBAL (74)
    on left: 4 5 6 7 8, on right: 1 2
PACKAGE (75)
    on left: 9, on right: 4
IMPORT (76)
    on left: 10 11 12 13, on right: 5
FUNC (77)
    on left: 14 15, on right: 6
BODY (78)
    on left: 16, on right: 14 15 119 122 125 143 144
BODY_END (79)
    on left: 17, on right: 16
BODY_START (80)
    on left: 18 19 20, on right: 16 19 20
BODY_FILLING (81)
    on left: 21 22 23 24 25 26 27 28 29 30 31 32 33 34, on right: 19
    113
VAR (82)
    on left: 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
    53 54 55 56 57 58, on right: 21 134
BOOLEAN (83)
    on left: 59, on right: 37 42 63 66 137
ASSIGNMENT (84)
    on left: 60 61 62 63, on right: 35 36 37 39 41 43 44 46 48 49 52
    53 55 56 58 62 63 148 149
SHORT_ASSIGN (85)
    on left: 64 65 66, on right: 38 40 42 45 47 51 54 65 66
FUNC_CALL (86)
    on left: 67 68 69, on right: 14 15 28 68 88 135
SHIFT (87)
    on left: 70, on right: 89
SHIFT_AC (88)
    on left: 71 72, on right: 70
METHOD (89)
    on left: 73, on right: 68 185 186
POINTER (90)
    on left: 74 75 76, on right: 15 56 57 58 90
PARAM_IMPORT (91)
    on left: 77 78 79 80 81, on right: 11 12 80 81
VALUE (92)
    on left: 82 83 84 85 86 87 88 89 90, on right: 55 130 132 161 162
    163 164 165 166 167 176 177
GOTO (93)
    on left: 91, on right: 24
LABEL (94)
    on left: 92, on right: 25
SWITCH (95)
    on left: 93 94 95, on right: 23
SWITCH_BODY (96)
    on left: 96 97, on right: 93 94 95
SWITCH_BODY_START (97)
    on left: 98 99 100, on right: 96 100 101
SWITCH_BODY_START_WITH_DEFAULT (98)
    on left: 101 102, on right: 97 102
CASE (99)
    on left: 103, on right: 100 102
DEFAULT (100)
    on left: 104, on right: 101
MULTIPLE_ARG (101)
    on left: 105, on right: 109
FIRST_PART (102)
    on left: 106 107, on right: 105 107
SECOND_PART (103)
    on left: 108, on right: 105
CASE_STATEMENT (104)
    on left: 109 110, on right: 103
CASE_BODY (105)
    on left: 111 112 113, on right: 103 104 113
SWITCH_BODY_END (106)
    on left: 114, on right: 96 97
IF (107)
    on left: 115 116 117 118, on right: 26
IF_FIRST (108)
    on left: 119, on right: 115 116 117 118
MULTY_ELSEIF_SECOND (109)
    on left: 120 121, on right: 115 116 120
ELSEIF_SECOND (110)
    on left: 122, on right: 120 121
MULTY_ELSE_THIRD (111)
    on left: 123 124, on right: 115 117 124
ELSE_THIRD (112)
    on left: 125, on right: 123 124
RETURN (113)
    on left: 126, on right: 31
PARAM (114)
    on left: 127 128 129, on right: 67 126 127
EXPR (115)
    on left: 130 131 132, on right: 35 36 38 39 43 56 58 59 62 65 93
    94 106 107 108 110 127 128 130 131 141
SHORT_EXPR (116)
    on left: 133, on right: 29
INIT_STATE (117)
    on left: 134 135 136, on right: 93 143
CONDITION (118)
    on left: 137 138 139 140, on right: 119 122 143 144
POST_STATE (119)
    on left: 141 142, on right: 143
FOR (120)
    on left: 143 144, on right: 22
EXPR_START (121)
    on left: 145, on right: 131
EXPR_END (122)
    on left: 146, on right: 131
ARRAY_BODY (123)
    on left: 147 148 149, on right: 30
ARRAY_INDEX (124)
    on left: 150 151 152 153, on right: 154 155
MULTI_AR (125)
    on left: 154 155, on right: 27 40 41 43 46 147 148 149 155 163
    164
PLENTY (126)
    on left: 156 157, on right: 40 41 148 157 160
PLENTY_OLD (127)
    on left: 158 159 160, on right: 156 157 182
ENUM (128)
    on left: 161 162, on right: 158 162
MAKE (129)
    on left: 163 164, on right: 44 45 46 149
SLICE (130)
    on left: 165 166 167, on right: 34 47 48 49
MAPS (131)
    on left: 168, on right: 50 51
STRUCT (132)
    on left: 169, on right: 7 32
STRUCT_START (133)
    on left: 170, on right: 169
STRUCT_BODY (134)
    on left: 171 172 173 174, on right: 169 172 173 174
STRUCT_END (135)
    on left: 175, on right: 169
STRUCT_ENUM (136)
    on left: 176 177 178 179, on right: 177 179 180 181
STRUCT_FIELD (137)
    on left: 180 181 182, on right: 178 179 183 184
ST_EMBEDDED (138)
    on left: 183 184, on right: 52 53 54 184
ACCESS_FIELDS (139)
    on left: 185 186, on right: 33 55 186
END_SYMBOLS (140)
    on left: 187 188 189, on right: 1 2 3 19 20 77 78 79 80 81 99 113
    169 172 173 174 177 179 180 181 190 191
INTERFACE (141)
    on left: 190, on right: 8
INT_BODY (142)
    on left: 191, on right: 190
INT_END (143)
    on left: 192, on right: 190


State 0

    0 $accept: . START $end

    t_func     shift, and go to state 1
    t_import   shift, and go to state 2
    t_package  shift, and go to state 3
    t_type     shift, and go to state 4

    START         go to state 5
    GLOBAL        go to state 6
    PACKAGE       go to state 7
    IMPORT        go to state 8
    FUNC          go to state 9
    STRUCT        go to state 10
    STRUCT_START  go to state 11
    INTERFACE     go to state 12


State 1

   14 FUNC: t_func . t_id FUNC_CALL BODY
   15     | t_func . t_id FUNC_CALL POINTER BODY

    t_id  shift, and go to state 13


State 2

   10 IMPORT: t_import . t_string
   11       | t_import . t_open_paren PARAM_IMPORT t_close_paren
   12       | t_import . t_open_paren t_enter PARAM_IMPORT t_close_paren
   13       | t_import . t_id t_string

    t_id          shift, and go to state 14
    t_string      shift, and go to state 15
    t_open_paren  shift, and go to state 16


State 3

    9 PACKAGE: t_package . t_id

    t_id  shift, and go to state 17


State 4

  170 STRUCT_START: t_type . t_id t_struct_const
  190 INTERFACE: t_type . t_id t_interface INT_BODY END_SYMBOLS INT_END

    t_id  shift, and go to state 18


State 5

    0 $accept: START . $end
    1 START: START . GLOBAL END_SYMBOLS
    3      | START . END_SYMBOLS

    $end         shift, and go to state 19
    t_func       shift, and go to state 1
    t_import     shift, and go to state 2
    t_package    shift, and go to state 3
    t_type       shift, and go to state 4
    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    GLOBAL        go to state 23
    PACKAGE       go to state 7
    IMPORT        go to state 8
    FUNC          go to state 9
    STRUCT        go to state 10
    STRUCT_START  go to state 11
    END_SYMBOLS   go to state 24
    INTERFACE     go to state 12


State 6

    2 START: GLOBAL . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 25


State 7

    4 GLOBAL: PACKAGE .

    $default  reduce using rule 4 (GLOBAL)


State 8

    5 GLOBAL: IMPORT .

    $default  reduce using rule 5 (GLOBAL)


State 9

    6 GLOBAL: FUNC .

    $default  reduce using rule 6 (GLOBAL)


State 10

    7 GLOBAL: STRUCT .

    $default  reduce using rule 7 (GLOBAL)


State 11

  169 STRUCT: STRUCT_START . STRUCT_BODY END_SYMBOLS STRUCT_END

    t_open_br  shift, and go to state 26

    STRUCT_BODY  go to state 27


State 12

    8 GLOBAL: INTERFACE .

    $default  reduce using rule 8 (GLOBAL)


State 13

   14 FUNC: t_func t_id . FUNC_CALL BODY
   15     | t_func t_id . FUNC_CALL POINTER BODY

    t_id          shift, and go to state 28
    t_open_paren  shift, and go to state 29

    FUNC_CALL  go to state 30
    METHOD     go to state 31


State 14

   13 IMPORT: t_import t_id . t_string

    t_string  shift, and go to state 32


State 15

   10 IMPORT: t_import t_string .

    $default  reduce using rule 10 (IMPORT)


State 16

   11 IMPORT: t_import t_open_paren . PARAM_IMPORT t_close_paren
   12       | t_import t_open_paren . t_enter PARAM_IMPORT t_close_paren

    t_id      shift, and go to state 33
    t_string  shift, and go to state 34
    t_enter   shift, and go to state 35

    PARAM_IMPORT  go to state 36


State 17

    9 PACKAGE: t_package t_id .

    $default  reduce using rule 9 (PACKAGE)


State 18

  170 STRUCT_START: t_type t_id . t_struct_const
  190 INTERFACE: t_type t_id . t_interface INT_BODY END_SYMBOLS INT_END

    t_interface     shift, and go to state 37
    t_struct_const  shift, and go to state 38


State 19

    0 $accept: START $end .

    $default  accept


State 20

  187 END_SYMBOLS: t_semicolon .

    $default  reduce using rule 187 (END_SYMBOLS)


State 21

  188 END_SYMBOLS: t_enter .

    $default  reduce using rule 188 (END_SYMBOLS)


State 22

  189 END_SYMBOLS: t_eof .

    $default  reduce using rule 189 (END_SYMBOLS)


State 23

    1 START: START GLOBAL . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 39


State 24

    3 START: START END_SYMBOLS .

    $default  reduce using rule 3 (START)


State 25

    2 START: GLOBAL END_SYMBOLS .

    $default  reduce using rule 2 (START)


State 26

  171 STRUCT_BODY: t_open_br .

    $default  reduce using rule 171 (STRUCT_BODY)


State 27

  169 STRUCT: STRUCT_START STRUCT_BODY . END_SYMBOLS STRUCT_END
  172 STRUCT_BODY: STRUCT_BODY . END_SYMBOLS t_id t_vtype
  173            | STRUCT_BODY . END_SYMBOLS t_id t_id
  174            | STRUCT_BODY . END_SYMBOLS t_id

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 40


State 28

   67 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   73 METHOD: t_id . t_dot

    t_open_paren  shift, and go to state 41
    t_dot         shift, and go to state 42


State 29

   69 FUNC_CALL: t_open_paren . t_close_paren

    t_close_paren  shift, and go to state 43


State 30

   14 FUNC: t_func t_id FUNC_CALL . BODY
   15     | t_func t_id FUNC_CALL . POINTER BODY

    t_open_br    shift, and go to state 44
    t_pointer    shift, and go to state 45
    t_ampersand  shift, and go to state 46

    BODY        go to state 47
    BODY_START  go to state 48
    POINTER     go to state 49


State 31

   68 FUNC_CALL: METHOD . FUNC_CALL

    t_id          shift, and go to state 28
    t_open_paren  shift, and go to state 29

    FUNC_CALL  go to state 50
    METHOD     go to state 31


State 32

   13 IMPORT: t_import t_id t_string .

    $default  reduce using rule 13 (IMPORT)


State 33

   79 PARAM_IMPORT: t_id . t_string END_SYMBOLS

    t_string  shift, and go to state 51


State 34

   77 PARAM_IMPORT: t_string . END_SYMBOLS
   78             | t_string . t_path_pack t_string END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22
    t_path_pack  shift, and go to state 52

    END_SYMBOLS  go to state 53


State 35

   12 IMPORT: t_import t_open_paren t_enter . PARAM_IMPORT t_close_paren

    t_id      shift, and go to state 33
    t_string  shift, and go to state 34

    PARAM_IMPORT  go to state 54


State 36

   11 IMPORT: t_import t_open_paren PARAM_IMPORT . t_close_paren
   80 PARAM_IMPORT: PARAM_IMPORT . t_string END_SYMBOLS
   81             | PARAM_IMPORT . t_id t_string END_SYMBOLS

    t_id           shift, and go to state 55
    t_string       shift, and go to state 56
    t_close_paren  shift, and go to state 57


State 37

  190 INTERFACE: t_type t_id t_interface . INT_BODY END_SYMBOLS INT_END

    t_open_br  shift, and go to state 58

    INT_BODY  go to state 59


State 38

  170 STRUCT_START: t_type t_id t_struct_const .

    $default  reduce using rule 170 (STRUCT_START)


State 39

    1 START: START GLOBAL END_SYMBOLS .

    $default  reduce using rule 1 (START)


State 40

  169 STRUCT: STRUCT_START STRUCT_BODY END_SYMBOLS . STRUCT_END
  172 STRUCT_BODY: STRUCT_BODY END_SYMBOLS . t_id t_vtype
  173            | STRUCT_BODY END_SYMBOLS . t_id t_id
  174            | STRUCT_BODY END_SYMBOLS . t_id

    t_id        shift, and go to state 60
    t_close_br  shift, and go to state 61

    STRUCT_END  go to state 62


State 41

   67 FUNC_CALL: t_id t_open_paren . PARAM t_close_paren

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    $default  reduce using rule 129 (PARAM)

    FUNC_CALL   go to state 70
    SHIFT       go to state 71
    SHIFT_AC    go to state 72
    METHOD      go to state 31
    POINTER     go to state 73
    VALUE       go to state 74
    PARAM       go to state 75
    EXPR        go to state 76
    EXPR_START  go to state 77


State 42

   73 METHOD: t_id t_dot .

    $default  reduce using rule 73 (METHOD)


State 43

   69 FUNC_CALL: t_open_paren t_close_paren .

    $default  reduce using rule 69 (FUNC_CALL)


State 44

   18 BODY_START: t_open_br .

    $default  reduce using rule 18 (BODY_START)


State 45

   74 POINTER: t_pointer . t_id
   75        | t_pointer . t_vtype

    t_vtype  shift, and go to state 78
    t_id     shift, and go to state 79


State 46

   76 POINTER: t_ampersand . t_id

    t_id  shift, and go to state 80


State 47

   14 FUNC: t_func t_id FUNC_CALL BODY .

    $default  reduce using rule 14 (FUNC)


State 48

   16 BODY: BODY_START . BODY_END
   19 BODY_START: BODY_START . BODY_FILLING END_SYMBOLS
   20           | BODY_START . END_SYMBOLS

    t_var         shift, and go to state 81
    t_if          shift, and go to state 82
    t_switch      shift, and go to state 83
    t_type        shift, and go to state 84
    t_for         shift, and go to state 85
    t_goto        shift, and go to state 86
    t_return      shift, and go to state 87
    t_id          shift, and go to state 88
    t_close_br    shift, and go to state 89
    t_open_paren  shift, and go to state 29
    t_open_sq     shift, and go to state 90
    t_semicolon   shift, and go to state 20
    t_enter       shift, and go to state 21
    t_eof         shift, and go to state 22
    t_pointer     shift, and go to state 45
    t_ampersand   shift, and go to state 46

    BODY_END       go to state 91
    BODY_FILLING   go to state 92
    VAR            go to state 93
    FUNC_CALL      go to state 94
    METHOD         go to state 95
    POINTER        go to state 96
    GOTO           go to state 97
    LABEL          go to state 98
    SWITCH         go to state 99
    IF             go to state 100
    IF_FIRST       go to state 101
    RETURN         go to state 102
    SHORT_EXPR     go to state 103
    FOR            go to state 104
    ARRAY_BODY     go to state 105
    ARRAY_INDEX    go to state 106
    MULTI_AR       go to state 107
    SLICE          go to state 108
    STRUCT         go to state 109
    STRUCT_START   go to state 11
    ACCESS_FIELDS  go to state 110
    END_SYMBOLS    go to state 111


State 49

   15 FUNC: t_func t_id FUNC_CALL POINTER . BODY

    t_open_br  shift, and go to state 44

    BODY        go to state 112
    BODY_START  go to state 48


State 50

   68 FUNC_CALL: METHOD FUNC_CALL .

    $default  reduce using rule 68 (FUNC_CALL)


State 51

   79 PARAM_IMPORT: t_id t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 113


State 52

   78 PARAM_IMPORT: t_string t_path_pack . t_string END_SYMBOLS

    t_string  shift, and go to state 114


State 53

   77 PARAM_IMPORT: t_string END_SYMBOLS .

    $default  reduce using rule 77 (PARAM_IMPORT)


State 54

   12 IMPORT: t_import t_open_paren t_enter PARAM_IMPORT . t_close_paren
   80 PARAM_IMPORT: PARAM_IMPORT . t_string END_SYMBOLS
   81             | PARAM_IMPORT . t_id t_string END_SYMBOLS

    t_id           shift, and go to state 55
    t_string       shift, and go to state 56
    t_close_paren  shift, and go to state 115


State 55

   81 PARAM_IMPORT: PARAM_IMPORT t_id . t_string END_SYMBOLS

    t_string  shift, and go to state 116


State 56

   80 PARAM_IMPORT: PARAM_IMPORT t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 117


State 57

   11 IMPORT: t_import t_open_paren PARAM_IMPORT t_close_paren .

    $default  reduce using rule 11 (IMPORT)


State 58

  191 INT_BODY: t_open_br . END_SYMBOLS t_id t_open_paren t_close_paren

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 118


State 59

  190 INTERFACE: t_type t_id t_interface INT_BODY . END_SYMBOLS INT_END

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 119


State 60

  172 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id . t_vtype
  173            | STRUCT_BODY END_SYMBOLS t_id . t_id
  174            | STRUCT_BODY END_SYMBOLS t_id .

    t_vtype  shift, and go to state 120
    t_id     shift, and go to state 121

    $default  reduce using rule 174 (STRUCT_BODY)


State 61

  175 STRUCT_END: t_close_br .

    $default  reduce using rule 175 (STRUCT_END)


State 62

  169 STRUCT: STRUCT_START STRUCT_BODY END_SYMBOLS STRUCT_END .

    $default  reduce using rule 169 (STRUCT)


State 63

   72 SHIFT_AC: t_int_const .
   82 VALUE: t_int_const .

    t_shift_const  reduce using rule 72 (SHIFT_AC)
    $default       reduce using rule 82 (VALUE)


State 64

   83 VALUE: t_float_const .

    $default  reduce using rule 83 (VALUE)


State 65

   67 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   71 SHIFT_AC: t_id .
   73 METHOD: t_id . t_dot
   84 VALUE: t_id .

    t_open_paren  shift, and go to state 41
    t_dot         shift, and go to state 42

    t_shift_const  reduce using rule 71 (SHIFT_AC)
    $default       reduce using rule 84 (VALUE)


State 66

   85 VALUE: t_string .

    $default  reduce using rule 85 (VALUE)


State 67

   69 FUNC_CALL: t_open_paren . t_close_paren
  145 EXPR_START: t_open_paren .

    t_close_paren  shift, and go to state 43

    $default  reduce using rule 145 (EXPR_START)


State 68

   86 VALUE: t_rune .

    $default  reduce using rule 86 (VALUE)


State 69

   87 VALUE: t_blank_identifier .

    $default  reduce using rule 87 (VALUE)


State 70

   88 VALUE: FUNC_CALL .

    $default  reduce using rule 88 (VALUE)


State 71

   89 VALUE: SHIFT .

    $default  reduce using rule 89 (VALUE)


State 72

   70 SHIFT: SHIFT_AC . t_shift_const SHIFT_AC

    t_shift_const  shift, and go to state 122


State 73

   90 VALUE: POINTER .

    $default  reduce using rule 90 (VALUE)


State 74

  132 EXPR: VALUE .

    $default  reduce using rule 132 (EXPR)


State 75

   67 FUNC_CALL: t_id t_open_paren PARAM . t_close_paren
  127 PARAM: PARAM . t_comma EXPR

    t_comma        shift, and go to state 123
    t_close_paren  shift, and go to state 124


State 76

  128 PARAM: EXPR .
  130 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 125

    $default  reduce using rule 128 (PARAM)


State 77

  131 EXPR: EXPR_START . EXPR EXPR_END

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    FUNC_CALL   go to state 70
    SHIFT       go to state 71
    SHIFT_AC    go to state 72
    METHOD      go to state 31
    POINTER     go to state 73
    VALUE       go to state 74
    EXPR        go to state 126
    EXPR_START  go to state 77


State 78

   75 POINTER: t_pointer t_vtype .

    $default  reduce using rule 75 (POINTER)


State 79

   74 POINTER: t_pointer t_id .

    $default  reduce using rule 74 (POINTER)


State 80

   76 POINTER: t_ampersand t_id .

    $default  reduce using rule 76 (POINTER)


State 81

   35 VAR: t_var . t_id ASSIGNMENT EXPR
   36    | t_var . t_id ASSIGNMENT EXPR t_vtype
   37    | t_var . t_id ASSIGNMENT BOOLEAN
   41    | t_var . t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   44    | t_var . t_id ASSIGNMENT MAKE
   49    | t_var . t_id ASSIGNMENT SLICE
   50    | t_var . t_id MAPS
   52    | t_var . t_id t_id ASSIGNMENT t_id ST_EMBEDDED
   53    | t_var . t_id ASSIGNMENT t_id ST_EMBEDDED
   57    | t_var . t_id POINTER
   58    | t_var . t_id POINTER ASSIGNMENT EXPR
  147 ARRAY_BODY: t_var . t_id MULTI_AR t_vtype
  148           | t_var . t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  149           | t_var . t_id MULTI_AR t_vtype ASSIGNMENT MAKE

    t_id  shift, and go to state 127


State 82

  119 IF_FIRST: t_if . CONDITION BODY

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_true              shift, and go to state 128
    t_false             shift, and go to state 129
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    $default  reduce using rule 140 (CONDITION)

    BOOLEAN     go to state 130
    FUNC_CALL   go to state 70
    SHIFT       go to state 71
    SHIFT_AC    go to state 72
    METHOD      go to state 31
    POINTER     go to state 73
    VALUE       go to state 74
    EXPR        go to state 131
    CONDITION   go to state 132
    EXPR_START  go to state 77


State 83

   93 SWITCH: t_switch . INIT_STATE t_semicolon EXPR SWITCH_BODY
   94       | t_switch . EXPR SWITCH_BODY
   95       | t_switch . SWITCH_BODY

    t_var               shift, and go to state 133
    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 134
    t_string            shift, and go to state 66
    t_open_br           shift, and go to state 135
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    $default  reduce using rule 136 (INIT_STATE)

    VAR                             go to state 136
    FUNC_CALL                       go to state 137
    SHIFT                           go to state 71
    SHIFT_AC                        go to state 72
    METHOD                          go to state 31
    POINTER                         go to state 138
    VALUE                           go to state 74
    SWITCH_BODY                     go to state 139
    SWITCH_BODY_START               go to state 140
    SWITCH_BODY_START_WITH_DEFAULT  go to state 141
    EXPR                            go to state 142
    INIT_STATE                      go to state 143
    EXPR_START                      go to state 77


State 84

  170 STRUCT_START: t_type . t_id t_struct_const

    t_id  shift, and go to state 144


State 85

  143 FOR: t_for . INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY
  144    | t_for . CONDITION BODY

    t_var               shift, and go to state 133
    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 134
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_true              shift, and go to state 128
    t_false             shift, and go to state 129
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    t_open_br  reduce using rule 140 (CONDITION)
    $default   reduce using rule 136 (INIT_STATE)

    VAR         go to state 136
    BOOLEAN     go to state 130
    FUNC_CALL   go to state 137
    SHIFT       go to state 71
    SHIFT_AC    go to state 72
    METHOD      go to state 31
    POINTER     go to state 138
    VALUE       go to state 74
    EXPR        go to state 131
    INIT_STATE  go to state 145
    CONDITION   go to state 146
    EXPR_START  go to state 77


State 86

   91 GOTO: t_goto . t_id

    t_id  shift, and go to state 147


State 87

  126 RETURN: t_return . PARAM

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    $default  reduce using rule 129 (PARAM)

    FUNC_CALL   go to state 70
    SHIFT       go to state 71
    SHIFT_AC    go to state 72
    METHOD      go to state 31
    POINTER     go to state 73
    VALUE       go to state 74
    PARAM       go to state 148
    EXPR        go to state 76
    EXPR_START  go to state 77


State 88

   38 VAR: t_id . SHORT_ASSIGN EXPR
   39    | t_id . ASSIGNMENT EXPR
   40    | t_id . SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   42    | t_id . SHORT_ASSIGN BOOLEAN
   43    | t_id . MULTI_AR ASSIGNMENT EXPR
   45    | t_id . SHORT_ASSIGN MAKE
   46    | t_id . MULTI_AR ASSIGNMENT MAKE
   47    | t_id . SHORT_ASSIGN SLICE
   48    | t_id . ASSIGNMENT SLICE
   51    | t_id . SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   54    | t_id . SHORT_ASSIGN t_id ST_EMBEDDED
   55    | t_id . ACCESS_FIELDS ASSIGNMENT VALUE
   67 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   73 METHOD: t_id . t_dot
   92 LABEL: t_id . t_colon
  133 SHORT_EXPR: t_id . t_short_expr t_id
  165 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  166      | t_id . t_open_sq t_colon VALUE t_close_sq
  167      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_vtype       shift, and go to state 149
    t_id          shift, and go to state 150
    t_short_dec   shift, and go to state 151
    t_comma       shift, and go to state 152
    t_equality    shift, and go to state 153
    t_open_paren  shift, and go to state 41
    t_open_sq     shift, and go to state 154
    t_dot         shift, and go to state 42
    t_colon       shift, and go to state 155
    t_short_expr  shift, and go to state 156

    ASSIGNMENT     go to state 157
    SHORT_ASSIGN   go to state 158
    METHOD         go to state 159
    ARRAY_INDEX    go to state 106
    MULTI_AR       go to state 160
    ACCESS_FIELDS  go to state 161


State 89

   17 BODY_END: t_close_br .

    $default  reduce using rule 17 (BODY_END)


State 90

  150 ARRAY_INDEX: t_open_sq . t_int_const t_close_sq
  151            | t_open_sq . t_id t_close_sq
  152            | t_open_sq . t_string t_close_sq
  153            | t_open_sq . t_close_sq

    t_int_const  shift, and go to state 162
    t_id         shift, and go to state 163
    t_string     shift, and go to state 164
    t_close_sq   shift, and go to state 165


State 91

   16 BODY: BODY_START BODY_END .

    $default  reduce using rule 16 (BODY)


State 92

   19 BODY_START: BODY_START BODY_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 166


State 93

   21 BODY_FILLING: VAR .

    $default  reduce using rule 21 (BODY_FILLING)


State 94

   28 BODY_FILLING: FUNC_CALL .

    $default  reduce using rule 28 (BODY_FILLING)


State 95

   68 FUNC_CALL: METHOD . FUNC_CALL
  185 ACCESS_FIELDS: METHOD .
  186              | METHOD . ACCESS_FIELDS

    t_id          shift, and go to state 28
    t_open_paren  shift, and go to state 29

    $default  reduce using rule 185 (ACCESS_FIELDS)

    FUNC_CALL      go to state 50
    METHOD         go to state 95
    ACCESS_FIELDS  go to state 167


State 96

   56 VAR: POINTER . ASSIGNMENT EXPR

    t_vtype     shift, and go to state 149
    t_comma     shift, and go to state 168
    t_equality  shift, and go to state 153

    ASSIGNMENT  go to state 169


State 97

   24 BODY_FILLING: GOTO .

    $default  reduce using rule 24 (BODY_FILLING)


State 98

   25 BODY_FILLING: LABEL .

    $default  reduce using rule 25 (BODY_FILLING)


State 99

   23 BODY_FILLING: SWITCH .

    $default  reduce using rule 23 (BODY_FILLING)


State 100

   26 BODY_FILLING: IF .

    $default  reduce using rule 26 (BODY_FILLING)


State 101

  115 IF: IF_FIRST . MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD
  116   | IF_FIRST . MULTY_ELSEIF_SECOND
  117   | IF_FIRST . MULTY_ELSE_THIRD
  118   | IF_FIRST .

    t_else  shift, and go to state 170

    $default  reduce using rule 118 (IF)

    MULTY_ELSEIF_SECOND  go to state 171
    ELSEIF_SECOND        go to state 172
    MULTY_ELSE_THIRD     go to state 173
    ELSE_THIRD           go to state 174


State 102

   31 BODY_FILLING: RETURN .

    $default  reduce using rule 31 (BODY_FILLING)


State 103

   29 BODY_FILLING: SHORT_EXPR .

    $default  reduce using rule 29 (BODY_FILLING)


State 104

   22 BODY_FILLING: FOR .

    $default  reduce using rule 22 (BODY_FILLING)


State 105

   30 BODY_FILLING: ARRAY_BODY .

    $default  reduce using rule 30 (BODY_FILLING)


State 106

  154 MULTI_AR: ARRAY_INDEX .
  155         | ARRAY_INDEX . MULTI_AR

    t_open_sq  shift, and go to state 90

    $default  reduce using rule 154 (MULTI_AR)

    ARRAY_INDEX  go to state 106
    MULTI_AR     go to state 175


State 107

   27 BODY_FILLING: MULTI_AR .

    $default  reduce using rule 27 (BODY_FILLING)


State 108

   34 BODY_FILLING: SLICE .

    $default  reduce using rule 34 (BODY_FILLING)


State 109

   32 BODY_FILLING: STRUCT .

    $default  reduce using rule 32 (BODY_FILLING)


State 110

   33 BODY_FILLING: ACCESS_FIELDS .

    $default  reduce using rule 33 (BODY_FILLING)


State 111

   20 BODY_START: BODY_START END_SYMBOLS .

    $default  reduce using rule 20 (BODY_START)


State 112

   15 FUNC: t_func t_id FUNC_CALL POINTER BODY .

    $default  reduce using rule 15 (FUNC)


State 113

   79 PARAM_IMPORT: t_id t_string END_SYMBOLS .

    $default  reduce using rule 79 (PARAM_IMPORT)


State 114

   78 PARAM_IMPORT: t_string t_path_pack t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 176


State 115

   12 IMPORT: t_import t_open_paren t_enter PARAM_IMPORT t_close_paren .

    $default  reduce using rule 12 (IMPORT)


State 116

   81 PARAM_IMPORT: PARAM_IMPORT t_id t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 177


State 117

   80 PARAM_IMPORT: PARAM_IMPORT t_string END_SYMBOLS .

    $default  reduce using rule 80 (PARAM_IMPORT)


State 118

  191 INT_BODY: t_open_br END_SYMBOLS . t_id t_open_paren t_close_paren

    t_id  shift, and go to state 178


State 119

  190 INTERFACE: t_type t_id t_interface INT_BODY END_SYMBOLS . INT_END

    t_close_br  shift, and go to state 179

    INT_END  go to state 180


State 120

  172 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id t_vtype .

    $default  reduce using rule 172 (STRUCT_BODY)


State 121

  173 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id t_id .

    $default  reduce using rule 173 (STRUCT_BODY)


State 122

   70 SHIFT: SHIFT_AC t_shift_const . SHIFT_AC

    t_int_const  shift, and go to state 181
    t_id         shift, and go to state 182

    SHIFT_AC  go to state 183


State 123

  127 PARAM: PARAM t_comma . EXPR

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    FUNC_CALL   go to state 70
    SHIFT       go to state 71
    SHIFT_AC    go to state 72
    METHOD      go to state 31
    POINTER     go to state 73
    VALUE       go to state 74
    EXPR        go to state 184
    EXPR_START  go to state 77


State 124

   67 FUNC_CALL: t_id t_open_paren PARAM t_close_paren .

    $default  reduce using rule 67 (FUNC_CALL)


State 125

  130 EXPR: EXPR t_sign . VALUE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 29
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    FUNC_CALL  go to state 70
    SHIFT      go to state 71
    SHIFT_AC   go to state 72
    METHOD     go to state 31
    POINTER    go to state 73
    VALUE      go to state 185


State 126

  130 EXPR: EXPR . t_sign VALUE
  131     | EXPR_START EXPR . EXPR_END

    t_sign         shift, and go to state 125
    t_close_paren  shift, and go to state 186

    EXPR_END  go to state 187


State 127

   35 VAR: t_var t_id . ASSIGNMENT EXPR
   36    | t_var t_id . ASSIGNMENT EXPR t_vtype
   37    | t_var t_id . ASSIGNMENT BOOLEAN
   41    | t_var t_id . ASSIGNMENT MULTI_AR t_vtype PLENTY
   44    | t_var t_id . ASSIGNMENT MAKE
   49    | t_var t_id . ASSIGNMENT SLICE
   50    | t_var t_id . MAPS
   52    | t_var t_id . t_id ASSIGNMENT t_id ST_EMBEDDED
   53    | t_var t_id . ASSIGNMENT t_id ST_EMBEDDED
   57    | t_var t_id . POINTER
   58    | t_var t_id . POINTER ASSIGNMENT EXPR
  147 ARRAY_BODY: t_var t_id . MULTI_AR t_vtype
  148           | t_var t_id . MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  149           | t_var t_id . MULTI_AR t_vtype ASSIGNMENT MAKE

    t_vtype      shift, and go to state 149
    t_map        shift, and go to state 188
    t_id         shift, and go to state 189
    t_comma      shift, and go to state 168
    t_equality   shift, and go to state 153
    t_open_sq    shift, and go to state 90
    t_pointer    shift, and go to state 45
    t_ampersand  shift, and go to state 46

    ASSIGNMENT   go to state 190
    POINTER      go to state 191
    ARRAY_INDEX  go to state 106
    MULTI_AR     go to state 192
    MAPS         go to state 193


State 128

  138 CONDITION: t_true .

    $default  reduce using rule 138 (CONDITION)


State 129

  139 CONDITION: t_false .

    $default  reduce using rule 139 (CONDITION)


State 130

  137 CONDITION: BOOLEAN .

    $default  reduce using rule 137 (CONDITION)


State 131

   59 BOOLEAN: EXPR . t_bool EXPR
  130 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 125
    t_bool  shift, and go to state 194


State 132

  119 IF_FIRST: t_if CONDITION . BODY

    t_open_br  shift, and go to state 44

    BODY        go to state 195
    BODY_START  go to state 48


State 133

   35 VAR: t_var . t_id ASSIGNMENT EXPR
   36    | t_var . t_id ASSIGNMENT EXPR t_vtype
   37    | t_var . t_id ASSIGNMENT BOOLEAN
   41    | t_var . t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   44    | t_var . t_id ASSIGNMENT MAKE
   49    | t_var . t_id ASSIGNMENT SLICE
   50    | t_var . t_id MAPS
   52    | t_var . t_id t_id ASSIGNMENT t_id ST_EMBEDDED
   53    | t_var . t_id ASSIGNMENT t_id ST_EMBEDDED
   57    | t_var . t_id POINTER
   58    | t_var . t_id POINTER ASSIGNMENT EXPR

    t_id  shift, and go to state 196


State 134

   38 VAR: t_id . SHORT_ASSIGN EXPR
   39    | t_id . ASSIGNMENT EXPR
   40    | t_id . SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   42    | t_id . SHORT_ASSIGN BOOLEAN
   43    | t_id . MULTI_AR ASSIGNMENT EXPR
   45    | t_id . SHORT_ASSIGN MAKE
   46    | t_id . MULTI_AR ASSIGNMENT MAKE
   47    | t_id . SHORT_ASSIGN SLICE
   48    | t_id . ASSIGNMENT SLICE
   51    | t_id . SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   54    | t_id . SHORT_ASSIGN t_id ST_EMBEDDED
   55    | t_id . ACCESS_FIELDS ASSIGNMENT VALUE
   67 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   71 SHIFT_AC: t_id .
   73 METHOD: t_id . t_dot
   84 VALUE: t_id .

    t_vtype       shift, and go to state 149
    t_id          shift, and go to state 150
    t_short_dec   shift, and go to state 151
    t_comma       shift, and go to state 152
    t_equality    shift, and go to state 153
    t_open_paren  shift, and go to state 41
    t_open_sq     shift, and go to state 90
    t_dot         shift, and go to state 42

    t_shift_const  reduce using rule 71 (SHIFT_AC)
    $default       reduce using rule 84 (VALUE)

    ASSIGNMENT     go to state 157
    SHORT_ASSIGN   go to state 158
    METHOD         go to state 159
    ARRAY_INDEX    go to state 106
    MULTI_AR       go to state 160
    ACCESS_FIELDS  go to state 161


State 135

   98 SWITCH_BODY_START: t_open_br .
   99                  | t_open_br . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    $default  reduce using rule 98 (SWITCH_BODY_START)

    END_SYMBOLS  go to state 197


State 136

  134 INIT_STATE: VAR .

    $default  reduce using rule 134 (INIT_STATE)


State 137

   88 VALUE: FUNC_CALL .
  135 INIT_STATE: FUNC_CALL .

    t_semicolon  reduce using rule 135 (INIT_STATE)
    $default     reduce using rule 88 (VALUE)


State 138

   56 VAR: POINTER . ASSIGNMENT EXPR
   90 VALUE: POINTER .

    t_vtype     shift, and go to state 149
    t_comma     shift, and go to state 168
    t_equality  shift, and go to state 153

    $default  reduce using rule 90 (VALUE)

    ASSIGNMENT  go to state 169


State 139

   95 SWITCH: t_switch SWITCH_BODY .

    $default  reduce using rule 95 (SWITCH)


State 140

   96 SWITCH_BODY: SWITCH_BODY_START . SWITCH_BODY_END
  100 SWITCH_BODY_START: SWITCH_BODY_START . CASE
  101 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START . DEFAULT

    t_case      shift, and go to state 198
    t_default   shift, and go to state 199
    t_close_br  shift, and go to state 200

    CASE             go to state 201
    DEFAULT          go to state 202
    SWITCH_BODY_END  go to state 203


State 141

   97 SWITCH_BODY: SWITCH_BODY_START_WITH_DEFAULT . SWITCH_BODY_END
  102 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START_WITH_DEFAULT . CASE

    t_case      shift, and go to state 198
    t_close_br  shift, and go to state 200

    CASE             go to state 204
    SWITCH_BODY_END  go to state 205


State 142

   94 SWITCH: t_switch EXPR . SWITCH_BODY
  130 EXPR: EXPR . t_sign VALUE

    t_open_br  shift, and go to state 135
    t_sign     shift, and go to state 125

    SWITCH_BODY                     go to state 206
    SWITCH_BODY_START               go to state 140
    SWITCH_BODY_START_WITH_DEFAULT  go to state 141


State 143

   93 SWITCH: t_switch INIT_STATE . t_semicolon EXPR SWITCH_BODY

    t_semicolon  shift, and go to state 207


State 144

  170 STRUCT_START: t_type t_id . t_struct_const

    t_struct_const  shift, and go to state 38


State 145

  143 FOR: t_for INIT_STATE . t_semicolon CONDITION t_semicolon POST_STATE BODY

    t_semicolon  shift, and go to state 208


State 146

  144 FOR: t_for CONDITION . BODY

    t_open_br  shift, and go to state 44

    BODY        go to state 209
    BODY_START  go to state 48


State 147

   91 GOTO: t_goto t_id .

    $default  reduce using rule 91 (GOTO)


State 148

  126 RETURN: t_return PARAM .
  127 PARAM: PARAM . t_comma EXPR

    t_comma  shift, and go to state 123

    $default  reduce using rule 126 (RETURN)


State 149

   60 ASSIGNMENT: t_vtype . t_equality

    t_equality  shift, and go to state 210


State 150

   73 METHOD: t_id . t_dot

    t_dot  shift, and go to state 42


State 151

   64 SHORT_ASSIGN: t_short_dec .

    $default  reduce using rule 64 (SHORT_ASSIGN)


State 152

   62 ASSIGNMENT: t_comma . t_id ASSIGNMENT EXPR t_comma
   63           | t_comma . t_id ASSIGNMENT BOOLEAN t_comma
   65 SHORT_ASSIGN: t_comma . t_id SHORT_ASSIGN EXPR t_comma
   66             | t_comma . t_id SHORT_ASSIGN BOOLEAN t_comma

    t_id  shift, and go to state 211


State 153

   61 ASSIGNMENT: t_equality .

    $default  reduce using rule 61 (ASSIGNMENT)


State 154

  150 ARRAY_INDEX: t_open_sq . t_int_const t_close_sq
  151            | t_open_sq . t_id t_close_sq
  152            | t_open_sq . t_string t_close_sq
  153            | t_open_sq . t_close_sq
  165 SLICE: t_id t_open_sq . VALUE t_colon VALUE t_close_sq
  166      | t_id t_open_sq . t_colon VALUE t_close_sq
  167      | t_id t_open_sq . VALUE t_colon t_close_sq

    t_int_const         shift, and go to state 212
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 213
    t_string            shift, and go to state 214
    t_open_paren        shift, and go to state 29
    t_close_sq          shift, and go to state 165
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_colon             shift, and go to state 215
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    FUNC_CALL  go to state 70
    SHIFT      go to state 71
    SHIFT_AC   go to state 72
    METHOD     go to state 31
    POINTER    go to state 73
    VALUE      go to state 216


State 155

   92 LABEL: t_id t_colon .

    $default  reduce using rule 92 (LABEL)


State 156

  133 SHORT_EXPR: t_id t_short_expr . t_id

    t_id  shift, and go to state 217


State 157

   39 VAR: t_id ASSIGNMENT . EXPR
   48    | t_id ASSIGNMENT . SLICE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 218
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    FUNC_CALL   go to state 70
    SHIFT       go to state 71
    SHIFT_AC    go to state 72
    METHOD      go to state 31
    POINTER     go to state 73
    VALUE       go to state 74
    EXPR        go to state 219
    EXPR_START  go to state 77
    SLICE       go to state 220


State 158

   38 VAR: t_id SHORT_ASSIGN . EXPR
   40    | t_id SHORT_ASSIGN . MULTI_AR t_vtype PLENTY
   42    | t_id SHORT_ASSIGN . BOOLEAN
   45    | t_id SHORT_ASSIGN . MAKE
   47    | t_id SHORT_ASSIGN . SLICE
   51    | t_id SHORT_ASSIGN . t_make t_open_paren MAPS t_close_paren
   54    | t_id SHORT_ASSIGN . t_id ST_EMBEDDED

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 221
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_open_sq           shift, and go to state 90
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_make              shift, and go to state 222
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    BOOLEAN      go to state 223
    FUNC_CALL    go to state 70
    SHIFT        go to state 71
    SHIFT_AC     go to state 72
    METHOD       go to state 31
    POINTER      go to state 73
    VALUE        go to state 74
    EXPR         go to state 224
    EXPR_START   go to state 77
    ARRAY_INDEX  go to state 106
    MULTI_AR     go to state 225
    MAKE         go to state 226
    SLICE        go to state 227


State 159

  185 ACCESS_FIELDS: METHOD .
  186              | METHOD . ACCESS_FIELDS

    t_id  shift, and go to state 150

    $default  reduce using rule 185 (ACCESS_FIELDS)

    METHOD         go to state 159
    ACCESS_FIELDS  go to state 167


State 160

   43 VAR: t_id MULTI_AR . ASSIGNMENT EXPR
   46    | t_id MULTI_AR . ASSIGNMENT MAKE

    t_vtype     shift, and go to state 149
    t_comma     shift, and go to state 168
    t_equality  shift, and go to state 153

    ASSIGNMENT  go to state 228


State 161

   55 VAR: t_id ACCESS_FIELDS . ASSIGNMENT VALUE

    t_vtype     shift, and go to state 149
    t_comma     shift, and go to state 168
    t_equality  shift, and go to state 153

    ASSIGNMENT  go to state 229


State 162

  150 ARRAY_INDEX: t_open_sq t_int_const . t_close_sq

    t_close_sq  shift, and go to state 230


State 163

  151 ARRAY_INDEX: t_open_sq t_id . t_close_sq

    t_close_sq  shift, and go to state 231


State 164

  152 ARRAY_INDEX: t_open_sq t_string . t_close_sq

    t_close_sq  shift, and go to state 232


State 165

  153 ARRAY_INDEX: t_open_sq t_close_sq .

    $default  reduce using rule 153 (ARRAY_INDEX)


State 166

   19 BODY_START: BODY_START BODY_FILLING END_SYMBOLS .

    $default  reduce using rule 19 (BODY_START)


State 167

  186 ACCESS_FIELDS: METHOD ACCESS_FIELDS .

    $default  reduce using rule 186 (ACCESS_FIELDS)


State 168

   62 ASSIGNMENT: t_comma . t_id ASSIGNMENT EXPR t_comma
   63           | t_comma . t_id ASSIGNMENT BOOLEAN t_comma

    t_id  shift, and go to state 233


State 169

   56 VAR: POINTER ASSIGNMENT . EXPR

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    FUNC_CALL   go to state 70
    SHIFT       go to state 71
    SHIFT_AC    go to state 72
    METHOD      go to state 31
    POINTER     go to state 73
    VALUE       go to state 74
    EXPR        go to state 234
    EXPR_START  go to state 77


State 170

  122 ELSEIF_SECOND: t_else . t_if CONDITION BODY
  125 ELSE_THIRD: t_else . BODY

    t_if       shift, and go to state 235
    t_open_br  shift, and go to state 44

    BODY        go to state 236
    BODY_START  go to state 48


State 171

  115 IF: IF_FIRST MULTY_ELSEIF_SECOND . MULTY_ELSE_THIRD
  116   | IF_FIRST MULTY_ELSEIF_SECOND .
  120 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND . ELSEIF_SECOND

    t_else  shift, and go to state 170

    $default  reduce using rule 116 (IF)

    ELSEIF_SECOND     go to state 237
    MULTY_ELSE_THIRD  go to state 238
    ELSE_THIRD        go to state 174


State 172

  121 MULTY_ELSEIF_SECOND: ELSEIF_SECOND .

    $default  reduce using rule 121 (MULTY_ELSEIF_SECOND)


State 173

  117 IF: IF_FIRST MULTY_ELSE_THIRD .
  124 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD . ELSE_THIRD

    t_else  shift, and go to state 239

    $default  reduce using rule 117 (IF)

    ELSE_THIRD  go to state 240


State 174

  123 MULTY_ELSE_THIRD: ELSE_THIRD .

    $default  reduce using rule 123 (MULTY_ELSE_THIRD)


State 175

  155 MULTI_AR: ARRAY_INDEX MULTI_AR .

    $default  reduce using rule 155 (MULTI_AR)


State 176

   78 PARAM_IMPORT: t_string t_path_pack t_string END_SYMBOLS .

    $default  reduce using rule 78 (PARAM_IMPORT)


State 177

   81 PARAM_IMPORT: PARAM_IMPORT t_id t_string END_SYMBOLS .

    $default  reduce using rule 81 (PARAM_IMPORT)


State 178

  191 INT_BODY: t_open_br END_SYMBOLS t_id . t_open_paren t_close_paren

    t_open_paren  shift, and go to state 241


State 179

  192 INT_END: t_close_br .

    $default  reduce using rule 192 (INT_END)


State 180

  190 INTERFACE: t_type t_id t_interface INT_BODY END_SYMBOLS INT_END .

    $default  reduce using rule 190 (INTERFACE)


State 181

   72 SHIFT_AC: t_int_const .

    $default  reduce using rule 72 (SHIFT_AC)


State 182

   71 SHIFT_AC: t_id .

    $default  reduce using rule 71 (SHIFT_AC)


State 183

   70 SHIFT: SHIFT_AC t_shift_const SHIFT_AC .

    $default  reduce using rule 70 (SHIFT)


State 184

  127 PARAM: PARAM t_comma EXPR .
  130 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 125

    $default  reduce using rule 127 (PARAM)


State 185

  130 EXPR: EXPR t_sign VALUE .

    $default  reduce using rule 130 (EXPR)


State 186

  146 EXPR_END: t_close_paren .

    $default  reduce using rule 146 (EXPR_END)


State 187

  131 EXPR: EXPR_START EXPR EXPR_END .

    $default  reduce using rule 131 (EXPR)


State 188

  168 MAPS: t_map . t_open_sq t_vtype t_close_sq t_vtype

    t_open_sq  shift, and go to state 242


State 189

   52 VAR: t_var t_id t_id . ASSIGNMENT t_id ST_EMBEDDED

    t_vtype     shift, and go to state 149
    t_comma     shift, and go to state 168
    t_equality  shift, and go to state 153

    ASSIGNMENT  go to state 243


State 190

   35 VAR: t_var t_id ASSIGNMENT . EXPR
   36    | t_var t_id ASSIGNMENT . EXPR t_vtype
   37    | t_var t_id ASSIGNMENT . BOOLEAN
   41    | t_var t_id ASSIGNMENT . MULTI_AR t_vtype PLENTY
   44    | t_var t_id ASSIGNMENT . MAKE
   49    | t_var t_id ASSIGNMENT . SLICE
   53    | t_var t_id ASSIGNMENT . t_id ST_EMBEDDED

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 244
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_open_sq           shift, and go to state 90
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_make              shift, and go to state 245
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    BOOLEAN      go to state 246
    FUNC_CALL    go to state 70
    SHIFT        go to state 71
    SHIFT_AC     go to state 72
    METHOD       go to state 31
    POINTER      go to state 73
    VALUE        go to state 74
    EXPR         go to state 247
    EXPR_START   go to state 77
    ARRAY_INDEX  go to state 106
    MULTI_AR     go to state 248
    MAKE         go to state 249
    SLICE        go to state 250


State 191

   57 VAR: t_var t_id POINTER .
   58    | t_var t_id POINTER . ASSIGNMENT EXPR

    t_vtype     shift, and go to state 149
    t_comma     shift, and go to state 168
    t_equality  shift, and go to state 153

    $default  reduce using rule 57 (VAR)

    ASSIGNMENT  go to state 251


State 192

  147 ARRAY_BODY: t_var t_id MULTI_AR . t_vtype
  148           | t_var t_id MULTI_AR . t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  149           | t_var t_id MULTI_AR . t_vtype ASSIGNMENT MAKE

    t_vtype  shift, and go to state 252


State 193

   50 VAR: t_var t_id MAPS .

    $default  reduce using rule 50 (VAR)


State 194

   59 BOOLEAN: EXPR t_bool . EXPR

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    FUNC_CALL   go to state 70
    SHIFT       go to state 71
    SHIFT_AC    go to state 72
    METHOD      go to state 31
    POINTER     go to state 73
    VALUE       go to state 74
    EXPR        go to state 253
    EXPR_START  go to state 77


State 195

  119 IF_FIRST: t_if CONDITION BODY .

    $default  reduce using rule 119 (IF_FIRST)


State 196

   35 VAR: t_var t_id . ASSIGNMENT EXPR
   36    | t_var t_id . ASSIGNMENT EXPR t_vtype
   37    | t_var t_id . ASSIGNMENT BOOLEAN
   41    | t_var t_id . ASSIGNMENT MULTI_AR t_vtype PLENTY
   44    | t_var t_id . ASSIGNMENT MAKE
   49    | t_var t_id . ASSIGNMENT SLICE
   50    | t_var t_id . MAPS
   52    | t_var t_id . t_id ASSIGNMENT t_id ST_EMBEDDED
   53    | t_var t_id . ASSIGNMENT t_id ST_EMBEDDED
   57    | t_var t_id . POINTER
   58    | t_var t_id . POINTER ASSIGNMENT EXPR

    t_vtype      shift, and go to state 149
    t_map        shift, and go to state 188
    t_id         shift, and go to state 189
    t_comma      shift, and go to state 168
    t_equality   shift, and go to state 153
    t_pointer    shift, and go to state 45
    t_ampersand  shift, and go to state 46

    ASSIGNMENT  go to state 190
    POINTER     go to state 191
    MAPS        go to state 193


State 197

   99 SWITCH_BODY_START: t_open_br END_SYMBOLS .

    $default  reduce using rule 99 (SWITCH_BODY_START)


State 198

  103 CASE: t_case . CASE_STATEMENT CASE_BODY

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    FUNC_CALL       go to state 70
    SHIFT           go to state 71
    SHIFT_AC        go to state 72
    METHOD          go to state 31
    POINTER         go to state 73
    VALUE           go to state 74
    MULTIPLE_ARG    go to state 254
    FIRST_PART      go to state 255
    CASE_STATEMENT  go to state 256
    EXPR            go to state 257
    EXPR_START      go to state 77


State 199

  104 DEFAULT: t_default . CASE_BODY

    t_colon  shift, and go to state 258

    CASE_BODY  go to state 259


State 200

  114 SWITCH_BODY_END: t_close_br .

    $default  reduce using rule 114 (SWITCH_BODY_END)


State 201

  100 SWITCH_BODY_START: SWITCH_BODY_START CASE .

    $default  reduce using rule 100 (SWITCH_BODY_START)


State 202

  101 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START DEFAULT .

    $default  reduce using rule 101 (SWITCH_BODY_START_WITH_DEFAULT)


State 203

   96 SWITCH_BODY: SWITCH_BODY_START SWITCH_BODY_END .

    $default  reduce using rule 96 (SWITCH_BODY)


State 204

  102 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START_WITH_DEFAULT CASE .

    $default  reduce using rule 102 (SWITCH_BODY_START_WITH_DEFAULT)


State 205

   97 SWITCH_BODY: SWITCH_BODY_START_WITH_DEFAULT SWITCH_BODY_END .

    $default  reduce using rule 97 (SWITCH_BODY)


State 206

   94 SWITCH: t_switch EXPR SWITCH_BODY .

    $default  reduce using rule 94 (SWITCH)


State 207

   93 SWITCH: t_switch INIT_STATE t_semicolon . EXPR SWITCH_BODY

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    FUNC_CALL   go to state 70
    SHIFT       go to state 71
    SHIFT_AC    go to state 72
    METHOD      go to state 31
    POINTER     go to state 73
    VALUE       go to state 74
    EXPR        go to state 260
    EXPR_START  go to state 77


State 208

  143 FOR: t_for INIT_STATE t_semicolon . CONDITION t_semicolon POST_STATE BODY

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_true              shift, and go to state 128
    t_false             shift, and go to state 129
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    $default  reduce using rule 140 (CONDITION)

    BOOLEAN     go to state 130
    FUNC_CALL   go to state 70
    SHIFT       go to state 71
    SHIFT_AC    go to state 72
    METHOD      go to state 31
    POINTER     go to state 73
    VALUE       go to state 74
    EXPR        go to state 131
    CONDITION   go to state 261
    EXPR_START  go to state 77


State 209

  144 FOR: t_for CONDITION BODY .

    $default  reduce using rule 144 (FOR)


State 210

   60 ASSIGNMENT: t_vtype t_equality .

    $default  reduce using rule 60 (ASSIGNMENT)


State 211

   62 ASSIGNMENT: t_comma t_id . ASSIGNMENT EXPR t_comma
   63           | t_comma t_id . ASSIGNMENT BOOLEAN t_comma
   65 SHORT_ASSIGN: t_comma t_id . SHORT_ASSIGN EXPR t_comma
   66             | t_comma t_id . SHORT_ASSIGN BOOLEAN t_comma

    t_vtype      shift, and go to state 149
    t_short_dec  shift, and go to state 151
    t_comma      shift, and go to state 152
    t_equality   shift, and go to state 153

    ASSIGNMENT    go to state 262
    SHORT_ASSIGN  go to state 263


State 212

   72 SHIFT_AC: t_int_const .
   82 VALUE: t_int_const .
  150 ARRAY_INDEX: t_open_sq t_int_const . t_close_sq

    t_close_sq  shift, and go to state 230

    t_colon   reduce using rule 82 (VALUE)
    $default  reduce using rule 72 (SHIFT_AC)


State 213

   67 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   71 SHIFT_AC: t_id .
   73 METHOD: t_id . t_dot
   84 VALUE: t_id .
  151 ARRAY_INDEX: t_open_sq t_id . t_close_sq

    t_open_paren  shift, and go to state 41
    t_close_sq    shift, and go to state 231
    t_dot         shift, and go to state 42

    t_colon   reduce using rule 84 (VALUE)
    $default  reduce using rule 71 (SHIFT_AC)


State 214

   85 VALUE: t_string .
  152 ARRAY_INDEX: t_open_sq t_string . t_close_sq

    t_close_sq  shift, and go to state 232

    $default  reduce using rule 85 (VALUE)


State 215

  166 SLICE: t_id t_open_sq t_colon . VALUE t_close_sq

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 29
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    FUNC_CALL  go to state 70
    SHIFT      go to state 71
    SHIFT_AC   go to state 72
    METHOD     go to state 31
    POINTER    go to state 73
    VALUE      go to state 264


State 216

  165 SLICE: t_id t_open_sq VALUE . t_colon VALUE t_close_sq
  167      | t_id t_open_sq VALUE . t_colon t_close_sq

    t_colon  shift, and go to state 265


State 217

  133 SHORT_EXPR: t_id t_short_expr t_id .

    $default  reduce using rule 133 (SHORT_EXPR)


State 218

   67 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   71 SHIFT_AC: t_id .
   73 METHOD: t_id . t_dot
   84 VALUE: t_id .
  165 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  166      | t_id . t_open_sq t_colon VALUE t_close_sq
  167      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_open_paren  shift, and go to state 41
    t_open_sq     shift, and go to state 266
    t_dot         shift, and go to state 42

    t_shift_const  reduce using rule 71 (SHIFT_AC)
    $default       reduce using rule 84 (VALUE)


State 219

   39 VAR: t_id ASSIGNMENT EXPR .
  130 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 125

    $default  reduce using rule 39 (VAR)


State 220

   48 VAR: t_id ASSIGNMENT SLICE .

    $default  reduce using rule 48 (VAR)


State 221

   54 VAR: t_id SHORT_ASSIGN t_id . ST_EMBEDDED
   67 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   71 SHIFT_AC: t_id .
   73 METHOD: t_id . t_dot
   84 VALUE: t_id .
  165 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  166      | t_id . t_open_sq t_colon VALUE t_close_sq
  167      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_open_br     shift, and go to state 267
    t_open_paren  shift, and go to state 41
    t_open_sq     shift, and go to state 266
    t_dot         shift, and go to state 42

    t_shift_const  reduce using rule 71 (SHIFT_AC)
    $default       reduce using rule 84 (VALUE)

    PLENTY_OLD    go to state 268
    STRUCT_FIELD  go to state 269
    ST_EMBEDDED   go to state 270


State 222

   51 VAR: t_id SHORT_ASSIGN t_make . t_open_paren MAPS t_close_paren
  163 MAKE: t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  164     | t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_paren  shift, and go to state 271


State 223

   42 VAR: t_id SHORT_ASSIGN BOOLEAN .

    $default  reduce using rule 42 (VAR)


State 224

   38 VAR: t_id SHORT_ASSIGN EXPR .
   59 BOOLEAN: EXPR . t_bool EXPR
  130 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 125
    t_bool  shift, and go to state 194

    $default  reduce using rule 38 (VAR)


State 225

   40 VAR: t_id SHORT_ASSIGN MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 272


State 226

   45 VAR: t_id SHORT_ASSIGN MAKE .

    $default  reduce using rule 45 (VAR)


State 227

   47 VAR: t_id SHORT_ASSIGN SLICE .

    $default  reduce using rule 47 (VAR)


State 228

   43 VAR: t_id MULTI_AR ASSIGNMENT . EXPR
   46    | t_id MULTI_AR ASSIGNMENT . MAKE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_make              shift, and go to state 245
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    FUNC_CALL   go to state 70
    SHIFT       go to state 71
    SHIFT_AC    go to state 72
    METHOD      go to state 31
    POINTER     go to state 73
    VALUE       go to state 74
    EXPR        go to state 273
    EXPR_START  go to state 77
    MAKE        go to state 274


State 229

   55 VAR: t_id ACCESS_FIELDS ASSIGNMENT . VALUE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 29
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    FUNC_CALL  go to state 70
    SHIFT      go to state 71
    SHIFT_AC   go to state 72
    METHOD     go to state 31
    POINTER    go to state 73
    VALUE      go to state 275


State 230

  150 ARRAY_INDEX: t_open_sq t_int_const t_close_sq .

    $default  reduce using rule 150 (ARRAY_INDEX)


State 231

  151 ARRAY_INDEX: t_open_sq t_id t_close_sq .

    $default  reduce using rule 151 (ARRAY_INDEX)


State 232

  152 ARRAY_INDEX: t_open_sq t_string t_close_sq .

    $default  reduce using rule 152 (ARRAY_INDEX)


State 233

   62 ASSIGNMENT: t_comma t_id . ASSIGNMENT EXPR t_comma
   63           | t_comma t_id . ASSIGNMENT BOOLEAN t_comma

    t_vtype     shift, and go to state 149
    t_comma     shift, and go to state 168
    t_equality  shift, and go to state 153

    ASSIGNMENT  go to state 262


State 234

   56 VAR: POINTER ASSIGNMENT EXPR .
  130 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 125

    $default  reduce using rule 56 (VAR)


State 235

  122 ELSEIF_SECOND: t_else t_if . CONDITION BODY

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_true              shift, and go to state 128
    t_false             shift, and go to state 129
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    $default  reduce using rule 140 (CONDITION)

    BOOLEAN     go to state 130
    FUNC_CALL   go to state 70
    SHIFT       go to state 71
    SHIFT_AC    go to state 72
    METHOD      go to state 31
    POINTER     go to state 73
    VALUE       go to state 74
    EXPR        go to state 131
    CONDITION   go to state 276
    EXPR_START  go to state 77


State 236

  125 ELSE_THIRD: t_else BODY .

    $default  reduce using rule 125 (ELSE_THIRD)


State 237

  120 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND ELSEIF_SECOND .

    $default  reduce using rule 120 (MULTY_ELSEIF_SECOND)


State 238

  115 IF: IF_FIRST MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD .
  124 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD . ELSE_THIRD

    t_else  shift, and go to state 239

    $default  reduce using rule 115 (IF)

    ELSE_THIRD  go to state 240


State 239

  125 ELSE_THIRD: t_else . BODY

    t_open_br  shift, and go to state 44

    BODY        go to state 236
    BODY_START  go to state 48


State 240

  124 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD ELSE_THIRD .

    $default  reduce using rule 124 (MULTY_ELSE_THIRD)


State 241

  191 INT_BODY: t_open_br END_SYMBOLS t_id t_open_paren . t_close_paren

    t_close_paren  shift, and go to state 277


State 242

  168 MAPS: t_map t_open_sq . t_vtype t_close_sq t_vtype

    t_vtype  shift, and go to state 278


State 243

   52 VAR: t_var t_id t_id ASSIGNMENT . t_id ST_EMBEDDED

    t_id  shift, and go to state 279


State 244

   53 VAR: t_var t_id ASSIGNMENT t_id . ST_EMBEDDED
   67 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   71 SHIFT_AC: t_id .
   73 METHOD: t_id . t_dot
   84 VALUE: t_id .
  165 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  166      | t_id . t_open_sq t_colon VALUE t_close_sq
  167      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_open_br     shift, and go to state 267
    t_open_paren  shift, and go to state 41
    t_open_sq     shift, and go to state 266
    t_dot         shift, and go to state 42

    t_shift_const  reduce using rule 71 (SHIFT_AC)
    $default       reduce using rule 84 (VALUE)

    PLENTY_OLD    go to state 268
    STRUCT_FIELD  go to state 269
    ST_EMBEDDED   go to state 280


State 245

  163 MAKE: t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  164     | t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_paren  shift, and go to state 281


State 246

   37 VAR: t_var t_id ASSIGNMENT BOOLEAN .

    $default  reduce using rule 37 (VAR)


State 247

   35 VAR: t_var t_id ASSIGNMENT EXPR .
   36    | t_var t_id ASSIGNMENT EXPR . t_vtype
   59 BOOLEAN: EXPR . t_bool EXPR
  130 EXPR: EXPR . t_sign VALUE

    t_vtype  shift, and go to state 282
    t_sign   shift, and go to state 125
    t_bool   shift, and go to state 194

    $default  reduce using rule 35 (VAR)


State 248

   41 VAR: t_var t_id ASSIGNMENT MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 283


State 249

   44 VAR: t_var t_id ASSIGNMENT MAKE .

    $default  reduce using rule 44 (VAR)


State 250

   49 VAR: t_var t_id ASSIGNMENT SLICE .

    $default  reduce using rule 49 (VAR)


State 251

   58 VAR: t_var t_id POINTER ASSIGNMENT . EXPR

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    FUNC_CALL   go to state 70
    SHIFT       go to state 71
    SHIFT_AC    go to state 72
    METHOD      go to state 31
    POINTER     go to state 73
    VALUE       go to state 74
    EXPR        go to state 284
    EXPR_START  go to state 77


State 252

  147 ARRAY_BODY: t_var t_id MULTI_AR t_vtype .
  148           | t_var t_id MULTI_AR t_vtype . ASSIGNMENT MULTI_AR t_vtype PLENTY
  149           | t_var t_id MULTI_AR t_vtype . ASSIGNMENT MAKE

    t_vtype     shift, and go to state 149
    t_comma     shift, and go to state 168
    t_equality  shift, and go to state 153

    $default  reduce using rule 147 (ARRAY_BODY)

    ASSIGNMENT  go to state 285


State 253

   59 BOOLEAN: EXPR t_bool EXPR .
  130 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 125

    $default  reduce using rule 59 (BOOLEAN)


State 254

  109 CASE_STATEMENT: MULTIPLE_ARG .

    $default  reduce using rule 109 (CASE_STATEMENT)


State 255

  105 MULTIPLE_ARG: FIRST_PART . SECOND_PART
  107 FIRST_PART: FIRST_PART . EXPR t_comma

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    FUNC_CALL    go to state 70
    SHIFT        go to state 71
    SHIFT_AC     go to state 72
    METHOD       go to state 31
    POINTER      go to state 73
    VALUE        go to state 74
    SECOND_PART  go to state 286
    EXPR         go to state 287
    EXPR_START   go to state 77


State 256

  103 CASE: t_case CASE_STATEMENT . CASE_BODY

    t_colon  shift, and go to state 258

    CASE_BODY  go to state 288


State 257

  106 FIRST_PART: EXPR . t_comma
  110 CASE_STATEMENT: EXPR .
  130 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 125
    t_comma  shift, and go to state 289

    $default  reduce using rule 110 (CASE_STATEMENT)


State 258

  111 CASE_BODY: t_colon .
  112          | t_colon . t_enter

    t_enter  shift, and go to state 290

    $default  reduce using rule 111 (CASE_BODY)


State 259

  104 DEFAULT: t_default CASE_BODY .
  113 CASE_BODY: CASE_BODY . BODY_FILLING END_SYMBOLS

    t_var         shift, and go to state 81
    t_if          shift, and go to state 82
    t_switch      shift, and go to state 83
    t_type        shift, and go to state 84
    t_for         shift, and go to state 85
    t_goto        shift, and go to state 86
    t_return      shift, and go to state 87
    t_id          shift, and go to state 88
    t_open_paren  shift, and go to state 29
    t_open_sq     shift, and go to state 90
    t_pointer     shift, and go to state 45
    t_ampersand   shift, and go to state 46

    $default  reduce using rule 104 (DEFAULT)

    BODY_FILLING   go to state 291
    VAR            go to state 93
    FUNC_CALL      go to state 94
    METHOD         go to state 95
    POINTER        go to state 96
    GOTO           go to state 97
    LABEL          go to state 98
    SWITCH         go to state 99
    IF             go to state 100
    IF_FIRST       go to state 101
    RETURN         go to state 102
    SHORT_EXPR     go to state 103
    FOR            go to state 104
    ARRAY_BODY     go to state 105
    ARRAY_INDEX    go to state 106
    MULTI_AR       go to state 107
    SLICE          go to state 108
    STRUCT         go to state 109
    STRUCT_START   go to state 11
    ACCESS_FIELDS  go to state 110


State 260

   93 SWITCH: t_switch INIT_STATE t_semicolon EXPR . SWITCH_BODY
  130 EXPR: EXPR . t_sign VALUE

    t_open_br  shift, and go to state 135
    t_sign     shift, and go to state 125

    SWITCH_BODY                     go to state 292
    SWITCH_BODY_START               go to state 140
    SWITCH_BODY_START_WITH_DEFAULT  go to state 141


State 261

  143 FOR: t_for INIT_STATE t_semicolon CONDITION . t_semicolon POST_STATE BODY

    t_semicolon  shift, and go to state 293


State 262

   62 ASSIGNMENT: t_comma t_id ASSIGNMENT . EXPR t_comma
   63           | t_comma t_id ASSIGNMENT . BOOLEAN t_comma

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    BOOLEAN     go to state 294
    FUNC_CALL   go to state 70
    SHIFT       go to state 71
    SHIFT_AC    go to state 72
    METHOD      go to state 31
    POINTER     go to state 73
    VALUE       go to state 74
    EXPR        go to state 295
    EXPR_START  go to state 77


State 263

   65 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN . EXPR t_comma
   66             | t_comma t_id SHORT_ASSIGN . BOOLEAN t_comma

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    BOOLEAN     go to state 296
    FUNC_CALL   go to state 70
    SHIFT       go to state 71
    SHIFT_AC    go to state 72
    METHOD      go to state 31
    POINTER     go to state 73
    VALUE       go to state 74
    EXPR        go to state 297
    EXPR_START  go to state 77


State 264

  166 SLICE: t_id t_open_sq t_colon VALUE . t_close_sq

    t_close_sq  shift, and go to state 298


State 265

  165 SLICE: t_id t_open_sq VALUE t_colon . VALUE t_close_sq
  167      | t_id t_open_sq VALUE t_colon . t_close_sq

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 29
    t_close_sq          shift, and go to state 299
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    FUNC_CALL  go to state 70
    SHIFT      go to state 71
    SHIFT_AC   go to state 72
    METHOD     go to state 31
    POINTER    go to state 73
    VALUE      go to state 300


State 266

  165 SLICE: t_id t_open_sq . VALUE t_colon VALUE t_close_sq
  166      | t_id t_open_sq . t_colon VALUE t_close_sq
  167      | t_id t_open_sq . VALUE t_colon t_close_sq

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 29
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_colon             shift, and go to state 215
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    FUNC_CALL  go to state 70
    SHIFT      go to state 71
    SHIFT_AC   go to state 72
    METHOD     go to state 31
    POINTER    go to state 73
    VALUE      go to state 216


State 267

  158 PLENTY_OLD: t_open_br . ENUM t_close_br
  159           | t_open_br . t_close_br
  160           | t_open_br . PLENTY t_close_br
  180 STRUCT_FIELD: t_open_br . END_SYMBOLS STRUCT_ENUM t_close_br
  181             | t_open_br . END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_br           shift, and go to state 301
    t_close_br          shift, and go to state 302
    t_open_paren        shift, and go to state 29
    t_rune              shift, and go to state 68
    t_semicolon         shift, and go to state 20
    t_blank_identifier  shift, and go to state 69
    t_enter             shift, and go to state 21
    t_eof               shift, and go to state 22
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    FUNC_CALL    go to state 70
    SHIFT        go to state 71
    SHIFT_AC     go to state 72
    METHOD       go to state 31
    POINTER      go to state 73
    VALUE        go to state 303
    PLENTY       go to state 304
    PLENTY_OLD   go to state 305
    ENUM         go to state 306
    END_SYMBOLS  go to state 307


State 268

  182 STRUCT_FIELD: PLENTY_OLD .

    $default  reduce using rule 182 (STRUCT_FIELD)


State 269

  183 ST_EMBEDDED: STRUCT_FIELD .
  184            | STRUCT_FIELD . t_comma ST_EMBEDDED

    t_comma  shift, and go to state 308

    $default  reduce using rule 183 (ST_EMBEDDED)


State 270

   54 VAR: t_id SHORT_ASSIGN t_id ST_EMBEDDED .

    $default  reduce using rule 54 (VAR)


State 271

   51 VAR: t_id SHORT_ASSIGN t_make t_open_paren . MAPS t_close_paren
  163 MAKE: t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_close_paren
  164     | t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_map      shift, and go to state 188
    t_open_sq  shift, and go to state 90

    ARRAY_INDEX  go to state 106
    MULTI_AR     go to state 309
    MAPS         go to state 310


State 272

   40 VAR: t_id SHORT_ASSIGN MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 301

    PLENTY      go to state 311
    PLENTY_OLD  go to state 305


State 273

   43 VAR: t_id MULTI_AR ASSIGNMENT EXPR .
  130 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 125

    $default  reduce using rule 43 (VAR)


State 274

   46 VAR: t_id MULTI_AR ASSIGNMENT MAKE .

    $default  reduce using rule 46 (VAR)


State 275

   55 VAR: t_id ACCESS_FIELDS ASSIGNMENT VALUE .

    $default  reduce using rule 55 (VAR)


State 276

  122 ELSEIF_SECOND: t_else t_if CONDITION . BODY

    t_open_br  shift, and go to state 44

    BODY        go to state 312
    BODY_START  go to state 48


State 277

  191 INT_BODY: t_open_br END_SYMBOLS t_id t_open_paren t_close_paren .

    $default  reduce using rule 191 (INT_BODY)


State 278

  168 MAPS: t_map t_open_sq t_vtype . t_close_sq t_vtype

    t_close_sq  shift, and go to state 313


State 279

   52 VAR: t_var t_id t_id ASSIGNMENT t_id . ST_EMBEDDED

    t_open_br  shift, and go to state 267

    PLENTY_OLD    go to state 268
    STRUCT_FIELD  go to state 269
    ST_EMBEDDED   go to state 314


State 280

   53 VAR: t_var t_id ASSIGNMENT t_id ST_EMBEDDED .

    $default  reduce using rule 53 (VAR)


State 281

  163 MAKE: t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_close_paren
  164     | t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_sq  shift, and go to state 90

    ARRAY_INDEX  go to state 106
    MULTI_AR     go to state 309


State 282

   36 VAR: t_var t_id ASSIGNMENT EXPR t_vtype .

    $default  reduce using rule 36 (VAR)


State 283

   41 VAR: t_var t_id ASSIGNMENT MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 301

    PLENTY      go to state 315
    PLENTY_OLD  go to state 305


State 284

   58 VAR: t_var t_id POINTER ASSIGNMENT EXPR .
  130 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 125

    $default  reduce using rule 58 (VAR)


State 285

  148 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT . MULTI_AR t_vtype PLENTY
  149           | t_var t_id MULTI_AR t_vtype ASSIGNMENT . MAKE

    t_open_sq  shift, and go to state 90
    t_make     shift, and go to state 245

    ARRAY_INDEX  go to state 106
    MULTI_AR     go to state 316
    MAKE         go to state 317


State 286

  105 MULTIPLE_ARG: FIRST_PART SECOND_PART .

    $default  reduce using rule 105 (MULTIPLE_ARG)


State 287

  107 FIRST_PART: FIRST_PART EXPR . t_comma
  108 SECOND_PART: EXPR .
  130 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 125
    t_comma  shift, and go to state 318

    $default  reduce using rule 108 (SECOND_PART)


State 288

  103 CASE: t_case CASE_STATEMENT CASE_BODY .
  113 CASE_BODY: CASE_BODY . BODY_FILLING END_SYMBOLS

    t_var         shift, and go to state 81
    t_if          shift, and go to state 82
    t_switch      shift, and go to state 83
    t_type        shift, and go to state 84
    t_for         shift, and go to state 85
    t_goto        shift, and go to state 86
    t_return      shift, and go to state 87
    t_id          shift, and go to state 88
    t_open_paren  shift, and go to state 29
    t_open_sq     shift, and go to state 90
    t_pointer     shift, and go to state 45
    t_ampersand   shift, and go to state 46

    $default  reduce using rule 103 (CASE)

    BODY_FILLING   go to state 291
    VAR            go to state 93
    FUNC_CALL      go to state 94
    METHOD         go to state 95
    POINTER        go to state 96
    GOTO           go to state 97
    LABEL          go to state 98
    SWITCH         go to state 99
    IF             go to state 100
    IF_FIRST       go to state 101
    RETURN         go to state 102
    SHORT_EXPR     go to state 103
    FOR            go to state 104
    ARRAY_BODY     go to state 105
    ARRAY_INDEX    go to state 106
    MULTI_AR       go to state 107
    SLICE          go to state 108
    STRUCT         go to state 109
    STRUCT_START   go to state 11
    ACCESS_FIELDS  go to state 110


State 289

  106 FIRST_PART: EXPR t_comma .

    $default  reduce using rule 106 (FIRST_PART)


State 290

  112 CASE_BODY: t_colon t_enter .

    $default  reduce using rule 112 (CASE_BODY)


State 291

  113 CASE_BODY: CASE_BODY BODY_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 319


State 292

   93 SWITCH: t_switch INIT_STATE t_semicolon EXPR SWITCH_BODY .

    $default  reduce using rule 93 (SWITCH)


State 293

  143 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon . POST_STATE BODY

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 320
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    FUNC_CALL   go to state 70
    SHIFT       go to state 71
    SHIFT_AC    go to state 72
    METHOD      go to state 31
    POINTER     go to state 73
    VALUE       go to state 74
    EXPR        go to state 321
    POST_STATE  go to state 322
    EXPR_START  go to state 77


State 294

   63 ASSIGNMENT: t_comma t_id ASSIGNMENT BOOLEAN . t_comma

    t_comma  shift, and go to state 323


State 295

   59 BOOLEAN: EXPR . t_bool EXPR
   62 ASSIGNMENT: t_comma t_id ASSIGNMENT EXPR . t_comma
  130 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 125
    t_comma  shift, and go to state 324
    t_bool   shift, and go to state 194


State 296

   66 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN BOOLEAN . t_comma

    t_comma  shift, and go to state 325


State 297

   59 BOOLEAN: EXPR . t_bool EXPR
   65 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN EXPR . t_comma
  130 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 125
    t_comma  shift, and go to state 326
    t_bool   shift, and go to state 194


State 298

  166 SLICE: t_id t_open_sq t_colon VALUE t_close_sq .

    $default  reduce using rule 166 (SLICE)


State 299

  167 SLICE: t_id t_open_sq VALUE t_colon t_close_sq .

    $default  reduce using rule 167 (SLICE)


State 300

  165 SLICE: t_id t_open_sq VALUE t_colon VALUE . t_close_sq

    t_close_sq  shift, and go to state 327


State 301

  158 PLENTY_OLD: t_open_br . ENUM t_close_br
  159           | t_open_br . t_close_br
  160           | t_open_br . PLENTY t_close_br

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_br           shift, and go to state 301
    t_close_br          shift, and go to state 302
    t_open_paren        shift, and go to state 29
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    FUNC_CALL   go to state 70
    SHIFT       go to state 71
    SHIFT_AC    go to state 72
    METHOD      go to state 31
    POINTER     go to state 73
    VALUE       go to state 303
    PLENTY      go to state 304
    PLENTY_OLD  go to state 305
    ENUM        go to state 306


State 302

  159 PLENTY_OLD: t_open_br t_close_br .

    $default  reduce using rule 159 (PLENTY_OLD)


State 303

  161 ENUM: VALUE .

    $default  reduce using rule 161 (ENUM)


State 304

  160 PLENTY_OLD: t_open_br PLENTY . t_close_br

    t_close_br  shift, and go to state 328


State 305

  156 PLENTY: PLENTY_OLD .
  157       | PLENTY_OLD . t_comma PLENTY

    t_comma  shift, and go to state 329

    $default  reduce using rule 156 (PLENTY)


State 306

  158 PLENTY_OLD: t_open_br ENUM . t_close_br
  162 ENUM: ENUM . t_comma VALUE

    t_close_br  shift, and go to state 330
    t_comma     shift, and go to state 331


State 307

  180 STRUCT_FIELD: t_open_br END_SYMBOLS . STRUCT_ENUM t_close_br
  181             | t_open_br END_SYMBOLS . STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS

    t_id  shift, and go to state 332

    STRUCT_ENUM  go to state 333


State 308

  184 ST_EMBEDDED: STRUCT_FIELD t_comma . ST_EMBEDDED

    t_open_br  shift, and go to state 267

    PLENTY_OLD    go to state 268
    STRUCT_FIELD  go to state 269
    ST_EMBEDDED   go to state 334


State 309

  163 MAKE: t_make t_open_paren MULTI_AR . t_vtype t_comma VALUE t_close_paren
  164     | t_make t_open_paren MULTI_AR . t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_vtype  shift, and go to state 335


State 310

   51 VAR: t_id SHORT_ASSIGN t_make t_open_paren MAPS . t_close_paren

    t_close_paren  shift, and go to state 336


State 311

   40 VAR: t_id SHORT_ASSIGN MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 40 (VAR)


State 312

  122 ELSEIF_SECOND: t_else t_if CONDITION BODY .

    $default  reduce using rule 122 (ELSEIF_SECOND)


State 313

  168 MAPS: t_map t_open_sq t_vtype t_close_sq . t_vtype

    t_vtype  shift, and go to state 337


State 314

   52 VAR: t_var t_id t_id ASSIGNMENT t_id ST_EMBEDDED .

    $default  reduce using rule 52 (VAR)


State 315

   41 VAR: t_var t_id ASSIGNMENT MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 41 (VAR)


State 316

  148 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 338


State 317

  149 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MAKE .

    $default  reduce using rule 149 (ARRAY_BODY)


State 318

  107 FIRST_PART: FIRST_PART EXPR t_comma .

    $default  reduce using rule 107 (FIRST_PART)


State 319

  113 CASE_BODY: CASE_BODY BODY_FILLING END_SYMBOLS .

    $default  reduce using rule 113 (CASE_BODY)


State 320

   67 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   71 SHIFT_AC: t_id .
   73 METHOD: t_id . t_dot
   84 VALUE: t_id .
  142 POST_STATE: t_id . t_inc_const

    t_inc_const   shift, and go to state 339
    t_open_paren  shift, and go to state 41
    t_dot         shift, and go to state 42

    t_shift_const  reduce using rule 71 (SHIFT_AC)
    $default       reduce using rule 84 (VALUE)


State 321

  130 EXPR: EXPR . t_sign VALUE
  141 POST_STATE: EXPR .

    t_sign  shift, and go to state 125

    $default  reduce using rule 141 (POST_STATE)


State 322

  143 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE . BODY

    t_open_br  shift, and go to state 44

    BODY        go to state 340
    BODY_START  go to state 48


State 323

   63 ASSIGNMENT: t_comma t_id ASSIGNMENT BOOLEAN t_comma .

    $default  reduce using rule 63 (ASSIGNMENT)


State 324

   62 ASSIGNMENT: t_comma t_id ASSIGNMENT EXPR t_comma .

    $default  reduce using rule 62 (ASSIGNMENT)


State 325

   66 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN BOOLEAN t_comma .

    $default  reduce using rule 66 (SHORT_ASSIGN)


State 326

   65 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN EXPR t_comma .

    $default  reduce using rule 65 (SHORT_ASSIGN)


State 327

  165 SLICE: t_id t_open_sq VALUE t_colon VALUE t_close_sq .

    $default  reduce using rule 165 (SLICE)


State 328

  160 PLENTY_OLD: t_open_br PLENTY t_close_br .

    $default  reduce using rule 160 (PLENTY_OLD)


State 329

  157 PLENTY: PLENTY_OLD t_comma . PLENTY

    t_open_br  shift, and go to state 301

    PLENTY      go to state 341
    PLENTY_OLD  go to state 305


State 330

  158 PLENTY_OLD: t_open_br ENUM t_close_br .

    $default  reduce using rule 158 (PLENTY_OLD)


State 331

  162 ENUM: ENUM t_comma . VALUE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 29
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    FUNC_CALL  go to state 70
    SHIFT      go to state 71
    SHIFT_AC   go to state 72
    METHOD     go to state 31
    POINTER    go to state 73
    VALUE      go to state 342


State 332

  176 STRUCT_ENUM: t_id . t_colon VALUE
  178            | t_id . t_colon t_id STRUCT_FIELD

    t_colon  shift, and go to state 343


State 333

  177 STRUCT_ENUM: STRUCT_ENUM . t_comma END_SYMBOLS t_id t_colon VALUE
  179            | STRUCT_ENUM . t_comma END_SYMBOLS t_id t_colon t_id STRUCT_FIELD
  180 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM . t_close_br
  181             | t_open_br END_SYMBOLS STRUCT_ENUM . t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS

    t_close_br  shift, and go to state 344
    t_comma     shift, and go to state 345


State 334

  184 ST_EMBEDDED: STRUCT_FIELD t_comma ST_EMBEDDED .

    $default  reduce using rule 184 (ST_EMBEDDED)


State 335

  163 MAKE: t_make t_open_paren MULTI_AR t_vtype . t_comma VALUE t_close_paren
  164     | t_make t_open_paren MULTI_AR t_vtype . t_comma VALUE t_comma t_int_const VALUE

    t_comma  shift, and go to state 346


State 336

   51 VAR: t_id SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren .

    $default  reduce using rule 51 (VAR)


State 337

  168 MAPS: t_map t_open_sq t_vtype t_close_sq t_vtype .

    $default  reduce using rule 168 (MAPS)


State 338

  148 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 301

    PLENTY      go to state 347
    PLENTY_OLD  go to state 305


State 339

  142 POST_STATE: t_id t_inc_const .

    $default  reduce using rule 142 (POST_STATE)


State 340

  143 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY .

    $default  reduce using rule 143 (FOR)


State 341

  157 PLENTY: PLENTY_OLD t_comma PLENTY .

    $default  reduce using rule 157 (PLENTY)


State 342

  162 ENUM: ENUM t_comma VALUE .

    $default  reduce using rule 162 (ENUM)


State 343

  176 STRUCT_ENUM: t_id t_colon . VALUE
  178            | t_id t_colon . t_id STRUCT_FIELD

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 348
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 29
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    FUNC_CALL  go to state 70
    SHIFT      go to state 71
    SHIFT_AC   go to state 72
    METHOD     go to state 31
    POINTER    go to state 73
    VALUE      go to state 349


State 344

  180 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_close_br .

    $default  reduce using rule 180 (STRUCT_FIELD)


State 345

  177 STRUCT_ENUM: STRUCT_ENUM t_comma . END_SYMBOLS t_id t_colon VALUE
  179            | STRUCT_ENUM t_comma . END_SYMBOLS t_id t_colon t_id STRUCT_FIELD
  181 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma . END_SYMBOLS t_close_br t_comma END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 350


State 346

  163 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma . VALUE t_close_paren
  164     | t_make t_open_paren MULTI_AR t_vtype t_comma . VALUE t_comma t_int_const VALUE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 29
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    FUNC_CALL  go to state 70
    SHIFT      go to state 71
    SHIFT_AC   go to state 72
    METHOD     go to state 31
    POINTER    go to state 73
    VALUE      go to state 351


State 347

  148 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 148 (ARRAY_BODY)


State 348

   67 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   71 SHIFT_AC: t_id .
   73 METHOD: t_id . t_dot
   84 VALUE: t_id .
  178 STRUCT_ENUM: t_id t_colon t_id . STRUCT_FIELD

    t_open_br     shift, and go to state 267
    t_open_paren  shift, and go to state 41
    t_dot         shift, and go to state 42

    t_shift_const  reduce using rule 71 (SHIFT_AC)
    $default       reduce using rule 84 (VALUE)

    PLENTY_OLD    go to state 268
    STRUCT_FIELD  go to state 352


State 349

  176 STRUCT_ENUM: t_id t_colon VALUE .

    $default  reduce using rule 176 (STRUCT_ENUM)


State 350

  177 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS . t_id t_colon VALUE
  179            | STRUCT_ENUM t_comma END_SYMBOLS . t_id t_colon t_id STRUCT_FIELD
  181 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS . t_close_br t_comma END_SYMBOLS

    t_id        shift, and go to state 353
    t_close_br  shift, and go to state 354


State 351

  163 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE . t_close_paren
  164     | t_make t_open_paren MULTI_AR t_vtype t_comma VALUE . t_comma t_int_const VALUE

    t_comma        shift, and go to state 355
    t_close_paren  shift, and go to state 356


State 352

  178 STRUCT_ENUM: t_id t_colon t_id STRUCT_FIELD .

    $default  reduce using rule 178 (STRUCT_ENUM)


State 353

  177 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id . t_colon VALUE
  179            | STRUCT_ENUM t_comma END_SYMBOLS t_id . t_colon t_id STRUCT_FIELD

    t_colon  shift, and go to state 357


State 354

  181 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br . t_comma END_SYMBOLS

    t_comma  shift, and go to state 358


State 355

  164 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma . t_int_const VALUE

    t_int_const  shift, and go to state 359


State 356

  163 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren .

    $default  reduce using rule 163 (MAKE)


State 357

  177 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon . VALUE
  179            | STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon . t_id STRUCT_FIELD

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 360
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 29
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    FUNC_CALL  go to state 70
    SHIFT      go to state 71
    SHIFT_AC   go to state 72
    METHOD     go to state 31
    POINTER    go to state 73
    VALUE      go to state 361


State 358

  181 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 362


State 359

  164 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const . VALUE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 29
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_pointer           shift, and go to state 45
    t_ampersand         shift, and go to state 46

    FUNC_CALL  go to state 70
    SHIFT      go to state 71
    SHIFT_AC   go to state 72
    METHOD     go to state 31
    POINTER    go to state 73
    VALUE      go to state 363


State 360

   67 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   71 SHIFT_AC: t_id .
   73 METHOD: t_id . t_dot
   84 VALUE: t_id .
  179 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon t_id . STRUCT_FIELD

    t_open_br     shift, and go to state 267
    t_open_paren  shift, and go to state 41
    t_dot         shift, and go to state 42

    t_shift_const  reduce using rule 71 (SHIFT_AC)
    $default       reduce using rule 84 (VALUE)

    PLENTY_OLD    go to state 268
    STRUCT_FIELD  go to state 364


State 361

  177 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon VALUE .

    $default  reduce using rule 177 (STRUCT_ENUM)


State 362

  181 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS .

    $default  reduce using rule 181 (STRUCT_FIELD)


State 363

  164 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE .

    $default  reduce using rule 164 (MAKE)


State 364

  179 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon t_id STRUCT_FIELD .

    $default  reduce using rule 179 (STRUCT_ENUM)
