Terminals unused in grammar

   t_constant
   t_chan
   t_go
   t_range
   t_select
   t_fallthrough
   t_or_const
   t_and_const
   t_param_const
   t_eq_const
   t_rel_const
   t_point_const
   t_punc
   t_char_const
   t_path_pack
   '+'
   '-'
   '*'
   '/'


Grammar

    0 $accept: START $end

    1 START: START GLOBAL END_SYMBOLS
    2      | GLOBAL END_SYMBOLS
    3      | START END_SYMBOLS

    4 GLOBAL: PACKAGE
    5       | IMPORT
    6       | FUNC
    7       | STRUCT
    8       | INTERFACE

    9 PACKAGE: t_package t_id

   10 IMPORT: t_import t_string
   11       | t_import t_open_paren PARAM_IMPORT t_close_paren
   12       | t_import t_open_paren t_enter PARAM_IMPORT t_close_paren
   13       | t_import t_id t_string

   14 FUNC: t_func t_id t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART

   15 FUNC_SECOND_PART: BODY
   16                 | FUNC_RETURN_VALUE BODY
   17                 | t_open_paren FUNC_PARAM_SECOND t_close_paren BODY

   18 FUNC_PARAM: FUNC_PARAM_FULFILL
   19           | FUNC_PARAM t_comma FUNC_PARAM_FULFILL

   20 FUNC_PARAM_FULFILL: t_id TYPE_AND_STRUCT
   21                   | t_id
   22                   | /* empty */

   23 FUNC_PARAM_SECOND: FUNC_PARAM_FULFILL_SECOND
   24                  | FUNC_PARAM_SECOND t_comma FUNC_PARAM_FULFILL_SECOND

   25 FUNC_PARAM_FULFILL_SECOND: t_id TYPE_AND_STRUCT
   26                          | TYPE_AND_STRUCT

   27 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE_FULFILL
   28                  | FUNC_RETURN_VALUE FUNC_RETURN_VALUE_FULFILL

   29 FUNC_RETURN_VALUE_FULFILL: TYPE_AND_STRUCT
   30                          | t_func t_open_paren TYPE_AND_STRUCT t_close_paren
   31                          | t_func t_open_paren t_close_paren

   32 TYPE_AND_STRUCT: t_vtype
   33                | t_id

   34 BODY: BODY_START BODY_END

   35 BODY_END: t_close_br

   36 BODY_START: t_open_br
   37           | BODY_START BODY_FILLING END_SYMBOLS
   38           | BODY_START END_SYMBOLS

   39 BODY_FILLING: VAR
   40             | FOR
   41             | SWITCH
   42             | GOTO
   43             | LABEL
   44             | IF
   45             | MULTI_AR
   46             | FUNC_CALL
   47             | SHORT_EXPR
   48             | ARRAY_BODY
   49             | RETURN
   50             | STRUCT
   51             | SLICE
   52             | DEFER
   53             | METHOD

   54 VAR: t_var t_id ASSIGNMENT EXPR
   55    | t_var t_id ASSIGNMENT EXPR t_vtype
   56    | t_var t_id ASSIGNMENT BOOLEAN
   57    | t_id SHORT_ASSIGN EXPR
   58    | t_id ASSIGNMENT EXPR
   59    | t_id SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   60    | t_var t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   61    | t_id SHORT_ASSIGN BOOLEAN
   62    | t_id MULTI_AR ASSIGNMENT EXPR
   63    | t_var t_id ASSIGNMENT MAKE
   64    | t_id SHORT_ASSIGN MAKE
   65    | t_id MULTI_AR ASSIGNMENT MAKE
   66    | t_id SHORT_ASSIGN SLICE
   67    | t_id ASSIGNMENT SLICE
   68    | t_var t_id ASSIGNMENT SLICE
   69    | t_var t_id MAPS
   70    | t_id SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   71    | t_var t_id t_id ASSIGNMENT t_id ST_EMBEDDED
   72    | t_var t_id ASSIGNMENT t_id ST_EMBEDDED
   73    | t_id SHORT_ASSIGN t_id ST_EMBEDDED
   74    | METHOD ASSIGNMENT VALUE
   75    | POINTER ASSIGNMENT EXPR
   76    | t_var t_id POINTER
   77    | t_var t_id POINTER ASSIGNMENT EXPR

   78 BOOLEAN: EXPR t_bool EXPR

   79 DEFER: t_defer FUNC_CALL

   80 ASSIGNMENT: t_vtype t_equality
   81           | t_equality
   82           | t_comma t_id ASSIGNMENT EXPR t_comma
   83           | t_comma t_id ASSIGNMENT BOOLEAN t_comma

   84 SHORT_ASSIGN: t_short_dec
   85             | t_comma t_id SHORT_ASSIGN EXPR t_comma
   86             | t_comma t_id SHORT_ASSIGN BOOLEAN t_comma

   87 FUNC_CALL: t_id PARAM

   88 PARAM: PARAM_START PARAM_END
   89      | t_open_paren t_close_paren

   90 PARAM_START: t_open_paren
   91            | PARAM_START PARAM_FULFILL

   92 PARAM_END: PARAM_END_FULFILL t_close_paren

   93 PARAM_END_FULFILL: EXPR
   94                  | t_enter

   95 PARAM_FULFILL: EXPR t_comma
   96              | t_enter

   97 SHIFT: SHIFT_AC t_shift_const SHIFT_AC

   98 SHIFT_AC: t_id
   99         | t_int_const

  100 METHOD: METHOD_FULFILL t_dot METHOD_FULFILL
  101       | METHOD t_dot METHOD_FULFILL

  102 METHOD_FULFILL: t_id
  103               | FUNC_CALL

  104 POINTER: t_pointer t_id
  105        | t_pointer t_vtype
  106        | t_ampersand t_id

  107 PARAM_IMPORT: t_string END_SYMBOLS
  108             | t_id t_string END_SYMBOLS
  109             | PARAM_IMPORT t_string END_SYMBOLS
  110             | PARAM_IMPORT t_id t_string END_SYMBOLS

  111 VALUE: t_int_const
  112      | t_float_const
  113      | t_id
  114      | t_string
  115      | t_rune
  116      | t_blank_identifier
  117      | FUNC_CALL
  118      | SHIFT
  119      | POINTER
  120      | METHOD

  121 GOTO: t_goto t_id

  122 LABEL: t_id t_colon

  123 SWITCH: t_switch INIT_STATE t_semicolon EXPR SWITCH_BODY
  124       | t_switch EXPR SWITCH_BODY
  125       | t_switch SWITCH_BODY

  126 SWITCH_BODY: SWITCH_BODY_START SWITCH_BODY_END
  127            | SWITCH_BODY_START_WITH_DEFAULT SWITCH_BODY_END

  128 SWITCH_BODY_START: t_open_br
  129                  | SWITCH_BODY_START END_SYMBOLS
  130                  | SWITCH_BODY_START CASE

  131 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START DEFAULT
  132                               | SWITCH_BODY_START_WITH_DEFAULT CASE

  133 CASE: t_case CASE_STATEMENT CASE_BODY

  134 DEFAULT: t_default CASE_BODY

  135 MULTIPLE_ARG: FIRST_PART SECOND_PART

  136 FIRST_PART: EXPR t_comma
  137           | FIRST_PART EXPR t_comma

  138 SECOND_PART: EXPR

  139 CASE_STATEMENT: MULTIPLE_ARG
  140               | EXPR

  141 CASE_BODY: t_colon
  142          | CASE_BODY LOOP_FILLING END_SYMBOLS

  143 SWITCH_BODY_END: t_close_br

  144 IF: IF_FIRST MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD
  145   | IF_FIRST MULTY_ELSEIF_SECOND
  146   | IF_FIRST MULTY_ELSE_THIRD
  147   | IF_FIRST

  148 IF_FIRST: t_if CONDITION BODY_FOR_LOOP
  149         | t_if INIT_STATE t_semicolon CONDITION BODY_FOR_LOOP

  150 BODY_FOR_LOOP: BODY_FOR_LOOP_START BODY_FOR_LOOP_END

  151 BODY_FOR_LOOP_START: t_open_br
  152                    | t_open_br END_SYMBOLS
  153                    | BODY_FOR_LOOP_START LOOP_FILLING END_SYMBOLS

  154 BODY_FOR_LOOP_END: t_close_br

  155 LOOP_FILLING: BODY_FILLING
  156             | t_break
  157             | t_continue

  158 MULTY_ELSEIF_SECOND: ELSEIF_SECOND
  159                    | MULTY_ELSEIF_SECOND ELSEIF_SECOND

  160 ELSEIF_SECOND: t_else t_if CONDITION BODY_FOR_LOOP

  161 MULTY_ELSE_THIRD: ELSE_THIRD
  162                 | MULTY_ELSE_THIRD ELSE_THIRD

  163 ELSE_THIRD: t_else BODY_FOR_LOOP

  164 RETURN: t_return EXPR
  165       | t_return EXPR MANY_RETURN_START MANY_RETURN_START_END

  166 MANY_RETURN_START: t_comma
  167                  | MANY_RETURN_START EXPR t_comma

  168 MANY_RETURN_START_END: EXPR

  169 EXPR: EXPR t_sign VALUE
  170     | EXPR_START EXPR EXPR_END
  171     | VALUE

  172 SHORT_EXPR: t_id t_short_expr t_id

  173 INIT_STATE: VAR
  174           | FUNC_CALL
  175           | /* empty */

  176 CONDITION: BOOLEAN
  177          | t_true
  178          | t_false
  179          | /* empty */

  180 POST_STATE: EXPR
  181           | t_id t_inc_const

  182 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY_FOR_LOOP
  183    | t_for CONDITION BODY_FOR_LOOP

  184 EXPR_START: t_open_paren

  185 EXPR_END: t_close_paren

  186 ARRAY_BODY: t_var t_id MULTI_AR t_vtype
  187           | t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  188           | t_var t_id MULTI_AR t_vtype ASSIGNMENT MAKE

  189 ARRAY_INDEX: t_open_sq t_int_const t_close_sq
  190            | t_open_sq t_id t_close_sq
  191            | t_open_sq t_string t_close_sq
  192            | t_open_sq t_close_sq

  193 MULTI_AR: ARRAY_INDEX
  194         | ARRAY_INDEX MULTI_AR

  195 PLENTY: PLENTY_OLD
  196       | PLENTY_OLD t_comma PLENTY

  197 PLENTY_OLD: t_open_br ENUM t_close_br
  198           | t_open_br t_close_br
  199           | t_open_br PLENTY t_close_br

  200 ENUM: VALUE
  201     | ENUM t_comma VALUE

  202 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  203     | t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

  204 SLICE: t_id t_open_sq VALUE t_colon VALUE t_close_sq
  205      | t_id t_open_sq t_colon VALUE t_close_sq
  206      | t_id t_open_sq VALUE t_colon t_close_sq

  207 MAPS: t_map t_open_sq t_vtype t_close_sq t_vtype

  208 STRUCT: STRUCT_START STRUCT_BODY END_SYMBOLS STRUCT_END

  209 STRUCT_START: t_type t_id t_struct_const
  210             | t_type t_id t_struct_const t_enter

  211 STRUCT_BODY: t_open_br
  212            | STRUCT_BODY END_SYMBOLS t_id t_vtype
  213            | STRUCT_BODY END_SYMBOLS t_id t_id
  214            | STRUCT_BODY END_SYMBOLS t_id

  215 STRUCT_END: t_close_br

  216 STRUCT_ENUM: t_id t_colon VALUE
  217            | STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon VALUE
  218            | t_id t_colon t_id STRUCT_FIELD
  219            | STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon t_id STRUCT_FIELD

  220 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_close_br
  221             | t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS
  222             | PLENTY_OLD

  223 ST_EMBEDDED: STRUCT_FIELD
  224            | STRUCT_FIELD t_comma ST_EMBEDDED

  225 END_SYMBOLS: t_semicolon
  226            | t_enter
  227            | t_eof

  228 INTERFACE: t_type t_id t_interface INT_BODY END_SYMBOLS INT_END

  229 INT_BODY: t_open_br END_SYMBOLS t_id t_open_paren t_close_paren

  230 INT_END: t_close_br


Terminals, with rules where they appear

$end (0) 0
'*' (42)
'+' (43)
'-' (45)
'/' (47)
error (256)
t_vtype (258) 32 55 59 60 80 105 186 187 188 202 203 207 212
t_constant (259)
t_case (260) 133
t_func (261) 14 30 31
t_import (262) 10 11 12 13
t_chan (263)
t_defer (264) 79
t_go (265)
t_interface (266) 228
t_default (267) 134
t_var (268) 54 55 56 60 63 68 69 71 72 76 77 186 187 188
t_range (269)
t_map (270) 207
t_package (271) 9
t_if (272) 148 149 160
t_select (273)
t_switch (274) 123 124 125
t_fallthrough (275)
t_else (276) 160 163
t_type (277) 209 210 228
t_for (278) 182 183
t_goto (279) 121
t_continue (280) 157
t_break (281) 156
t_return (282) 164 165
t_struct_const (283) 209 210
t_or_const (284)
t_and_const (285)
t_param_const (286)
t_eq_const (287)
t_rel_const (288)
t_shift_const (289) 97
t_inc_const (290) 181
t_point_const (291)
t_punc (292)
t_int_const (293) 99 111 189 203
t_float_const (294) 112
t_char_const (295)
t_id (296) 9 13 14 20 21 25 33 54 55 56 57 58 59 60 61 62 63 64 65
    66 67 68 69 70 71 72 73 76 77 82 83 85 86 87 98 102 104 106 108
    110 113 121 122 172 181 186 187 188 190 204 205 206 209 210 212
    213 214 216 217 218 219 228 229
t_string (297) 10 13 107 108 109 110 114 191
t_short_dec (298) 84
t_open_br (299) 36 128 151 152 197 198 199 211 220 221 229
t_close_br (300) 35 143 154 197 198 199 215 220 221 230
t_sign (301) 169
t_comma (302) 19 24 82 83 85 86 95 136 137 166 167 196 201 202 203
    217 219 221 224
t_equality (303) 80 81
t_open_paren (304) 11 12 14 17 30 31 70 89 90 184 202 203 229
t_close_paren (305) 11 12 14 17 30 31 70 89 92 185 202 229
t_open_sq (306) 189 190 191 192 204 205 206 207
t_close_sq (307) 189 190 191 192 204 205 206 207
t_bool (308) 78
t_rune (309) 115
t_semicolon (310) 123 149 182 225
t_blank_identifier (311) 116
t_dot (312) 100 101
t_colon (313) 122 141 204 205 206 216 217 218 219
t_true (314) 177
t_false (315) 178
t_short_expr (316) 172
t_make (317) 70 202 203
t_enter (318) 12 94 96 210 226
t_eof (319) 227
t_pointer (320) 104 105
t_ampersand (321) 106
t_path_pack (322)


Nonterminals, with rules where they appear

$accept (72)
    on left: 0
START (73)
    on left: 1 2 3, on right: 0 1 3
GLOBAL (74)
    on left: 4 5 6 7 8, on right: 1 2
PACKAGE (75)
    on left: 9, on right: 4
IMPORT (76)
    on left: 10 11 12 13, on right: 5
FUNC (77)
    on left: 14, on right: 6
FUNC_SECOND_PART (78)
    on left: 15 16 17, on right: 14
FUNC_PARAM (79)
    on left: 18 19, on right: 14 19
FUNC_PARAM_FULFILL (80)
    on left: 20 21 22, on right: 18 19
FUNC_PARAM_SECOND (81)
    on left: 23 24, on right: 17 24
FUNC_PARAM_FULFILL_SECOND (82)
    on left: 25 26, on right: 23 24
FUNC_RETURN_VALUE (83)
    on left: 27 28, on right: 16 28
FUNC_RETURN_VALUE_FULFILL (84)
    on left: 29 30 31, on right: 27 28
TYPE_AND_STRUCT (85)
    on left: 32 33, on right: 20 25 26 29 30
BODY (86)
    on left: 34, on right: 15 16 17
BODY_END (87)
    on left: 35, on right: 34
BODY_START (88)
    on left: 36 37 38, on right: 34 37 38
BODY_FILLING (89)
    on left: 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53, on right:
    37 155
VAR (90)
    on left: 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71
    72 73 74 75 76 77, on right: 39 173
BOOLEAN (91)
    on left: 78, on right: 56 61 83 86 176
DEFER (92)
    on left: 79, on right: 52
ASSIGNMENT (93)
    on left: 80 81 82 83, on right: 54 55 56 58 60 62 63 65 67 68 71
    72 74 75 77 82 83 187 188
SHORT_ASSIGN (94)
    on left: 84 85 86, on right: 57 59 61 64 66 70 73 85 86
FUNC_CALL (95)
    on left: 87, on right: 46 79 103 117 174
PARAM (96)
    on left: 88 89, on right: 87
PARAM_START (97)
    on left: 90 91, on right: 88 91
PARAM_END (98)
    on left: 92, on right: 88
PARAM_END_FULFILL (99)
    on left: 93 94, on right: 92
PARAM_FULFILL (100)
    on left: 95 96, on right: 91
SHIFT (101)
    on left: 97, on right: 118
SHIFT_AC (102)
    on left: 98 99, on right: 97
METHOD (103)
    on left: 100 101, on right: 53 74 101 120
METHOD_FULFILL (104)
    on left: 102 103, on right: 100 101
POINTER (105)
    on left: 104 105 106, on right: 75 76 77 119
PARAM_IMPORT (106)
    on left: 107 108 109 110, on right: 11 12 109 110
VALUE (107)
    on left: 111 112 113 114 115 116 117 118 119 120, on right: 74
    169 171 200 201 202 203 204 205 206 216 217
GOTO (108)
    on left: 121, on right: 42
LABEL (109)
    on left: 122, on right: 43
SWITCH (110)
    on left: 123 124 125, on right: 41
SWITCH_BODY (111)
    on left: 126 127, on right: 123 124 125
SWITCH_BODY_START (112)
    on left: 128 129 130, on right: 126 129 130 131
SWITCH_BODY_START_WITH_DEFAULT (113)
    on left: 131 132, on right: 127 132
CASE (114)
    on left: 133, on right: 130 132
DEFAULT (115)
    on left: 134, on right: 131
MULTIPLE_ARG (116)
    on left: 135, on right: 139
FIRST_PART (117)
    on left: 136 137, on right: 135 137
SECOND_PART (118)
    on left: 138, on right: 135
CASE_STATEMENT (119)
    on left: 139 140, on right: 133
CASE_BODY (120)
    on left: 141 142, on right: 133 134 142
SWITCH_BODY_END (121)
    on left: 143, on right: 126 127
IF (122)
    on left: 144 145 146 147, on right: 44
IF_FIRST (123)
    on left: 148 149, on right: 144 145 146 147
BODY_FOR_LOOP (124)
    on left: 150, on right: 148 149 160 163 182 183
BODY_FOR_LOOP_START (125)
    on left: 151 152 153, on right: 150 153
BODY_FOR_LOOP_END (126)
    on left: 154, on right: 150
LOOP_FILLING (127)
    on left: 155 156 157, on right: 142 153
MULTY_ELSEIF_SECOND (128)
    on left: 158 159, on right: 144 145 159
ELSEIF_SECOND (129)
    on left: 160, on right: 158 159
MULTY_ELSE_THIRD (130)
    on left: 161 162, on right: 144 146 162
ELSE_THIRD (131)
    on left: 163, on right: 161 162
RETURN (132)
    on left: 164 165, on right: 49
MANY_RETURN_START (133)
    on left: 166 167, on right: 165 167
MANY_RETURN_START_END (134)
    on left: 168, on right: 165
EXPR (135)
    on left: 169 170 171, on right: 54 55 57 58 62 75 77 78 82 85 93
    95 123 124 136 137 138 140 164 165 167 168 169 170 180
SHORT_EXPR (136)
    on left: 172, on right: 47
INIT_STATE (137)
    on left: 173 174 175, on right: 123 149 182
CONDITION (138)
    on left: 176 177 178 179, on right: 148 149 160 182 183
POST_STATE (139)
    on left: 180 181, on right: 182
FOR (140)
    on left: 182 183, on right: 40
EXPR_START (141)
    on left: 184, on right: 170
EXPR_END (142)
    on left: 185, on right: 170
ARRAY_BODY (143)
    on left: 186 187 188, on right: 48
ARRAY_INDEX (144)
    on left: 189 190 191 192, on right: 193 194
MULTI_AR (145)
    on left: 193 194, on right: 45 59 60 62 65 186 187 188 194 202
    203
PLENTY (146)
    on left: 195 196, on right: 59 60 187 196 199
PLENTY_OLD (147)
    on left: 197 198 199, on right: 195 196 222
ENUM (148)
    on left: 200 201, on right: 197 201
MAKE (149)
    on left: 202 203, on right: 63 64 65 188
SLICE (150)
    on left: 204 205 206, on right: 51 66 67 68
MAPS (151)
    on left: 207, on right: 69 70
STRUCT (152)
    on left: 208, on right: 7 50
STRUCT_START (153)
    on left: 209 210, on right: 208
STRUCT_BODY (154)
    on left: 211 212 213 214, on right: 208 212 213 214
STRUCT_END (155)
    on left: 215, on right: 208
STRUCT_ENUM (156)
    on left: 216 217 218 219, on right: 217 219 220 221
STRUCT_FIELD (157)
    on left: 220 221 222, on right: 218 219 223 224
ST_EMBEDDED (158)
    on left: 223 224, on right: 71 72 73 224
END_SYMBOLS (159)
    on left: 225 226 227, on right: 1 2 3 37 38 107 108 109 110 129
    142 152 153 208 212 213 214 217 219 220 221 228 229
INTERFACE (160)
    on left: 228, on right: 8
INT_BODY (161)
    on left: 229, on right: 228
INT_END (162)
    on left: 230, on right: 228


State 0

    0 $accept: . START $end

    t_func     shift, and go to state 1
    t_import   shift, and go to state 2
    t_package  shift, and go to state 3
    t_type     shift, and go to state 4

    START         go to state 5
    GLOBAL        go to state 6
    PACKAGE       go to state 7
    IMPORT        go to state 8
    FUNC          go to state 9
    STRUCT        go to state 10
    STRUCT_START  go to state 11
    INTERFACE     go to state 12


State 1

   14 FUNC: t_func . t_id t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART

    t_id  shift, and go to state 13


State 2

   10 IMPORT: t_import . t_string
   11       | t_import . t_open_paren PARAM_IMPORT t_close_paren
   12       | t_import . t_open_paren t_enter PARAM_IMPORT t_close_paren
   13       | t_import . t_id t_string

    t_id          shift, and go to state 14
    t_string      shift, and go to state 15
    t_open_paren  shift, and go to state 16


State 3

    9 PACKAGE: t_package . t_id

    t_id  shift, and go to state 17


State 4

  209 STRUCT_START: t_type . t_id t_struct_const
  210             | t_type . t_id t_struct_const t_enter
  228 INTERFACE: t_type . t_id t_interface INT_BODY END_SYMBOLS INT_END

    t_id  shift, and go to state 18


State 5

    0 $accept: START . $end
    1 START: START . GLOBAL END_SYMBOLS
    3      | START . END_SYMBOLS

    $end         shift, and go to state 19
    t_func       shift, and go to state 1
    t_import     shift, and go to state 2
    t_package    shift, and go to state 3
    t_type       shift, and go to state 4
    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    GLOBAL        go to state 23
    PACKAGE       go to state 7
    IMPORT        go to state 8
    FUNC          go to state 9
    STRUCT        go to state 10
    STRUCT_START  go to state 11
    END_SYMBOLS   go to state 24
    INTERFACE     go to state 12


State 6

    2 START: GLOBAL . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 25


State 7

    4 GLOBAL: PACKAGE .

    $default  reduce using rule 4 (GLOBAL)


State 8

    5 GLOBAL: IMPORT .

    $default  reduce using rule 5 (GLOBAL)


State 9

    6 GLOBAL: FUNC .

    $default  reduce using rule 6 (GLOBAL)


State 10

    7 GLOBAL: STRUCT .

    $default  reduce using rule 7 (GLOBAL)


State 11

  208 STRUCT: STRUCT_START . STRUCT_BODY END_SYMBOLS STRUCT_END

    t_open_br  shift, and go to state 26

    STRUCT_BODY  go to state 27


State 12

    8 GLOBAL: INTERFACE .

    $default  reduce using rule 8 (GLOBAL)


State 13

   14 FUNC: t_func t_id . t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART

    t_open_paren  shift, and go to state 28


State 14

   13 IMPORT: t_import t_id . t_string

    t_string  shift, and go to state 29


State 15

   10 IMPORT: t_import t_string .

    $default  reduce using rule 10 (IMPORT)


State 16

   11 IMPORT: t_import t_open_paren . PARAM_IMPORT t_close_paren
   12       | t_import t_open_paren . t_enter PARAM_IMPORT t_close_paren

    t_id      shift, and go to state 30
    t_string  shift, and go to state 31
    t_enter   shift, and go to state 32

    PARAM_IMPORT  go to state 33


State 17

    9 PACKAGE: t_package t_id .

    $default  reduce using rule 9 (PACKAGE)


State 18

  209 STRUCT_START: t_type t_id . t_struct_const
  210             | t_type t_id . t_struct_const t_enter
  228 INTERFACE: t_type t_id . t_interface INT_BODY END_SYMBOLS INT_END

    t_interface     shift, and go to state 34
    t_struct_const  shift, and go to state 35


State 19

    0 $accept: START $end .

    $default  accept


State 20

  225 END_SYMBOLS: t_semicolon .

    $default  reduce using rule 225 (END_SYMBOLS)


State 21

  226 END_SYMBOLS: t_enter .

    $default  reduce using rule 226 (END_SYMBOLS)


State 22

  227 END_SYMBOLS: t_eof .

    $default  reduce using rule 227 (END_SYMBOLS)


State 23

    1 START: START GLOBAL . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 36


State 24

    3 START: START END_SYMBOLS .

    $default  reduce using rule 3 (START)


State 25

    2 START: GLOBAL END_SYMBOLS .

    $default  reduce using rule 2 (START)


State 26

  211 STRUCT_BODY: t_open_br .

    $default  reduce using rule 211 (STRUCT_BODY)


State 27

  208 STRUCT: STRUCT_START STRUCT_BODY . END_SYMBOLS STRUCT_END
  212 STRUCT_BODY: STRUCT_BODY . END_SYMBOLS t_id t_vtype
  213            | STRUCT_BODY . END_SYMBOLS t_id t_id
  214            | STRUCT_BODY . END_SYMBOLS t_id

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 37


State 28

   14 FUNC: t_func t_id t_open_paren . FUNC_PARAM t_close_paren FUNC_SECOND_PART

    t_id  shift, and go to state 38

    $default  reduce using rule 22 (FUNC_PARAM_FULFILL)

    FUNC_PARAM          go to state 39
    FUNC_PARAM_FULFILL  go to state 40


State 29

   13 IMPORT: t_import t_id t_string .

    $default  reduce using rule 13 (IMPORT)


State 30

  108 PARAM_IMPORT: t_id . t_string END_SYMBOLS

    t_string  shift, and go to state 41


State 31

  107 PARAM_IMPORT: t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 42


State 32

   12 IMPORT: t_import t_open_paren t_enter . PARAM_IMPORT t_close_paren

    t_id      shift, and go to state 30
    t_string  shift, and go to state 31

    PARAM_IMPORT  go to state 43


State 33

   11 IMPORT: t_import t_open_paren PARAM_IMPORT . t_close_paren
  109 PARAM_IMPORT: PARAM_IMPORT . t_string END_SYMBOLS
  110             | PARAM_IMPORT . t_id t_string END_SYMBOLS

    t_id           shift, and go to state 44
    t_string       shift, and go to state 45
    t_close_paren  shift, and go to state 46


State 34

  228 INTERFACE: t_type t_id t_interface . INT_BODY END_SYMBOLS INT_END

    t_open_br  shift, and go to state 47

    INT_BODY  go to state 48


State 35

  209 STRUCT_START: t_type t_id t_struct_const .
  210             | t_type t_id t_struct_const . t_enter

    t_enter  shift, and go to state 49

    $default  reduce using rule 209 (STRUCT_START)


State 36

    1 START: START GLOBAL END_SYMBOLS .

    $default  reduce using rule 1 (START)


State 37

  208 STRUCT: STRUCT_START STRUCT_BODY END_SYMBOLS . STRUCT_END
  212 STRUCT_BODY: STRUCT_BODY END_SYMBOLS . t_id t_vtype
  213            | STRUCT_BODY END_SYMBOLS . t_id t_id
  214            | STRUCT_BODY END_SYMBOLS . t_id

    t_id        shift, and go to state 50
    t_close_br  shift, and go to state 51

    STRUCT_END  go to state 52


State 38

   20 FUNC_PARAM_FULFILL: t_id . TYPE_AND_STRUCT
   21                   | t_id .

    t_vtype  shift, and go to state 53
    t_id     shift, and go to state 54

    $default  reduce using rule 21 (FUNC_PARAM_FULFILL)

    TYPE_AND_STRUCT  go to state 55


State 39

   14 FUNC: t_func t_id t_open_paren FUNC_PARAM . t_close_paren FUNC_SECOND_PART
   19 FUNC_PARAM: FUNC_PARAM . t_comma FUNC_PARAM_FULFILL

    t_comma        shift, and go to state 56
    t_close_paren  shift, and go to state 57


State 40

   18 FUNC_PARAM: FUNC_PARAM_FULFILL .

    $default  reduce using rule 18 (FUNC_PARAM)


State 41

  108 PARAM_IMPORT: t_id t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 58


State 42

  107 PARAM_IMPORT: t_string END_SYMBOLS .

    $default  reduce using rule 107 (PARAM_IMPORT)


State 43

   12 IMPORT: t_import t_open_paren t_enter PARAM_IMPORT . t_close_paren
  109 PARAM_IMPORT: PARAM_IMPORT . t_string END_SYMBOLS
  110             | PARAM_IMPORT . t_id t_string END_SYMBOLS

    t_id           shift, and go to state 44
    t_string       shift, and go to state 45
    t_close_paren  shift, and go to state 59


State 44

  110 PARAM_IMPORT: PARAM_IMPORT t_id . t_string END_SYMBOLS

    t_string  shift, and go to state 60


State 45

  109 PARAM_IMPORT: PARAM_IMPORT t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 61


State 46

   11 IMPORT: t_import t_open_paren PARAM_IMPORT t_close_paren .

    $default  reduce using rule 11 (IMPORT)


State 47

  229 INT_BODY: t_open_br . END_SYMBOLS t_id t_open_paren t_close_paren

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 62


State 48

  228 INTERFACE: t_type t_id t_interface INT_BODY . END_SYMBOLS INT_END

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 63


State 49

  210 STRUCT_START: t_type t_id t_struct_const t_enter .

    $default  reduce using rule 210 (STRUCT_START)


State 50

  212 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id . t_vtype
  213            | STRUCT_BODY END_SYMBOLS t_id . t_id
  214            | STRUCT_BODY END_SYMBOLS t_id .

    t_vtype  shift, and go to state 64
    t_id     shift, and go to state 65

    $default  reduce using rule 214 (STRUCT_BODY)


State 51

  215 STRUCT_END: t_close_br .

    $default  reduce using rule 215 (STRUCT_END)


State 52

  208 STRUCT: STRUCT_START STRUCT_BODY END_SYMBOLS STRUCT_END .

    $default  reduce using rule 208 (STRUCT)


State 53

   32 TYPE_AND_STRUCT: t_vtype .

    $default  reduce using rule 32 (TYPE_AND_STRUCT)


State 54

   33 TYPE_AND_STRUCT: t_id .

    $default  reduce using rule 33 (TYPE_AND_STRUCT)


State 55

   20 FUNC_PARAM_FULFILL: t_id TYPE_AND_STRUCT .

    $default  reduce using rule 20 (FUNC_PARAM_FULFILL)


State 56

   19 FUNC_PARAM: FUNC_PARAM t_comma . FUNC_PARAM_FULFILL

    t_id  shift, and go to state 38

    $default  reduce using rule 22 (FUNC_PARAM_FULFILL)

    FUNC_PARAM_FULFILL  go to state 66


State 57

   14 FUNC: t_func t_id t_open_paren FUNC_PARAM t_close_paren . FUNC_SECOND_PART

    t_vtype       shift, and go to state 53
    t_func        shift, and go to state 67
    t_id          shift, and go to state 54
    t_open_br     shift, and go to state 68
    t_open_paren  shift, and go to state 69

    FUNC_SECOND_PART           go to state 70
    FUNC_RETURN_VALUE          go to state 71
    FUNC_RETURN_VALUE_FULFILL  go to state 72
    TYPE_AND_STRUCT            go to state 73
    BODY                       go to state 74
    BODY_START                 go to state 75


State 58

  108 PARAM_IMPORT: t_id t_string END_SYMBOLS .

    $default  reduce using rule 108 (PARAM_IMPORT)


State 59

   12 IMPORT: t_import t_open_paren t_enter PARAM_IMPORT t_close_paren .

    $default  reduce using rule 12 (IMPORT)


State 60

  110 PARAM_IMPORT: PARAM_IMPORT t_id t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 76


State 61

  109 PARAM_IMPORT: PARAM_IMPORT t_string END_SYMBOLS .

    $default  reduce using rule 109 (PARAM_IMPORT)


State 62

  229 INT_BODY: t_open_br END_SYMBOLS . t_id t_open_paren t_close_paren

    t_id  shift, and go to state 77


State 63

  228 INTERFACE: t_type t_id t_interface INT_BODY END_SYMBOLS . INT_END

    t_close_br  shift, and go to state 78

    INT_END  go to state 79


State 64

  212 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id t_vtype .

    $default  reduce using rule 212 (STRUCT_BODY)


State 65

  213 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id t_id .

    $default  reduce using rule 213 (STRUCT_BODY)


State 66

   19 FUNC_PARAM: FUNC_PARAM t_comma FUNC_PARAM_FULFILL .

    $default  reduce using rule 19 (FUNC_PARAM)


State 67

   30 FUNC_RETURN_VALUE_FULFILL: t_func . t_open_paren TYPE_AND_STRUCT t_close_paren
   31                          | t_func . t_open_paren t_close_paren

    t_open_paren  shift, and go to state 80


State 68

   36 BODY_START: t_open_br .

    $default  reduce using rule 36 (BODY_START)


State 69

   17 FUNC_SECOND_PART: t_open_paren . FUNC_PARAM_SECOND t_close_paren BODY

    t_vtype  shift, and go to state 53
    t_id     shift, and go to state 81

    FUNC_PARAM_SECOND          go to state 82
    FUNC_PARAM_FULFILL_SECOND  go to state 83
    TYPE_AND_STRUCT            go to state 84


State 70

   14 FUNC: t_func t_id t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART .

    $default  reduce using rule 14 (FUNC)


State 71

   16 FUNC_SECOND_PART: FUNC_RETURN_VALUE . BODY
   28 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE . FUNC_RETURN_VALUE_FULFILL

    t_vtype    shift, and go to state 53
    t_func     shift, and go to state 67
    t_id       shift, and go to state 54
    t_open_br  shift, and go to state 68

    FUNC_RETURN_VALUE_FULFILL  go to state 85
    TYPE_AND_STRUCT            go to state 73
    BODY                       go to state 86
    BODY_START                 go to state 75


State 72

   27 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE_FULFILL .

    $default  reduce using rule 27 (FUNC_RETURN_VALUE)


State 73

   29 FUNC_RETURN_VALUE_FULFILL: TYPE_AND_STRUCT .

    $default  reduce using rule 29 (FUNC_RETURN_VALUE_FULFILL)


State 74

   15 FUNC_SECOND_PART: BODY .

    $default  reduce using rule 15 (FUNC_SECOND_PART)


State 75

   34 BODY: BODY_START . BODY_END
   37 BODY_START: BODY_START . BODY_FILLING END_SYMBOLS
   38           | BODY_START . END_SYMBOLS

    t_defer      shift, and go to state 87
    t_var        shift, and go to state 88
    t_if         shift, and go to state 89
    t_switch     shift, and go to state 90
    t_type       shift, and go to state 91
    t_for        shift, and go to state 92
    t_goto       shift, and go to state 93
    t_return     shift, and go to state 94
    t_id         shift, and go to state 95
    t_close_br   shift, and go to state 96
    t_open_sq    shift, and go to state 97
    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22
    t_pointer    shift, and go to state 98
    t_ampersand  shift, and go to state 99

    BODY_END        go to state 100
    BODY_FILLING    go to state 101
    VAR             go to state 102
    DEFER           go to state 103
    FUNC_CALL       go to state 104
    METHOD          go to state 105
    METHOD_FULFILL  go to state 106
    POINTER         go to state 107
    GOTO            go to state 108
    LABEL           go to state 109
    SWITCH          go to state 110
    IF              go to state 111
    IF_FIRST        go to state 112
    RETURN          go to state 113
    SHORT_EXPR      go to state 114
    FOR             go to state 115
    ARRAY_BODY      go to state 116
    ARRAY_INDEX     go to state 117
    MULTI_AR        go to state 118
    SLICE           go to state 119
    STRUCT          go to state 120
    STRUCT_START    go to state 11
    END_SYMBOLS     go to state 121


State 76

  110 PARAM_IMPORT: PARAM_IMPORT t_id t_string END_SYMBOLS .

    $default  reduce using rule 110 (PARAM_IMPORT)


State 77

  229 INT_BODY: t_open_br END_SYMBOLS t_id . t_open_paren t_close_paren

    t_open_paren  shift, and go to state 122


State 78

  230 INT_END: t_close_br .

    $default  reduce using rule 230 (INT_END)


State 79

  228 INTERFACE: t_type t_id t_interface INT_BODY END_SYMBOLS INT_END .

    $default  reduce using rule 228 (INTERFACE)


State 80

   30 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren . TYPE_AND_STRUCT t_close_paren
   31                          | t_func t_open_paren . t_close_paren

    t_vtype        shift, and go to state 53
    t_id           shift, and go to state 54
    t_close_paren  shift, and go to state 123

    TYPE_AND_STRUCT  go to state 124


State 81

   25 FUNC_PARAM_FULFILL_SECOND: t_id . TYPE_AND_STRUCT
   33 TYPE_AND_STRUCT: t_id .

    t_vtype  shift, and go to state 53
    t_id     shift, and go to state 54

    $default  reduce using rule 33 (TYPE_AND_STRUCT)

    TYPE_AND_STRUCT  go to state 125


State 82

   17 FUNC_SECOND_PART: t_open_paren FUNC_PARAM_SECOND . t_close_paren BODY
   24 FUNC_PARAM_SECOND: FUNC_PARAM_SECOND . t_comma FUNC_PARAM_FULFILL_SECOND

    t_comma        shift, and go to state 126
    t_close_paren  shift, and go to state 127


State 83

   23 FUNC_PARAM_SECOND: FUNC_PARAM_FULFILL_SECOND .

    $default  reduce using rule 23 (FUNC_PARAM_SECOND)


State 84

   26 FUNC_PARAM_FULFILL_SECOND: TYPE_AND_STRUCT .

    $default  reduce using rule 26 (FUNC_PARAM_FULFILL_SECOND)


State 85

   28 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE FUNC_RETURN_VALUE_FULFILL .

    $default  reduce using rule 28 (FUNC_RETURN_VALUE)


State 86

   16 FUNC_SECOND_PART: FUNC_RETURN_VALUE BODY .

    $default  reduce using rule 16 (FUNC_SECOND_PART)


State 87

   79 DEFER: t_defer . FUNC_CALL

    t_id  shift, and go to state 128

    FUNC_CALL  go to state 129


State 88

   54 VAR: t_var . t_id ASSIGNMENT EXPR
   55    | t_var . t_id ASSIGNMENT EXPR t_vtype
   56    | t_var . t_id ASSIGNMENT BOOLEAN
   60    | t_var . t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   63    | t_var . t_id ASSIGNMENT MAKE
   68    | t_var . t_id ASSIGNMENT SLICE
   69    | t_var . t_id MAPS
   71    | t_var . t_id t_id ASSIGNMENT t_id ST_EMBEDDED
   72    | t_var . t_id ASSIGNMENT t_id ST_EMBEDDED
   76    | t_var . t_id POINTER
   77    | t_var . t_id POINTER ASSIGNMENT EXPR
  186 ARRAY_BODY: t_var . t_id MULTI_AR t_vtype
  187           | t_var . t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  188           | t_var . t_id MULTI_AR t_vtype ASSIGNMENT MAKE

    t_id  shift, and go to state 130


State 89

  148 IF_FIRST: t_if . CONDITION BODY_FOR_LOOP
  149         | t_if . INIT_STATE t_semicolon CONDITION BODY_FOR_LOOP

    t_var               shift, and go to state 131
    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 134
    t_string            shift, and go to state 135
    t_open_paren        shift, and go to state 136
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_true              shift, and go to state 139
    t_false             shift, and go to state 140
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    t_open_br  reduce using rule 179 (CONDITION)
    $default   reduce using rule 175 (INIT_STATE)

    VAR             go to state 141
    BOOLEAN         go to state 142
    FUNC_CALL       go to state 143
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 146
    METHOD_FULFILL  go to state 106
    POINTER         go to state 147
    VALUE           go to state 148
    EXPR            go to state 149
    INIT_STATE      go to state 150
    CONDITION       go to state 151
    EXPR_START      go to state 152


State 90

  123 SWITCH: t_switch . INIT_STATE t_semicolon EXPR SWITCH_BODY
  124       | t_switch . EXPR SWITCH_BODY
  125       | t_switch . SWITCH_BODY

    t_var               shift, and go to state 131
    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 134
    t_string            shift, and go to state 135
    t_open_br           shift, and go to state 153
    t_open_paren        shift, and go to state 136
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    $default  reduce using rule 175 (INIT_STATE)

    VAR                             go to state 141
    FUNC_CALL                       go to state 143
    SHIFT                           go to state 144
    SHIFT_AC                        go to state 145
    METHOD                          go to state 146
    METHOD_FULFILL                  go to state 106
    POINTER                         go to state 147
    VALUE                           go to state 148
    SWITCH_BODY                     go to state 154
    SWITCH_BODY_START               go to state 155
    SWITCH_BODY_START_WITH_DEFAULT  go to state 156
    EXPR                            go to state 157
    INIT_STATE                      go to state 158
    EXPR_START                      go to state 152


State 91

  209 STRUCT_START: t_type . t_id t_struct_const
  210             | t_type . t_id t_struct_const t_enter

    t_id  shift, and go to state 159


State 92

  182 FOR: t_for . INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY_FOR_LOOP
  183    | t_for . CONDITION BODY_FOR_LOOP

    t_var               shift, and go to state 131
    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 134
    t_string            shift, and go to state 135
    t_open_paren        shift, and go to state 136
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_true              shift, and go to state 139
    t_false             shift, and go to state 140
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    t_open_br  reduce using rule 179 (CONDITION)
    $default   reduce using rule 175 (INIT_STATE)

    VAR             go to state 141
    BOOLEAN         go to state 142
    FUNC_CALL       go to state 143
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 146
    METHOD_FULFILL  go to state 106
    POINTER         go to state 147
    VALUE           go to state 148
    EXPR            go to state 149
    INIT_STATE      go to state 160
    CONDITION       go to state 161
    EXPR_START      go to state 152


State 93

  121 GOTO: t_goto . t_id

    t_id  shift, and go to state 162


State 94

  164 RETURN: t_return . EXPR
  165       | t_return . EXPR MANY_RETURN_START MANY_RETURN_START_END

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 163
    t_string            shift, and go to state 135
    t_open_paren        shift, and go to state 136
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 148
    EXPR            go to state 167
    EXPR_START      go to state 152


State 95

   57 VAR: t_id . SHORT_ASSIGN EXPR
   58    | t_id . ASSIGNMENT EXPR
   59    | t_id . SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   61    | t_id . SHORT_ASSIGN BOOLEAN
   62    | t_id . MULTI_AR ASSIGNMENT EXPR
   64    | t_id . SHORT_ASSIGN MAKE
   65    | t_id . MULTI_AR ASSIGNMENT MAKE
   66    | t_id . SHORT_ASSIGN SLICE
   67    | t_id . ASSIGNMENT SLICE
   70    | t_id . SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   73    | t_id . SHORT_ASSIGN t_id ST_EMBEDDED
   87 FUNC_CALL: t_id . PARAM
  102 METHOD_FULFILL: t_id .
  122 LABEL: t_id . t_colon
  172 SHORT_EXPR: t_id . t_short_expr t_id
  204 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  205      | t_id . t_open_sq t_colon VALUE t_close_sq
  206      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_vtype       shift, and go to state 168
    t_short_dec   shift, and go to state 169
    t_comma       shift, and go to state 170
    t_equality    shift, and go to state 171
    t_open_paren  shift, and go to state 172
    t_open_sq     shift, and go to state 173
    t_colon       shift, and go to state 174
    t_short_expr  shift, and go to state 175

    $default  reduce using rule 102 (METHOD_FULFILL)

    ASSIGNMENT    go to state 176
    SHORT_ASSIGN  go to state 177
    PARAM         go to state 178
    PARAM_START   go to state 179
    ARRAY_INDEX   go to state 117
    MULTI_AR      go to state 180


State 96

   35 BODY_END: t_close_br .

    $default  reduce using rule 35 (BODY_END)


State 97

  189 ARRAY_INDEX: t_open_sq . t_int_const t_close_sq
  190            | t_open_sq . t_id t_close_sq
  191            | t_open_sq . t_string t_close_sq
  192            | t_open_sq . t_close_sq

    t_int_const  shift, and go to state 181
    t_id         shift, and go to state 182
    t_string     shift, and go to state 183
    t_close_sq   shift, and go to state 184


State 98

  104 POINTER: t_pointer . t_id
  105        | t_pointer . t_vtype

    t_vtype  shift, and go to state 185
    t_id     shift, and go to state 186


State 99

  106 POINTER: t_ampersand . t_id

    t_id  shift, and go to state 187


State 100

   34 BODY: BODY_START BODY_END .

    $default  reduce using rule 34 (BODY)


State 101

   37 BODY_START: BODY_START BODY_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 188


State 102

   39 BODY_FILLING: VAR .

    $default  reduce using rule 39 (BODY_FILLING)


State 103

   52 BODY_FILLING: DEFER .

    $default  reduce using rule 52 (BODY_FILLING)


State 104

   46 BODY_FILLING: FUNC_CALL .
  103 METHOD_FULFILL: FUNC_CALL .

    t_dot     reduce using rule 103 (METHOD_FULFILL)
    $default  reduce using rule 46 (BODY_FILLING)


State 105

   53 BODY_FILLING: METHOD .
   74 VAR: METHOD . ASSIGNMENT VALUE
  101 METHOD: METHOD . t_dot METHOD_FULFILL

    t_vtype     shift, and go to state 168
    t_comma     shift, and go to state 189
    t_equality  shift, and go to state 171
    t_dot       shift, and go to state 190

    $default  reduce using rule 53 (BODY_FILLING)

    ASSIGNMENT  go to state 191


State 106

  100 METHOD: METHOD_FULFILL . t_dot METHOD_FULFILL

    t_dot  shift, and go to state 192


State 107

   75 VAR: POINTER . ASSIGNMENT EXPR

    t_vtype     shift, and go to state 168
    t_comma     shift, and go to state 189
    t_equality  shift, and go to state 171

    ASSIGNMENT  go to state 193


State 108

   42 BODY_FILLING: GOTO .

    $default  reduce using rule 42 (BODY_FILLING)


State 109

   43 BODY_FILLING: LABEL .

    $default  reduce using rule 43 (BODY_FILLING)


State 110

   41 BODY_FILLING: SWITCH .

    $default  reduce using rule 41 (BODY_FILLING)


State 111

   44 BODY_FILLING: IF .

    $default  reduce using rule 44 (BODY_FILLING)


State 112

  144 IF: IF_FIRST . MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD
  145   | IF_FIRST . MULTY_ELSEIF_SECOND
  146   | IF_FIRST . MULTY_ELSE_THIRD
  147   | IF_FIRST .

    t_else  shift, and go to state 194

    $default  reduce using rule 147 (IF)

    MULTY_ELSEIF_SECOND  go to state 195
    ELSEIF_SECOND        go to state 196
    MULTY_ELSE_THIRD     go to state 197
    ELSE_THIRD           go to state 198


State 113

   49 BODY_FILLING: RETURN .

    $default  reduce using rule 49 (BODY_FILLING)


State 114

   47 BODY_FILLING: SHORT_EXPR .

    $default  reduce using rule 47 (BODY_FILLING)


State 115

   40 BODY_FILLING: FOR .

    $default  reduce using rule 40 (BODY_FILLING)


State 116

   48 BODY_FILLING: ARRAY_BODY .

    $default  reduce using rule 48 (BODY_FILLING)


State 117

  193 MULTI_AR: ARRAY_INDEX .
  194         | ARRAY_INDEX . MULTI_AR

    t_open_sq  shift, and go to state 97

    $default  reduce using rule 193 (MULTI_AR)

    ARRAY_INDEX  go to state 117
    MULTI_AR     go to state 199


State 118

   45 BODY_FILLING: MULTI_AR .

    $default  reduce using rule 45 (BODY_FILLING)


State 119

   51 BODY_FILLING: SLICE .

    $default  reduce using rule 51 (BODY_FILLING)


State 120

   50 BODY_FILLING: STRUCT .

    $default  reduce using rule 50 (BODY_FILLING)


State 121

   38 BODY_START: BODY_START END_SYMBOLS .

    $default  reduce using rule 38 (BODY_START)


State 122

  229 INT_BODY: t_open_br END_SYMBOLS t_id t_open_paren . t_close_paren

    t_close_paren  shift, and go to state 200


State 123

   31 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren t_close_paren .

    $default  reduce using rule 31 (FUNC_RETURN_VALUE_FULFILL)


State 124

   30 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren TYPE_AND_STRUCT . t_close_paren

    t_close_paren  shift, and go to state 201


State 125

   25 FUNC_PARAM_FULFILL_SECOND: t_id TYPE_AND_STRUCT .

    $default  reduce using rule 25 (FUNC_PARAM_FULFILL_SECOND)


State 126

   24 FUNC_PARAM_SECOND: FUNC_PARAM_SECOND t_comma . FUNC_PARAM_FULFILL_SECOND

    t_vtype  shift, and go to state 53
    t_id     shift, and go to state 81

    FUNC_PARAM_FULFILL_SECOND  go to state 202
    TYPE_AND_STRUCT            go to state 84


State 127

   17 FUNC_SECOND_PART: t_open_paren FUNC_PARAM_SECOND t_close_paren . BODY

    t_open_br  shift, and go to state 68

    BODY        go to state 203
    BODY_START  go to state 75


State 128

   87 FUNC_CALL: t_id . PARAM

    t_open_paren  shift, and go to state 172

    PARAM        go to state 178
    PARAM_START  go to state 179


State 129

   79 DEFER: t_defer FUNC_CALL .

    $default  reduce using rule 79 (DEFER)


State 130

   54 VAR: t_var t_id . ASSIGNMENT EXPR
   55    | t_var t_id . ASSIGNMENT EXPR t_vtype
   56    | t_var t_id . ASSIGNMENT BOOLEAN
   60    | t_var t_id . ASSIGNMENT MULTI_AR t_vtype PLENTY
   63    | t_var t_id . ASSIGNMENT MAKE
   68    | t_var t_id . ASSIGNMENT SLICE
   69    | t_var t_id . MAPS
   71    | t_var t_id . t_id ASSIGNMENT t_id ST_EMBEDDED
   72    | t_var t_id . ASSIGNMENT t_id ST_EMBEDDED
   76    | t_var t_id . POINTER
   77    | t_var t_id . POINTER ASSIGNMENT EXPR
  186 ARRAY_BODY: t_var t_id . MULTI_AR t_vtype
  187           | t_var t_id . MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  188           | t_var t_id . MULTI_AR t_vtype ASSIGNMENT MAKE

    t_vtype      shift, and go to state 168
    t_map        shift, and go to state 204
    t_id         shift, and go to state 205
    t_comma      shift, and go to state 189
    t_equality   shift, and go to state 171
    t_open_sq    shift, and go to state 97
    t_pointer    shift, and go to state 98
    t_ampersand  shift, and go to state 99

    ASSIGNMENT   go to state 206
    POINTER      go to state 207
    ARRAY_INDEX  go to state 117
    MULTI_AR     go to state 208
    MAPS         go to state 209


State 131

   54 VAR: t_var . t_id ASSIGNMENT EXPR
   55    | t_var . t_id ASSIGNMENT EXPR t_vtype
   56    | t_var . t_id ASSIGNMENT BOOLEAN
   60    | t_var . t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   63    | t_var . t_id ASSIGNMENT MAKE
   68    | t_var . t_id ASSIGNMENT SLICE
   69    | t_var . t_id MAPS
   71    | t_var . t_id t_id ASSIGNMENT t_id ST_EMBEDDED
   72    | t_var . t_id ASSIGNMENT t_id ST_EMBEDDED
   76    | t_var . t_id POINTER
   77    | t_var . t_id POINTER ASSIGNMENT EXPR

    t_id  shift, and go to state 210


State 132

   99 SHIFT_AC: t_int_const .
  111 VALUE: t_int_const .

    t_shift_const  reduce using rule 99 (SHIFT_AC)
    $default       reduce using rule 111 (VALUE)


State 133

  112 VALUE: t_float_const .

    $default  reduce using rule 112 (VALUE)


State 134

   57 VAR: t_id . SHORT_ASSIGN EXPR
   58    | t_id . ASSIGNMENT EXPR
   59    | t_id . SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   61    | t_id . SHORT_ASSIGN BOOLEAN
   62    | t_id . MULTI_AR ASSIGNMENT EXPR
   64    | t_id . SHORT_ASSIGN MAKE
   65    | t_id . MULTI_AR ASSIGNMENT MAKE
   66    | t_id . SHORT_ASSIGN SLICE
   67    | t_id . ASSIGNMENT SLICE
   70    | t_id . SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   73    | t_id . SHORT_ASSIGN t_id ST_EMBEDDED
   87 FUNC_CALL: t_id . PARAM
   98 SHIFT_AC: t_id .
  102 METHOD_FULFILL: t_id .
  113 VALUE: t_id .

    t_vtype       shift, and go to state 168
    t_short_dec   shift, and go to state 169
    t_comma       shift, and go to state 170
    t_equality    shift, and go to state 171
    t_open_paren  shift, and go to state 172
    t_open_sq     shift, and go to state 97

    t_shift_const  reduce using rule 98 (SHIFT_AC)
    t_dot          reduce using rule 102 (METHOD_FULFILL)
    $default       reduce using rule 113 (VALUE)

    ASSIGNMENT    go to state 176
    SHORT_ASSIGN  go to state 177
    PARAM         go to state 178
    PARAM_START   go to state 179
    ARRAY_INDEX   go to state 117
    MULTI_AR      go to state 180


State 135

  114 VALUE: t_string .

    $default  reduce using rule 114 (VALUE)


State 136

  184 EXPR_START: t_open_paren .

    $default  reduce using rule 184 (EXPR_START)


State 137

  115 VALUE: t_rune .

    $default  reduce using rule 115 (VALUE)


State 138

  116 VALUE: t_blank_identifier .

    $default  reduce using rule 116 (VALUE)


State 139

  177 CONDITION: t_true .

    $default  reduce using rule 177 (CONDITION)


State 140

  178 CONDITION: t_false .

    $default  reduce using rule 178 (CONDITION)


State 141

  173 INIT_STATE: VAR .

    $default  reduce using rule 173 (INIT_STATE)


State 142

  176 CONDITION: BOOLEAN .

    $default  reduce using rule 176 (CONDITION)


State 143

  103 METHOD_FULFILL: FUNC_CALL .
  117 VALUE: FUNC_CALL .
  174 INIT_STATE: FUNC_CALL .

    t_semicolon  reduce using rule 174 (INIT_STATE)
    t_dot        reduce using rule 103 (METHOD_FULFILL)
    $default     reduce using rule 117 (VALUE)


State 144

  118 VALUE: SHIFT .

    $default  reduce using rule 118 (VALUE)


State 145

   97 SHIFT: SHIFT_AC . t_shift_const SHIFT_AC

    t_shift_const  shift, and go to state 211


State 146

   74 VAR: METHOD . ASSIGNMENT VALUE
  101 METHOD: METHOD . t_dot METHOD_FULFILL
  120 VALUE: METHOD .

    t_vtype     shift, and go to state 168
    t_comma     shift, and go to state 189
    t_equality  shift, and go to state 171
    t_dot       shift, and go to state 190

    $default  reduce using rule 120 (VALUE)

    ASSIGNMENT  go to state 191


State 147

   75 VAR: POINTER . ASSIGNMENT EXPR
  119 VALUE: POINTER .

    t_vtype     shift, and go to state 168
    t_comma     shift, and go to state 189
    t_equality  shift, and go to state 171

    $default  reduce using rule 119 (VALUE)

    ASSIGNMENT  go to state 193


State 148

  171 EXPR: VALUE .

    $default  reduce using rule 171 (EXPR)


State 149

   78 BOOLEAN: EXPR . t_bool EXPR
  169 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 212
    t_bool  shift, and go to state 213


State 150

  149 IF_FIRST: t_if INIT_STATE . t_semicolon CONDITION BODY_FOR_LOOP

    t_semicolon  shift, and go to state 214


State 151

  148 IF_FIRST: t_if CONDITION . BODY_FOR_LOOP

    t_open_br  shift, and go to state 215

    BODY_FOR_LOOP        go to state 216
    BODY_FOR_LOOP_START  go to state 217


State 152

  170 EXPR: EXPR_START . EXPR EXPR_END

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 163
    t_string            shift, and go to state 135
    t_open_paren        shift, and go to state 136
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 148
    EXPR            go to state 218
    EXPR_START      go to state 152


State 153

  128 SWITCH_BODY_START: t_open_br .

    $default  reduce using rule 128 (SWITCH_BODY_START)


State 154

  125 SWITCH: t_switch SWITCH_BODY .

    $default  reduce using rule 125 (SWITCH)


State 155

  126 SWITCH_BODY: SWITCH_BODY_START . SWITCH_BODY_END
  129 SWITCH_BODY_START: SWITCH_BODY_START . END_SYMBOLS
  130                  | SWITCH_BODY_START . CASE
  131 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START . DEFAULT

    t_case       shift, and go to state 219
    t_default    shift, and go to state 220
    t_close_br   shift, and go to state 221
    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    CASE             go to state 222
    DEFAULT          go to state 223
    SWITCH_BODY_END  go to state 224
    END_SYMBOLS      go to state 225


State 156

  127 SWITCH_BODY: SWITCH_BODY_START_WITH_DEFAULT . SWITCH_BODY_END
  132 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START_WITH_DEFAULT . CASE

    t_case      shift, and go to state 219
    t_close_br  shift, and go to state 221

    CASE             go to state 226
    SWITCH_BODY_END  go to state 227


State 157

  124 SWITCH: t_switch EXPR . SWITCH_BODY
  169 EXPR: EXPR . t_sign VALUE

    t_open_br  shift, and go to state 153
    t_sign     shift, and go to state 212

    SWITCH_BODY                     go to state 228
    SWITCH_BODY_START               go to state 155
    SWITCH_BODY_START_WITH_DEFAULT  go to state 156


State 158

  123 SWITCH: t_switch INIT_STATE . t_semicolon EXPR SWITCH_BODY

    t_semicolon  shift, and go to state 229


State 159

  209 STRUCT_START: t_type t_id . t_struct_const
  210             | t_type t_id . t_struct_const t_enter

    t_struct_const  shift, and go to state 35


State 160

  182 FOR: t_for INIT_STATE . t_semicolon CONDITION t_semicolon POST_STATE BODY_FOR_LOOP

    t_semicolon  shift, and go to state 230


State 161

  183 FOR: t_for CONDITION . BODY_FOR_LOOP

    t_open_br  shift, and go to state 215

    BODY_FOR_LOOP        go to state 231
    BODY_FOR_LOOP_START  go to state 217


State 162

  121 GOTO: t_goto t_id .

    $default  reduce using rule 121 (GOTO)


State 163

   87 FUNC_CALL: t_id . PARAM
   98 SHIFT_AC: t_id .
  102 METHOD_FULFILL: t_id .
  113 VALUE: t_id .

    t_open_paren  shift, and go to state 172

    t_shift_const  reduce using rule 98 (SHIFT_AC)
    t_dot          reduce using rule 102 (METHOD_FULFILL)
    $default       reduce using rule 113 (VALUE)

    PARAM        go to state 178
    PARAM_START  go to state 179


State 164

  103 METHOD_FULFILL: FUNC_CALL .
  117 VALUE: FUNC_CALL .

    t_dot     reduce using rule 103 (METHOD_FULFILL)
    $default  reduce using rule 117 (VALUE)


State 165

  101 METHOD: METHOD . t_dot METHOD_FULFILL
  120 VALUE: METHOD .

    t_dot  shift, and go to state 190

    $default  reduce using rule 120 (VALUE)


State 166

  119 VALUE: POINTER .

    $default  reduce using rule 119 (VALUE)


State 167

  164 RETURN: t_return EXPR .
  165       | t_return EXPR . MANY_RETURN_START MANY_RETURN_START_END
  169 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 212
    t_comma  shift, and go to state 232

    $default  reduce using rule 164 (RETURN)

    MANY_RETURN_START  go to state 233


State 168

   80 ASSIGNMENT: t_vtype . t_equality

    t_equality  shift, and go to state 234


State 169

   84 SHORT_ASSIGN: t_short_dec .

    $default  reduce using rule 84 (SHORT_ASSIGN)


State 170

   82 ASSIGNMENT: t_comma . t_id ASSIGNMENT EXPR t_comma
   83           | t_comma . t_id ASSIGNMENT BOOLEAN t_comma
   85 SHORT_ASSIGN: t_comma . t_id SHORT_ASSIGN EXPR t_comma
   86             | t_comma . t_id SHORT_ASSIGN BOOLEAN t_comma

    t_id  shift, and go to state 235


State 171

   81 ASSIGNMENT: t_equality .

    $default  reduce using rule 81 (ASSIGNMENT)


State 172

   89 PARAM: t_open_paren . t_close_paren
   90 PARAM_START: t_open_paren .

    t_close_paren  shift, and go to state 236

    $default  reduce using rule 90 (PARAM_START)


State 173

  189 ARRAY_INDEX: t_open_sq . t_int_const t_close_sq
  190            | t_open_sq . t_id t_close_sq
  191            | t_open_sq . t_string t_close_sq
  192            | t_open_sq . t_close_sq
  204 SLICE: t_id t_open_sq . VALUE t_colon VALUE t_close_sq
  205      | t_id t_open_sq . t_colon VALUE t_close_sq
  206      | t_id t_open_sq . VALUE t_colon t_close_sq

    t_int_const         shift, and go to state 237
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 238
    t_string            shift, and go to state 239
    t_close_sq          shift, and go to state 184
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_colon             shift, and go to state 240
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 241


State 174

  122 LABEL: t_id t_colon .

    $default  reduce using rule 122 (LABEL)


State 175

  172 SHORT_EXPR: t_id t_short_expr . t_id

    t_id  shift, and go to state 242


State 176

   58 VAR: t_id ASSIGNMENT . EXPR
   67    | t_id ASSIGNMENT . SLICE

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 243
    t_string            shift, and go to state 135
    t_open_paren        shift, and go to state 136
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 148
    EXPR            go to state 244
    EXPR_START      go to state 152
    SLICE           go to state 245


State 177

   57 VAR: t_id SHORT_ASSIGN . EXPR
   59    | t_id SHORT_ASSIGN . MULTI_AR t_vtype PLENTY
   61    | t_id SHORT_ASSIGN . BOOLEAN
   64    | t_id SHORT_ASSIGN . MAKE
   66    | t_id SHORT_ASSIGN . SLICE
   70    | t_id SHORT_ASSIGN . t_make t_open_paren MAPS t_close_paren
   73    | t_id SHORT_ASSIGN . t_id ST_EMBEDDED

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 246
    t_string            shift, and go to state 135
    t_open_paren        shift, and go to state 136
    t_open_sq           shift, and go to state 97
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_make              shift, and go to state 247
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    BOOLEAN         go to state 248
    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 148
    EXPR            go to state 249
    EXPR_START      go to state 152
    ARRAY_INDEX     go to state 117
    MULTI_AR        go to state 250
    MAKE            go to state 251
    SLICE           go to state 252


State 178

   87 FUNC_CALL: t_id PARAM .

    $default  reduce using rule 87 (FUNC_CALL)


State 179

   88 PARAM: PARAM_START . PARAM_END
   91 PARAM_START: PARAM_START . PARAM_FULFILL

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 163
    t_string            shift, and go to state 135
    t_open_paren        shift, and go to state 136
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_enter             shift, and go to state 253
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    FUNC_CALL          go to state 164
    PARAM_END          go to state 254
    PARAM_END_FULFILL  go to state 255
    PARAM_FULFILL      go to state 256
    SHIFT              go to state 144
    SHIFT_AC           go to state 145
    METHOD             go to state 165
    METHOD_FULFILL     go to state 106
    POINTER            go to state 166
    VALUE              go to state 148
    EXPR               go to state 257
    EXPR_START         go to state 152


State 180

   62 VAR: t_id MULTI_AR . ASSIGNMENT EXPR
   65    | t_id MULTI_AR . ASSIGNMENT MAKE

    t_vtype     shift, and go to state 168
    t_comma     shift, and go to state 189
    t_equality  shift, and go to state 171

    ASSIGNMENT  go to state 258


State 181

  189 ARRAY_INDEX: t_open_sq t_int_const . t_close_sq

    t_close_sq  shift, and go to state 259


State 182

  190 ARRAY_INDEX: t_open_sq t_id . t_close_sq

    t_close_sq  shift, and go to state 260


State 183

  191 ARRAY_INDEX: t_open_sq t_string . t_close_sq

    t_close_sq  shift, and go to state 261


State 184

  192 ARRAY_INDEX: t_open_sq t_close_sq .

    $default  reduce using rule 192 (ARRAY_INDEX)


State 185

  105 POINTER: t_pointer t_vtype .

    $default  reduce using rule 105 (POINTER)


State 186

  104 POINTER: t_pointer t_id .

    $default  reduce using rule 104 (POINTER)


State 187

  106 POINTER: t_ampersand t_id .

    $default  reduce using rule 106 (POINTER)


State 188

   37 BODY_START: BODY_START BODY_FILLING END_SYMBOLS .

    $default  reduce using rule 37 (BODY_START)


State 189

   82 ASSIGNMENT: t_comma . t_id ASSIGNMENT EXPR t_comma
   83           | t_comma . t_id ASSIGNMENT BOOLEAN t_comma

    t_id  shift, and go to state 262


State 190

  101 METHOD: METHOD t_dot . METHOD_FULFILL

    t_id  shift, and go to state 263

    FUNC_CALL       go to state 264
    METHOD_FULFILL  go to state 265


State 191

   74 VAR: METHOD ASSIGNMENT . VALUE

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 163
    t_string            shift, and go to state 135
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 266


State 192

  100 METHOD: METHOD_FULFILL t_dot . METHOD_FULFILL

    t_id  shift, and go to state 263

    FUNC_CALL       go to state 264
    METHOD_FULFILL  go to state 267


State 193

   75 VAR: POINTER ASSIGNMENT . EXPR

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 163
    t_string            shift, and go to state 135
    t_open_paren        shift, and go to state 136
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 148
    EXPR            go to state 268
    EXPR_START      go to state 152


State 194

  160 ELSEIF_SECOND: t_else . t_if CONDITION BODY_FOR_LOOP
  163 ELSE_THIRD: t_else . BODY_FOR_LOOP

    t_if       shift, and go to state 269
    t_open_br  shift, and go to state 215

    BODY_FOR_LOOP        go to state 270
    BODY_FOR_LOOP_START  go to state 217


State 195

  144 IF: IF_FIRST MULTY_ELSEIF_SECOND . MULTY_ELSE_THIRD
  145   | IF_FIRST MULTY_ELSEIF_SECOND .
  159 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND . ELSEIF_SECOND

    t_else  shift, and go to state 194

    $default  reduce using rule 145 (IF)

    ELSEIF_SECOND     go to state 271
    MULTY_ELSE_THIRD  go to state 272
    ELSE_THIRD        go to state 198


State 196

  158 MULTY_ELSEIF_SECOND: ELSEIF_SECOND .

    $default  reduce using rule 158 (MULTY_ELSEIF_SECOND)


State 197

  146 IF: IF_FIRST MULTY_ELSE_THIRD .
  162 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD . ELSE_THIRD

    t_else  shift, and go to state 273

    $default  reduce using rule 146 (IF)

    ELSE_THIRD  go to state 274


State 198

  161 MULTY_ELSE_THIRD: ELSE_THIRD .

    $default  reduce using rule 161 (MULTY_ELSE_THIRD)


State 199

  194 MULTI_AR: ARRAY_INDEX MULTI_AR .

    $default  reduce using rule 194 (MULTI_AR)


State 200

  229 INT_BODY: t_open_br END_SYMBOLS t_id t_open_paren t_close_paren .

    $default  reduce using rule 229 (INT_BODY)


State 201

   30 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren TYPE_AND_STRUCT t_close_paren .

    $default  reduce using rule 30 (FUNC_RETURN_VALUE_FULFILL)


State 202

   24 FUNC_PARAM_SECOND: FUNC_PARAM_SECOND t_comma FUNC_PARAM_FULFILL_SECOND .

    $default  reduce using rule 24 (FUNC_PARAM_SECOND)


State 203

   17 FUNC_SECOND_PART: t_open_paren FUNC_PARAM_SECOND t_close_paren BODY .

    $default  reduce using rule 17 (FUNC_SECOND_PART)


State 204

  207 MAPS: t_map . t_open_sq t_vtype t_close_sq t_vtype

    t_open_sq  shift, and go to state 275


State 205

   71 VAR: t_var t_id t_id . ASSIGNMENT t_id ST_EMBEDDED

    t_vtype     shift, and go to state 168
    t_comma     shift, and go to state 189
    t_equality  shift, and go to state 171

    ASSIGNMENT  go to state 276


State 206

   54 VAR: t_var t_id ASSIGNMENT . EXPR
   55    | t_var t_id ASSIGNMENT . EXPR t_vtype
   56    | t_var t_id ASSIGNMENT . BOOLEAN
   60    | t_var t_id ASSIGNMENT . MULTI_AR t_vtype PLENTY
   63    | t_var t_id ASSIGNMENT . MAKE
   68    | t_var t_id ASSIGNMENT . SLICE
   72    | t_var t_id ASSIGNMENT . t_id ST_EMBEDDED

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 277
    t_string            shift, and go to state 135
    t_open_paren        shift, and go to state 136
    t_open_sq           shift, and go to state 97
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_make              shift, and go to state 278
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    BOOLEAN         go to state 279
    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 148
    EXPR            go to state 280
    EXPR_START      go to state 152
    ARRAY_INDEX     go to state 117
    MULTI_AR        go to state 281
    MAKE            go to state 282
    SLICE           go to state 283


State 207

   76 VAR: t_var t_id POINTER .
   77    | t_var t_id POINTER . ASSIGNMENT EXPR

    t_vtype     shift, and go to state 168
    t_comma     shift, and go to state 189
    t_equality  shift, and go to state 171

    $default  reduce using rule 76 (VAR)

    ASSIGNMENT  go to state 284


State 208

  186 ARRAY_BODY: t_var t_id MULTI_AR . t_vtype
  187           | t_var t_id MULTI_AR . t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  188           | t_var t_id MULTI_AR . t_vtype ASSIGNMENT MAKE

    t_vtype  shift, and go to state 285


State 209

   69 VAR: t_var t_id MAPS .

    $default  reduce using rule 69 (VAR)


State 210

   54 VAR: t_var t_id . ASSIGNMENT EXPR
   55    | t_var t_id . ASSIGNMENT EXPR t_vtype
   56    | t_var t_id . ASSIGNMENT BOOLEAN
   60    | t_var t_id . ASSIGNMENT MULTI_AR t_vtype PLENTY
   63    | t_var t_id . ASSIGNMENT MAKE
   68    | t_var t_id . ASSIGNMENT SLICE
   69    | t_var t_id . MAPS
   71    | t_var t_id . t_id ASSIGNMENT t_id ST_EMBEDDED
   72    | t_var t_id . ASSIGNMENT t_id ST_EMBEDDED
   76    | t_var t_id . POINTER
   77    | t_var t_id . POINTER ASSIGNMENT EXPR

    t_vtype      shift, and go to state 168
    t_map        shift, and go to state 204
    t_id         shift, and go to state 205
    t_comma      shift, and go to state 189
    t_equality   shift, and go to state 171
    t_pointer    shift, and go to state 98
    t_ampersand  shift, and go to state 99

    ASSIGNMENT  go to state 206
    POINTER     go to state 207
    MAPS        go to state 209


State 211

   97 SHIFT: SHIFT_AC t_shift_const . SHIFT_AC

    t_int_const  shift, and go to state 286
    t_id         shift, and go to state 287

    SHIFT_AC  go to state 288


State 212

  169 EXPR: EXPR t_sign . VALUE

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 163
    t_string            shift, and go to state 135
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 289


State 213

   78 BOOLEAN: EXPR t_bool . EXPR

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 163
    t_string            shift, and go to state 135
    t_open_paren        shift, and go to state 136
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 148
    EXPR            go to state 290
    EXPR_START      go to state 152


State 214

  149 IF_FIRST: t_if INIT_STATE t_semicolon . CONDITION BODY_FOR_LOOP

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 163
    t_string            shift, and go to state 135
    t_open_paren        shift, and go to state 136
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_true              shift, and go to state 139
    t_false             shift, and go to state 140
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    $default  reduce using rule 179 (CONDITION)

    BOOLEAN         go to state 142
    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 148
    EXPR            go to state 149
    CONDITION       go to state 291
    EXPR_START      go to state 152


State 215

  151 BODY_FOR_LOOP_START: t_open_br .
  152                    | t_open_br . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    $default  reduce using rule 151 (BODY_FOR_LOOP_START)

    END_SYMBOLS  go to state 292


State 216

  148 IF_FIRST: t_if CONDITION BODY_FOR_LOOP .

    $default  reduce using rule 148 (IF_FIRST)


State 217

  150 BODY_FOR_LOOP: BODY_FOR_LOOP_START . BODY_FOR_LOOP_END
  153 BODY_FOR_LOOP_START: BODY_FOR_LOOP_START . LOOP_FILLING END_SYMBOLS

    t_defer      shift, and go to state 87
    t_var        shift, and go to state 88
    t_if         shift, and go to state 89
    t_switch     shift, and go to state 90
    t_type       shift, and go to state 91
    t_for        shift, and go to state 92
    t_goto       shift, and go to state 93
    t_continue   shift, and go to state 293
    t_break      shift, and go to state 294
    t_return     shift, and go to state 94
    t_id         shift, and go to state 95
    t_close_br   shift, and go to state 295
    t_open_sq    shift, and go to state 97
    t_pointer    shift, and go to state 98
    t_ampersand  shift, and go to state 99

    BODY_FILLING       go to state 296
    VAR                go to state 102
    DEFER              go to state 103
    FUNC_CALL          go to state 104
    METHOD             go to state 105
    METHOD_FULFILL     go to state 106
    POINTER            go to state 107
    GOTO               go to state 108
    LABEL              go to state 109
    SWITCH             go to state 110
    IF                 go to state 111
    IF_FIRST           go to state 112
    BODY_FOR_LOOP_END  go to state 297
    LOOP_FILLING       go to state 298
    RETURN             go to state 113
    SHORT_EXPR         go to state 114
    FOR                go to state 115
    ARRAY_BODY         go to state 116
    ARRAY_INDEX        go to state 117
    MULTI_AR           go to state 118
    SLICE              go to state 119
    STRUCT             go to state 120
    STRUCT_START       go to state 11


State 218

  169 EXPR: EXPR . t_sign VALUE
  170     | EXPR_START EXPR . EXPR_END

    t_sign         shift, and go to state 212
    t_close_paren  shift, and go to state 299

    EXPR_END  go to state 300


State 219

  133 CASE: t_case . CASE_STATEMENT CASE_BODY

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 163
    t_string            shift, and go to state 135
    t_open_paren        shift, and go to state 136
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 148
    MULTIPLE_ARG    go to state 301
    FIRST_PART      go to state 302
    CASE_STATEMENT  go to state 303
    EXPR            go to state 304
    EXPR_START      go to state 152


State 220

  134 DEFAULT: t_default . CASE_BODY

    t_colon  shift, and go to state 305

    CASE_BODY  go to state 306


State 221

  143 SWITCH_BODY_END: t_close_br .

    $default  reduce using rule 143 (SWITCH_BODY_END)


State 222

  130 SWITCH_BODY_START: SWITCH_BODY_START CASE .

    $default  reduce using rule 130 (SWITCH_BODY_START)


State 223

  131 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START DEFAULT .

    $default  reduce using rule 131 (SWITCH_BODY_START_WITH_DEFAULT)


State 224

  126 SWITCH_BODY: SWITCH_BODY_START SWITCH_BODY_END .

    $default  reduce using rule 126 (SWITCH_BODY)


State 225

  129 SWITCH_BODY_START: SWITCH_BODY_START END_SYMBOLS .

    $default  reduce using rule 129 (SWITCH_BODY_START)


State 226

  132 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START_WITH_DEFAULT CASE .

    $default  reduce using rule 132 (SWITCH_BODY_START_WITH_DEFAULT)


State 227

  127 SWITCH_BODY: SWITCH_BODY_START_WITH_DEFAULT SWITCH_BODY_END .

    $default  reduce using rule 127 (SWITCH_BODY)


State 228

  124 SWITCH: t_switch EXPR SWITCH_BODY .

    $default  reduce using rule 124 (SWITCH)


State 229

  123 SWITCH: t_switch INIT_STATE t_semicolon . EXPR SWITCH_BODY

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 163
    t_string            shift, and go to state 135
    t_open_paren        shift, and go to state 136
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 148
    EXPR            go to state 307
    EXPR_START      go to state 152


State 230

  182 FOR: t_for INIT_STATE t_semicolon . CONDITION t_semicolon POST_STATE BODY_FOR_LOOP

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 163
    t_string            shift, and go to state 135
    t_open_paren        shift, and go to state 136
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_true              shift, and go to state 139
    t_false             shift, and go to state 140
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    $default  reduce using rule 179 (CONDITION)

    BOOLEAN         go to state 142
    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 148
    EXPR            go to state 149
    CONDITION       go to state 308
    EXPR_START      go to state 152


State 231

  183 FOR: t_for CONDITION BODY_FOR_LOOP .

    $default  reduce using rule 183 (FOR)


State 232

  166 MANY_RETURN_START: t_comma .

    $default  reduce using rule 166 (MANY_RETURN_START)


State 233

  165 RETURN: t_return EXPR MANY_RETURN_START . MANY_RETURN_START_END
  167 MANY_RETURN_START: MANY_RETURN_START . EXPR t_comma

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 163
    t_string            shift, and go to state 135
    t_open_paren        shift, and go to state 136
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    FUNC_CALL              go to state 164
    SHIFT                  go to state 144
    SHIFT_AC               go to state 145
    METHOD                 go to state 165
    METHOD_FULFILL         go to state 106
    POINTER                go to state 166
    VALUE                  go to state 148
    MANY_RETURN_START_END  go to state 309
    EXPR                   go to state 310
    EXPR_START             go to state 152


State 234

   80 ASSIGNMENT: t_vtype t_equality .

    $default  reduce using rule 80 (ASSIGNMENT)


State 235

   82 ASSIGNMENT: t_comma t_id . ASSIGNMENT EXPR t_comma
   83           | t_comma t_id . ASSIGNMENT BOOLEAN t_comma
   85 SHORT_ASSIGN: t_comma t_id . SHORT_ASSIGN EXPR t_comma
   86             | t_comma t_id . SHORT_ASSIGN BOOLEAN t_comma

    t_vtype      shift, and go to state 168
    t_short_dec  shift, and go to state 169
    t_comma      shift, and go to state 170
    t_equality   shift, and go to state 171

    ASSIGNMENT    go to state 311
    SHORT_ASSIGN  go to state 312


State 236

   89 PARAM: t_open_paren t_close_paren .

    $default  reduce using rule 89 (PARAM)


State 237

   99 SHIFT_AC: t_int_const .
  111 VALUE: t_int_const .
  189 ARRAY_INDEX: t_open_sq t_int_const . t_close_sq

    t_close_sq  shift, and go to state 259

    t_colon   reduce using rule 111 (VALUE)
    $default  reduce using rule 99 (SHIFT_AC)


State 238

   87 FUNC_CALL: t_id . PARAM
   98 SHIFT_AC: t_id .
  102 METHOD_FULFILL: t_id .
  113 VALUE: t_id .
  190 ARRAY_INDEX: t_open_sq t_id . t_close_sq

    t_open_paren  shift, and go to state 172
    t_close_sq    shift, and go to state 260

    t_dot     reduce using rule 102 (METHOD_FULFILL)
    t_colon   reduce using rule 113 (VALUE)
    $default  reduce using rule 98 (SHIFT_AC)

    PARAM        go to state 178
    PARAM_START  go to state 179


State 239

  114 VALUE: t_string .
  191 ARRAY_INDEX: t_open_sq t_string . t_close_sq

    t_close_sq  shift, and go to state 261

    $default  reduce using rule 114 (VALUE)


State 240

  205 SLICE: t_id t_open_sq t_colon . VALUE t_close_sq

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 163
    t_string            shift, and go to state 135
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 313


State 241

  204 SLICE: t_id t_open_sq VALUE . t_colon VALUE t_close_sq
  206      | t_id t_open_sq VALUE . t_colon t_close_sq

    t_colon  shift, and go to state 314


State 242

  172 SHORT_EXPR: t_id t_short_expr t_id .

    $default  reduce using rule 172 (SHORT_EXPR)


State 243

   87 FUNC_CALL: t_id . PARAM
   98 SHIFT_AC: t_id .
  102 METHOD_FULFILL: t_id .
  113 VALUE: t_id .
  204 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  205      | t_id . t_open_sq t_colon VALUE t_close_sq
  206      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_open_paren  shift, and go to state 172
    t_open_sq     shift, and go to state 315

    t_shift_const  reduce using rule 98 (SHIFT_AC)
    t_dot          reduce using rule 102 (METHOD_FULFILL)
    $default       reduce using rule 113 (VALUE)

    PARAM        go to state 178
    PARAM_START  go to state 179


State 244

   58 VAR: t_id ASSIGNMENT EXPR .
  169 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 212

    $default  reduce using rule 58 (VAR)


State 245

   67 VAR: t_id ASSIGNMENT SLICE .

    $default  reduce using rule 67 (VAR)


State 246

   73 VAR: t_id SHORT_ASSIGN t_id . ST_EMBEDDED
   87 FUNC_CALL: t_id . PARAM
   98 SHIFT_AC: t_id .
  102 METHOD_FULFILL: t_id .
  113 VALUE: t_id .
  204 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  205      | t_id . t_open_sq t_colon VALUE t_close_sq
  206      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_open_br     shift, and go to state 316
    t_open_paren  shift, and go to state 172
    t_open_sq     shift, and go to state 315

    t_shift_const  reduce using rule 98 (SHIFT_AC)
    t_dot          reduce using rule 102 (METHOD_FULFILL)
    $default       reduce using rule 113 (VALUE)

    PARAM         go to state 178
    PARAM_START   go to state 179
    PLENTY_OLD    go to state 317
    STRUCT_FIELD  go to state 318
    ST_EMBEDDED   go to state 319


State 247

   70 VAR: t_id SHORT_ASSIGN t_make . t_open_paren MAPS t_close_paren
  202 MAKE: t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  203     | t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_paren  shift, and go to state 320


State 248

   61 VAR: t_id SHORT_ASSIGN BOOLEAN .

    $default  reduce using rule 61 (VAR)


State 249

   57 VAR: t_id SHORT_ASSIGN EXPR .
   78 BOOLEAN: EXPR . t_bool EXPR
  169 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 212
    t_bool  shift, and go to state 213

    $default  reduce using rule 57 (VAR)


State 250

   59 VAR: t_id SHORT_ASSIGN MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 321


State 251

   64 VAR: t_id SHORT_ASSIGN MAKE .

    $default  reduce using rule 64 (VAR)


State 252

   66 VAR: t_id SHORT_ASSIGN SLICE .

    $default  reduce using rule 66 (VAR)


State 253

   94 PARAM_END_FULFILL: t_enter .
   96 PARAM_FULFILL: t_enter .

    t_close_paren  reduce using rule 94 (PARAM_END_FULFILL)
    $default       reduce using rule 96 (PARAM_FULFILL)


State 254

   88 PARAM: PARAM_START PARAM_END .

    $default  reduce using rule 88 (PARAM)


State 255

   92 PARAM_END: PARAM_END_FULFILL . t_close_paren

    t_close_paren  shift, and go to state 322


State 256

   91 PARAM_START: PARAM_START PARAM_FULFILL .

    $default  reduce using rule 91 (PARAM_START)


State 257

   93 PARAM_END_FULFILL: EXPR .
   95 PARAM_FULFILL: EXPR . t_comma
  169 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 212
    t_comma  shift, and go to state 323

    $default  reduce using rule 93 (PARAM_END_FULFILL)


State 258

   62 VAR: t_id MULTI_AR ASSIGNMENT . EXPR
   65    | t_id MULTI_AR ASSIGNMENT . MAKE

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 163
    t_string            shift, and go to state 135
    t_open_paren        shift, and go to state 136
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_make              shift, and go to state 278
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 148
    EXPR            go to state 324
    EXPR_START      go to state 152
    MAKE            go to state 325


State 259

  189 ARRAY_INDEX: t_open_sq t_int_const t_close_sq .

    $default  reduce using rule 189 (ARRAY_INDEX)


State 260

  190 ARRAY_INDEX: t_open_sq t_id t_close_sq .

    $default  reduce using rule 190 (ARRAY_INDEX)


State 261

  191 ARRAY_INDEX: t_open_sq t_string t_close_sq .

    $default  reduce using rule 191 (ARRAY_INDEX)


State 262

   82 ASSIGNMENT: t_comma t_id . ASSIGNMENT EXPR t_comma
   83           | t_comma t_id . ASSIGNMENT BOOLEAN t_comma

    t_vtype     shift, and go to state 168
    t_comma     shift, and go to state 189
    t_equality  shift, and go to state 171

    ASSIGNMENT  go to state 311


State 263

   87 FUNC_CALL: t_id . PARAM
  102 METHOD_FULFILL: t_id .

    t_open_paren  shift, and go to state 172

    $default  reduce using rule 102 (METHOD_FULFILL)

    PARAM        go to state 178
    PARAM_START  go to state 179


State 264

  103 METHOD_FULFILL: FUNC_CALL .

    $default  reduce using rule 103 (METHOD_FULFILL)


State 265

  101 METHOD: METHOD t_dot METHOD_FULFILL .

    $default  reduce using rule 101 (METHOD)


State 266

   74 VAR: METHOD ASSIGNMENT VALUE .

    $default  reduce using rule 74 (VAR)


State 267

  100 METHOD: METHOD_FULFILL t_dot METHOD_FULFILL .

    $default  reduce using rule 100 (METHOD)


State 268

   75 VAR: POINTER ASSIGNMENT EXPR .
  169 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 212

    $default  reduce using rule 75 (VAR)


State 269

  160 ELSEIF_SECOND: t_else t_if . CONDITION BODY_FOR_LOOP

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 163
    t_string            shift, and go to state 135
    t_open_paren        shift, and go to state 136
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_true              shift, and go to state 139
    t_false             shift, and go to state 140
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    $default  reduce using rule 179 (CONDITION)

    BOOLEAN         go to state 142
    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 148
    EXPR            go to state 149
    CONDITION       go to state 326
    EXPR_START      go to state 152


State 270

  163 ELSE_THIRD: t_else BODY_FOR_LOOP .

    $default  reduce using rule 163 (ELSE_THIRD)


State 271

  159 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND ELSEIF_SECOND .

    $default  reduce using rule 159 (MULTY_ELSEIF_SECOND)


State 272

  144 IF: IF_FIRST MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD .
  162 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD . ELSE_THIRD

    t_else  shift, and go to state 273

    $default  reduce using rule 144 (IF)

    ELSE_THIRD  go to state 274


State 273

  163 ELSE_THIRD: t_else . BODY_FOR_LOOP

    t_open_br  shift, and go to state 215

    BODY_FOR_LOOP        go to state 270
    BODY_FOR_LOOP_START  go to state 217


State 274

  162 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD ELSE_THIRD .

    $default  reduce using rule 162 (MULTY_ELSE_THIRD)


State 275

  207 MAPS: t_map t_open_sq . t_vtype t_close_sq t_vtype

    t_vtype  shift, and go to state 327


State 276

   71 VAR: t_var t_id t_id ASSIGNMENT . t_id ST_EMBEDDED

    t_id  shift, and go to state 328


State 277

   72 VAR: t_var t_id ASSIGNMENT t_id . ST_EMBEDDED
   87 FUNC_CALL: t_id . PARAM
   98 SHIFT_AC: t_id .
  102 METHOD_FULFILL: t_id .
  113 VALUE: t_id .
  204 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  205      | t_id . t_open_sq t_colon VALUE t_close_sq
  206      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_open_br     shift, and go to state 316
    t_open_paren  shift, and go to state 172
    t_open_sq     shift, and go to state 315

    t_shift_const  reduce using rule 98 (SHIFT_AC)
    t_dot          reduce using rule 102 (METHOD_FULFILL)
    $default       reduce using rule 113 (VALUE)

    PARAM         go to state 178
    PARAM_START   go to state 179
    PLENTY_OLD    go to state 317
    STRUCT_FIELD  go to state 318
    ST_EMBEDDED   go to state 329


State 278

  202 MAKE: t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  203     | t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_paren  shift, and go to state 330


State 279

   56 VAR: t_var t_id ASSIGNMENT BOOLEAN .

    $default  reduce using rule 56 (VAR)


State 280

   54 VAR: t_var t_id ASSIGNMENT EXPR .
   55    | t_var t_id ASSIGNMENT EXPR . t_vtype
   78 BOOLEAN: EXPR . t_bool EXPR
  169 EXPR: EXPR . t_sign VALUE

    t_vtype  shift, and go to state 331
    t_sign   shift, and go to state 212
    t_bool   shift, and go to state 213

    $default  reduce using rule 54 (VAR)


State 281

   60 VAR: t_var t_id ASSIGNMENT MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 332


State 282

   63 VAR: t_var t_id ASSIGNMENT MAKE .

    $default  reduce using rule 63 (VAR)


State 283

   68 VAR: t_var t_id ASSIGNMENT SLICE .

    $default  reduce using rule 68 (VAR)


State 284

   77 VAR: t_var t_id POINTER ASSIGNMENT . EXPR

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 163
    t_string            shift, and go to state 135
    t_open_paren        shift, and go to state 136
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 148
    EXPR            go to state 333
    EXPR_START      go to state 152


State 285

  186 ARRAY_BODY: t_var t_id MULTI_AR t_vtype .
  187           | t_var t_id MULTI_AR t_vtype . ASSIGNMENT MULTI_AR t_vtype PLENTY
  188           | t_var t_id MULTI_AR t_vtype . ASSIGNMENT MAKE

    t_vtype     shift, and go to state 168
    t_comma     shift, and go to state 189
    t_equality  shift, and go to state 171

    $default  reduce using rule 186 (ARRAY_BODY)

    ASSIGNMENT  go to state 334


State 286

   99 SHIFT_AC: t_int_const .

    $default  reduce using rule 99 (SHIFT_AC)


State 287

   98 SHIFT_AC: t_id .

    $default  reduce using rule 98 (SHIFT_AC)


State 288

   97 SHIFT: SHIFT_AC t_shift_const SHIFT_AC .

    $default  reduce using rule 97 (SHIFT)


State 289

  169 EXPR: EXPR t_sign VALUE .

    $default  reduce using rule 169 (EXPR)


State 290

   78 BOOLEAN: EXPR t_bool EXPR .
  169 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 212

    $default  reduce using rule 78 (BOOLEAN)


State 291

  149 IF_FIRST: t_if INIT_STATE t_semicolon CONDITION . BODY_FOR_LOOP

    t_open_br  shift, and go to state 215

    BODY_FOR_LOOP        go to state 335
    BODY_FOR_LOOP_START  go to state 217


State 292

  152 BODY_FOR_LOOP_START: t_open_br END_SYMBOLS .

    $default  reduce using rule 152 (BODY_FOR_LOOP_START)


State 293

  157 LOOP_FILLING: t_continue .

    $default  reduce using rule 157 (LOOP_FILLING)


State 294

  156 LOOP_FILLING: t_break .

    $default  reduce using rule 156 (LOOP_FILLING)


State 295

  154 BODY_FOR_LOOP_END: t_close_br .

    $default  reduce using rule 154 (BODY_FOR_LOOP_END)


State 296

  155 LOOP_FILLING: BODY_FILLING .

    $default  reduce using rule 155 (LOOP_FILLING)


State 297

  150 BODY_FOR_LOOP: BODY_FOR_LOOP_START BODY_FOR_LOOP_END .

    $default  reduce using rule 150 (BODY_FOR_LOOP)


State 298

  153 BODY_FOR_LOOP_START: BODY_FOR_LOOP_START LOOP_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 336


State 299

  185 EXPR_END: t_close_paren .

    $default  reduce using rule 185 (EXPR_END)


State 300

  170 EXPR: EXPR_START EXPR EXPR_END .

    $default  reduce using rule 170 (EXPR)


State 301

  139 CASE_STATEMENT: MULTIPLE_ARG .

    $default  reduce using rule 139 (CASE_STATEMENT)


State 302

  135 MULTIPLE_ARG: FIRST_PART . SECOND_PART
  137 FIRST_PART: FIRST_PART . EXPR t_comma

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 163
    t_string            shift, and go to state 135
    t_open_paren        shift, and go to state 136
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 148
    SECOND_PART     go to state 337
    EXPR            go to state 338
    EXPR_START      go to state 152


State 303

  133 CASE: t_case CASE_STATEMENT . CASE_BODY

    t_colon  shift, and go to state 305

    CASE_BODY  go to state 339


State 304

  136 FIRST_PART: EXPR . t_comma
  140 CASE_STATEMENT: EXPR .
  169 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 212
    t_comma  shift, and go to state 340

    $default  reduce using rule 140 (CASE_STATEMENT)


State 305

  141 CASE_BODY: t_colon .

    $default  reduce using rule 141 (CASE_BODY)


State 306

  134 DEFAULT: t_default CASE_BODY .
  142 CASE_BODY: CASE_BODY . LOOP_FILLING END_SYMBOLS

    t_defer      shift, and go to state 87
    t_var        shift, and go to state 88
    t_if         shift, and go to state 89
    t_switch     shift, and go to state 90
    t_type       shift, and go to state 91
    t_for        shift, and go to state 92
    t_goto       shift, and go to state 93
    t_continue   shift, and go to state 293
    t_break      shift, and go to state 294
    t_return     shift, and go to state 94
    t_id         shift, and go to state 95
    t_open_sq    shift, and go to state 97
    t_pointer    shift, and go to state 98
    t_ampersand  shift, and go to state 99

    $default  reduce using rule 134 (DEFAULT)

    BODY_FILLING    go to state 296
    VAR             go to state 102
    DEFER           go to state 103
    FUNC_CALL       go to state 104
    METHOD          go to state 105
    METHOD_FULFILL  go to state 106
    POINTER         go to state 107
    GOTO            go to state 108
    LABEL           go to state 109
    SWITCH          go to state 110
    IF              go to state 111
    IF_FIRST        go to state 112
    LOOP_FILLING    go to state 341
    RETURN          go to state 113
    SHORT_EXPR      go to state 114
    FOR             go to state 115
    ARRAY_BODY      go to state 116
    ARRAY_INDEX     go to state 117
    MULTI_AR        go to state 118
    SLICE           go to state 119
    STRUCT          go to state 120
    STRUCT_START    go to state 11


State 307

  123 SWITCH: t_switch INIT_STATE t_semicolon EXPR . SWITCH_BODY
  169 EXPR: EXPR . t_sign VALUE

    t_open_br  shift, and go to state 153
    t_sign     shift, and go to state 212

    SWITCH_BODY                     go to state 342
    SWITCH_BODY_START               go to state 155
    SWITCH_BODY_START_WITH_DEFAULT  go to state 156


State 308

  182 FOR: t_for INIT_STATE t_semicolon CONDITION . t_semicolon POST_STATE BODY_FOR_LOOP

    t_semicolon  shift, and go to state 343


State 309

  165 RETURN: t_return EXPR MANY_RETURN_START MANY_RETURN_START_END .

    $default  reduce using rule 165 (RETURN)


State 310

  167 MANY_RETURN_START: MANY_RETURN_START EXPR . t_comma
  168 MANY_RETURN_START_END: EXPR .
  169 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 212
    t_comma  shift, and go to state 344

    $default  reduce using rule 168 (MANY_RETURN_START_END)


State 311

   82 ASSIGNMENT: t_comma t_id ASSIGNMENT . EXPR t_comma
   83           | t_comma t_id ASSIGNMENT . BOOLEAN t_comma

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 163
    t_string            shift, and go to state 135
    t_open_paren        shift, and go to state 136
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    BOOLEAN         go to state 345
    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 148
    EXPR            go to state 346
    EXPR_START      go to state 152


State 312

   85 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN . EXPR t_comma
   86             | t_comma t_id SHORT_ASSIGN . BOOLEAN t_comma

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 163
    t_string            shift, and go to state 135
    t_open_paren        shift, and go to state 136
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    BOOLEAN         go to state 347
    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 148
    EXPR            go to state 348
    EXPR_START      go to state 152


State 313

  205 SLICE: t_id t_open_sq t_colon VALUE . t_close_sq

    t_close_sq  shift, and go to state 349


State 314

  204 SLICE: t_id t_open_sq VALUE t_colon . VALUE t_close_sq
  206      | t_id t_open_sq VALUE t_colon . t_close_sq

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 163
    t_string            shift, and go to state 135
    t_close_sq          shift, and go to state 350
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 351


State 315

  204 SLICE: t_id t_open_sq . VALUE t_colon VALUE t_close_sq
  205      | t_id t_open_sq . t_colon VALUE t_close_sq
  206      | t_id t_open_sq . VALUE t_colon t_close_sq

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 163
    t_string            shift, and go to state 135
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_colon             shift, and go to state 240
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 241


State 316

  197 PLENTY_OLD: t_open_br . ENUM t_close_br
  198           | t_open_br . t_close_br
  199           | t_open_br . PLENTY t_close_br
  220 STRUCT_FIELD: t_open_br . END_SYMBOLS STRUCT_ENUM t_close_br
  221             | t_open_br . END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 163
    t_string            shift, and go to state 135
    t_open_br           shift, and go to state 352
    t_close_br          shift, and go to state 353
    t_rune              shift, and go to state 137
    t_semicolon         shift, and go to state 20
    t_blank_identifier  shift, and go to state 138
    t_enter             shift, and go to state 21
    t_eof               shift, and go to state 22
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 354
    PLENTY          go to state 355
    PLENTY_OLD      go to state 356
    ENUM            go to state 357
    END_SYMBOLS     go to state 358


State 317

  222 STRUCT_FIELD: PLENTY_OLD .

    $default  reduce using rule 222 (STRUCT_FIELD)


State 318

  223 ST_EMBEDDED: STRUCT_FIELD .
  224            | STRUCT_FIELD . t_comma ST_EMBEDDED

    t_comma  shift, and go to state 359

    $default  reduce using rule 223 (ST_EMBEDDED)


State 319

   73 VAR: t_id SHORT_ASSIGN t_id ST_EMBEDDED .

    $default  reduce using rule 73 (VAR)


State 320

   70 VAR: t_id SHORT_ASSIGN t_make t_open_paren . MAPS t_close_paren
  202 MAKE: t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_close_paren
  203     | t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_map      shift, and go to state 204
    t_open_sq  shift, and go to state 97

    ARRAY_INDEX  go to state 117
    MULTI_AR     go to state 360
    MAPS         go to state 361


State 321

   59 VAR: t_id SHORT_ASSIGN MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 352

    PLENTY      go to state 362
    PLENTY_OLD  go to state 356


State 322

   92 PARAM_END: PARAM_END_FULFILL t_close_paren .

    $default  reduce using rule 92 (PARAM_END)


State 323

   95 PARAM_FULFILL: EXPR t_comma .

    $default  reduce using rule 95 (PARAM_FULFILL)


State 324

   62 VAR: t_id MULTI_AR ASSIGNMENT EXPR .
  169 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 212

    $default  reduce using rule 62 (VAR)


State 325

   65 VAR: t_id MULTI_AR ASSIGNMENT MAKE .

    $default  reduce using rule 65 (VAR)


State 326

  160 ELSEIF_SECOND: t_else t_if CONDITION . BODY_FOR_LOOP

    t_open_br  shift, and go to state 215

    BODY_FOR_LOOP        go to state 363
    BODY_FOR_LOOP_START  go to state 217


State 327

  207 MAPS: t_map t_open_sq t_vtype . t_close_sq t_vtype

    t_close_sq  shift, and go to state 364


State 328

   71 VAR: t_var t_id t_id ASSIGNMENT t_id . ST_EMBEDDED

    t_open_br  shift, and go to state 316

    PLENTY_OLD    go to state 317
    STRUCT_FIELD  go to state 318
    ST_EMBEDDED   go to state 365


State 329

   72 VAR: t_var t_id ASSIGNMENT t_id ST_EMBEDDED .

    $default  reduce using rule 72 (VAR)


State 330

  202 MAKE: t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_close_paren
  203     | t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_sq  shift, and go to state 97

    ARRAY_INDEX  go to state 117
    MULTI_AR     go to state 360


State 331

   55 VAR: t_var t_id ASSIGNMENT EXPR t_vtype .

    $default  reduce using rule 55 (VAR)


State 332

   60 VAR: t_var t_id ASSIGNMENT MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 352

    PLENTY      go to state 366
    PLENTY_OLD  go to state 356


State 333

   77 VAR: t_var t_id POINTER ASSIGNMENT EXPR .
  169 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 212

    $default  reduce using rule 77 (VAR)


State 334

  187 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT . MULTI_AR t_vtype PLENTY
  188           | t_var t_id MULTI_AR t_vtype ASSIGNMENT . MAKE

    t_open_sq  shift, and go to state 97
    t_make     shift, and go to state 278

    ARRAY_INDEX  go to state 117
    MULTI_AR     go to state 367
    MAKE         go to state 368


State 335

  149 IF_FIRST: t_if INIT_STATE t_semicolon CONDITION BODY_FOR_LOOP .

    $default  reduce using rule 149 (IF_FIRST)


State 336

  153 BODY_FOR_LOOP_START: BODY_FOR_LOOP_START LOOP_FILLING END_SYMBOLS .

    $default  reduce using rule 153 (BODY_FOR_LOOP_START)


State 337

  135 MULTIPLE_ARG: FIRST_PART SECOND_PART .

    $default  reduce using rule 135 (MULTIPLE_ARG)


State 338

  137 FIRST_PART: FIRST_PART EXPR . t_comma
  138 SECOND_PART: EXPR .
  169 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 212
    t_comma  shift, and go to state 369

    $default  reduce using rule 138 (SECOND_PART)


State 339

  133 CASE: t_case CASE_STATEMENT CASE_BODY .
  142 CASE_BODY: CASE_BODY . LOOP_FILLING END_SYMBOLS

    t_defer      shift, and go to state 87
    t_var        shift, and go to state 88
    t_if         shift, and go to state 89
    t_switch     shift, and go to state 90
    t_type       shift, and go to state 91
    t_for        shift, and go to state 92
    t_goto       shift, and go to state 93
    t_continue   shift, and go to state 293
    t_break      shift, and go to state 294
    t_return     shift, and go to state 94
    t_id         shift, and go to state 95
    t_open_sq    shift, and go to state 97
    t_pointer    shift, and go to state 98
    t_ampersand  shift, and go to state 99

    $default  reduce using rule 133 (CASE)

    BODY_FILLING    go to state 296
    VAR             go to state 102
    DEFER           go to state 103
    FUNC_CALL       go to state 104
    METHOD          go to state 105
    METHOD_FULFILL  go to state 106
    POINTER         go to state 107
    GOTO            go to state 108
    LABEL           go to state 109
    SWITCH          go to state 110
    IF              go to state 111
    IF_FIRST        go to state 112
    LOOP_FILLING    go to state 341
    RETURN          go to state 113
    SHORT_EXPR      go to state 114
    FOR             go to state 115
    ARRAY_BODY      go to state 116
    ARRAY_INDEX     go to state 117
    MULTI_AR        go to state 118
    SLICE           go to state 119
    STRUCT          go to state 120
    STRUCT_START    go to state 11


State 340

  136 FIRST_PART: EXPR t_comma .

    $default  reduce using rule 136 (FIRST_PART)


State 341

  142 CASE_BODY: CASE_BODY LOOP_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 370


State 342

  123 SWITCH: t_switch INIT_STATE t_semicolon EXPR SWITCH_BODY .

    $default  reduce using rule 123 (SWITCH)


State 343

  182 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon . POST_STATE BODY_FOR_LOOP

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 371
    t_string            shift, and go to state 135
    t_open_paren        shift, and go to state 136
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 148
    EXPR            go to state 372
    POST_STATE      go to state 373
    EXPR_START      go to state 152


State 344

  167 MANY_RETURN_START: MANY_RETURN_START EXPR t_comma .

    $default  reduce using rule 167 (MANY_RETURN_START)


State 345

   83 ASSIGNMENT: t_comma t_id ASSIGNMENT BOOLEAN . t_comma

    t_comma  shift, and go to state 374


State 346

   78 BOOLEAN: EXPR . t_bool EXPR
   82 ASSIGNMENT: t_comma t_id ASSIGNMENT EXPR . t_comma
  169 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 212
    t_comma  shift, and go to state 375
    t_bool   shift, and go to state 213


State 347

   86 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN BOOLEAN . t_comma

    t_comma  shift, and go to state 376


State 348

   78 BOOLEAN: EXPR . t_bool EXPR
   85 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN EXPR . t_comma
  169 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 212
    t_comma  shift, and go to state 377
    t_bool   shift, and go to state 213


State 349

  205 SLICE: t_id t_open_sq t_colon VALUE t_close_sq .

    $default  reduce using rule 205 (SLICE)


State 350

  206 SLICE: t_id t_open_sq VALUE t_colon t_close_sq .

    $default  reduce using rule 206 (SLICE)


State 351

  204 SLICE: t_id t_open_sq VALUE t_colon VALUE . t_close_sq

    t_close_sq  shift, and go to state 378


State 352

  197 PLENTY_OLD: t_open_br . ENUM t_close_br
  198           | t_open_br . t_close_br
  199           | t_open_br . PLENTY t_close_br

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 163
    t_string            shift, and go to state 135
    t_open_br           shift, and go to state 352
    t_close_br          shift, and go to state 353
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 354
    PLENTY          go to state 355
    PLENTY_OLD      go to state 356
    ENUM            go to state 357


State 353

  198 PLENTY_OLD: t_open_br t_close_br .

    $default  reduce using rule 198 (PLENTY_OLD)


State 354

  200 ENUM: VALUE .

    $default  reduce using rule 200 (ENUM)


State 355

  199 PLENTY_OLD: t_open_br PLENTY . t_close_br

    t_close_br  shift, and go to state 379


State 356

  195 PLENTY: PLENTY_OLD .
  196       | PLENTY_OLD . t_comma PLENTY

    t_comma  shift, and go to state 380

    $default  reduce using rule 195 (PLENTY)


State 357

  197 PLENTY_OLD: t_open_br ENUM . t_close_br
  201 ENUM: ENUM . t_comma VALUE

    t_close_br  shift, and go to state 381
    t_comma     shift, and go to state 382


State 358

  220 STRUCT_FIELD: t_open_br END_SYMBOLS . STRUCT_ENUM t_close_br
  221             | t_open_br END_SYMBOLS . STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS

    t_id  shift, and go to state 383

    STRUCT_ENUM  go to state 384


State 359

  224 ST_EMBEDDED: STRUCT_FIELD t_comma . ST_EMBEDDED

    t_open_br  shift, and go to state 316

    PLENTY_OLD    go to state 317
    STRUCT_FIELD  go to state 318
    ST_EMBEDDED   go to state 385


State 360

  202 MAKE: t_make t_open_paren MULTI_AR . t_vtype t_comma VALUE t_close_paren
  203     | t_make t_open_paren MULTI_AR . t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_vtype  shift, and go to state 386


State 361

   70 VAR: t_id SHORT_ASSIGN t_make t_open_paren MAPS . t_close_paren

    t_close_paren  shift, and go to state 387


State 362

   59 VAR: t_id SHORT_ASSIGN MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 59 (VAR)


State 363

  160 ELSEIF_SECOND: t_else t_if CONDITION BODY_FOR_LOOP .

    $default  reduce using rule 160 (ELSEIF_SECOND)


State 364

  207 MAPS: t_map t_open_sq t_vtype t_close_sq . t_vtype

    t_vtype  shift, and go to state 388


State 365

   71 VAR: t_var t_id t_id ASSIGNMENT t_id ST_EMBEDDED .

    $default  reduce using rule 71 (VAR)


State 366

   60 VAR: t_var t_id ASSIGNMENT MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 60 (VAR)


State 367

  187 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 389


State 368

  188 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MAKE .

    $default  reduce using rule 188 (ARRAY_BODY)


State 369

  137 FIRST_PART: FIRST_PART EXPR t_comma .

    $default  reduce using rule 137 (FIRST_PART)


State 370

  142 CASE_BODY: CASE_BODY LOOP_FILLING END_SYMBOLS .

    $default  reduce using rule 142 (CASE_BODY)


State 371

   87 FUNC_CALL: t_id . PARAM
   98 SHIFT_AC: t_id .
  102 METHOD_FULFILL: t_id .
  113 VALUE: t_id .
  181 POST_STATE: t_id . t_inc_const

    t_inc_const   shift, and go to state 390
    t_open_paren  shift, and go to state 172

    t_shift_const  reduce using rule 98 (SHIFT_AC)
    t_dot          reduce using rule 102 (METHOD_FULFILL)
    $default       reduce using rule 113 (VALUE)

    PARAM        go to state 178
    PARAM_START  go to state 179


State 372

  169 EXPR: EXPR . t_sign VALUE
  180 POST_STATE: EXPR .

    t_sign  shift, and go to state 212

    $default  reduce using rule 180 (POST_STATE)


State 373

  182 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE . BODY_FOR_LOOP

    t_open_br  shift, and go to state 215

    BODY_FOR_LOOP        go to state 391
    BODY_FOR_LOOP_START  go to state 217


State 374

   83 ASSIGNMENT: t_comma t_id ASSIGNMENT BOOLEAN t_comma .

    $default  reduce using rule 83 (ASSIGNMENT)


State 375

   82 ASSIGNMENT: t_comma t_id ASSIGNMENT EXPR t_comma .

    $default  reduce using rule 82 (ASSIGNMENT)


State 376

   86 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN BOOLEAN t_comma .

    $default  reduce using rule 86 (SHORT_ASSIGN)


State 377

   85 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN EXPR t_comma .

    $default  reduce using rule 85 (SHORT_ASSIGN)


State 378

  204 SLICE: t_id t_open_sq VALUE t_colon VALUE t_close_sq .

    $default  reduce using rule 204 (SLICE)


State 379

  199 PLENTY_OLD: t_open_br PLENTY t_close_br .

    $default  reduce using rule 199 (PLENTY_OLD)


State 380

  196 PLENTY: PLENTY_OLD t_comma . PLENTY

    t_open_br  shift, and go to state 352

    PLENTY      go to state 392
    PLENTY_OLD  go to state 356


State 381

  197 PLENTY_OLD: t_open_br ENUM t_close_br .

    $default  reduce using rule 197 (PLENTY_OLD)


State 382

  201 ENUM: ENUM t_comma . VALUE

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 163
    t_string            shift, and go to state 135
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 393


State 383

  216 STRUCT_ENUM: t_id . t_colon VALUE
  218            | t_id . t_colon t_id STRUCT_FIELD

    t_colon  shift, and go to state 394


State 384

  217 STRUCT_ENUM: STRUCT_ENUM . t_comma END_SYMBOLS t_id t_colon VALUE
  219            | STRUCT_ENUM . t_comma END_SYMBOLS t_id t_colon t_id STRUCT_FIELD
  220 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM . t_close_br
  221             | t_open_br END_SYMBOLS STRUCT_ENUM . t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS

    t_close_br  shift, and go to state 395
    t_comma     shift, and go to state 396


State 385

  224 ST_EMBEDDED: STRUCT_FIELD t_comma ST_EMBEDDED .

    $default  reduce using rule 224 (ST_EMBEDDED)


State 386

  202 MAKE: t_make t_open_paren MULTI_AR t_vtype . t_comma VALUE t_close_paren
  203     | t_make t_open_paren MULTI_AR t_vtype . t_comma VALUE t_comma t_int_const VALUE

    t_comma  shift, and go to state 397


State 387

   70 VAR: t_id SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren .

    $default  reduce using rule 70 (VAR)


State 388

  207 MAPS: t_map t_open_sq t_vtype t_close_sq t_vtype .

    $default  reduce using rule 207 (MAPS)


State 389

  187 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 352

    PLENTY      go to state 398
    PLENTY_OLD  go to state 356


State 390

  181 POST_STATE: t_id t_inc_const .

    $default  reduce using rule 181 (POST_STATE)


State 391

  182 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY_FOR_LOOP .

    $default  reduce using rule 182 (FOR)


State 392

  196 PLENTY: PLENTY_OLD t_comma PLENTY .

    $default  reduce using rule 196 (PLENTY)


State 393

  201 ENUM: ENUM t_comma VALUE .

    $default  reduce using rule 201 (ENUM)


State 394

  216 STRUCT_ENUM: t_id t_colon . VALUE
  218            | t_id t_colon . t_id STRUCT_FIELD

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 399
    t_string            shift, and go to state 135
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 400


State 395

  220 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_close_br .

    $default  reduce using rule 220 (STRUCT_FIELD)


State 396

  217 STRUCT_ENUM: STRUCT_ENUM t_comma . END_SYMBOLS t_id t_colon VALUE
  219            | STRUCT_ENUM t_comma . END_SYMBOLS t_id t_colon t_id STRUCT_FIELD
  221 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma . END_SYMBOLS t_close_br t_comma END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 401


State 397

  202 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma . VALUE t_close_paren
  203     | t_make t_open_paren MULTI_AR t_vtype t_comma . VALUE t_comma t_int_const VALUE

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 163
    t_string            shift, and go to state 135
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 402


State 398

  187 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 187 (ARRAY_BODY)


State 399

   87 FUNC_CALL: t_id . PARAM
   98 SHIFT_AC: t_id .
  102 METHOD_FULFILL: t_id .
  113 VALUE: t_id .
  218 STRUCT_ENUM: t_id t_colon t_id . STRUCT_FIELD

    t_open_br     shift, and go to state 316
    t_open_paren  shift, and go to state 172

    t_shift_const  reduce using rule 98 (SHIFT_AC)
    t_dot          reduce using rule 102 (METHOD_FULFILL)
    $default       reduce using rule 113 (VALUE)

    PARAM         go to state 178
    PARAM_START   go to state 179
    PLENTY_OLD    go to state 317
    STRUCT_FIELD  go to state 403


State 400

  216 STRUCT_ENUM: t_id t_colon VALUE .

    $default  reduce using rule 216 (STRUCT_ENUM)


State 401

  217 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS . t_id t_colon VALUE
  219            | STRUCT_ENUM t_comma END_SYMBOLS . t_id t_colon t_id STRUCT_FIELD
  221 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS . t_close_br t_comma END_SYMBOLS

    t_id        shift, and go to state 404
    t_close_br  shift, and go to state 405


State 402

  202 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE . t_close_paren
  203     | t_make t_open_paren MULTI_AR t_vtype t_comma VALUE . t_comma t_int_const VALUE

    t_comma        shift, and go to state 406
    t_close_paren  shift, and go to state 407


State 403

  218 STRUCT_ENUM: t_id t_colon t_id STRUCT_FIELD .

    $default  reduce using rule 218 (STRUCT_ENUM)


State 404

  217 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id . t_colon VALUE
  219            | STRUCT_ENUM t_comma END_SYMBOLS t_id . t_colon t_id STRUCT_FIELD

    t_colon  shift, and go to state 408


State 405

  221 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br . t_comma END_SYMBOLS

    t_comma  shift, and go to state 409


State 406

  203 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma . t_int_const VALUE

    t_int_const  shift, and go to state 410


State 407

  202 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren .

    $default  reduce using rule 202 (MAKE)


State 408

  217 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon . VALUE
  219            | STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon . t_id STRUCT_FIELD

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 411
    t_string            shift, and go to state 135
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 412


State 409

  221 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 413


State 410

  203 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const . VALUE

    t_int_const         shift, and go to state 132
    t_float_const       shift, and go to state 133
    t_id                shift, and go to state 163
    t_string            shift, and go to state 135
    t_rune              shift, and go to state 137
    t_blank_identifier  shift, and go to state 138
    t_pointer           shift, and go to state 98
    t_ampersand         shift, and go to state 99

    FUNC_CALL       go to state 164
    SHIFT           go to state 144
    SHIFT_AC        go to state 145
    METHOD          go to state 165
    METHOD_FULFILL  go to state 106
    POINTER         go to state 166
    VALUE           go to state 414


State 411

   87 FUNC_CALL: t_id . PARAM
   98 SHIFT_AC: t_id .
  102 METHOD_FULFILL: t_id .
  113 VALUE: t_id .
  219 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon t_id . STRUCT_FIELD

    t_open_br     shift, and go to state 316
    t_open_paren  shift, and go to state 172

    t_shift_const  reduce using rule 98 (SHIFT_AC)
    t_dot          reduce using rule 102 (METHOD_FULFILL)
    $default       reduce using rule 113 (VALUE)

    PARAM         go to state 178
    PARAM_START   go to state 179
    PLENTY_OLD    go to state 317
    STRUCT_FIELD  go to state 415


State 412

  217 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon VALUE .

    $default  reduce using rule 217 (STRUCT_ENUM)


State 413

  221 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS .

    $default  reduce using rule 221 (STRUCT_FIELD)


State 414

  203 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE .

    $default  reduce using rule 203 (MAKE)


State 415

  219 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon t_id STRUCT_FIELD .

    $default  reduce using rule 219 (STRUCT_ENUM)
