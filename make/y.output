Terminals unused in grammar

   t_constant
   t_chan
   t_go
   t_range
   t_select
   t_fallthrough
   t_or_const
   t_and_const
   t_param_const
   t_eq_const
   t_rel_const
   t_point_const
   t_punc
   t_char_const
   t_ampersand
   '+'
   '-'
   '*'
   '/'


Grammar

    0 $accept: START $end

    1 START: START GLOBAL END_SYMBOLS
    2      | GLOBAL END_SYMBOLS
    3      | START END_SYMBOLS

    4 GLOBAL: PACKAGE
    5       | IMPORT
    6       | FUNC
    7       | STRUCT
    8       | INTERFACE

    9 PACKAGE: t_package t_id

   10 IMPORT: t_import t_string
   11       | t_import t_open_paren PARAM_IMPORT t_close_paren
   12       | t_import t_open_paren t_enter PARAM_IMPORT t_close_paren
   13       | t_import t_id t_string

   14 FUNC: t_func t_id t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART

   15 FUNC_PARAM: FUNC_PARAM_FULFILL
   16           | FUNC_PARAM t_comma FUNC_PARAM_FULFILL

   17 FUNC_SECOND_PART: BODY
   18                 | FUNC_RETURN_VALUE TYPE_AND_STRUCT BODY
   19                 | FUNC_PARAM_SECOND BODY

   20 FUNC_PARAM_SECOND: FUNC_PARAM_SECOND_START FUNC_PARAM_SECOND_END
   21                  | t_open_paren t_close_paren

   22 FUNC_PARAM_SECOND_START: t_open_paren
   23                        | FUNC_PARAM_SECOND_START FUNC_PARAM_FULFILL_SECOND

   24 FUNC_PARAM_SECOND_END: FUNC_PARAM_FULFILL_SECOND_END t_close_paren

   25 FUNC_PARAM_FULFILL: t_id TYPE_AND_STRUCT
   26                   | t_id
   27                   | /* empty */

   28 FUNC_PARAM_FULFILL_SECOND: t_id TYPE_AND_STRUCT t_comma
   29                          | TYPE_AND_STRUCT t_comma
   30                          | t_enter

   31 FUNC_PARAM_FULFILL_SECOND_END: t_id TYPE_AND_STRUCT
   32                              | TYPE_AND_STRUCT
   33                              | t_enter

   34 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE_FULFILL
   35                  | FUNC_RETURN_VALUE FUNC_RETURN_VALUE_FULFILL

   36 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren TYPE_AND_STRUCT t_close_paren
   37                          | t_func t_open_paren t_close_paren

   38 TYPE_AND_STRUCT: t_vtype
   39                | t_id

   40 BODY: BODY_START BODY_END

   41 BODY_END: t_close_br

   42 BODY_START: t_open_br
   43           | BODY_START BODY_FILLING END_SYMBOLS
   44           | BODY_START END_SYMBOLS

   45 BODY_FILLING: VAR
   46             | FOR
   47             | SWITCH
   48             | GOTO
   49             | LABEL
   50             | IF
   51             | MULTI_AR
   52             | FUNC_CALL
   53             | SHORT_EXPR
   54             | ARRAY_BODY
   55             | RETURN
   56             | STRUCT
   57             | SLICE
   58             | DEFER
   59             | METHOD
   60             | INTERFACE

   61 VAR: t_var t_id ASSIGNMENT EXPR
   62    | t_var t_id ASSIGNMENT EXPR t_vtype
   63    | t_var t_id ASSIGNMENT BOOLEAN
   64    | t_id SHORT_ASSIGN EXPR
   65    | t_id ASSIGNMENT EXPR
   66    | t_id SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   67    | t_var t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   68    | t_id SHORT_ASSIGN BOOLEAN
   69    | t_id MULTI_AR ASSIGNMENT EXPR
   70    | t_var t_id ASSIGNMENT MAKE
   71    | t_id SHORT_ASSIGN MAKE
   72    | t_id MULTI_AR ASSIGNMENT MAKE
   73    | t_id SHORT_ASSIGN SLICE
   74    | t_id ASSIGNMENT SLICE
   75    | t_var t_id ASSIGNMENT SLICE
   76    | t_var t_id MAPS
   77    | t_id SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   78    | t_var t_id t_id ASSIGNMENT ST_EMBEDDED
   79    | t_var t_id ASSIGNMENT ST_EMBEDDED
   80    | t_id SHORT_ASSIGN ST_EMBEDDED
   81    | METHOD ASSIGNMENT VALUE
   82    | POINTER ASSIGNMENT EXPR
   83    | t_var t_id POINTER
   84    | t_var t_id POINTER ASSIGNMENT EXPR

   85 BOOLEAN: VALUE t_bool VALUE
   86        | BOOLEAN t_bool VALUE

   87 DEFER: t_defer FUNC_CALL

   88 ASSIGNMENT: t_vtype t_equality
   89           | t_equality
   90           | t_comma t_id ASSIGNMENT EXPR t_comma
   91           | t_comma t_id ASSIGNMENT BOOLEAN t_comma

   92 SHORT_ASSIGN: t_short_dec
   93             | t_comma t_id SHORT_ASSIGN EXPR t_comma
   94             | t_comma t_id SHORT_ASSIGN BOOLEAN t_comma

   95 FUNC_CALL: t_id PARAM

   96 PARAM: PARAM_START PARAM_END
   97      | t_open_paren t_close_paren

   98 PARAM_START: t_open_paren
   99            | PARAM_START PARAM_FULFILL

  100 PARAM_END: PARAM_END_FULFILL t_close_paren

  101 PARAM_END_FULFILL: EXPR
  102                  | t_enter

  103 PARAM_FULFILL: EXPR t_comma
  104              | t_enter

  105 SHIFT: SHIFT_AC t_shift_const SHIFT_AC

  106 SHIFT_AC: t_id
  107         | t_int_const

  108 METHOD: METHOD_FULFILL t_dot METHOD_FULFILL
  109       | METHOD t_dot METHOD_FULFILL

  110 METHOD_FULFILL: t_id
  111               | FUNC_CALL

  112 POINTER: t_pointer

  113 PARAM_IMPORT: t_string END_SYMBOLS
  114             | t_id t_string END_SYMBOLS
  115             | PARAM_IMPORT t_string END_SYMBOLS
  116             | PARAM_IMPORT t_id t_string END_SYMBOLS

  117 VALUE: t_int_const
  118      | t_float_const
  119      | t_id
  120      | t_string
  121      | t_rune
  122      | t_blank_identifier
  123      | FUNC_CALL
  124      | SHIFT
  125      | POINTER
  126      | METHOD
  127      | EXPR_START EXPR EXPR_END
  128      | EXPR_START BOOLEAN EXPR_END

  129 GOTO: t_goto t_id

  130 LABEL: t_id t_colon

  131 SWITCH: t_switch INIT_STATE t_semicolon EXPR SWITCH_BODY
  132       | t_switch EXPR SWITCH_BODY
  133       | t_switch SWITCH_BODY

  134 SWITCH_BODY: SWITCH_BODY_START SWITCH_BODY_END
  135            | SWITCH_BODY_START_WITH_DEFAULT SWITCH_BODY_END

  136 SWITCH_BODY_START: t_open_br
  137                  | SWITCH_BODY_START END_SYMBOLS
  138                  | SWITCH_BODY_START CASE

  139 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START DEFAULT
  140                               | SWITCH_BODY_START_WITH_DEFAULT CASE

  141 CASE: t_case CASE_STATEMENT CASE_BODY

  142 DEFAULT: t_default CASE_BODY

  143 MULTIPLE_ARG: FIRST_PART SECOND_PART

  144 FIRST_PART: EXPR t_comma
  145           | FIRST_PART EXPR t_comma

  146 SECOND_PART: EXPR

  147 CASE_STATEMENT: MULTIPLE_ARG
  148               | EXPR

  149 CASE_BODY: t_colon
  150          | CASE_BODY LOOP_FILLING END_SYMBOLS

  151 SWITCH_BODY_END: t_close_br

  152 IF: IF_FIRST MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD
  153   | IF_FIRST MULTY_ELSEIF_SECOND
  154   | IF_FIRST MULTY_ELSE_THIRD
  155   | IF_FIRST

  156 IF_FIRST: t_if CONDITION BODY_FOR_LOOP
  157         | t_if INIT_STATE t_semicolon CONDITION BODY_FOR_LOOP

  158 BODY_FOR_LOOP: BODY_FOR_LOOP_START BODY_FOR_LOOP_END

  159 BODY_FOR_LOOP_START: t_open_br
  160                    | t_open_br END_SYMBOLS
  161                    | BODY_FOR_LOOP_START LOOP_FILLING END_SYMBOLS

  162 BODY_FOR_LOOP_END: t_close_br

  163 LOOP_FILLING: BODY_FILLING
  164             | t_break
  165             | t_continue

  166 MULTY_ELSEIF_SECOND: ELSEIF_SECOND
  167                    | MULTY_ELSEIF_SECOND ELSEIF_SECOND

  168 ELSEIF_SECOND: t_else t_if CONDITION BODY_FOR_LOOP

  169 MULTY_ELSE_THIRD: ELSE_THIRD
  170                 | MULTY_ELSE_THIRD ELSE_THIRD

  171 ELSE_THIRD: t_else BODY_FOR_LOOP

  172 RETURN: t_return EXPR
  173       | t_return EXPR MANY_RETURN_START MANY_RETURN_START_END

  174 MANY_RETURN_START: t_comma
  175                  | MANY_RETURN_START EXPR t_comma

  176 MANY_RETURN_START_END: EXPR

  177 EXPR: VALUE
  178     | EXPR t_sign VALUE

  179 SHORT_EXPR: t_id t_short_expr t_id

  180 INIT_STATE: VAR
  181           | FUNC_CALL
  182           | /* empty */

  183 CONDITION: BOOLEAN
  184          | t_true
  185          | t_false
  186          | /* empty */

  187 POST_STATE: EXPR
  188           | t_id t_inc_const

  189 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY_FOR_LOOP
  190    | t_for CONDITION BODY_FOR_LOOP

  191 EXPR_START: t_open_paren

  192 EXPR_END: t_close_paren

  193 ARRAY_BODY: t_var t_id MULTI_AR t_vtype
  194           | t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  195           | t_var t_id MULTI_AR t_vtype ASSIGNMENT MAKE

  196 ARRAY_INDEX: t_open_sq t_int_const t_close_sq
  197            | t_open_sq t_id t_close_sq
  198            | t_open_sq t_string t_close_sq
  199            | t_open_sq t_close_sq

  200 MULTI_AR: ARRAY_INDEX
  201         | ARRAY_INDEX MULTI_AR

  202 PLENTY: PLENTY_OLD
  203       | PLENTY_OLD t_comma PLENTY

  204 PLENTY_OLD: t_open_br ENUM t_close_br
  205           | t_open_br t_close_br
  206           | t_open_br PLENTY t_close_br

  207 ENUM: VALUE
  208     | ENUM t_comma VALUE

  209 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  210     | t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

  211 SLICE: t_id t_open_sq VALUE t_colon VALUE t_close_sq
  212      | t_id t_open_sq t_colon VALUE t_close_sq
  213      | t_id t_open_sq VALUE t_colon t_close_sq

  214 MAPS: t_map t_open_sq t_vtype t_close_sq t_vtype

  215 STRUCT: STRUCT_START

  216 STRUCT_BODY: ENUM t_vtype
  217            | t_id t_id
  218            | t_id
  219            | t_id METHOD
  220            | STRUCT_BODY END_SYMBOLS t_id METHOD
  221            | STRUCT_BODY END_SYMBOLS t_id t_vtype
  222            | STRUCT_BODY END_SYMBOLS t_id t_id
  223            | STRUCT_BODY END_SYMBOLS t_id

  224 STRUCT_START: t_type t_id t_struct_const t_open_br STRUCT_END
  225             | t_type t_id t_struct_const t_open_br STRUCT_BODY STRUCT_END
  226             | t_type t_id t_struct_const t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END
  227             | t_type t_id t_struct_const t_enter

  228 STRUCT_END: t_close_br
  229           | t_enter t_close_br

  230 FIELD: t_id FIELD_BODY

  231 FIELD_BODY: FIELD_START FIELD_END

  232 FIELD_START: t_open_br
  233            | FIELD_START FIELD_FULFILL

  234 FIELD_FULFILL: VALUE t_colon VALUE t_comma
  235              | VALUE t_colon FIELD t_comma
  236              | t_enter

  237 FIELD_END: FIELD_END_FULFILL t_close_br

  238 FIELD_END_FULFILL: VALUE t_colon VALUE
  239                  | t_enter

  240 ST_EMBEDDED: FIELD

  241 END_SYMBOLS: t_semicolon
  242            | t_enter
  243            | t_eof

  244 INTERFACE: INT_START

  245 INT_START: t_type t_id t_interface t_open_br INT_BODY INT_END
  246          | t_type t_id t_interface t_open_br END_SYMBOLS INT_BODY INT_END
  247          | t_type t_id t_interface t_enter t_open_br END_SYMBOLS INT_BODY INT_END

  248 INT_BODY: FUNC_CALL
  249         | FUNC_CALL t_vtype
  250         | t_id t_open_paren t_vtype t_close_paren
  251         | INT_BODY END_SYMBOLS t_id t_open_paren t_vtype t_close_paren
  252         | INT_BODY END_SYMBOLS FUNC_CALL t_vtype
  253         | INT_BODY END_SYMBOLS FUNC_CALL

  254 INT_END: t_close_br
  255        | t_enter t_close_br


Terminals, with rules where they appear

$end (0) 0
'*' (42)
'+' (43)
'-' (45)
'/' (47)
error (256)
t_vtype (258) 38 62 66 67 88 193 194 195 209 210 214 216 221 249 250
    251 252
t_constant (259)
t_case (260) 141
t_func (261) 14 36 37
t_import (262) 10 11 12 13
t_chan (263)
t_defer (264) 87
t_go (265)
t_interface (266) 245 246 247
t_default (267) 142
t_var (268) 61 62 63 67 70 75 76 78 79 83 84 193 194 195
t_range (269)
t_map (270) 214
t_package (271) 9
t_if (272) 156 157 168
t_select (273)
t_switch (274) 131 132 133
t_fallthrough (275)
t_else (276) 168 171
t_type (277) 224 225 226 227 245 246 247
t_for (278) 189 190
t_goto (279) 129
t_continue (280) 165
t_break (281) 164
t_return (282) 172 173
t_struct_const (283) 224 225 226 227
t_or_const (284)
t_and_const (285)
t_param_const (286)
t_eq_const (287)
t_rel_const (288)
t_shift_const (289) 105
t_inc_const (290) 188
t_point_const (291)
t_punc (292)
t_int_const (293) 107 117 196 210
t_float_const (294) 118
t_char_const (295)
t_id (296) 9 13 14 25 26 28 31 39 61 62 63 64 65 66 67 68 69 70 71
    72 73 74 75 76 77 78 79 80 83 84 90 91 93 94 95 106 110 114 116
    119 129 130 179 188 193 194 195 197 211 212 213 217 218 219 220
    221 222 223 224 225 226 227 230 245 246 247 250 251
t_string (297) 10 13 113 114 115 116 120 198
t_short_dec (298) 92
t_open_br (299) 42 136 159 160 204 205 206 224 225 226 232 245 246
    247
t_close_br (300) 41 151 162 204 205 206 228 229 237 254 255
t_sign (301) 178
t_comma (302) 16 28 29 90 91 93 94 103 144 145 174 175 203 208 209
    210 234 235
t_equality (303) 88 89
t_open_paren (304) 11 12 14 21 22 36 37 77 97 98 191 209 210 250 251
t_close_paren (305) 11 12 14 21 24 36 37 77 97 100 192 209 250 251
t_open_sq (306) 196 197 198 199 211 212 213 214
t_close_sq (307) 196 197 198 199 211 212 213 214
t_bool (308) 85 86
t_rune (309) 121
t_semicolon (310) 131 157 189 241
t_blank_identifier (311) 122
t_dot (312) 108 109
t_colon (313) 130 149 211 212 213 234 235 238
t_true (314) 184
t_false (315) 185
t_short_expr (316) 179
t_make (317) 77 209 210
t_enter (318) 12 30 33 102 104 227 229 236 239 242 247 255
t_eof (319) 243
t_pointer (320) 112
t_ampersand (321)


Nonterminals, with rules where they appear

$accept (71)
    on left: 0
START (72)
    on left: 1 2 3, on right: 0 1 3
GLOBAL (73)
    on left: 4 5 6 7 8, on right: 1 2
PACKAGE (74)
    on left: 9, on right: 4
IMPORT (75)
    on left: 10 11 12 13, on right: 5
FUNC (76)
    on left: 14, on right: 6
FUNC_PARAM (77)
    on left: 15 16, on right: 14 16
FUNC_SECOND_PART (78)
    on left: 17 18 19, on right: 14
FUNC_PARAM_SECOND (79)
    on left: 20 21, on right: 19
FUNC_PARAM_SECOND_START (80)
    on left: 22 23, on right: 20 23
FUNC_PARAM_SECOND_END (81)
    on left: 24, on right: 20
FUNC_PARAM_FULFILL (82)
    on left: 25 26 27, on right: 15 16
FUNC_PARAM_FULFILL_SECOND (83)
    on left: 28 29 30, on right: 23
FUNC_PARAM_FULFILL_SECOND_END (84)
    on left: 31 32 33, on right: 24
FUNC_RETURN_VALUE (85)
    on left: 34 35, on right: 18 35
FUNC_RETURN_VALUE_FULFILL (86)
    on left: 36 37, on right: 34 35
TYPE_AND_STRUCT (87)
    on left: 38 39, on right: 18 25 28 29 31 32 36
BODY (88)
    on left: 40, on right: 17 18 19
BODY_END (89)
    on left: 41, on right: 40
BODY_START (90)
    on left: 42 43 44, on right: 40 43 44
BODY_FILLING (91)
    on left: 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60, on right:
    43 163
VAR (92)
    on left: 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78
    79 80 81 82 83 84, on right: 45 180
BOOLEAN (93)
    on left: 85 86, on right: 63 68 86 91 94 128 183
DEFER (94)
    on left: 87, on right: 58
ASSIGNMENT (95)
    on left: 88 89 90 91, on right: 61 62 63 65 67 69 70 72 74 75 78
    79 81 82 84 90 91 194 195
SHORT_ASSIGN (96)
    on left: 92 93 94, on right: 64 66 68 71 73 77 80 93 94
FUNC_CALL (97)
    on left: 95, on right: 52 87 111 123 181 248 249 252 253
PARAM (98)
    on left: 96 97, on right: 95
PARAM_START (99)
    on left: 98 99, on right: 96 99
PARAM_END (100)
    on left: 100, on right: 96
PARAM_END_FULFILL (101)
    on left: 101 102, on right: 100
PARAM_FULFILL (102)
    on left: 103 104, on right: 99
SHIFT (103)
    on left: 105, on right: 124
SHIFT_AC (104)
    on left: 106 107, on right: 105
METHOD (105)
    on left: 108 109, on right: 59 81 109 126 219 220
METHOD_FULFILL (106)
    on left: 110 111, on right: 108 109
POINTER (107)
    on left: 112, on right: 82 83 84 125
PARAM_IMPORT (108)
    on left: 113 114 115 116, on right: 11 12 115 116
VALUE (109)
    on left: 117 118 119 120 121 122 123 124 125 126 127 128, on right:
    81 85 86 177 178 207 208 209 210 211 212 213 234 235 238
GOTO (110)
    on left: 129, on right: 48
LABEL (111)
    on left: 130, on right: 49
SWITCH (112)
    on left: 131 132 133, on right: 47
SWITCH_BODY (113)
    on left: 134 135, on right: 131 132 133
SWITCH_BODY_START (114)
    on left: 136 137 138, on right: 134 137 138 139
SWITCH_BODY_START_WITH_DEFAULT (115)
    on left: 139 140, on right: 135 140
CASE (116)
    on left: 141, on right: 138 140
DEFAULT (117)
    on left: 142, on right: 139
MULTIPLE_ARG (118)
    on left: 143, on right: 147
FIRST_PART (119)
    on left: 144 145, on right: 143 145
SECOND_PART (120)
    on left: 146, on right: 143
CASE_STATEMENT (121)
    on left: 147 148, on right: 141
CASE_BODY (122)
    on left: 149 150, on right: 141 142 150
SWITCH_BODY_END (123)
    on left: 151, on right: 134 135
IF (124)
    on left: 152 153 154 155, on right: 50
IF_FIRST (125)
    on left: 156 157, on right: 152 153 154 155
BODY_FOR_LOOP (126)
    on left: 158, on right: 156 157 168 171 189 190
BODY_FOR_LOOP_START (127)
    on left: 159 160 161, on right: 158 161
BODY_FOR_LOOP_END (128)
    on left: 162, on right: 158
LOOP_FILLING (129)
    on left: 163 164 165, on right: 150 161
MULTY_ELSEIF_SECOND (130)
    on left: 166 167, on right: 152 153 167
ELSEIF_SECOND (131)
    on left: 168, on right: 166 167
MULTY_ELSE_THIRD (132)
    on left: 169 170, on right: 152 154 170
ELSE_THIRD (133)
    on left: 171, on right: 169 170
RETURN (134)
    on left: 172 173, on right: 55
MANY_RETURN_START (135)
    on left: 174 175, on right: 173 175
MANY_RETURN_START_END (136)
    on left: 176, on right: 173
EXPR (137)
    on left: 177 178, on right: 61 62 64 65 69 82 84 90 93 101 103
    127 131 132 144 145 146 148 172 173 175 176 178 187
SHORT_EXPR (138)
    on left: 179, on right: 53
INIT_STATE (139)
    on left: 180 181 182, on right: 131 157 189
CONDITION (140)
    on left: 183 184 185 186, on right: 156 157 168 189 190
POST_STATE (141)
    on left: 187 188, on right: 189
FOR (142)
    on left: 189 190, on right: 46
EXPR_START (143)
    on left: 191, on right: 127 128
EXPR_END (144)
    on left: 192, on right: 127 128
ARRAY_BODY (145)
    on left: 193 194 195, on right: 54
ARRAY_INDEX (146)
    on left: 196 197 198 199, on right: 200 201
MULTI_AR (147)
    on left: 200 201, on right: 51 66 67 69 72 193 194 195 201 209
    210
PLENTY (148)
    on left: 202 203, on right: 66 67 194 203 206
PLENTY_OLD (149)
    on left: 204 205 206, on right: 202 203
ENUM (150)
    on left: 207 208, on right: 204 208 216
MAKE (151)
    on left: 209 210, on right: 70 71 72 195
SLICE (152)
    on left: 211 212 213, on right: 57 73 74 75
MAPS (153)
    on left: 214, on right: 76 77
STRUCT (154)
    on left: 215, on right: 7 56
STRUCT_BODY (155)
    on left: 216 217 218 219 220 221 222 223, on right: 220 221 222
    223 225 226
STRUCT_START (156)
    on left: 224 225 226 227, on right: 215
STRUCT_END (157)
    on left: 228 229, on right: 224 225 226
FIELD (158)
    on left: 230, on right: 235 240
FIELD_BODY (159)
    on left: 231, on right: 230
FIELD_START (160)
    on left: 232 233, on right: 231 233
FIELD_FULFILL (161)
    on left: 234 235 236, on right: 233
FIELD_END (162)
    on left: 237, on right: 231
FIELD_END_FULFILL (163)
    on left: 238 239, on right: 237
ST_EMBEDDED (164)
    on left: 240, on right: 78 79 80
END_SYMBOLS (165)
    on left: 241 242 243, on right: 1 2 3 43 44 113 114 115 116 137
    150 160 161 220 221 222 223 226 246 247 251 252 253
INTERFACE (166)
    on left: 244, on right: 8 60
INT_START (167)
    on left: 245 246 247, on right: 244
INT_BODY (168)
    on left: 248 249 250 251 252 253, on right: 245 246 247 251 252
    253
INT_END (169)
    on left: 254 255, on right: 245 246 247


State 0

    0 $accept: . START $end

    t_func     shift, and go to state 1
    t_import   shift, and go to state 2
    t_package  shift, and go to state 3
    t_type     shift, and go to state 4

    START         go to state 5
    GLOBAL        go to state 6
    PACKAGE       go to state 7
    IMPORT        go to state 8
    FUNC          go to state 9
    STRUCT        go to state 10
    STRUCT_START  go to state 11
    INTERFACE     go to state 12
    INT_START     go to state 13


State 1

   14 FUNC: t_func . t_id t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART

    t_id  shift, and go to state 14


State 2

   10 IMPORT: t_import . t_string
   11       | t_import . t_open_paren PARAM_IMPORT t_close_paren
   12       | t_import . t_open_paren t_enter PARAM_IMPORT t_close_paren
   13       | t_import . t_id t_string

    t_id          shift, and go to state 15
    t_string      shift, and go to state 16
    t_open_paren  shift, and go to state 17


State 3

    9 PACKAGE: t_package . t_id

    t_id  shift, and go to state 18


State 4

  224 STRUCT_START: t_type . t_id t_struct_const t_open_br STRUCT_END
  225             | t_type . t_id t_struct_const t_open_br STRUCT_BODY STRUCT_END
  226             | t_type . t_id t_struct_const t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END
  227             | t_type . t_id t_struct_const t_enter
  245 INT_START: t_type . t_id t_interface t_open_br INT_BODY INT_END
  246          | t_type . t_id t_interface t_open_br END_SYMBOLS INT_BODY INT_END
  247          | t_type . t_id t_interface t_enter t_open_br END_SYMBOLS INT_BODY INT_END

    t_id  shift, and go to state 19


State 5

    0 $accept: START . $end
    1 START: START . GLOBAL END_SYMBOLS
    3      | START . END_SYMBOLS

    $end         shift, and go to state 20
    t_func       shift, and go to state 1
    t_import     shift, and go to state 2
    t_package    shift, and go to state 3
    t_type       shift, and go to state 4
    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    GLOBAL        go to state 24
    PACKAGE       go to state 7
    IMPORT        go to state 8
    FUNC          go to state 9
    STRUCT        go to state 10
    STRUCT_START  go to state 11
    END_SYMBOLS   go to state 25
    INTERFACE     go to state 12
    INT_START     go to state 13


State 6

    2 START: GLOBAL . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 26


State 7

    4 GLOBAL: PACKAGE .

    $default  reduce using rule 4 (GLOBAL)


State 8

    5 GLOBAL: IMPORT .

    $default  reduce using rule 5 (GLOBAL)


State 9

    6 GLOBAL: FUNC .

    $default  reduce using rule 6 (GLOBAL)


State 10

    7 GLOBAL: STRUCT .

    $default  reduce using rule 7 (GLOBAL)


State 11

  215 STRUCT: STRUCT_START .

    $default  reduce using rule 215 (STRUCT)


State 12

    8 GLOBAL: INTERFACE .

    $default  reduce using rule 8 (GLOBAL)


State 13

  244 INTERFACE: INT_START .

    $default  reduce using rule 244 (INTERFACE)


State 14

   14 FUNC: t_func t_id . t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART

    t_open_paren  shift, and go to state 27


State 15

   13 IMPORT: t_import t_id . t_string

    t_string  shift, and go to state 28


State 16

   10 IMPORT: t_import t_string .

    $default  reduce using rule 10 (IMPORT)


State 17

   11 IMPORT: t_import t_open_paren . PARAM_IMPORT t_close_paren
   12       | t_import t_open_paren . t_enter PARAM_IMPORT t_close_paren

    t_id      shift, and go to state 29
    t_string  shift, and go to state 30
    t_enter   shift, and go to state 31

    PARAM_IMPORT  go to state 32


State 18

    9 PACKAGE: t_package t_id .

    $default  reduce using rule 9 (PACKAGE)


State 19

  224 STRUCT_START: t_type t_id . t_struct_const t_open_br STRUCT_END
  225             | t_type t_id . t_struct_const t_open_br STRUCT_BODY STRUCT_END
  226             | t_type t_id . t_struct_const t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END
  227             | t_type t_id . t_struct_const t_enter
  245 INT_START: t_type t_id . t_interface t_open_br INT_BODY INT_END
  246          | t_type t_id . t_interface t_open_br END_SYMBOLS INT_BODY INT_END
  247          | t_type t_id . t_interface t_enter t_open_br END_SYMBOLS INT_BODY INT_END

    t_interface     shift, and go to state 33
    t_struct_const  shift, and go to state 34


State 20

    0 $accept: START $end .

    $default  accept


State 21

  241 END_SYMBOLS: t_semicolon .

    $default  reduce using rule 241 (END_SYMBOLS)


State 22

  242 END_SYMBOLS: t_enter .

    $default  reduce using rule 242 (END_SYMBOLS)


State 23

  243 END_SYMBOLS: t_eof .

    $default  reduce using rule 243 (END_SYMBOLS)


State 24

    1 START: START GLOBAL . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 35


State 25

    3 START: START END_SYMBOLS .

    $default  reduce using rule 3 (START)


State 26

    2 START: GLOBAL END_SYMBOLS .

    $default  reduce using rule 2 (START)


State 27

   14 FUNC: t_func t_id t_open_paren . FUNC_PARAM t_close_paren FUNC_SECOND_PART

    t_id  shift, and go to state 36

    $default  reduce using rule 27 (FUNC_PARAM_FULFILL)

    FUNC_PARAM          go to state 37
    FUNC_PARAM_FULFILL  go to state 38


State 28

   13 IMPORT: t_import t_id t_string .

    $default  reduce using rule 13 (IMPORT)


State 29

  114 PARAM_IMPORT: t_id . t_string END_SYMBOLS

    t_string  shift, and go to state 39


State 30

  113 PARAM_IMPORT: t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 40


State 31

   12 IMPORT: t_import t_open_paren t_enter . PARAM_IMPORT t_close_paren

    t_id      shift, and go to state 29
    t_string  shift, and go to state 30

    PARAM_IMPORT  go to state 41


State 32

   11 IMPORT: t_import t_open_paren PARAM_IMPORT . t_close_paren
  115 PARAM_IMPORT: PARAM_IMPORT . t_string END_SYMBOLS
  116             | PARAM_IMPORT . t_id t_string END_SYMBOLS

    t_id           shift, and go to state 42
    t_string       shift, and go to state 43
    t_close_paren  shift, and go to state 44


State 33

  245 INT_START: t_type t_id t_interface . t_open_br INT_BODY INT_END
  246          | t_type t_id t_interface . t_open_br END_SYMBOLS INT_BODY INT_END
  247          | t_type t_id t_interface . t_enter t_open_br END_SYMBOLS INT_BODY INT_END

    t_open_br  shift, and go to state 45
    t_enter    shift, and go to state 46


State 34

  224 STRUCT_START: t_type t_id t_struct_const . t_open_br STRUCT_END
  225             | t_type t_id t_struct_const . t_open_br STRUCT_BODY STRUCT_END
  226             | t_type t_id t_struct_const . t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END
  227             | t_type t_id t_struct_const . t_enter

    t_open_br  shift, and go to state 47
    t_enter    shift, and go to state 48


State 35

    1 START: START GLOBAL END_SYMBOLS .

    $default  reduce using rule 1 (START)


State 36

   25 FUNC_PARAM_FULFILL: t_id . TYPE_AND_STRUCT
   26                   | t_id .

    t_vtype  shift, and go to state 49
    t_id     shift, and go to state 50

    $default  reduce using rule 26 (FUNC_PARAM_FULFILL)

    TYPE_AND_STRUCT  go to state 51


State 37

   14 FUNC: t_func t_id t_open_paren FUNC_PARAM . t_close_paren FUNC_SECOND_PART
   16 FUNC_PARAM: FUNC_PARAM . t_comma FUNC_PARAM_FULFILL

    t_comma        shift, and go to state 52
    t_close_paren  shift, and go to state 53


State 38

   15 FUNC_PARAM: FUNC_PARAM_FULFILL .

    $default  reduce using rule 15 (FUNC_PARAM)


State 39

  114 PARAM_IMPORT: t_id t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 54


State 40

  113 PARAM_IMPORT: t_string END_SYMBOLS .

    $default  reduce using rule 113 (PARAM_IMPORT)


State 41

   12 IMPORT: t_import t_open_paren t_enter PARAM_IMPORT . t_close_paren
  115 PARAM_IMPORT: PARAM_IMPORT . t_string END_SYMBOLS
  116             | PARAM_IMPORT . t_id t_string END_SYMBOLS

    t_id           shift, and go to state 42
    t_string       shift, and go to state 43
    t_close_paren  shift, and go to state 55


State 42

  116 PARAM_IMPORT: PARAM_IMPORT t_id . t_string END_SYMBOLS

    t_string  shift, and go to state 56


State 43

  115 PARAM_IMPORT: PARAM_IMPORT t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 57


State 44

   11 IMPORT: t_import t_open_paren PARAM_IMPORT t_close_paren .

    $default  reduce using rule 11 (IMPORT)


State 45

  245 INT_START: t_type t_id t_interface t_open_br . INT_BODY INT_END
  246          | t_type t_id t_interface t_open_br . END_SYMBOLS INT_BODY INT_END

    t_id         shift, and go to state 58
    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    FUNC_CALL    go to state 59
    END_SYMBOLS  go to state 60
    INT_BODY     go to state 61


State 46

  247 INT_START: t_type t_id t_interface t_enter . t_open_br END_SYMBOLS INT_BODY INT_END

    t_open_br  shift, and go to state 62


State 47

  224 STRUCT_START: t_type t_id t_struct_const t_open_br . STRUCT_END
  225             | t_type t_id t_struct_const t_open_br . STRUCT_BODY STRUCT_END
  226             | t_type t_id t_struct_const t_open_br . END_SYMBOLS STRUCT_BODY STRUCT_END

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_close_br          shift, and go to state 67
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_semicolon         shift, and go to state 21
    t_blank_identifier  shift, and go to state 70
    t_enter             shift, and go to state 71
    t_eof               shift, and go to state 23
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 79
    EXPR_START      go to state 80
    ENUM            go to state 81
    STRUCT_BODY     go to state 82
    STRUCT_END      go to state 83
    END_SYMBOLS     go to state 84


State 48

  227 STRUCT_START: t_type t_id t_struct_const t_enter .

    $default  reduce using rule 227 (STRUCT_START)


State 49

   38 TYPE_AND_STRUCT: t_vtype .

    $default  reduce using rule 38 (TYPE_AND_STRUCT)


State 50

   39 TYPE_AND_STRUCT: t_id .

    $default  reduce using rule 39 (TYPE_AND_STRUCT)


State 51

   25 FUNC_PARAM_FULFILL: t_id TYPE_AND_STRUCT .

    $default  reduce using rule 25 (FUNC_PARAM_FULFILL)


State 52

   16 FUNC_PARAM: FUNC_PARAM t_comma . FUNC_PARAM_FULFILL

    t_id  shift, and go to state 36

    $default  reduce using rule 27 (FUNC_PARAM_FULFILL)

    FUNC_PARAM_FULFILL  go to state 85


State 53

   14 FUNC: t_func t_id t_open_paren FUNC_PARAM t_close_paren . FUNC_SECOND_PART

    t_func        shift, and go to state 86
    t_open_br     shift, and go to state 87
    t_open_paren  shift, and go to state 88

    FUNC_SECOND_PART           go to state 89
    FUNC_PARAM_SECOND          go to state 90
    FUNC_PARAM_SECOND_START    go to state 91
    FUNC_RETURN_VALUE          go to state 92
    FUNC_RETURN_VALUE_FULFILL  go to state 93
    BODY                       go to state 94
    BODY_START                 go to state 95


State 54

  114 PARAM_IMPORT: t_id t_string END_SYMBOLS .

    $default  reduce using rule 114 (PARAM_IMPORT)


State 55

   12 IMPORT: t_import t_open_paren t_enter PARAM_IMPORT t_close_paren .

    $default  reduce using rule 12 (IMPORT)


State 56

  116 PARAM_IMPORT: PARAM_IMPORT t_id t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 96


State 57

  115 PARAM_IMPORT: PARAM_IMPORT t_string END_SYMBOLS .

    $default  reduce using rule 115 (PARAM_IMPORT)


State 58

   95 FUNC_CALL: t_id . PARAM
  250 INT_BODY: t_id . t_open_paren t_vtype t_close_paren

    t_open_paren  shift, and go to state 97

    PARAM        go to state 98
    PARAM_START  go to state 99


State 59

  248 INT_BODY: FUNC_CALL .
  249         | FUNC_CALL . t_vtype

    t_vtype  shift, and go to state 100

    $default  reduce using rule 248 (INT_BODY)


State 60

  246 INT_START: t_type t_id t_interface t_open_br END_SYMBOLS . INT_BODY INT_END

    t_id  shift, and go to state 58

    FUNC_CALL  go to state 59
    INT_BODY   go to state 101


State 61

  245 INT_START: t_type t_id t_interface t_open_br INT_BODY . INT_END
  251 INT_BODY: INT_BODY . END_SYMBOLS t_id t_open_paren t_vtype t_close_paren
  252         | INT_BODY . END_SYMBOLS FUNC_CALL t_vtype
  253         | INT_BODY . END_SYMBOLS FUNC_CALL

    t_close_br   shift, and go to state 102
    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 103
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 104
    INT_END      go to state 105


State 62

  247 INT_START: t_type t_id t_interface t_enter t_open_br . END_SYMBOLS INT_BODY INT_END

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 106


State 63

  107 SHIFT_AC: t_int_const .
  117 VALUE: t_int_const .

    t_shift_const  reduce using rule 107 (SHIFT_AC)
    $default       reduce using rule 117 (VALUE)


State 64

  118 VALUE: t_float_const .

    $default  reduce using rule 118 (VALUE)


State 65

   95 FUNC_CALL: t_id . PARAM
  106 SHIFT_AC: t_id .
  110 METHOD_FULFILL: t_id .
  119 VALUE: t_id .
  217 STRUCT_BODY: t_id . t_id
  218            | t_id .
  219            | t_id . METHOD

    t_id          shift, and go to state 107
    t_open_paren  shift, and go to state 108

    t_vtype        reduce using rule 119 (VALUE)
    t_shift_const  reduce using rule 106 (SHIFT_AC)
    t_comma        reduce using rule 119 (VALUE)
    t_dot          reduce using rule 110 (METHOD_FULFILL)
    $default       reduce using rule 218 (STRUCT_BODY)

    FUNC_CALL       go to state 109
    PARAM           go to state 98
    PARAM_START     go to state 99
    METHOD          go to state 110
    METHOD_FULFILL  go to state 77


State 66

  120 VALUE: t_string .

    $default  reduce using rule 120 (VALUE)


State 67

  228 STRUCT_END: t_close_br .

    $default  reduce using rule 228 (STRUCT_END)


State 68

  191 EXPR_START: t_open_paren .

    $default  reduce using rule 191 (EXPR_START)


State 69

  121 VALUE: t_rune .

    $default  reduce using rule 121 (VALUE)


State 70

  122 VALUE: t_blank_identifier .

    $default  reduce using rule 122 (VALUE)


State 71

  229 STRUCT_END: t_enter . t_close_br
  242 END_SYMBOLS: t_enter .

    t_close_br  shift, and go to state 111

    $default  reduce using rule 242 (END_SYMBOLS)


State 72

  112 POINTER: t_pointer .

    $default  reduce using rule 112 (POINTER)


State 73

  111 METHOD_FULFILL: FUNC_CALL .
  123 VALUE: FUNC_CALL .

    t_dot     reduce using rule 111 (METHOD_FULFILL)
    $default  reduce using rule 123 (VALUE)


State 74

  124 VALUE: SHIFT .

    $default  reduce using rule 124 (VALUE)


State 75

  105 SHIFT: SHIFT_AC . t_shift_const SHIFT_AC

    t_shift_const  shift, and go to state 112


State 76

  109 METHOD: METHOD . t_dot METHOD_FULFILL
  126 VALUE: METHOD .

    t_dot  shift, and go to state 113

    $default  reduce using rule 126 (VALUE)


State 77

  108 METHOD: METHOD_FULFILL . t_dot METHOD_FULFILL

    t_dot  shift, and go to state 114


State 78

  125 VALUE: POINTER .

    $default  reduce using rule 125 (VALUE)


State 79

  207 ENUM: VALUE .

    $default  reduce using rule 207 (ENUM)


State 80

  127 VALUE: EXPR_START . EXPR EXPR_END
  128      | EXPR_START . BOOLEAN EXPR_END

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    BOOLEAN         go to state 116
    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 117
    EXPR            go to state 118
    EXPR_START      go to state 80


State 81

  208 ENUM: ENUM . t_comma VALUE
  216 STRUCT_BODY: ENUM . t_vtype

    t_vtype  shift, and go to state 119
    t_comma  shift, and go to state 120


State 82

  220 STRUCT_BODY: STRUCT_BODY . END_SYMBOLS t_id METHOD
  221            | STRUCT_BODY . END_SYMBOLS t_id t_vtype
  222            | STRUCT_BODY . END_SYMBOLS t_id t_id
  223            | STRUCT_BODY . END_SYMBOLS t_id
  225 STRUCT_START: t_type t_id t_struct_const t_open_br STRUCT_BODY . STRUCT_END

    t_close_br   shift, and go to state 67
    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 71
    t_eof        shift, and go to state 23

    STRUCT_END   go to state 121
    END_SYMBOLS  go to state 122


State 83

  224 STRUCT_START: t_type t_id t_struct_const t_open_br STRUCT_END .

    $default  reduce using rule 224 (STRUCT_START)


State 84

  226 STRUCT_START: t_type t_id t_struct_const t_open_br END_SYMBOLS . STRUCT_BODY STRUCT_END

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 79
    EXPR_START      go to state 80
    ENUM            go to state 81
    STRUCT_BODY     go to state 123


State 85

   16 FUNC_PARAM: FUNC_PARAM t_comma FUNC_PARAM_FULFILL .

    $default  reduce using rule 16 (FUNC_PARAM)


State 86

   36 FUNC_RETURN_VALUE_FULFILL: t_func . t_open_paren TYPE_AND_STRUCT t_close_paren
   37                          | t_func . t_open_paren t_close_paren

    t_open_paren  shift, and go to state 124


State 87

   42 BODY_START: t_open_br .

    $default  reduce using rule 42 (BODY_START)


State 88

   21 FUNC_PARAM_SECOND: t_open_paren . t_close_paren
   22 FUNC_PARAM_SECOND_START: t_open_paren .

    t_close_paren  shift, and go to state 125

    $default  reduce using rule 22 (FUNC_PARAM_SECOND_START)


State 89

   14 FUNC: t_func t_id t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART .

    $default  reduce using rule 14 (FUNC)


State 90

   19 FUNC_SECOND_PART: FUNC_PARAM_SECOND . BODY

    t_open_br  shift, and go to state 87

    BODY        go to state 126
    BODY_START  go to state 95


State 91

   20 FUNC_PARAM_SECOND: FUNC_PARAM_SECOND_START . FUNC_PARAM_SECOND_END
   23 FUNC_PARAM_SECOND_START: FUNC_PARAM_SECOND_START . FUNC_PARAM_FULFILL_SECOND

    t_vtype  shift, and go to state 49
    t_id     shift, and go to state 127
    t_enter  shift, and go to state 128

    FUNC_PARAM_SECOND_END          go to state 129
    FUNC_PARAM_FULFILL_SECOND      go to state 130
    FUNC_PARAM_FULFILL_SECOND_END  go to state 131
    TYPE_AND_STRUCT                go to state 132


State 92

   18 FUNC_SECOND_PART: FUNC_RETURN_VALUE . TYPE_AND_STRUCT BODY
   35 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE . FUNC_RETURN_VALUE_FULFILL

    t_vtype  shift, and go to state 49
    t_func   shift, and go to state 86
    t_id     shift, and go to state 50

    FUNC_RETURN_VALUE_FULFILL  go to state 133
    TYPE_AND_STRUCT            go to state 134


State 93

   34 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE_FULFILL .

    $default  reduce using rule 34 (FUNC_RETURN_VALUE)


State 94

   17 FUNC_SECOND_PART: BODY .

    $default  reduce using rule 17 (FUNC_SECOND_PART)


State 95

   40 BODY: BODY_START . BODY_END
   43 BODY_START: BODY_START . BODY_FILLING END_SYMBOLS
   44           | BODY_START . END_SYMBOLS

    t_defer      shift, and go to state 135
    t_var        shift, and go to state 136
    t_if         shift, and go to state 137
    t_switch     shift, and go to state 138
    t_type       shift, and go to state 4
    t_for        shift, and go to state 139
    t_goto       shift, and go to state 140
    t_return     shift, and go to state 141
    t_id         shift, and go to state 142
    t_close_br   shift, and go to state 143
    t_open_sq    shift, and go to state 144
    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23
    t_pointer    shift, and go to state 72

    BODY_END        go to state 145
    BODY_FILLING    go to state 146
    VAR             go to state 147
    DEFER           go to state 148
    FUNC_CALL       go to state 149
    METHOD          go to state 150
    METHOD_FULFILL  go to state 77
    POINTER         go to state 151
    GOTO            go to state 152
    LABEL           go to state 153
    SWITCH          go to state 154
    IF              go to state 155
    IF_FIRST        go to state 156
    RETURN          go to state 157
    SHORT_EXPR      go to state 158
    FOR             go to state 159
    ARRAY_BODY      go to state 160
    ARRAY_INDEX     go to state 161
    MULTI_AR        go to state 162
    SLICE           go to state 163
    STRUCT          go to state 164
    STRUCT_START    go to state 11
    END_SYMBOLS     go to state 165
    INTERFACE       go to state 166
    INT_START       go to state 13


State 96

  116 PARAM_IMPORT: PARAM_IMPORT t_id t_string END_SYMBOLS .

    $default  reduce using rule 116 (PARAM_IMPORT)


State 97

   97 PARAM: t_open_paren . t_close_paren
   98 PARAM_START: t_open_paren .
  250 INT_BODY: t_id t_open_paren . t_vtype t_close_paren

    t_vtype        shift, and go to state 167
    t_close_paren  shift, and go to state 168

    $default  reduce using rule 98 (PARAM_START)


State 98

   95 FUNC_CALL: t_id PARAM .

    $default  reduce using rule 95 (FUNC_CALL)


State 99

   96 PARAM: PARAM_START . PARAM_END
   99 PARAM_START: PARAM_START . PARAM_FULFILL

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_enter             shift, and go to state 169
    t_pointer           shift, and go to state 72

    FUNC_CALL          go to state 73
    PARAM_END          go to state 170
    PARAM_END_FULFILL  go to state 171
    PARAM_FULFILL      go to state 172
    SHIFT              go to state 74
    SHIFT_AC           go to state 75
    METHOD             go to state 76
    METHOD_FULFILL     go to state 77
    POINTER            go to state 78
    VALUE              go to state 173
    EXPR               go to state 174
    EXPR_START         go to state 80


State 100

  249 INT_BODY: FUNC_CALL t_vtype .

    $default  reduce using rule 249 (INT_BODY)


State 101

  246 INT_START: t_type t_id t_interface t_open_br END_SYMBOLS INT_BODY . INT_END
  251 INT_BODY: INT_BODY . END_SYMBOLS t_id t_open_paren t_vtype t_close_paren
  252         | INT_BODY . END_SYMBOLS FUNC_CALL t_vtype
  253         | INT_BODY . END_SYMBOLS FUNC_CALL

    t_close_br   shift, and go to state 102
    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 103
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 104
    INT_END      go to state 175


State 102

  254 INT_END: t_close_br .

    $default  reduce using rule 254 (INT_END)


State 103

  242 END_SYMBOLS: t_enter .
  255 INT_END: t_enter . t_close_br

    t_close_br  shift, and go to state 176

    $default  reduce using rule 242 (END_SYMBOLS)


State 104

  251 INT_BODY: INT_BODY END_SYMBOLS . t_id t_open_paren t_vtype t_close_paren
  252         | INT_BODY END_SYMBOLS . FUNC_CALL t_vtype
  253         | INT_BODY END_SYMBOLS . FUNC_CALL

    t_id  shift, and go to state 177

    FUNC_CALL  go to state 178


State 105

  245 INT_START: t_type t_id t_interface t_open_br INT_BODY INT_END .

    $default  reduce using rule 245 (INT_START)


State 106

  247 INT_START: t_type t_id t_interface t_enter t_open_br END_SYMBOLS . INT_BODY INT_END

    t_id  shift, and go to state 58

    FUNC_CALL  go to state 59
    INT_BODY   go to state 179


State 107

   95 FUNC_CALL: t_id . PARAM
  110 METHOD_FULFILL: t_id .
  217 STRUCT_BODY: t_id t_id .

    t_open_paren  shift, and go to state 108

    t_dot     reduce using rule 110 (METHOD_FULFILL)
    $default  reduce using rule 217 (STRUCT_BODY)

    PARAM        go to state 98
    PARAM_START  go to state 99


State 108

   97 PARAM: t_open_paren . t_close_paren
   98 PARAM_START: t_open_paren .

    t_close_paren  shift, and go to state 168

    $default  reduce using rule 98 (PARAM_START)


State 109

  111 METHOD_FULFILL: FUNC_CALL .

    $default  reduce using rule 111 (METHOD_FULFILL)


State 110

  109 METHOD: METHOD . t_dot METHOD_FULFILL
  219 STRUCT_BODY: t_id METHOD .

    t_dot  shift, and go to state 113

    $default  reduce using rule 219 (STRUCT_BODY)


State 111

  229 STRUCT_END: t_enter t_close_br .

    $default  reduce using rule 229 (STRUCT_END)


State 112

  105 SHIFT: SHIFT_AC t_shift_const . SHIFT_AC

    t_int_const  shift, and go to state 180
    t_id         shift, and go to state 181

    SHIFT_AC  go to state 182


State 113

  109 METHOD: METHOD t_dot . METHOD_FULFILL

    t_id  shift, and go to state 183

    FUNC_CALL       go to state 109
    METHOD_FULFILL  go to state 184


State 114

  108 METHOD: METHOD_FULFILL t_dot . METHOD_FULFILL

    t_id  shift, and go to state 183

    FUNC_CALL       go to state 109
    METHOD_FULFILL  go to state 185


State 115

   95 FUNC_CALL: t_id . PARAM
  106 SHIFT_AC: t_id .
  110 METHOD_FULFILL: t_id .
  119 VALUE: t_id .

    t_open_paren  shift, and go to state 108

    t_shift_const  reduce using rule 106 (SHIFT_AC)
    t_dot          reduce using rule 110 (METHOD_FULFILL)
    $default       reduce using rule 119 (VALUE)

    PARAM        go to state 98
    PARAM_START  go to state 99


State 116

   86 BOOLEAN: BOOLEAN . t_bool VALUE
  128 VALUE: EXPR_START BOOLEAN . EXPR_END

    t_close_paren  shift, and go to state 186
    t_bool         shift, and go to state 187

    EXPR_END  go to state 188


State 117

   85 BOOLEAN: VALUE . t_bool VALUE
  177 EXPR: VALUE .

    t_bool  shift, and go to state 189

    $default  reduce using rule 177 (EXPR)


State 118

  127 VALUE: EXPR_START EXPR . EXPR_END
  178 EXPR: EXPR . t_sign VALUE

    t_sign         shift, and go to state 190
    t_close_paren  shift, and go to state 186

    EXPR_END  go to state 191


State 119

  216 STRUCT_BODY: ENUM t_vtype .

    $default  reduce using rule 216 (STRUCT_BODY)


State 120

  208 ENUM: ENUM t_comma . VALUE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 192
    EXPR_START      go to state 80


State 121

  225 STRUCT_START: t_type t_id t_struct_const t_open_br STRUCT_BODY STRUCT_END .

    $default  reduce using rule 225 (STRUCT_START)


State 122

  220 STRUCT_BODY: STRUCT_BODY END_SYMBOLS . t_id METHOD
  221            | STRUCT_BODY END_SYMBOLS . t_id t_vtype
  222            | STRUCT_BODY END_SYMBOLS . t_id t_id
  223            | STRUCT_BODY END_SYMBOLS . t_id

    t_id  shift, and go to state 193


State 123

  220 STRUCT_BODY: STRUCT_BODY . END_SYMBOLS t_id METHOD
  221            | STRUCT_BODY . END_SYMBOLS t_id t_vtype
  222            | STRUCT_BODY . END_SYMBOLS t_id t_id
  223            | STRUCT_BODY . END_SYMBOLS t_id
  226 STRUCT_START: t_type t_id t_struct_const t_open_br END_SYMBOLS STRUCT_BODY . STRUCT_END

    t_close_br   shift, and go to state 67
    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 71
    t_eof        shift, and go to state 23

    STRUCT_END   go to state 194
    END_SYMBOLS  go to state 122


State 124

   36 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren . TYPE_AND_STRUCT t_close_paren
   37                          | t_func t_open_paren . t_close_paren

    t_vtype        shift, and go to state 49
    t_id           shift, and go to state 50
    t_close_paren  shift, and go to state 195

    TYPE_AND_STRUCT  go to state 196


State 125

   21 FUNC_PARAM_SECOND: t_open_paren t_close_paren .

    $default  reduce using rule 21 (FUNC_PARAM_SECOND)


State 126

   19 FUNC_SECOND_PART: FUNC_PARAM_SECOND BODY .

    $default  reduce using rule 19 (FUNC_SECOND_PART)


State 127

   28 FUNC_PARAM_FULFILL_SECOND: t_id . TYPE_AND_STRUCT t_comma
   31 FUNC_PARAM_FULFILL_SECOND_END: t_id . TYPE_AND_STRUCT
   39 TYPE_AND_STRUCT: t_id .

    t_vtype  shift, and go to state 49
    t_id     shift, and go to state 50

    $default  reduce using rule 39 (TYPE_AND_STRUCT)

    TYPE_AND_STRUCT  go to state 197


State 128

   30 FUNC_PARAM_FULFILL_SECOND: t_enter .
   33 FUNC_PARAM_FULFILL_SECOND_END: t_enter .

    t_close_paren  reduce using rule 33 (FUNC_PARAM_FULFILL_SECOND_END)
    $default       reduce using rule 30 (FUNC_PARAM_FULFILL_SECOND)


State 129

   20 FUNC_PARAM_SECOND: FUNC_PARAM_SECOND_START FUNC_PARAM_SECOND_END .

    $default  reduce using rule 20 (FUNC_PARAM_SECOND)


State 130

   23 FUNC_PARAM_SECOND_START: FUNC_PARAM_SECOND_START FUNC_PARAM_FULFILL_SECOND .

    $default  reduce using rule 23 (FUNC_PARAM_SECOND_START)


State 131

   24 FUNC_PARAM_SECOND_END: FUNC_PARAM_FULFILL_SECOND_END . t_close_paren

    t_close_paren  shift, and go to state 198


State 132

   29 FUNC_PARAM_FULFILL_SECOND: TYPE_AND_STRUCT . t_comma
   32 FUNC_PARAM_FULFILL_SECOND_END: TYPE_AND_STRUCT .

    t_comma  shift, and go to state 199

    $default  reduce using rule 32 (FUNC_PARAM_FULFILL_SECOND_END)


State 133

   35 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE FUNC_RETURN_VALUE_FULFILL .

    $default  reduce using rule 35 (FUNC_RETURN_VALUE)


State 134

   18 FUNC_SECOND_PART: FUNC_RETURN_VALUE TYPE_AND_STRUCT . BODY

    t_open_br  shift, and go to state 87

    BODY        go to state 200
    BODY_START  go to state 95


State 135

   87 DEFER: t_defer . FUNC_CALL

    t_id  shift, and go to state 201

    FUNC_CALL  go to state 202


State 136

   61 VAR: t_var . t_id ASSIGNMENT EXPR
   62    | t_var . t_id ASSIGNMENT EXPR t_vtype
   63    | t_var . t_id ASSIGNMENT BOOLEAN
   67    | t_var . t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   70    | t_var . t_id ASSIGNMENT MAKE
   75    | t_var . t_id ASSIGNMENT SLICE
   76    | t_var . t_id MAPS
   78    | t_var . t_id t_id ASSIGNMENT ST_EMBEDDED
   79    | t_var . t_id ASSIGNMENT ST_EMBEDDED
   83    | t_var . t_id POINTER
   84    | t_var . t_id POINTER ASSIGNMENT EXPR
  193 ARRAY_BODY: t_var . t_id MULTI_AR t_vtype
  194           | t_var . t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  195           | t_var . t_id MULTI_AR t_vtype ASSIGNMENT MAKE

    t_id  shift, and go to state 203


State 137

  156 IF_FIRST: t_if . CONDITION BODY_FOR_LOOP
  157         | t_if . INIT_STATE t_semicolon CONDITION BODY_FOR_LOOP

    t_var               shift, and go to state 204
    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 205
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_true              shift, and go to state 206
    t_false             shift, and go to state 207
    t_pointer           shift, and go to state 72

    t_open_br  reduce using rule 186 (CONDITION)
    $default   reduce using rule 182 (INIT_STATE)

    VAR             go to state 208
    BOOLEAN         go to state 209
    FUNC_CALL       go to state 210
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 211
    METHOD_FULFILL  go to state 77
    POINTER         go to state 212
    VALUE           go to state 213
    INIT_STATE      go to state 214
    CONDITION       go to state 215
    EXPR_START      go to state 80


State 138

  131 SWITCH: t_switch . INIT_STATE t_semicolon EXPR SWITCH_BODY
  132       | t_switch . EXPR SWITCH_BODY
  133       | t_switch . SWITCH_BODY

    t_var               shift, and go to state 204
    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 205
    t_string            shift, and go to state 66
    t_open_br           shift, and go to state 216
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    $default  reduce using rule 182 (INIT_STATE)

    VAR                             go to state 208
    FUNC_CALL                       go to state 210
    SHIFT                           go to state 74
    SHIFT_AC                        go to state 75
    METHOD                          go to state 211
    METHOD_FULFILL                  go to state 77
    POINTER                         go to state 212
    VALUE                           go to state 173
    SWITCH_BODY                     go to state 217
    SWITCH_BODY_START               go to state 218
    SWITCH_BODY_START_WITH_DEFAULT  go to state 219
    EXPR                            go to state 220
    INIT_STATE                      go to state 221
    EXPR_START                      go to state 80


State 139

  189 FOR: t_for . INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY_FOR_LOOP
  190    | t_for . CONDITION BODY_FOR_LOOP

    t_var               shift, and go to state 204
    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 205
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_true              shift, and go to state 206
    t_false             shift, and go to state 207
    t_pointer           shift, and go to state 72

    t_open_br  reduce using rule 186 (CONDITION)
    $default   reduce using rule 182 (INIT_STATE)

    VAR             go to state 208
    BOOLEAN         go to state 209
    FUNC_CALL       go to state 210
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 211
    METHOD_FULFILL  go to state 77
    POINTER         go to state 212
    VALUE           go to state 213
    INIT_STATE      go to state 222
    CONDITION       go to state 223
    EXPR_START      go to state 80


State 140

  129 GOTO: t_goto . t_id

    t_id  shift, and go to state 224


State 141

  172 RETURN: t_return . EXPR
  173       | t_return . EXPR MANY_RETURN_START MANY_RETURN_START_END

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 173
    EXPR            go to state 225
    EXPR_START      go to state 80


State 142

   64 VAR: t_id . SHORT_ASSIGN EXPR
   65    | t_id . ASSIGNMENT EXPR
   66    | t_id . SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   68    | t_id . SHORT_ASSIGN BOOLEAN
   69    | t_id . MULTI_AR ASSIGNMENT EXPR
   71    | t_id . SHORT_ASSIGN MAKE
   72    | t_id . MULTI_AR ASSIGNMENT MAKE
   73    | t_id . SHORT_ASSIGN SLICE
   74    | t_id . ASSIGNMENT SLICE
   77    | t_id . SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   80    | t_id . SHORT_ASSIGN ST_EMBEDDED
   95 FUNC_CALL: t_id . PARAM
  110 METHOD_FULFILL: t_id .
  130 LABEL: t_id . t_colon
  179 SHORT_EXPR: t_id . t_short_expr t_id
  211 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  212      | t_id . t_open_sq t_colon VALUE t_close_sq
  213      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_vtype       shift, and go to state 226
    t_short_dec   shift, and go to state 227
    t_comma       shift, and go to state 228
    t_equality    shift, and go to state 229
    t_open_paren  shift, and go to state 108
    t_open_sq     shift, and go to state 230
    t_colon       shift, and go to state 231
    t_short_expr  shift, and go to state 232

    $default  reduce using rule 110 (METHOD_FULFILL)

    ASSIGNMENT    go to state 233
    SHORT_ASSIGN  go to state 234
    PARAM         go to state 98
    PARAM_START   go to state 99
    ARRAY_INDEX   go to state 161
    MULTI_AR      go to state 235


State 143

   41 BODY_END: t_close_br .

    $default  reduce using rule 41 (BODY_END)


State 144

  196 ARRAY_INDEX: t_open_sq . t_int_const t_close_sq
  197            | t_open_sq . t_id t_close_sq
  198            | t_open_sq . t_string t_close_sq
  199            | t_open_sq . t_close_sq

    t_int_const  shift, and go to state 236
    t_id         shift, and go to state 237
    t_string     shift, and go to state 238
    t_close_sq   shift, and go to state 239


State 145

   40 BODY: BODY_START BODY_END .

    $default  reduce using rule 40 (BODY)


State 146

   43 BODY_START: BODY_START BODY_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 240


State 147

   45 BODY_FILLING: VAR .

    $default  reduce using rule 45 (BODY_FILLING)


State 148

   58 BODY_FILLING: DEFER .

    $default  reduce using rule 58 (BODY_FILLING)


State 149

   52 BODY_FILLING: FUNC_CALL .
  111 METHOD_FULFILL: FUNC_CALL .

    t_dot     reduce using rule 111 (METHOD_FULFILL)
    $default  reduce using rule 52 (BODY_FILLING)


State 150

   59 BODY_FILLING: METHOD .
   81 VAR: METHOD . ASSIGNMENT VALUE
  109 METHOD: METHOD . t_dot METHOD_FULFILL

    t_vtype     shift, and go to state 226
    t_comma     shift, and go to state 241
    t_equality  shift, and go to state 229
    t_dot       shift, and go to state 113

    $default  reduce using rule 59 (BODY_FILLING)

    ASSIGNMENT  go to state 242


State 151

   82 VAR: POINTER . ASSIGNMENT EXPR

    t_vtype     shift, and go to state 226
    t_comma     shift, and go to state 241
    t_equality  shift, and go to state 229

    ASSIGNMENT  go to state 243


State 152

   48 BODY_FILLING: GOTO .

    $default  reduce using rule 48 (BODY_FILLING)


State 153

   49 BODY_FILLING: LABEL .

    $default  reduce using rule 49 (BODY_FILLING)


State 154

   47 BODY_FILLING: SWITCH .

    $default  reduce using rule 47 (BODY_FILLING)


State 155

   50 BODY_FILLING: IF .

    $default  reduce using rule 50 (BODY_FILLING)


State 156

  152 IF: IF_FIRST . MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD
  153   | IF_FIRST . MULTY_ELSEIF_SECOND
  154   | IF_FIRST . MULTY_ELSE_THIRD
  155   | IF_FIRST .

    t_else  shift, and go to state 244

    $default  reduce using rule 155 (IF)

    MULTY_ELSEIF_SECOND  go to state 245
    ELSEIF_SECOND        go to state 246
    MULTY_ELSE_THIRD     go to state 247
    ELSE_THIRD           go to state 248


State 157

   55 BODY_FILLING: RETURN .

    $default  reduce using rule 55 (BODY_FILLING)


State 158

   53 BODY_FILLING: SHORT_EXPR .

    $default  reduce using rule 53 (BODY_FILLING)


State 159

   46 BODY_FILLING: FOR .

    $default  reduce using rule 46 (BODY_FILLING)


State 160

   54 BODY_FILLING: ARRAY_BODY .

    $default  reduce using rule 54 (BODY_FILLING)


State 161

  200 MULTI_AR: ARRAY_INDEX .
  201         | ARRAY_INDEX . MULTI_AR

    t_open_sq  shift, and go to state 144

    $default  reduce using rule 200 (MULTI_AR)

    ARRAY_INDEX  go to state 161
    MULTI_AR     go to state 249


State 162

   51 BODY_FILLING: MULTI_AR .

    $default  reduce using rule 51 (BODY_FILLING)


State 163

   57 BODY_FILLING: SLICE .

    $default  reduce using rule 57 (BODY_FILLING)


State 164

   56 BODY_FILLING: STRUCT .

    $default  reduce using rule 56 (BODY_FILLING)


State 165

   44 BODY_START: BODY_START END_SYMBOLS .

    $default  reduce using rule 44 (BODY_START)


State 166

   60 BODY_FILLING: INTERFACE .

    $default  reduce using rule 60 (BODY_FILLING)


State 167

  250 INT_BODY: t_id t_open_paren t_vtype . t_close_paren

    t_close_paren  shift, and go to state 250


State 168

   97 PARAM: t_open_paren t_close_paren .

    $default  reduce using rule 97 (PARAM)


State 169

  102 PARAM_END_FULFILL: t_enter .
  104 PARAM_FULFILL: t_enter .

    t_close_paren  reduce using rule 102 (PARAM_END_FULFILL)
    $default       reduce using rule 104 (PARAM_FULFILL)


State 170

   96 PARAM: PARAM_START PARAM_END .

    $default  reduce using rule 96 (PARAM)


State 171

  100 PARAM_END: PARAM_END_FULFILL . t_close_paren

    t_close_paren  shift, and go to state 251


State 172

   99 PARAM_START: PARAM_START PARAM_FULFILL .

    $default  reduce using rule 99 (PARAM_START)


State 173

  177 EXPR: VALUE .

    $default  reduce using rule 177 (EXPR)


State 174

  101 PARAM_END_FULFILL: EXPR .
  103 PARAM_FULFILL: EXPR . t_comma
  178 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 190
    t_comma  shift, and go to state 252

    $default  reduce using rule 101 (PARAM_END_FULFILL)


State 175

  246 INT_START: t_type t_id t_interface t_open_br END_SYMBOLS INT_BODY INT_END .

    $default  reduce using rule 246 (INT_START)


State 176

  255 INT_END: t_enter t_close_br .

    $default  reduce using rule 255 (INT_END)


State 177

   95 FUNC_CALL: t_id . PARAM
  251 INT_BODY: INT_BODY END_SYMBOLS t_id . t_open_paren t_vtype t_close_paren

    t_open_paren  shift, and go to state 253

    PARAM        go to state 98
    PARAM_START  go to state 99


State 178

  252 INT_BODY: INT_BODY END_SYMBOLS FUNC_CALL . t_vtype
  253         | INT_BODY END_SYMBOLS FUNC_CALL .

    t_vtype  shift, and go to state 254

    $default  reduce using rule 253 (INT_BODY)


State 179

  247 INT_START: t_type t_id t_interface t_enter t_open_br END_SYMBOLS INT_BODY . INT_END
  251 INT_BODY: INT_BODY . END_SYMBOLS t_id t_open_paren t_vtype t_close_paren
  252         | INT_BODY . END_SYMBOLS FUNC_CALL t_vtype
  253         | INT_BODY . END_SYMBOLS FUNC_CALL

    t_close_br   shift, and go to state 102
    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 103
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 104
    INT_END      go to state 255


State 180

  107 SHIFT_AC: t_int_const .

    $default  reduce using rule 107 (SHIFT_AC)


State 181

  106 SHIFT_AC: t_id .

    $default  reduce using rule 106 (SHIFT_AC)


State 182

  105 SHIFT: SHIFT_AC t_shift_const SHIFT_AC .

    $default  reduce using rule 105 (SHIFT)


State 183

   95 FUNC_CALL: t_id . PARAM
  110 METHOD_FULFILL: t_id .

    t_open_paren  shift, and go to state 108

    $default  reduce using rule 110 (METHOD_FULFILL)

    PARAM        go to state 98
    PARAM_START  go to state 99


State 184

  109 METHOD: METHOD t_dot METHOD_FULFILL .

    $default  reduce using rule 109 (METHOD)


State 185

  108 METHOD: METHOD_FULFILL t_dot METHOD_FULFILL .

    $default  reduce using rule 108 (METHOD)


State 186

  192 EXPR_END: t_close_paren .

    $default  reduce using rule 192 (EXPR_END)


State 187

   86 BOOLEAN: BOOLEAN t_bool . VALUE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 256
    EXPR_START      go to state 80


State 188

  128 VALUE: EXPR_START BOOLEAN EXPR_END .

    $default  reduce using rule 128 (VALUE)


State 189

   85 BOOLEAN: VALUE t_bool . VALUE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 257
    EXPR_START      go to state 80


State 190

  178 EXPR: EXPR t_sign . VALUE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 258
    EXPR_START      go to state 80


State 191

  127 VALUE: EXPR_START EXPR EXPR_END .

    $default  reduce using rule 127 (VALUE)


State 192

  208 ENUM: ENUM t_comma VALUE .

    $default  reduce using rule 208 (ENUM)


State 193

  220 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id . METHOD
  221            | STRUCT_BODY END_SYMBOLS t_id . t_vtype
  222            | STRUCT_BODY END_SYMBOLS t_id . t_id
  223            | STRUCT_BODY END_SYMBOLS t_id .

    t_vtype  shift, and go to state 259
    t_id     shift, and go to state 260

    $default  reduce using rule 223 (STRUCT_BODY)

    FUNC_CALL       go to state 109
    METHOD          go to state 261
    METHOD_FULFILL  go to state 77


State 194

  226 STRUCT_START: t_type t_id t_struct_const t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END .

    $default  reduce using rule 226 (STRUCT_START)


State 195

   37 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren t_close_paren .

    $default  reduce using rule 37 (FUNC_RETURN_VALUE_FULFILL)


State 196

   36 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren TYPE_AND_STRUCT . t_close_paren

    t_close_paren  shift, and go to state 262


State 197

   28 FUNC_PARAM_FULFILL_SECOND: t_id TYPE_AND_STRUCT . t_comma
   31 FUNC_PARAM_FULFILL_SECOND_END: t_id TYPE_AND_STRUCT .

    t_comma  shift, and go to state 263

    $default  reduce using rule 31 (FUNC_PARAM_FULFILL_SECOND_END)


State 198

   24 FUNC_PARAM_SECOND_END: FUNC_PARAM_FULFILL_SECOND_END t_close_paren .

    $default  reduce using rule 24 (FUNC_PARAM_SECOND_END)


State 199

   29 FUNC_PARAM_FULFILL_SECOND: TYPE_AND_STRUCT t_comma .

    $default  reduce using rule 29 (FUNC_PARAM_FULFILL_SECOND)


State 200

   18 FUNC_SECOND_PART: FUNC_RETURN_VALUE TYPE_AND_STRUCT BODY .

    $default  reduce using rule 18 (FUNC_SECOND_PART)


State 201

   95 FUNC_CALL: t_id . PARAM

    t_open_paren  shift, and go to state 108

    PARAM        go to state 98
    PARAM_START  go to state 99


State 202

   87 DEFER: t_defer FUNC_CALL .

    $default  reduce using rule 87 (DEFER)


State 203

   61 VAR: t_var t_id . ASSIGNMENT EXPR
   62    | t_var t_id . ASSIGNMENT EXPR t_vtype
   63    | t_var t_id . ASSIGNMENT BOOLEAN
   67    | t_var t_id . ASSIGNMENT MULTI_AR t_vtype PLENTY
   70    | t_var t_id . ASSIGNMENT MAKE
   75    | t_var t_id . ASSIGNMENT SLICE
   76    | t_var t_id . MAPS
   78    | t_var t_id . t_id ASSIGNMENT ST_EMBEDDED
   79    | t_var t_id . ASSIGNMENT ST_EMBEDDED
   83    | t_var t_id . POINTER
   84    | t_var t_id . POINTER ASSIGNMENT EXPR
  193 ARRAY_BODY: t_var t_id . MULTI_AR t_vtype
  194           | t_var t_id . MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  195           | t_var t_id . MULTI_AR t_vtype ASSIGNMENT MAKE

    t_vtype     shift, and go to state 226
    t_map       shift, and go to state 264
    t_id        shift, and go to state 265
    t_comma     shift, and go to state 241
    t_equality  shift, and go to state 229
    t_open_sq   shift, and go to state 144
    t_pointer   shift, and go to state 72

    ASSIGNMENT   go to state 266
    POINTER      go to state 267
    ARRAY_INDEX  go to state 161
    MULTI_AR     go to state 268
    MAPS         go to state 269


State 204

   61 VAR: t_var . t_id ASSIGNMENT EXPR
   62    | t_var . t_id ASSIGNMENT EXPR t_vtype
   63    | t_var . t_id ASSIGNMENT BOOLEAN
   67    | t_var . t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   70    | t_var . t_id ASSIGNMENT MAKE
   75    | t_var . t_id ASSIGNMENT SLICE
   76    | t_var . t_id MAPS
   78    | t_var . t_id t_id ASSIGNMENT ST_EMBEDDED
   79    | t_var . t_id ASSIGNMENT ST_EMBEDDED
   83    | t_var . t_id POINTER
   84    | t_var . t_id POINTER ASSIGNMENT EXPR

    t_id  shift, and go to state 270


State 205

   64 VAR: t_id . SHORT_ASSIGN EXPR
   65    | t_id . ASSIGNMENT EXPR
   66    | t_id . SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   68    | t_id . SHORT_ASSIGN BOOLEAN
   69    | t_id . MULTI_AR ASSIGNMENT EXPR
   71    | t_id . SHORT_ASSIGN MAKE
   72    | t_id . MULTI_AR ASSIGNMENT MAKE
   73    | t_id . SHORT_ASSIGN SLICE
   74    | t_id . ASSIGNMENT SLICE
   77    | t_id . SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   80    | t_id . SHORT_ASSIGN ST_EMBEDDED
   95 FUNC_CALL: t_id . PARAM
  106 SHIFT_AC: t_id .
  110 METHOD_FULFILL: t_id .
  119 VALUE: t_id .

    t_vtype       shift, and go to state 226
    t_short_dec   shift, and go to state 227
    t_comma       shift, and go to state 228
    t_equality    shift, and go to state 229
    t_open_paren  shift, and go to state 108
    t_open_sq     shift, and go to state 144

    t_shift_const  reduce using rule 106 (SHIFT_AC)
    t_dot          reduce using rule 110 (METHOD_FULFILL)
    $default       reduce using rule 119 (VALUE)

    ASSIGNMENT    go to state 233
    SHORT_ASSIGN  go to state 234
    PARAM         go to state 98
    PARAM_START   go to state 99
    ARRAY_INDEX   go to state 161
    MULTI_AR      go to state 235


State 206

  184 CONDITION: t_true .

    $default  reduce using rule 184 (CONDITION)


State 207

  185 CONDITION: t_false .

    $default  reduce using rule 185 (CONDITION)


State 208

  180 INIT_STATE: VAR .

    $default  reduce using rule 180 (INIT_STATE)


State 209

   86 BOOLEAN: BOOLEAN . t_bool VALUE
  183 CONDITION: BOOLEAN .

    t_bool  shift, and go to state 187

    $default  reduce using rule 183 (CONDITION)


State 210

  111 METHOD_FULFILL: FUNC_CALL .
  123 VALUE: FUNC_CALL .
  181 INIT_STATE: FUNC_CALL .

    t_semicolon  reduce using rule 181 (INIT_STATE)
    t_dot        reduce using rule 111 (METHOD_FULFILL)
    $default     reduce using rule 123 (VALUE)


State 211

   81 VAR: METHOD . ASSIGNMENT VALUE
  109 METHOD: METHOD . t_dot METHOD_FULFILL
  126 VALUE: METHOD .

    t_vtype     shift, and go to state 226
    t_comma     shift, and go to state 241
    t_equality  shift, and go to state 229
    t_dot       shift, and go to state 113

    $default  reduce using rule 126 (VALUE)

    ASSIGNMENT  go to state 242


State 212

   82 VAR: POINTER . ASSIGNMENT EXPR
  125 VALUE: POINTER .

    t_vtype     shift, and go to state 226
    t_comma     shift, and go to state 241
    t_equality  shift, and go to state 229

    $default  reduce using rule 125 (VALUE)

    ASSIGNMENT  go to state 243


State 213

   85 BOOLEAN: VALUE . t_bool VALUE

    t_bool  shift, and go to state 189


State 214

  157 IF_FIRST: t_if INIT_STATE . t_semicolon CONDITION BODY_FOR_LOOP

    t_semicolon  shift, and go to state 271


State 215

  156 IF_FIRST: t_if CONDITION . BODY_FOR_LOOP

    t_open_br  shift, and go to state 272

    BODY_FOR_LOOP        go to state 273
    BODY_FOR_LOOP_START  go to state 274


State 216

  136 SWITCH_BODY_START: t_open_br .

    $default  reduce using rule 136 (SWITCH_BODY_START)


State 217

  133 SWITCH: t_switch SWITCH_BODY .

    $default  reduce using rule 133 (SWITCH)


State 218

  134 SWITCH_BODY: SWITCH_BODY_START . SWITCH_BODY_END
  137 SWITCH_BODY_START: SWITCH_BODY_START . END_SYMBOLS
  138                  | SWITCH_BODY_START . CASE
  139 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START . DEFAULT

    t_case       shift, and go to state 275
    t_default    shift, and go to state 276
    t_close_br   shift, and go to state 277
    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    CASE             go to state 278
    DEFAULT          go to state 279
    SWITCH_BODY_END  go to state 280
    END_SYMBOLS      go to state 281


State 219

  135 SWITCH_BODY: SWITCH_BODY_START_WITH_DEFAULT . SWITCH_BODY_END
  140 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START_WITH_DEFAULT . CASE

    t_case      shift, and go to state 275
    t_close_br  shift, and go to state 277

    CASE             go to state 282
    SWITCH_BODY_END  go to state 283


State 220

  132 SWITCH: t_switch EXPR . SWITCH_BODY
  178 EXPR: EXPR . t_sign VALUE

    t_open_br  shift, and go to state 216
    t_sign     shift, and go to state 190

    SWITCH_BODY                     go to state 284
    SWITCH_BODY_START               go to state 218
    SWITCH_BODY_START_WITH_DEFAULT  go to state 219


State 221

  131 SWITCH: t_switch INIT_STATE . t_semicolon EXPR SWITCH_BODY

    t_semicolon  shift, and go to state 285


State 222

  189 FOR: t_for INIT_STATE . t_semicolon CONDITION t_semicolon POST_STATE BODY_FOR_LOOP

    t_semicolon  shift, and go to state 286


State 223

  190 FOR: t_for CONDITION . BODY_FOR_LOOP

    t_open_br  shift, and go to state 272

    BODY_FOR_LOOP        go to state 287
    BODY_FOR_LOOP_START  go to state 274


State 224

  129 GOTO: t_goto t_id .

    $default  reduce using rule 129 (GOTO)


State 225

  172 RETURN: t_return EXPR .
  173       | t_return EXPR . MANY_RETURN_START MANY_RETURN_START_END
  178 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 190
    t_comma  shift, and go to state 288

    $default  reduce using rule 172 (RETURN)

    MANY_RETURN_START  go to state 289


State 226

   88 ASSIGNMENT: t_vtype . t_equality

    t_equality  shift, and go to state 290


State 227

   92 SHORT_ASSIGN: t_short_dec .

    $default  reduce using rule 92 (SHORT_ASSIGN)


State 228

   90 ASSIGNMENT: t_comma . t_id ASSIGNMENT EXPR t_comma
   91           | t_comma . t_id ASSIGNMENT BOOLEAN t_comma
   93 SHORT_ASSIGN: t_comma . t_id SHORT_ASSIGN EXPR t_comma
   94             | t_comma . t_id SHORT_ASSIGN BOOLEAN t_comma

    t_id  shift, and go to state 291


State 229

   89 ASSIGNMENT: t_equality .

    $default  reduce using rule 89 (ASSIGNMENT)


State 230

  196 ARRAY_INDEX: t_open_sq . t_int_const t_close_sq
  197            | t_open_sq . t_id t_close_sq
  198            | t_open_sq . t_string t_close_sq
  199            | t_open_sq . t_close_sq
  211 SLICE: t_id t_open_sq . VALUE t_colon VALUE t_close_sq
  212      | t_id t_open_sq . t_colon VALUE t_close_sq
  213      | t_id t_open_sq . VALUE t_colon t_close_sq

    t_int_const         shift, and go to state 292
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 293
    t_string            shift, and go to state 294
    t_open_paren        shift, and go to state 68
    t_close_sq          shift, and go to state 239
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_colon             shift, and go to state 295
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 296
    EXPR_START      go to state 80


State 231

  130 LABEL: t_id t_colon .

    $default  reduce using rule 130 (LABEL)


State 232

  179 SHORT_EXPR: t_id t_short_expr . t_id

    t_id  shift, and go to state 297


State 233

   65 VAR: t_id ASSIGNMENT . EXPR
   74    | t_id ASSIGNMENT . SLICE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 298
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 173
    EXPR            go to state 299
    EXPR_START      go to state 80
    SLICE           go to state 300


State 234

   64 VAR: t_id SHORT_ASSIGN . EXPR
   66    | t_id SHORT_ASSIGN . MULTI_AR t_vtype PLENTY
   68    | t_id SHORT_ASSIGN . BOOLEAN
   71    | t_id SHORT_ASSIGN . MAKE
   73    | t_id SHORT_ASSIGN . SLICE
   77    | t_id SHORT_ASSIGN . t_make t_open_paren MAPS t_close_paren
   80    | t_id SHORT_ASSIGN . ST_EMBEDDED

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 301
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_open_sq           shift, and go to state 144
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_make              shift, and go to state 302
    t_pointer           shift, and go to state 72

    BOOLEAN         go to state 303
    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 117
    EXPR            go to state 304
    EXPR_START      go to state 80
    ARRAY_INDEX     go to state 161
    MULTI_AR        go to state 305
    MAKE            go to state 306
    SLICE           go to state 307
    FIELD           go to state 308
    ST_EMBEDDED     go to state 309


State 235

   69 VAR: t_id MULTI_AR . ASSIGNMENT EXPR
   72    | t_id MULTI_AR . ASSIGNMENT MAKE

    t_vtype     shift, and go to state 226
    t_comma     shift, and go to state 241
    t_equality  shift, and go to state 229

    ASSIGNMENT  go to state 310


State 236

  196 ARRAY_INDEX: t_open_sq t_int_const . t_close_sq

    t_close_sq  shift, and go to state 311


State 237

  197 ARRAY_INDEX: t_open_sq t_id . t_close_sq

    t_close_sq  shift, and go to state 312


State 238

  198 ARRAY_INDEX: t_open_sq t_string . t_close_sq

    t_close_sq  shift, and go to state 313


State 239

  199 ARRAY_INDEX: t_open_sq t_close_sq .

    $default  reduce using rule 199 (ARRAY_INDEX)


State 240

   43 BODY_START: BODY_START BODY_FILLING END_SYMBOLS .

    $default  reduce using rule 43 (BODY_START)


State 241

   90 ASSIGNMENT: t_comma . t_id ASSIGNMENT EXPR t_comma
   91           | t_comma . t_id ASSIGNMENT BOOLEAN t_comma

    t_id  shift, and go to state 314


State 242

   81 VAR: METHOD ASSIGNMENT . VALUE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 315
    EXPR_START      go to state 80


State 243

   82 VAR: POINTER ASSIGNMENT . EXPR

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 173
    EXPR            go to state 316
    EXPR_START      go to state 80


State 244

  168 ELSEIF_SECOND: t_else . t_if CONDITION BODY_FOR_LOOP
  171 ELSE_THIRD: t_else . BODY_FOR_LOOP

    t_if       shift, and go to state 317
    t_open_br  shift, and go to state 272

    BODY_FOR_LOOP        go to state 318
    BODY_FOR_LOOP_START  go to state 274


State 245

  152 IF: IF_FIRST MULTY_ELSEIF_SECOND . MULTY_ELSE_THIRD
  153   | IF_FIRST MULTY_ELSEIF_SECOND .
  167 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND . ELSEIF_SECOND

    t_else  shift, and go to state 244

    $default  reduce using rule 153 (IF)

    ELSEIF_SECOND     go to state 319
    MULTY_ELSE_THIRD  go to state 320
    ELSE_THIRD        go to state 248


State 246

  166 MULTY_ELSEIF_SECOND: ELSEIF_SECOND .

    $default  reduce using rule 166 (MULTY_ELSEIF_SECOND)


State 247

  154 IF: IF_FIRST MULTY_ELSE_THIRD .
  170 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD . ELSE_THIRD

    t_else  shift, and go to state 321

    $default  reduce using rule 154 (IF)

    ELSE_THIRD  go to state 322


State 248

  169 MULTY_ELSE_THIRD: ELSE_THIRD .

    $default  reduce using rule 169 (MULTY_ELSE_THIRD)


State 249

  201 MULTI_AR: ARRAY_INDEX MULTI_AR .

    $default  reduce using rule 201 (MULTI_AR)


State 250

  250 INT_BODY: t_id t_open_paren t_vtype t_close_paren .

    $default  reduce using rule 250 (INT_BODY)


State 251

  100 PARAM_END: PARAM_END_FULFILL t_close_paren .

    $default  reduce using rule 100 (PARAM_END)


State 252

  103 PARAM_FULFILL: EXPR t_comma .

    $default  reduce using rule 103 (PARAM_FULFILL)


State 253

   97 PARAM: t_open_paren . t_close_paren
   98 PARAM_START: t_open_paren .
  251 INT_BODY: INT_BODY END_SYMBOLS t_id t_open_paren . t_vtype t_close_paren

    t_vtype        shift, and go to state 323
    t_close_paren  shift, and go to state 168

    $default  reduce using rule 98 (PARAM_START)


State 254

  252 INT_BODY: INT_BODY END_SYMBOLS FUNC_CALL t_vtype .

    $default  reduce using rule 252 (INT_BODY)


State 255

  247 INT_START: t_type t_id t_interface t_enter t_open_br END_SYMBOLS INT_BODY INT_END .

    $default  reduce using rule 247 (INT_START)


State 256

   86 BOOLEAN: BOOLEAN t_bool VALUE .

    $default  reduce using rule 86 (BOOLEAN)


State 257

   85 BOOLEAN: VALUE t_bool VALUE .

    $default  reduce using rule 85 (BOOLEAN)


State 258

  178 EXPR: EXPR t_sign VALUE .

    $default  reduce using rule 178 (EXPR)


State 259

  221 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id t_vtype .

    $default  reduce using rule 221 (STRUCT_BODY)


State 260

   95 FUNC_CALL: t_id . PARAM
  110 METHOD_FULFILL: t_id .
  222 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id t_id .

    t_open_paren  shift, and go to state 108

    t_dot     reduce using rule 110 (METHOD_FULFILL)
    $default  reduce using rule 222 (STRUCT_BODY)

    PARAM        go to state 98
    PARAM_START  go to state 99


State 261

  109 METHOD: METHOD . t_dot METHOD_FULFILL
  220 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id METHOD .

    t_dot  shift, and go to state 113

    $default  reduce using rule 220 (STRUCT_BODY)


State 262

   36 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren TYPE_AND_STRUCT t_close_paren .

    $default  reduce using rule 36 (FUNC_RETURN_VALUE_FULFILL)


State 263

   28 FUNC_PARAM_FULFILL_SECOND: t_id TYPE_AND_STRUCT t_comma .

    $default  reduce using rule 28 (FUNC_PARAM_FULFILL_SECOND)


State 264

  214 MAPS: t_map . t_open_sq t_vtype t_close_sq t_vtype

    t_open_sq  shift, and go to state 324


State 265

   78 VAR: t_var t_id t_id . ASSIGNMENT ST_EMBEDDED

    t_vtype     shift, and go to state 226
    t_comma     shift, and go to state 241
    t_equality  shift, and go to state 229

    ASSIGNMENT  go to state 325


State 266

   61 VAR: t_var t_id ASSIGNMENT . EXPR
   62    | t_var t_id ASSIGNMENT . EXPR t_vtype
   63    | t_var t_id ASSIGNMENT . BOOLEAN
   67    | t_var t_id ASSIGNMENT . MULTI_AR t_vtype PLENTY
   70    | t_var t_id ASSIGNMENT . MAKE
   75    | t_var t_id ASSIGNMENT . SLICE
   79    | t_var t_id ASSIGNMENT . ST_EMBEDDED

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 301
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_open_sq           shift, and go to state 144
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_make              shift, and go to state 326
    t_pointer           shift, and go to state 72

    BOOLEAN         go to state 327
    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 117
    EXPR            go to state 328
    EXPR_START      go to state 80
    ARRAY_INDEX     go to state 161
    MULTI_AR        go to state 329
    MAKE            go to state 330
    SLICE           go to state 331
    FIELD           go to state 308
    ST_EMBEDDED     go to state 332


State 267

   83 VAR: t_var t_id POINTER .
   84    | t_var t_id POINTER . ASSIGNMENT EXPR

    t_vtype     shift, and go to state 226
    t_comma     shift, and go to state 241
    t_equality  shift, and go to state 229

    $default  reduce using rule 83 (VAR)

    ASSIGNMENT  go to state 333


State 268

  193 ARRAY_BODY: t_var t_id MULTI_AR . t_vtype
  194           | t_var t_id MULTI_AR . t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  195           | t_var t_id MULTI_AR . t_vtype ASSIGNMENT MAKE

    t_vtype  shift, and go to state 334


State 269

   76 VAR: t_var t_id MAPS .

    $default  reduce using rule 76 (VAR)


State 270

   61 VAR: t_var t_id . ASSIGNMENT EXPR
   62    | t_var t_id . ASSIGNMENT EXPR t_vtype
   63    | t_var t_id . ASSIGNMENT BOOLEAN
   67    | t_var t_id . ASSIGNMENT MULTI_AR t_vtype PLENTY
   70    | t_var t_id . ASSIGNMENT MAKE
   75    | t_var t_id . ASSIGNMENT SLICE
   76    | t_var t_id . MAPS
   78    | t_var t_id . t_id ASSIGNMENT ST_EMBEDDED
   79    | t_var t_id . ASSIGNMENT ST_EMBEDDED
   83    | t_var t_id . POINTER
   84    | t_var t_id . POINTER ASSIGNMENT EXPR

    t_vtype     shift, and go to state 226
    t_map       shift, and go to state 264
    t_id        shift, and go to state 265
    t_comma     shift, and go to state 241
    t_equality  shift, and go to state 229
    t_pointer   shift, and go to state 72

    ASSIGNMENT  go to state 266
    POINTER     go to state 267
    MAPS        go to state 269


State 271

  157 IF_FIRST: t_if INIT_STATE t_semicolon . CONDITION BODY_FOR_LOOP

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_true              shift, and go to state 206
    t_false             shift, and go to state 207
    t_pointer           shift, and go to state 72

    $default  reduce using rule 186 (CONDITION)

    BOOLEAN         go to state 209
    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 213
    CONDITION       go to state 335
    EXPR_START      go to state 80


State 272

  159 BODY_FOR_LOOP_START: t_open_br .
  160                    | t_open_br . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    $default  reduce using rule 159 (BODY_FOR_LOOP_START)

    END_SYMBOLS  go to state 336


State 273

  156 IF_FIRST: t_if CONDITION BODY_FOR_LOOP .

    $default  reduce using rule 156 (IF_FIRST)


State 274

  158 BODY_FOR_LOOP: BODY_FOR_LOOP_START . BODY_FOR_LOOP_END
  161 BODY_FOR_LOOP_START: BODY_FOR_LOOP_START . LOOP_FILLING END_SYMBOLS

    t_defer     shift, and go to state 135
    t_var       shift, and go to state 136
    t_if        shift, and go to state 137
    t_switch    shift, and go to state 138
    t_type      shift, and go to state 4
    t_for       shift, and go to state 139
    t_goto      shift, and go to state 140
    t_continue  shift, and go to state 337
    t_break     shift, and go to state 338
    t_return    shift, and go to state 141
    t_id        shift, and go to state 142
    t_close_br  shift, and go to state 339
    t_open_sq   shift, and go to state 144
    t_pointer   shift, and go to state 72

    BODY_FILLING       go to state 340
    VAR                go to state 147
    DEFER              go to state 148
    FUNC_CALL          go to state 149
    METHOD             go to state 150
    METHOD_FULFILL     go to state 77
    POINTER            go to state 151
    GOTO               go to state 152
    LABEL              go to state 153
    SWITCH             go to state 154
    IF                 go to state 155
    IF_FIRST           go to state 156
    BODY_FOR_LOOP_END  go to state 341
    LOOP_FILLING       go to state 342
    RETURN             go to state 157
    SHORT_EXPR         go to state 158
    FOR                go to state 159
    ARRAY_BODY         go to state 160
    ARRAY_INDEX        go to state 161
    MULTI_AR           go to state 162
    SLICE              go to state 163
    STRUCT             go to state 164
    STRUCT_START       go to state 11
    INTERFACE          go to state 166
    INT_START          go to state 13


State 275

  141 CASE: t_case . CASE_STATEMENT CASE_BODY

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 173
    MULTIPLE_ARG    go to state 343
    FIRST_PART      go to state 344
    CASE_STATEMENT  go to state 345
    EXPR            go to state 346
    EXPR_START      go to state 80


State 276

  142 DEFAULT: t_default . CASE_BODY

    t_colon  shift, and go to state 347

    CASE_BODY  go to state 348


State 277

  151 SWITCH_BODY_END: t_close_br .

    $default  reduce using rule 151 (SWITCH_BODY_END)


State 278

  138 SWITCH_BODY_START: SWITCH_BODY_START CASE .

    $default  reduce using rule 138 (SWITCH_BODY_START)


State 279

  139 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START DEFAULT .

    $default  reduce using rule 139 (SWITCH_BODY_START_WITH_DEFAULT)


State 280

  134 SWITCH_BODY: SWITCH_BODY_START SWITCH_BODY_END .

    $default  reduce using rule 134 (SWITCH_BODY)


State 281

  137 SWITCH_BODY_START: SWITCH_BODY_START END_SYMBOLS .

    $default  reduce using rule 137 (SWITCH_BODY_START)


State 282

  140 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START_WITH_DEFAULT CASE .

    $default  reduce using rule 140 (SWITCH_BODY_START_WITH_DEFAULT)


State 283

  135 SWITCH_BODY: SWITCH_BODY_START_WITH_DEFAULT SWITCH_BODY_END .

    $default  reduce using rule 135 (SWITCH_BODY)


State 284

  132 SWITCH: t_switch EXPR SWITCH_BODY .

    $default  reduce using rule 132 (SWITCH)


State 285

  131 SWITCH: t_switch INIT_STATE t_semicolon . EXPR SWITCH_BODY

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 173
    EXPR            go to state 349
    EXPR_START      go to state 80


State 286

  189 FOR: t_for INIT_STATE t_semicolon . CONDITION t_semicolon POST_STATE BODY_FOR_LOOP

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_true              shift, and go to state 206
    t_false             shift, and go to state 207
    t_pointer           shift, and go to state 72

    $default  reduce using rule 186 (CONDITION)

    BOOLEAN         go to state 209
    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 213
    CONDITION       go to state 350
    EXPR_START      go to state 80


State 287

  190 FOR: t_for CONDITION BODY_FOR_LOOP .

    $default  reduce using rule 190 (FOR)


State 288

  174 MANY_RETURN_START: t_comma .

    $default  reduce using rule 174 (MANY_RETURN_START)


State 289

  173 RETURN: t_return EXPR MANY_RETURN_START . MANY_RETURN_START_END
  175 MANY_RETURN_START: MANY_RETURN_START . EXPR t_comma

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL              go to state 73
    SHIFT                  go to state 74
    SHIFT_AC               go to state 75
    METHOD                 go to state 76
    METHOD_FULFILL         go to state 77
    POINTER                go to state 78
    VALUE                  go to state 173
    MANY_RETURN_START_END  go to state 351
    EXPR                   go to state 352
    EXPR_START             go to state 80


State 290

   88 ASSIGNMENT: t_vtype t_equality .

    $default  reduce using rule 88 (ASSIGNMENT)


State 291

   90 ASSIGNMENT: t_comma t_id . ASSIGNMENT EXPR t_comma
   91           | t_comma t_id . ASSIGNMENT BOOLEAN t_comma
   93 SHORT_ASSIGN: t_comma t_id . SHORT_ASSIGN EXPR t_comma
   94             | t_comma t_id . SHORT_ASSIGN BOOLEAN t_comma

    t_vtype      shift, and go to state 226
    t_short_dec  shift, and go to state 227
    t_comma      shift, and go to state 228
    t_equality   shift, and go to state 229

    ASSIGNMENT    go to state 353
    SHORT_ASSIGN  go to state 354


State 292

  107 SHIFT_AC: t_int_const .
  117 VALUE: t_int_const .
  196 ARRAY_INDEX: t_open_sq t_int_const . t_close_sq

    t_close_sq  shift, and go to state 311

    t_colon   reduce using rule 117 (VALUE)
    $default  reduce using rule 107 (SHIFT_AC)


State 293

   95 FUNC_CALL: t_id . PARAM
  106 SHIFT_AC: t_id .
  110 METHOD_FULFILL: t_id .
  119 VALUE: t_id .
  197 ARRAY_INDEX: t_open_sq t_id . t_close_sq

    t_open_paren  shift, and go to state 108
    t_close_sq    shift, and go to state 312

    t_dot     reduce using rule 110 (METHOD_FULFILL)
    t_colon   reduce using rule 119 (VALUE)
    $default  reduce using rule 106 (SHIFT_AC)

    PARAM        go to state 98
    PARAM_START  go to state 99


State 294

  120 VALUE: t_string .
  198 ARRAY_INDEX: t_open_sq t_string . t_close_sq

    t_close_sq  shift, and go to state 313

    $default  reduce using rule 120 (VALUE)


State 295

  212 SLICE: t_id t_open_sq t_colon . VALUE t_close_sq

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 355
    EXPR_START      go to state 80


State 296

  211 SLICE: t_id t_open_sq VALUE . t_colon VALUE t_close_sq
  213      | t_id t_open_sq VALUE . t_colon t_close_sq

    t_colon  shift, and go to state 356


State 297

  179 SHORT_EXPR: t_id t_short_expr t_id .

    $default  reduce using rule 179 (SHORT_EXPR)


State 298

   95 FUNC_CALL: t_id . PARAM
  106 SHIFT_AC: t_id .
  110 METHOD_FULFILL: t_id .
  119 VALUE: t_id .
  211 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  212      | t_id . t_open_sq t_colon VALUE t_close_sq
  213      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_open_paren  shift, and go to state 108
    t_open_sq     shift, and go to state 357

    t_shift_const  reduce using rule 106 (SHIFT_AC)
    t_dot          reduce using rule 110 (METHOD_FULFILL)
    $default       reduce using rule 119 (VALUE)

    PARAM        go to state 98
    PARAM_START  go to state 99


State 299

   65 VAR: t_id ASSIGNMENT EXPR .
  178 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 190

    $default  reduce using rule 65 (VAR)


State 300

   74 VAR: t_id ASSIGNMENT SLICE .

    $default  reduce using rule 74 (VAR)


State 301

   95 FUNC_CALL: t_id . PARAM
  106 SHIFT_AC: t_id .
  110 METHOD_FULFILL: t_id .
  119 VALUE: t_id .
  211 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  212      | t_id . t_open_sq t_colon VALUE t_close_sq
  213      | t_id . t_open_sq VALUE t_colon t_close_sq
  230 FIELD: t_id . FIELD_BODY

    t_open_br     shift, and go to state 358
    t_open_paren  shift, and go to state 108
    t_open_sq     shift, and go to state 357

    t_shift_const  reduce using rule 106 (SHIFT_AC)
    t_dot          reduce using rule 110 (METHOD_FULFILL)
    $default       reduce using rule 119 (VALUE)

    PARAM        go to state 98
    PARAM_START  go to state 99
    FIELD_BODY   go to state 359
    FIELD_START  go to state 360


State 302

   77 VAR: t_id SHORT_ASSIGN t_make . t_open_paren MAPS t_close_paren
  209 MAKE: t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  210     | t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_paren  shift, and go to state 361


State 303

   68 VAR: t_id SHORT_ASSIGN BOOLEAN .
   86 BOOLEAN: BOOLEAN . t_bool VALUE

    t_bool  shift, and go to state 187

    $default  reduce using rule 68 (VAR)


State 304

   64 VAR: t_id SHORT_ASSIGN EXPR .
  178 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 190

    $default  reduce using rule 64 (VAR)


State 305

   66 VAR: t_id SHORT_ASSIGN MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 362


State 306

   71 VAR: t_id SHORT_ASSIGN MAKE .

    $default  reduce using rule 71 (VAR)


State 307

   73 VAR: t_id SHORT_ASSIGN SLICE .

    $default  reduce using rule 73 (VAR)


State 308

  240 ST_EMBEDDED: FIELD .

    $default  reduce using rule 240 (ST_EMBEDDED)


State 309

   80 VAR: t_id SHORT_ASSIGN ST_EMBEDDED .

    $default  reduce using rule 80 (VAR)


State 310

   69 VAR: t_id MULTI_AR ASSIGNMENT . EXPR
   72    | t_id MULTI_AR ASSIGNMENT . MAKE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_make              shift, and go to state 326
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 173
    EXPR            go to state 363
    EXPR_START      go to state 80
    MAKE            go to state 364


State 311

  196 ARRAY_INDEX: t_open_sq t_int_const t_close_sq .

    $default  reduce using rule 196 (ARRAY_INDEX)


State 312

  197 ARRAY_INDEX: t_open_sq t_id t_close_sq .

    $default  reduce using rule 197 (ARRAY_INDEX)


State 313

  198 ARRAY_INDEX: t_open_sq t_string t_close_sq .

    $default  reduce using rule 198 (ARRAY_INDEX)


State 314

   90 ASSIGNMENT: t_comma t_id . ASSIGNMENT EXPR t_comma
   91           | t_comma t_id . ASSIGNMENT BOOLEAN t_comma

    t_vtype     shift, and go to state 226
    t_comma     shift, and go to state 241
    t_equality  shift, and go to state 229

    ASSIGNMENT  go to state 353


State 315

   81 VAR: METHOD ASSIGNMENT VALUE .

    $default  reduce using rule 81 (VAR)


State 316

   82 VAR: POINTER ASSIGNMENT EXPR .
  178 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 190

    $default  reduce using rule 82 (VAR)


State 317

  168 ELSEIF_SECOND: t_else t_if . CONDITION BODY_FOR_LOOP

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_true              shift, and go to state 206
    t_false             shift, and go to state 207
    t_pointer           shift, and go to state 72

    $default  reduce using rule 186 (CONDITION)

    BOOLEAN         go to state 209
    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 213
    CONDITION       go to state 365
    EXPR_START      go to state 80


State 318

  171 ELSE_THIRD: t_else BODY_FOR_LOOP .

    $default  reduce using rule 171 (ELSE_THIRD)


State 319

  167 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND ELSEIF_SECOND .

    $default  reduce using rule 167 (MULTY_ELSEIF_SECOND)


State 320

  152 IF: IF_FIRST MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD .
  170 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD . ELSE_THIRD

    t_else  shift, and go to state 321

    $default  reduce using rule 152 (IF)

    ELSE_THIRD  go to state 322


State 321

  171 ELSE_THIRD: t_else . BODY_FOR_LOOP

    t_open_br  shift, and go to state 272

    BODY_FOR_LOOP        go to state 318
    BODY_FOR_LOOP_START  go to state 274


State 322

  170 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD ELSE_THIRD .

    $default  reduce using rule 170 (MULTY_ELSE_THIRD)


State 323

  251 INT_BODY: INT_BODY END_SYMBOLS t_id t_open_paren t_vtype . t_close_paren

    t_close_paren  shift, and go to state 366


State 324

  214 MAPS: t_map t_open_sq . t_vtype t_close_sq t_vtype

    t_vtype  shift, and go to state 367


State 325

   78 VAR: t_var t_id t_id ASSIGNMENT . ST_EMBEDDED

    t_id  shift, and go to state 368

    FIELD        go to state 308
    ST_EMBEDDED  go to state 369


State 326

  209 MAKE: t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  210     | t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_paren  shift, and go to state 370


State 327

   63 VAR: t_var t_id ASSIGNMENT BOOLEAN .
   86 BOOLEAN: BOOLEAN . t_bool VALUE

    t_bool  shift, and go to state 187

    $default  reduce using rule 63 (VAR)


State 328

   61 VAR: t_var t_id ASSIGNMENT EXPR .
   62    | t_var t_id ASSIGNMENT EXPR . t_vtype
  178 EXPR: EXPR . t_sign VALUE

    t_vtype  shift, and go to state 371
    t_sign   shift, and go to state 190

    $default  reduce using rule 61 (VAR)


State 329

   67 VAR: t_var t_id ASSIGNMENT MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 372


State 330

   70 VAR: t_var t_id ASSIGNMENT MAKE .

    $default  reduce using rule 70 (VAR)


State 331

   75 VAR: t_var t_id ASSIGNMENT SLICE .

    $default  reduce using rule 75 (VAR)


State 332

   79 VAR: t_var t_id ASSIGNMENT ST_EMBEDDED .

    $default  reduce using rule 79 (VAR)


State 333

   84 VAR: t_var t_id POINTER ASSIGNMENT . EXPR

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 173
    EXPR            go to state 373
    EXPR_START      go to state 80


State 334

  193 ARRAY_BODY: t_var t_id MULTI_AR t_vtype .
  194           | t_var t_id MULTI_AR t_vtype . ASSIGNMENT MULTI_AR t_vtype PLENTY
  195           | t_var t_id MULTI_AR t_vtype . ASSIGNMENT MAKE

    t_vtype     shift, and go to state 226
    t_comma     shift, and go to state 241
    t_equality  shift, and go to state 229

    $default  reduce using rule 193 (ARRAY_BODY)

    ASSIGNMENT  go to state 374


State 335

  157 IF_FIRST: t_if INIT_STATE t_semicolon CONDITION . BODY_FOR_LOOP

    t_open_br  shift, and go to state 272

    BODY_FOR_LOOP        go to state 375
    BODY_FOR_LOOP_START  go to state 274


State 336

  160 BODY_FOR_LOOP_START: t_open_br END_SYMBOLS .

    $default  reduce using rule 160 (BODY_FOR_LOOP_START)


State 337

  165 LOOP_FILLING: t_continue .

    $default  reduce using rule 165 (LOOP_FILLING)


State 338

  164 LOOP_FILLING: t_break .

    $default  reduce using rule 164 (LOOP_FILLING)


State 339

  162 BODY_FOR_LOOP_END: t_close_br .

    $default  reduce using rule 162 (BODY_FOR_LOOP_END)


State 340

  163 LOOP_FILLING: BODY_FILLING .

    $default  reduce using rule 163 (LOOP_FILLING)


State 341

  158 BODY_FOR_LOOP: BODY_FOR_LOOP_START BODY_FOR_LOOP_END .

    $default  reduce using rule 158 (BODY_FOR_LOOP)


State 342

  161 BODY_FOR_LOOP_START: BODY_FOR_LOOP_START LOOP_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 376


State 343

  147 CASE_STATEMENT: MULTIPLE_ARG .

    $default  reduce using rule 147 (CASE_STATEMENT)


State 344

  143 MULTIPLE_ARG: FIRST_PART . SECOND_PART
  145 FIRST_PART: FIRST_PART . EXPR t_comma

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 173
    SECOND_PART     go to state 377
    EXPR            go to state 378
    EXPR_START      go to state 80


State 345

  141 CASE: t_case CASE_STATEMENT . CASE_BODY

    t_colon  shift, and go to state 347

    CASE_BODY  go to state 379


State 346

  144 FIRST_PART: EXPR . t_comma
  148 CASE_STATEMENT: EXPR .
  178 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 190
    t_comma  shift, and go to state 380

    $default  reduce using rule 148 (CASE_STATEMENT)


State 347

  149 CASE_BODY: t_colon .

    $default  reduce using rule 149 (CASE_BODY)


State 348

  142 DEFAULT: t_default CASE_BODY .
  150 CASE_BODY: CASE_BODY . LOOP_FILLING END_SYMBOLS

    t_defer     shift, and go to state 135
    t_var       shift, and go to state 136
    t_if        shift, and go to state 137
    t_switch    shift, and go to state 138
    t_type      shift, and go to state 4
    t_for       shift, and go to state 139
    t_goto      shift, and go to state 140
    t_continue  shift, and go to state 337
    t_break     shift, and go to state 338
    t_return    shift, and go to state 141
    t_id        shift, and go to state 142
    t_open_sq   shift, and go to state 144
    t_pointer   shift, and go to state 72

    $default  reduce using rule 142 (DEFAULT)

    BODY_FILLING    go to state 340
    VAR             go to state 147
    DEFER           go to state 148
    FUNC_CALL       go to state 149
    METHOD          go to state 150
    METHOD_FULFILL  go to state 77
    POINTER         go to state 151
    GOTO            go to state 152
    LABEL           go to state 153
    SWITCH          go to state 154
    IF              go to state 155
    IF_FIRST        go to state 156
    LOOP_FILLING    go to state 381
    RETURN          go to state 157
    SHORT_EXPR      go to state 158
    FOR             go to state 159
    ARRAY_BODY      go to state 160
    ARRAY_INDEX     go to state 161
    MULTI_AR        go to state 162
    SLICE           go to state 163
    STRUCT          go to state 164
    STRUCT_START    go to state 11
    INTERFACE       go to state 166
    INT_START       go to state 13


State 349

  131 SWITCH: t_switch INIT_STATE t_semicolon EXPR . SWITCH_BODY
  178 EXPR: EXPR . t_sign VALUE

    t_open_br  shift, and go to state 216
    t_sign     shift, and go to state 190

    SWITCH_BODY                     go to state 382
    SWITCH_BODY_START               go to state 218
    SWITCH_BODY_START_WITH_DEFAULT  go to state 219


State 350

  189 FOR: t_for INIT_STATE t_semicolon CONDITION . t_semicolon POST_STATE BODY_FOR_LOOP

    t_semicolon  shift, and go to state 383


State 351

  173 RETURN: t_return EXPR MANY_RETURN_START MANY_RETURN_START_END .

    $default  reduce using rule 173 (RETURN)


State 352

  175 MANY_RETURN_START: MANY_RETURN_START EXPR . t_comma
  176 MANY_RETURN_START_END: EXPR .
  178 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 190
    t_comma  shift, and go to state 384

    $default  reduce using rule 176 (MANY_RETURN_START_END)


State 353

   90 ASSIGNMENT: t_comma t_id ASSIGNMENT . EXPR t_comma
   91           | t_comma t_id ASSIGNMENT . BOOLEAN t_comma

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    BOOLEAN         go to state 385
    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 117
    EXPR            go to state 386
    EXPR_START      go to state 80


State 354

   93 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN . EXPR t_comma
   94             | t_comma t_id SHORT_ASSIGN . BOOLEAN t_comma

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    BOOLEAN         go to state 387
    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 117
    EXPR            go to state 388
    EXPR_START      go to state 80


State 355

  212 SLICE: t_id t_open_sq t_colon VALUE . t_close_sq

    t_close_sq  shift, and go to state 389


State 356

  211 SLICE: t_id t_open_sq VALUE t_colon . VALUE t_close_sq
  213      | t_id t_open_sq VALUE t_colon . t_close_sq

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_close_sq          shift, and go to state 390
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 391
    EXPR_START      go to state 80


State 357

  211 SLICE: t_id t_open_sq . VALUE t_colon VALUE t_close_sq
  212      | t_id t_open_sq . t_colon VALUE t_close_sq
  213      | t_id t_open_sq . VALUE t_colon t_close_sq

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_colon             shift, and go to state 295
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 296
    EXPR_START      go to state 80


State 358

  232 FIELD_START: t_open_br .

    $default  reduce using rule 232 (FIELD_START)


State 359

  230 FIELD: t_id FIELD_BODY .

    $default  reduce using rule 230 (FIELD)


State 360

  231 FIELD_BODY: FIELD_START . FIELD_END
  233 FIELD_START: FIELD_START . FIELD_FULFILL

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_enter             shift, and go to state 392
    t_pointer           shift, and go to state 72

    FUNC_CALL          go to state 73
    SHIFT              go to state 74
    SHIFT_AC           go to state 75
    METHOD             go to state 76
    METHOD_FULFILL     go to state 77
    POINTER            go to state 78
    VALUE              go to state 393
    EXPR_START         go to state 80
    FIELD_FULFILL      go to state 394
    FIELD_END          go to state 395
    FIELD_END_FULFILL  go to state 396


State 361

   77 VAR: t_id SHORT_ASSIGN t_make t_open_paren . MAPS t_close_paren
  209 MAKE: t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_close_paren
  210     | t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_map      shift, and go to state 264
    t_open_sq  shift, and go to state 144

    ARRAY_INDEX  go to state 161
    MULTI_AR     go to state 397
    MAPS         go to state 398


State 362

   66 VAR: t_id SHORT_ASSIGN MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 399

    PLENTY      go to state 400
    PLENTY_OLD  go to state 401


State 363

   69 VAR: t_id MULTI_AR ASSIGNMENT EXPR .
  178 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 190

    $default  reduce using rule 69 (VAR)


State 364

   72 VAR: t_id MULTI_AR ASSIGNMENT MAKE .

    $default  reduce using rule 72 (VAR)


State 365

  168 ELSEIF_SECOND: t_else t_if CONDITION . BODY_FOR_LOOP

    t_open_br  shift, and go to state 272

    BODY_FOR_LOOP        go to state 402
    BODY_FOR_LOOP_START  go to state 274


State 366

  251 INT_BODY: INT_BODY END_SYMBOLS t_id t_open_paren t_vtype t_close_paren .

    $default  reduce using rule 251 (INT_BODY)


State 367

  214 MAPS: t_map t_open_sq t_vtype . t_close_sq t_vtype

    t_close_sq  shift, and go to state 403


State 368

  230 FIELD: t_id . FIELD_BODY

    t_open_br  shift, and go to state 358

    FIELD_BODY   go to state 359
    FIELD_START  go to state 360


State 369

   78 VAR: t_var t_id t_id ASSIGNMENT ST_EMBEDDED .

    $default  reduce using rule 78 (VAR)


State 370

  209 MAKE: t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_close_paren
  210     | t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_sq  shift, and go to state 144

    ARRAY_INDEX  go to state 161
    MULTI_AR     go to state 397


State 371

   62 VAR: t_var t_id ASSIGNMENT EXPR t_vtype .

    $default  reduce using rule 62 (VAR)


State 372

   67 VAR: t_var t_id ASSIGNMENT MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 399

    PLENTY      go to state 404
    PLENTY_OLD  go to state 401


State 373

   84 VAR: t_var t_id POINTER ASSIGNMENT EXPR .
  178 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 190

    $default  reduce using rule 84 (VAR)


State 374

  194 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT . MULTI_AR t_vtype PLENTY
  195           | t_var t_id MULTI_AR t_vtype ASSIGNMENT . MAKE

    t_open_sq  shift, and go to state 144
    t_make     shift, and go to state 326

    ARRAY_INDEX  go to state 161
    MULTI_AR     go to state 405
    MAKE         go to state 406


State 375

  157 IF_FIRST: t_if INIT_STATE t_semicolon CONDITION BODY_FOR_LOOP .

    $default  reduce using rule 157 (IF_FIRST)


State 376

  161 BODY_FOR_LOOP_START: BODY_FOR_LOOP_START LOOP_FILLING END_SYMBOLS .

    $default  reduce using rule 161 (BODY_FOR_LOOP_START)


State 377

  143 MULTIPLE_ARG: FIRST_PART SECOND_PART .

    $default  reduce using rule 143 (MULTIPLE_ARG)


State 378

  145 FIRST_PART: FIRST_PART EXPR . t_comma
  146 SECOND_PART: EXPR .
  178 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 190
    t_comma  shift, and go to state 407

    $default  reduce using rule 146 (SECOND_PART)


State 379

  141 CASE: t_case CASE_STATEMENT CASE_BODY .
  150 CASE_BODY: CASE_BODY . LOOP_FILLING END_SYMBOLS

    t_defer     shift, and go to state 135
    t_var       shift, and go to state 136
    t_if        shift, and go to state 137
    t_switch    shift, and go to state 138
    t_type      shift, and go to state 4
    t_for       shift, and go to state 139
    t_goto      shift, and go to state 140
    t_continue  shift, and go to state 337
    t_break     shift, and go to state 338
    t_return    shift, and go to state 141
    t_id        shift, and go to state 142
    t_open_sq   shift, and go to state 144
    t_pointer   shift, and go to state 72

    $default  reduce using rule 141 (CASE)

    BODY_FILLING    go to state 340
    VAR             go to state 147
    DEFER           go to state 148
    FUNC_CALL       go to state 149
    METHOD          go to state 150
    METHOD_FULFILL  go to state 77
    POINTER         go to state 151
    GOTO            go to state 152
    LABEL           go to state 153
    SWITCH          go to state 154
    IF              go to state 155
    IF_FIRST        go to state 156
    LOOP_FILLING    go to state 381
    RETURN          go to state 157
    SHORT_EXPR      go to state 158
    FOR             go to state 159
    ARRAY_BODY      go to state 160
    ARRAY_INDEX     go to state 161
    MULTI_AR        go to state 162
    SLICE           go to state 163
    STRUCT          go to state 164
    STRUCT_START    go to state 11
    INTERFACE       go to state 166
    INT_START       go to state 13


State 380

  144 FIRST_PART: EXPR t_comma .

    $default  reduce using rule 144 (FIRST_PART)


State 381

  150 CASE_BODY: CASE_BODY LOOP_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 408


State 382

  131 SWITCH: t_switch INIT_STATE t_semicolon EXPR SWITCH_BODY .

    $default  reduce using rule 131 (SWITCH)


State 383

  189 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon . POST_STATE BODY_FOR_LOOP

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 409
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 173
    EXPR            go to state 410
    POST_STATE      go to state 411
    EXPR_START      go to state 80


State 384

  175 MANY_RETURN_START: MANY_RETURN_START EXPR t_comma .

    $default  reduce using rule 175 (MANY_RETURN_START)


State 385

   86 BOOLEAN: BOOLEAN . t_bool VALUE
   91 ASSIGNMENT: t_comma t_id ASSIGNMENT BOOLEAN . t_comma

    t_comma  shift, and go to state 412
    t_bool   shift, and go to state 187


State 386

   90 ASSIGNMENT: t_comma t_id ASSIGNMENT EXPR . t_comma
  178 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 190
    t_comma  shift, and go to state 413


State 387

   86 BOOLEAN: BOOLEAN . t_bool VALUE
   94 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN BOOLEAN . t_comma

    t_comma  shift, and go to state 414
    t_bool   shift, and go to state 187


State 388

   93 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN EXPR . t_comma
  178 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 190
    t_comma  shift, and go to state 415


State 389

  212 SLICE: t_id t_open_sq t_colon VALUE t_close_sq .

    $default  reduce using rule 212 (SLICE)


State 390

  213 SLICE: t_id t_open_sq VALUE t_colon t_close_sq .

    $default  reduce using rule 213 (SLICE)


State 391

  211 SLICE: t_id t_open_sq VALUE t_colon VALUE . t_close_sq

    t_close_sq  shift, and go to state 416


State 392

  236 FIELD_FULFILL: t_enter .
  239 FIELD_END_FULFILL: t_enter .

    t_close_br  reduce using rule 239 (FIELD_END_FULFILL)
    $default    reduce using rule 236 (FIELD_FULFILL)


State 393

  234 FIELD_FULFILL: VALUE . t_colon VALUE t_comma
  235              | VALUE . t_colon FIELD t_comma
  238 FIELD_END_FULFILL: VALUE . t_colon VALUE

    t_colon  shift, and go to state 417


State 394

  233 FIELD_START: FIELD_START FIELD_FULFILL .

    $default  reduce using rule 233 (FIELD_START)


State 395

  231 FIELD_BODY: FIELD_START FIELD_END .

    $default  reduce using rule 231 (FIELD_BODY)


State 396

  237 FIELD_END: FIELD_END_FULFILL . t_close_br

    t_close_br  shift, and go to state 418


State 397

  209 MAKE: t_make t_open_paren MULTI_AR . t_vtype t_comma VALUE t_close_paren
  210     | t_make t_open_paren MULTI_AR . t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_vtype  shift, and go to state 419


State 398

   77 VAR: t_id SHORT_ASSIGN t_make t_open_paren MAPS . t_close_paren

    t_close_paren  shift, and go to state 420


State 399

  204 PLENTY_OLD: t_open_br . ENUM t_close_br
  205           | t_open_br . t_close_br
  206           | t_open_br . PLENTY t_close_br

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_br           shift, and go to state 399
    t_close_br          shift, and go to state 421
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 79
    EXPR_START      go to state 80
    PLENTY          go to state 422
    PLENTY_OLD      go to state 401
    ENUM            go to state 423


State 400

   66 VAR: t_id SHORT_ASSIGN MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 66 (VAR)


State 401

  202 PLENTY: PLENTY_OLD .
  203       | PLENTY_OLD . t_comma PLENTY

    t_comma  shift, and go to state 424

    $default  reduce using rule 202 (PLENTY)


State 402

  168 ELSEIF_SECOND: t_else t_if CONDITION BODY_FOR_LOOP .

    $default  reduce using rule 168 (ELSEIF_SECOND)


State 403

  214 MAPS: t_map t_open_sq t_vtype t_close_sq . t_vtype

    t_vtype  shift, and go to state 425


State 404

   67 VAR: t_var t_id ASSIGNMENT MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 67 (VAR)


State 405

  194 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 426


State 406

  195 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MAKE .

    $default  reduce using rule 195 (ARRAY_BODY)


State 407

  145 FIRST_PART: FIRST_PART EXPR t_comma .

    $default  reduce using rule 145 (FIRST_PART)


State 408

  150 CASE_BODY: CASE_BODY LOOP_FILLING END_SYMBOLS .

    $default  reduce using rule 150 (CASE_BODY)


State 409

   95 FUNC_CALL: t_id . PARAM
  106 SHIFT_AC: t_id .
  110 METHOD_FULFILL: t_id .
  119 VALUE: t_id .
  188 POST_STATE: t_id . t_inc_const

    t_inc_const   shift, and go to state 427
    t_open_paren  shift, and go to state 108

    t_shift_const  reduce using rule 106 (SHIFT_AC)
    t_dot          reduce using rule 110 (METHOD_FULFILL)
    $default       reduce using rule 119 (VALUE)

    PARAM        go to state 98
    PARAM_START  go to state 99


State 410

  178 EXPR: EXPR . t_sign VALUE
  187 POST_STATE: EXPR .

    t_sign  shift, and go to state 190

    $default  reduce using rule 187 (POST_STATE)


State 411

  189 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE . BODY_FOR_LOOP

    t_open_br  shift, and go to state 272

    BODY_FOR_LOOP        go to state 428
    BODY_FOR_LOOP_START  go to state 274


State 412

   91 ASSIGNMENT: t_comma t_id ASSIGNMENT BOOLEAN t_comma .

    $default  reduce using rule 91 (ASSIGNMENT)


State 413

   90 ASSIGNMENT: t_comma t_id ASSIGNMENT EXPR t_comma .

    $default  reduce using rule 90 (ASSIGNMENT)


State 414

   94 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN BOOLEAN t_comma .

    $default  reduce using rule 94 (SHORT_ASSIGN)


State 415

   93 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN EXPR t_comma .

    $default  reduce using rule 93 (SHORT_ASSIGN)


State 416

  211 SLICE: t_id t_open_sq VALUE t_colon VALUE t_close_sq .

    $default  reduce using rule 211 (SLICE)


State 417

  234 FIELD_FULFILL: VALUE t_colon . VALUE t_comma
  235              | VALUE t_colon . FIELD t_comma
  238 FIELD_END_FULFILL: VALUE t_colon . VALUE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 429
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 430
    EXPR_START      go to state 80
    FIELD           go to state 431


State 418

  237 FIELD_END: FIELD_END_FULFILL t_close_br .

    $default  reduce using rule 237 (FIELD_END)


State 419

  209 MAKE: t_make t_open_paren MULTI_AR t_vtype . t_comma VALUE t_close_paren
  210     | t_make t_open_paren MULTI_AR t_vtype . t_comma VALUE t_comma t_int_const VALUE

    t_comma  shift, and go to state 432


State 420

   77 VAR: t_id SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren .

    $default  reduce using rule 77 (VAR)


State 421

  205 PLENTY_OLD: t_open_br t_close_br .

    $default  reduce using rule 205 (PLENTY_OLD)


State 422

  206 PLENTY_OLD: t_open_br PLENTY . t_close_br

    t_close_br  shift, and go to state 433


State 423

  204 PLENTY_OLD: t_open_br ENUM . t_close_br
  208 ENUM: ENUM . t_comma VALUE

    t_close_br  shift, and go to state 434
    t_comma     shift, and go to state 120


State 424

  203 PLENTY: PLENTY_OLD t_comma . PLENTY

    t_open_br  shift, and go to state 399

    PLENTY      go to state 435
    PLENTY_OLD  go to state 401


State 425

  214 MAPS: t_map t_open_sq t_vtype t_close_sq t_vtype .

    $default  reduce using rule 214 (MAPS)


State 426

  194 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 399

    PLENTY      go to state 436
    PLENTY_OLD  go to state 401


State 427

  188 POST_STATE: t_id t_inc_const .

    $default  reduce using rule 188 (POST_STATE)


State 428

  189 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY_FOR_LOOP .

    $default  reduce using rule 189 (FOR)


State 429

   95 FUNC_CALL: t_id . PARAM
  106 SHIFT_AC: t_id .
  110 METHOD_FULFILL: t_id .
  119 VALUE: t_id .
  230 FIELD: t_id . FIELD_BODY

    t_open_br     shift, and go to state 358
    t_open_paren  shift, and go to state 108

    t_shift_const  reduce using rule 106 (SHIFT_AC)
    t_dot          reduce using rule 110 (METHOD_FULFILL)
    $default       reduce using rule 119 (VALUE)

    PARAM        go to state 98
    PARAM_START  go to state 99
    FIELD_BODY   go to state 359
    FIELD_START  go to state 360


State 430

  234 FIELD_FULFILL: VALUE t_colon VALUE . t_comma
  238 FIELD_END_FULFILL: VALUE t_colon VALUE .

    t_comma  shift, and go to state 437

    $default  reduce using rule 238 (FIELD_END_FULFILL)


State 431

  235 FIELD_FULFILL: VALUE t_colon FIELD . t_comma

    t_comma  shift, and go to state 438


State 432

  209 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma . VALUE t_close_paren
  210     | t_make t_open_paren MULTI_AR t_vtype t_comma . VALUE t_comma t_int_const VALUE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 439
    EXPR_START      go to state 80


State 433

  206 PLENTY_OLD: t_open_br PLENTY t_close_br .

    $default  reduce using rule 206 (PLENTY_OLD)


State 434

  204 PLENTY_OLD: t_open_br ENUM t_close_br .

    $default  reduce using rule 204 (PLENTY_OLD)


State 435

  203 PLENTY: PLENTY_OLD t_comma PLENTY .

    $default  reduce using rule 203 (PLENTY)


State 436

  194 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 194 (ARRAY_BODY)


State 437

  234 FIELD_FULFILL: VALUE t_colon VALUE t_comma .

    $default  reduce using rule 234 (FIELD_FULFILL)


State 438

  235 FIELD_FULFILL: VALUE t_colon FIELD t_comma .

    $default  reduce using rule 235 (FIELD_FULFILL)


State 439

  209 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE . t_close_paren
  210     | t_make t_open_paren MULTI_AR t_vtype t_comma VALUE . t_comma t_int_const VALUE

    t_comma        shift, and go to state 440
    t_close_paren  shift, and go to state 441


State 440

  210 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma . t_int_const VALUE

    t_int_const  shift, and go to state 442


State 441

  209 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren .

    $default  reduce using rule 209 (MAKE)


State 442

  210 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const . VALUE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 443
    EXPR_START      go to state 80


State 443

  210 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE .

    $default  reduce using rule 210 (MAKE)
