Terminals unused in grammar

   t_constant
   t_chan
   t_go
   t_range
   t_select
   t_fallthrough
   t_continue
   t_break
   t_or_const
   t_and_const
   t_param_const
   t_eq_const
   t_rel_const
   t_point_const
   t_punc
   t_char_const
   '+'
   '-'
   '*'
   '/'


Grammar

    0 $accept: START $end

    1 START: START GLOBAL END_SYMBOLS
    2      | GLOBAL END_SYMBOLS
    3      | START END_SYMBOLS

    4 GLOBAL: PACKAGE
    5       | IMPORT
    6       | FUNC
    7       | STRUCT
    8       | INTERFACE

    9 PACKAGE: t_package t_id

   10 IMPORT: t_import t_string
   11       | t_import t_open_paren PARAM_IMPORT t_close_paren
   12       | t_import t_open_paren t_enter PARAM_IMPORT t_close_paren
   13       | t_import t_id t_string

   14 FUNC: t_func t_id t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART

   15 FUNC_SECOND_PART: BODY
   16                 | FUNC_RETURN_VALUE BODY
   17                 | t_open_paren FUNC_PARAM_SECOND t_close_paren BODY

   18 FUNC_PARAM: FUNC_PARAM_FULFILL
   19           | FUNC_PARAM t_comma FUNC_PARAM_FULFILL

   20 FUNC_PARAM_FULFILL: t_id TYPE_AND_STRUCT
   21                   | t_id
   22                   | /* empty */

   23 FUNC_PARAM_SECOND: FUNC_PARAM_FULFILL_SECOND
   24                  | FUNC_PARAM_SECOND t_comma FUNC_PARAM_FULFILL_SECOND

   25 FUNC_PARAM_FULFILL_SECOND: t_id TYPE_AND_STRUCT
   26                          | TYPE_AND_STRUCT

   27 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE_FULFILL
   28                  | FUNC_RETURN_VALUE FUNC_RETURN_VALUE_FULFILL

   29 FUNC_RETURN_VALUE_FULFILL: TYPE_AND_STRUCT
   30                          | t_func t_open_paren TYPE_AND_STRUCT t_close_paren
   31                          | t_func t_open_paren t_close_paren

   32 TYPE_AND_STRUCT: t_vtype
   33                | t_id

   34 BODY: BODY_START BODY_END

   35 BODY_END: t_close_br

   36 BODY_START: t_open_br
   37           | BODY_START BODY_FILLING END_SYMBOLS
   38           | BODY_START END_SYMBOLS

   39 BODY_FILLING: VAR
   40             | FOR
   41             | SWITCH
   42             | GOTO
   43             | LABEL
   44             | IF
   45             | MULTI_AR
   46             | FUNC_CALL
   47             | SHORT_EXPR
   48             | ARRAY_BODY
   49             | RETURN
   50             | STRUCT
   51             | SLICE
   52             | DEFER

   53 VAR: t_var t_id ASSIGNMENT EXPR
   54    | t_var t_id ASSIGNMENT EXPR t_vtype
   55    | t_var t_id ASSIGNMENT BOOLEAN
   56    | t_id SHORT_ASSIGN EXPR
   57    | t_id ASSIGNMENT EXPR
   58    | t_id SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   59    | t_var t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   60    | t_id SHORT_ASSIGN BOOLEAN
   61    | t_id MULTI_AR ASSIGNMENT EXPR
   62    | t_var t_id ASSIGNMENT MAKE
   63    | t_id SHORT_ASSIGN MAKE
   64    | t_id MULTI_AR ASSIGNMENT MAKE
   65    | t_id SHORT_ASSIGN SLICE
   66    | t_id ASSIGNMENT SLICE
   67    | t_var t_id ASSIGNMENT SLICE
   68    | t_var t_id MAPS
   69    | t_id SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   70    | t_var t_id t_id ASSIGNMENT t_id ST_EMBEDDED
   71    | t_var t_id ASSIGNMENT t_id ST_EMBEDDED
   72    | t_id SHORT_ASSIGN t_id ST_EMBEDDED
   73    | METHOD ASSIGNMENT VALUE
   74    | POINTER ASSIGNMENT EXPR
   75    | t_var t_id POINTER
   76    | t_var t_id POINTER ASSIGNMENT EXPR

   77 BOOLEAN: EXPR t_bool EXPR

   78 DEFER: t_defer FUNC_CALL

   79 ASSIGNMENT: t_vtype t_equality
   80           | t_equality
   81           | t_comma t_id ASSIGNMENT EXPR t_comma
   82           | t_comma t_id ASSIGNMENT BOOLEAN t_comma

   83 SHORT_ASSIGN: t_short_dec
   84             | t_comma t_id SHORT_ASSIGN EXPR t_comma
   85             | t_comma t_id SHORT_ASSIGN BOOLEAN t_comma

   86 FUNC_CALL: t_id t_open_paren PARAM t_close_paren
   87          | METHOD t_open_paren PARAM t_close_paren

   88 SHIFT: SHIFT_AC t_shift_const SHIFT_AC

   89 SHIFT_AC: t_id
   90         | t_int_const

   91 METHOD: t_id t_dot t_id
   92       | METHOD t_dot t_id

   93 POINTER: t_pointer t_id
   94        | t_pointer t_vtype
   95        | t_ampersand t_id

   96 PARAM_IMPORT: t_string END_SYMBOLS
   97             | t_string t_path_pack t_string END_SYMBOLS
   98             | t_id t_string END_SYMBOLS
   99             | PARAM_IMPORT t_string END_SYMBOLS
  100             | PARAM_IMPORT t_id t_string END_SYMBOLS

  101 VALUE: t_int_const
  102      | t_float_const
  103      | t_id
  104      | t_string
  105      | t_rune
  106      | t_blank_identifier
  107      | FUNC_CALL
  108      | SHIFT
  109      | POINTER

  110 GOTO: t_goto t_id

  111 LABEL: t_id t_colon

  112 SWITCH: t_switch INIT_STATE t_semicolon EXPR SWITCH_BODY
  113       | t_switch EXPR SWITCH_BODY
  114       | t_switch SWITCH_BODY

  115 SWITCH_BODY: SWITCH_BODY_START SWITCH_BODY_END
  116            | SWITCH_BODY_START_WITH_DEFAULT SWITCH_BODY_END

  117 SWITCH_BODY_START: t_open_br
  118                  | t_open_br END_SYMBOLS
  119                  | SWITCH_BODY_START CASE

  120 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START DEFAULT
  121                               | SWITCH_BODY_START_WITH_DEFAULT CASE

  122 CASE: t_case CASE_STATEMENT CASE_BODY

  123 DEFAULT: t_default CASE_BODY

  124 MULTIPLE_ARG: FIRST_PART SECOND_PART

  125 FIRST_PART: EXPR t_comma
  126           | FIRST_PART EXPR t_comma

  127 SECOND_PART: EXPR

  128 CASE_STATEMENT: MULTIPLE_ARG
  129               | EXPR

  130 CASE_BODY: t_colon
  131          | t_colon t_enter
  132          | CASE_BODY BODY_FILLING END_SYMBOLS

  133 SWITCH_BODY_END: t_close_br

  134 IF: IF_FIRST MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD
  135   | IF_FIRST MULTY_ELSEIF_SECOND
  136   | IF_FIRST MULTY_ELSE_THIRD
  137   | IF_FIRST

  138 IF_FIRST: t_if CONDITION BODY

  139 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND ELSEIF_SECOND
  140                    | ELSEIF_SECOND

  141 ELSEIF_SECOND: t_else t_if CONDITION BODY

  142 MULTY_ELSE_THIRD: ELSE_THIRD
  143                 | MULTY_ELSE_THIRD ELSE_THIRD

  144 ELSE_THIRD: t_else BODY

  145 RETURN: t_return PARAM

  146 PARAM: PARAM t_comma EXPR
  147      | EXPR
  148      | /* empty */

  149 EXPR: EXPR t_sign VALUE
  150     | EXPR_START EXPR EXPR_END
  151     | VALUE

  152 SHORT_EXPR: t_id t_short_expr t_id

  153 INIT_STATE: VAR
  154           | FUNC_CALL
  155           | /* empty */

  156 CONDITION: BOOLEAN
  157          | t_true
  158          | t_false
  159          | /* empty */

  160 POST_STATE: EXPR
  161           | t_id t_inc_const

  162 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY
  163    | t_for CONDITION BODY

  164 EXPR_START: t_open_paren

  165 EXPR_END: t_close_paren

  166 ARRAY_BODY: t_var t_id MULTI_AR t_vtype
  167           | t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  168           | t_var t_id MULTI_AR t_vtype ASSIGNMENT MAKE

  169 ARRAY_INDEX: t_open_sq t_int_const t_close_sq
  170            | t_open_sq t_id t_close_sq
  171            | t_open_sq t_string t_close_sq
  172            | t_open_sq t_close_sq

  173 MULTI_AR: ARRAY_INDEX
  174         | ARRAY_INDEX MULTI_AR

  175 PLENTY: PLENTY_OLD
  176       | PLENTY_OLD t_comma PLENTY

  177 PLENTY_OLD: t_open_br ENUM t_close_br
  178           | t_open_br t_close_br
  179           | t_open_br PLENTY t_close_br

  180 ENUM: VALUE
  181     | ENUM t_comma VALUE

  182 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  183     | t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

  184 SLICE: t_id t_open_sq VALUE t_colon VALUE t_close_sq
  185      | t_id t_open_sq t_colon VALUE t_close_sq
  186      | t_id t_open_sq VALUE t_colon t_close_sq

  187 MAPS: t_map t_open_sq t_vtype t_close_sq t_vtype

  188 STRUCT: STRUCT_START

  189 STRUCT_BODY: ENUM t_vtype
  190            | t_id t_id
  191            | t_id
  192            | STRUCT_BODY END_SYMBOLS t_id t_vtype
  193            | STRUCT_BODY END_SYMBOLS t_id t_id
  194            | STRUCT_BODY END_SYMBOLS t_id

  195 STRUCT_START: t_type t_id t_struct_const t_open_br STRUCT_END
  196             | t_type t_id t_struct_const t_open_br STRUCT_BODY STRUCT_END
  197             | t_type t_id t_struct_const t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END
  198             | t_type t_id t_struct_const t_enter

  199 STRUCT_END: t_close_br
  200           | t_enter t_close_br

  201 STRUCT_ENUM: t_id t_colon VALUE
  202            | STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon VALUE
  203            | t_id t_colon t_id STRUCT_FIELD
  204            | STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon t_id STRUCT_FIELD

  205 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_close_br
  206             | t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS
  207             | PLENTY_OLD

  208 ST_EMBEDDED: STRUCT_FIELD
  209            | STRUCT_FIELD t_comma ST_EMBEDDED

  210 END_SYMBOLS: t_semicolon
  211            | t_enter
  212            | t_eof

  213 INTERFACE: INT_START

  214 INT_START: t_type t_id t_interface t_open_br INT_BODY INT_END
  215          | t_type t_id t_interface t_open_br END_SYMBOLS INT_BODY INT_END
  216          | t_type t_id t_interface t_enter t_open_br END_SYMBOLS INT_BODY INT_END

  217 INT_BODY: FUNC_CALL
  218         | FUNC_CALL t_vtype
  219         | t_id t_open_paren t_vtype t_close_paren
  220         | INT_BODY END_SYMBOLS t_id t_open_paren t_vtype t_close_paren
  221         | INT_BODY END_SYMBOLS FUNC_CALL t_vtype
  222         | INT_BODY END_SYMBOLS FUNC_CALL

  223 INT_END: t_close_br
  224        | t_enter t_close_br


Terminals, with rules where they appear

$end (0) 0
'*' (42)
'+' (43)
'-' (45)
'/' (47)
error (256)
t_vtype (258) 32 54 58 59 79 94 166 167 168 182 183 187 189 192 218
    219 220 221
t_constant (259)
t_case (260) 122
t_func (261) 14 30 31
t_import (262) 10 11 12 13
t_chan (263)
t_defer (264) 78
t_go (265)
t_interface (266) 214 215 216
t_default (267) 123
t_var (268) 53 54 55 59 62 67 68 70 71 75 76 166 167 168
t_range (269)
t_map (270) 187
t_package (271) 9
t_if (272) 138 141
t_select (273)
t_switch (274) 112 113 114
t_fallthrough (275)
t_else (276) 141 144
t_type (277) 195 196 197 198 214 215 216
t_for (278) 162 163
t_goto (279) 110
t_continue (280)
t_break (281)
t_return (282) 145
t_struct_const (283) 195 196 197 198
t_or_const (284)
t_and_const (285)
t_param_const (286)
t_eq_const (287)
t_rel_const (288)
t_shift_const (289) 88
t_inc_const (290) 161
t_point_const (291)
t_punc (292)
t_int_const (293) 90 101 169 183
t_float_const (294) 102
t_char_const (295)
t_id (296) 9 13 14 20 21 25 33 53 54 55 56 57 58 59 60 61 62 63 64
    65 66 67 68 69 70 71 72 75 76 81 82 84 85 86 89 91 92 93 95 98
    100 103 110 111 152 161 166 167 168 170 184 185 186 190 191 192
    193 194 195 196 197 198 201 202 203 204 214 215 216 219 220
t_string (297) 10 13 96 97 98 99 100 104 171
t_short_dec (298) 83
t_open_br (299) 36 117 118 177 178 179 195 196 197 205 206 214 215
    216
t_close_br (300) 35 133 177 178 179 199 200 205 206 223 224
t_sign (301) 149
t_comma (302) 19 24 81 82 84 85 125 126 146 176 181 182 183 202 204
    206 209
t_equality (303) 79 80
t_open_paren (304) 11 12 14 17 30 31 69 86 87 164 182 183 219 220
t_close_paren (305) 11 12 14 17 30 31 69 86 87 165 182 219 220
t_open_sq (306) 169 170 171 172 184 185 186 187
t_close_sq (307) 169 170 171 172 184 185 186 187
t_bool (308) 77
t_rune (309) 105
t_semicolon (310) 112 162 210
t_blank_identifier (311) 106
t_dot (312) 91 92
t_colon (313) 111 130 131 184 185 186 201 202 203 204
t_true (314) 157
t_false (315) 158
t_short_expr (316) 152
t_make (317) 69 182 183
t_enter (318) 12 131 198 200 211 216 224
t_eof (319) 212
t_pointer (320) 93 94
t_ampersand (321) 95
t_path_pack (322) 97


Nonterminals, with rules where they appear

$accept (72)
    on left: 0
START (73)
    on left: 1 2 3, on right: 0 1 3
GLOBAL (74)
    on left: 4 5 6 7 8, on right: 1 2
PACKAGE (75)
    on left: 9, on right: 4
IMPORT (76)
    on left: 10 11 12 13, on right: 5
FUNC (77)
    on left: 14, on right: 6
FUNC_SECOND_PART (78)
    on left: 15 16 17, on right: 14
FUNC_PARAM (79)
    on left: 18 19, on right: 14 19
FUNC_PARAM_FULFILL (80)
    on left: 20 21 22, on right: 18 19
FUNC_PARAM_SECOND (81)
    on left: 23 24, on right: 17 24
FUNC_PARAM_FULFILL_SECOND (82)
    on left: 25 26, on right: 23 24
FUNC_RETURN_VALUE (83)
    on left: 27 28, on right: 16 28
FUNC_RETURN_VALUE_FULFILL (84)
    on left: 29 30 31, on right: 27 28
TYPE_AND_STRUCT (85)
    on left: 32 33, on right: 20 25 26 29 30
BODY (86)
    on left: 34, on right: 15 16 17 138 141 144 162 163
BODY_END (87)
    on left: 35, on right: 34
BODY_START (88)
    on left: 36 37 38, on right: 34 37 38
BODY_FILLING (89)
    on left: 39 40 41 42 43 44 45 46 47 48 49 50 51 52, on right: 37
    132
VAR (90)
    on left: 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
    71 72 73 74 75 76, on right: 39 153
BOOLEAN (91)
    on left: 77, on right: 55 60 82 85 156
DEFER (92)
    on left: 78, on right: 52
ASSIGNMENT (93)
    on left: 79 80 81 82, on right: 53 54 55 57 59 61 62 64 66 67 70
    71 73 74 76 81 82 167 168
SHORT_ASSIGN (94)
    on left: 83 84 85, on right: 56 58 60 63 65 69 72 84 85
FUNC_CALL (95)
    on left: 86 87, on right: 46 78 107 154 217 218 221 222
SHIFT (96)
    on left: 88, on right: 108
SHIFT_AC (97)
    on left: 89 90, on right: 88
METHOD (98)
    on left: 91 92, on right: 73 87 92
POINTER (99)
    on left: 93 94 95, on right: 74 75 76 109
PARAM_IMPORT (100)
    on left: 96 97 98 99 100, on right: 11 12 99 100
VALUE (101)
    on left: 101 102 103 104 105 106 107 108 109, on right: 73 149
    151 180 181 182 183 184 185 186 201 202
GOTO (102)
    on left: 110, on right: 42
LABEL (103)
    on left: 111, on right: 43
SWITCH (104)
    on left: 112 113 114, on right: 41
SWITCH_BODY (105)
    on left: 115 116, on right: 112 113 114
SWITCH_BODY_START (106)
    on left: 117 118 119, on right: 115 119 120
SWITCH_BODY_START_WITH_DEFAULT (107)
    on left: 120 121, on right: 116 121
CASE (108)
    on left: 122, on right: 119 121
DEFAULT (109)
    on left: 123, on right: 120
MULTIPLE_ARG (110)
    on left: 124, on right: 128
FIRST_PART (111)
    on left: 125 126, on right: 124 126
SECOND_PART (112)
    on left: 127, on right: 124
CASE_STATEMENT (113)
    on left: 128 129, on right: 122
CASE_BODY (114)
    on left: 130 131 132, on right: 122 123 132
SWITCH_BODY_END (115)
    on left: 133, on right: 115 116
IF (116)
    on left: 134 135 136 137, on right: 44
IF_FIRST (117)
    on left: 138, on right: 134 135 136 137
MULTY_ELSEIF_SECOND (118)
    on left: 139 140, on right: 134 135 139
ELSEIF_SECOND (119)
    on left: 141, on right: 139 140
MULTY_ELSE_THIRD (120)
    on left: 142 143, on right: 134 136 143
ELSE_THIRD (121)
    on left: 144, on right: 142 143
RETURN (122)
    on left: 145, on right: 49
PARAM (123)
    on left: 146 147 148, on right: 86 87 145 146
EXPR (124)
    on left: 149 150 151, on right: 53 54 56 57 61 74 76 77 81 84 112
    113 125 126 127 129 146 147 149 150 160
SHORT_EXPR (125)
    on left: 152, on right: 47
INIT_STATE (126)
    on left: 153 154 155, on right: 112 162
CONDITION (127)
    on left: 156 157 158 159, on right: 138 141 162 163
POST_STATE (128)
    on left: 160 161, on right: 162
FOR (129)
    on left: 162 163, on right: 40
EXPR_START (130)
    on left: 164, on right: 150
EXPR_END (131)
    on left: 165, on right: 150
ARRAY_BODY (132)
    on left: 166 167 168, on right: 48
ARRAY_INDEX (133)
    on left: 169 170 171 172, on right: 173 174
MULTI_AR (134)
    on left: 173 174, on right: 45 58 59 61 64 166 167 168 174 182
    183
PLENTY (135)
    on left: 175 176, on right: 58 59 167 176 179
PLENTY_OLD (136)
    on left: 177 178 179, on right: 175 176 207
ENUM (137)
    on left: 180 181, on right: 177 181 189
MAKE (138)
    on left: 182 183, on right: 62 63 64 168
SLICE (139)
    on left: 184 185 186, on right: 51 65 66 67
MAPS (140)
    on left: 187, on right: 68 69
STRUCT (141)
    on left: 188, on right: 7 50
STRUCT_BODY (142)
    on left: 189 190 191 192 193 194, on right: 192 193 194 196 197
STRUCT_START (143)
    on left: 195 196 197 198, on right: 188
STRUCT_END (144)
    on left: 199 200, on right: 195 196 197
STRUCT_ENUM (145)
    on left: 201 202 203 204, on right: 202 204 205 206
STRUCT_FIELD (146)
    on left: 205 206 207, on right: 203 204 208 209
ST_EMBEDDED (147)
    on left: 208 209, on right: 70 71 72 209
END_SYMBOLS (148)
    on left: 210 211 212, on right: 1 2 3 37 38 96 97 98 99 100 118
    132 192 193 194 197 202 204 205 206 215 216 220 221 222
INTERFACE (149)
    on left: 213, on right: 8
INT_START (150)
    on left: 214 215 216, on right: 213
INT_BODY (151)
    on left: 217 218 219 220 221 222, on right: 214 215 216 220 221
    222
INT_END (152)
    on left: 223 224, on right: 214 215 216


State 0

    0 $accept: . START $end

    t_func     shift, and go to state 1
    t_import   shift, and go to state 2
    t_package  shift, and go to state 3
    t_type     shift, and go to state 4

    START         go to state 5
    GLOBAL        go to state 6
    PACKAGE       go to state 7
    IMPORT        go to state 8
    FUNC          go to state 9
    STRUCT        go to state 10
    STRUCT_START  go to state 11
    INTERFACE     go to state 12
    INT_START     go to state 13


State 1

   14 FUNC: t_func . t_id t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART

    t_id  shift, and go to state 14


State 2

   10 IMPORT: t_import . t_string
   11       | t_import . t_open_paren PARAM_IMPORT t_close_paren
   12       | t_import . t_open_paren t_enter PARAM_IMPORT t_close_paren
   13       | t_import . t_id t_string

    t_id          shift, and go to state 15
    t_string      shift, and go to state 16
    t_open_paren  shift, and go to state 17


State 3

    9 PACKAGE: t_package . t_id

    t_id  shift, and go to state 18


State 4

  195 STRUCT_START: t_type . t_id t_struct_const t_open_br STRUCT_END
  196             | t_type . t_id t_struct_const t_open_br STRUCT_BODY STRUCT_END
  197             | t_type . t_id t_struct_const t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END
  198             | t_type . t_id t_struct_const t_enter
  214 INT_START: t_type . t_id t_interface t_open_br INT_BODY INT_END
  215          | t_type . t_id t_interface t_open_br END_SYMBOLS INT_BODY INT_END
  216          | t_type . t_id t_interface t_enter t_open_br END_SYMBOLS INT_BODY INT_END

    t_id  shift, and go to state 19


State 5

    0 $accept: START . $end
    1 START: START . GLOBAL END_SYMBOLS
    3      | START . END_SYMBOLS

    $end         shift, and go to state 20
    t_func       shift, and go to state 1
    t_import     shift, and go to state 2
    t_package    shift, and go to state 3
    t_type       shift, and go to state 4
    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    GLOBAL        go to state 24
    PACKAGE       go to state 7
    IMPORT        go to state 8
    FUNC          go to state 9
    STRUCT        go to state 10
    STRUCT_START  go to state 11
    END_SYMBOLS   go to state 25
    INTERFACE     go to state 12
    INT_START     go to state 13


State 6

    2 START: GLOBAL . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 26


State 7

    4 GLOBAL: PACKAGE .

    $default  reduce using rule 4 (GLOBAL)


State 8

    5 GLOBAL: IMPORT .

    $default  reduce using rule 5 (GLOBAL)


State 9

    6 GLOBAL: FUNC .

    $default  reduce using rule 6 (GLOBAL)


State 10

    7 GLOBAL: STRUCT .

    $default  reduce using rule 7 (GLOBAL)


State 11

  188 STRUCT: STRUCT_START .

    $default  reduce using rule 188 (STRUCT)


State 12

    8 GLOBAL: INTERFACE .

    $default  reduce using rule 8 (GLOBAL)


State 13

  213 INTERFACE: INT_START .

    $default  reduce using rule 213 (INTERFACE)


State 14

   14 FUNC: t_func t_id . t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART

    t_open_paren  shift, and go to state 27


State 15

   13 IMPORT: t_import t_id . t_string

    t_string  shift, and go to state 28


State 16

   10 IMPORT: t_import t_string .

    $default  reduce using rule 10 (IMPORT)


State 17

   11 IMPORT: t_import t_open_paren . PARAM_IMPORT t_close_paren
   12       | t_import t_open_paren . t_enter PARAM_IMPORT t_close_paren

    t_id      shift, and go to state 29
    t_string  shift, and go to state 30
    t_enter   shift, and go to state 31

    PARAM_IMPORT  go to state 32


State 18

    9 PACKAGE: t_package t_id .

    $default  reduce using rule 9 (PACKAGE)


State 19

  195 STRUCT_START: t_type t_id . t_struct_const t_open_br STRUCT_END
  196             | t_type t_id . t_struct_const t_open_br STRUCT_BODY STRUCT_END
  197             | t_type t_id . t_struct_const t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END
  198             | t_type t_id . t_struct_const t_enter
  214 INT_START: t_type t_id . t_interface t_open_br INT_BODY INT_END
  215          | t_type t_id . t_interface t_open_br END_SYMBOLS INT_BODY INT_END
  216          | t_type t_id . t_interface t_enter t_open_br END_SYMBOLS INT_BODY INT_END

    t_interface     shift, and go to state 33
    t_struct_const  shift, and go to state 34


State 20

    0 $accept: START $end .

    $default  accept


State 21

  210 END_SYMBOLS: t_semicolon .

    $default  reduce using rule 210 (END_SYMBOLS)


State 22

  211 END_SYMBOLS: t_enter .

    $default  reduce using rule 211 (END_SYMBOLS)


State 23

  212 END_SYMBOLS: t_eof .

    $default  reduce using rule 212 (END_SYMBOLS)


State 24

    1 START: START GLOBAL . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 35


State 25

    3 START: START END_SYMBOLS .

    $default  reduce using rule 3 (START)


State 26

    2 START: GLOBAL END_SYMBOLS .

    $default  reduce using rule 2 (START)


State 27

   14 FUNC: t_func t_id t_open_paren . FUNC_PARAM t_close_paren FUNC_SECOND_PART

    t_id  shift, and go to state 36

    $default  reduce using rule 22 (FUNC_PARAM_FULFILL)

    FUNC_PARAM          go to state 37
    FUNC_PARAM_FULFILL  go to state 38


State 28

   13 IMPORT: t_import t_id t_string .

    $default  reduce using rule 13 (IMPORT)


State 29

   98 PARAM_IMPORT: t_id . t_string END_SYMBOLS

    t_string  shift, and go to state 39


State 30

   96 PARAM_IMPORT: t_string . END_SYMBOLS
   97             | t_string . t_path_pack t_string END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23
    t_path_pack  shift, and go to state 40

    END_SYMBOLS  go to state 41


State 31

   12 IMPORT: t_import t_open_paren t_enter . PARAM_IMPORT t_close_paren

    t_id      shift, and go to state 29
    t_string  shift, and go to state 30

    PARAM_IMPORT  go to state 42


State 32

   11 IMPORT: t_import t_open_paren PARAM_IMPORT . t_close_paren
   99 PARAM_IMPORT: PARAM_IMPORT . t_string END_SYMBOLS
  100             | PARAM_IMPORT . t_id t_string END_SYMBOLS

    t_id           shift, and go to state 43
    t_string       shift, and go to state 44
    t_close_paren  shift, and go to state 45


State 33

  214 INT_START: t_type t_id t_interface . t_open_br INT_BODY INT_END
  215          | t_type t_id t_interface . t_open_br END_SYMBOLS INT_BODY INT_END
  216          | t_type t_id t_interface . t_enter t_open_br END_SYMBOLS INT_BODY INT_END

    t_open_br  shift, and go to state 46
    t_enter    shift, and go to state 47


State 34

  195 STRUCT_START: t_type t_id t_struct_const . t_open_br STRUCT_END
  196             | t_type t_id t_struct_const . t_open_br STRUCT_BODY STRUCT_END
  197             | t_type t_id t_struct_const . t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END
  198             | t_type t_id t_struct_const . t_enter

    t_open_br  shift, and go to state 48
    t_enter    shift, and go to state 49


State 35

    1 START: START GLOBAL END_SYMBOLS .

    $default  reduce using rule 1 (START)


State 36

   20 FUNC_PARAM_FULFILL: t_id . TYPE_AND_STRUCT
   21                   | t_id .

    t_vtype  shift, and go to state 50
    t_id     shift, and go to state 51

    $default  reduce using rule 21 (FUNC_PARAM_FULFILL)

    TYPE_AND_STRUCT  go to state 52


State 37

   14 FUNC: t_func t_id t_open_paren FUNC_PARAM . t_close_paren FUNC_SECOND_PART
   19 FUNC_PARAM: FUNC_PARAM . t_comma FUNC_PARAM_FULFILL

    t_comma        shift, and go to state 53
    t_close_paren  shift, and go to state 54


State 38

   18 FUNC_PARAM: FUNC_PARAM_FULFILL .

    $default  reduce using rule 18 (FUNC_PARAM)


State 39

   98 PARAM_IMPORT: t_id t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 55


State 40

   97 PARAM_IMPORT: t_string t_path_pack . t_string END_SYMBOLS

    t_string  shift, and go to state 56


State 41

   96 PARAM_IMPORT: t_string END_SYMBOLS .

    $default  reduce using rule 96 (PARAM_IMPORT)


State 42

   12 IMPORT: t_import t_open_paren t_enter PARAM_IMPORT . t_close_paren
   99 PARAM_IMPORT: PARAM_IMPORT . t_string END_SYMBOLS
  100             | PARAM_IMPORT . t_id t_string END_SYMBOLS

    t_id           shift, and go to state 43
    t_string       shift, and go to state 44
    t_close_paren  shift, and go to state 57


State 43

  100 PARAM_IMPORT: PARAM_IMPORT t_id . t_string END_SYMBOLS

    t_string  shift, and go to state 58


State 44

   99 PARAM_IMPORT: PARAM_IMPORT t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 59


State 45

   11 IMPORT: t_import t_open_paren PARAM_IMPORT t_close_paren .

    $default  reduce using rule 11 (IMPORT)


State 46

  214 INT_START: t_type t_id t_interface t_open_br . INT_BODY INT_END
  215          | t_type t_id t_interface t_open_br . END_SYMBOLS INT_BODY INT_END

    t_id         shift, and go to state 60
    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    FUNC_CALL    go to state 61
    METHOD       go to state 62
    END_SYMBOLS  go to state 63
    INT_BODY     go to state 64


State 47

  216 INT_START: t_type t_id t_interface t_enter . t_open_br END_SYMBOLS INT_BODY INT_END

    t_open_br  shift, and go to state 65


State 48

  195 STRUCT_START: t_type t_id t_struct_const t_open_br . STRUCT_END
  196             | t_type t_id t_struct_const t_open_br . STRUCT_BODY STRUCT_END
  197             | t_type t_id t_struct_const t_open_br . END_SYMBOLS STRUCT_BODY STRUCT_END

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 68
    t_string            shift, and go to state 69
    t_close_br          shift, and go to state 70
    t_rune              shift, and go to state 71
    t_semicolon         shift, and go to state 21
    t_blank_identifier  shift, and go to state 72
    t_enter             shift, and go to state 73
    t_eof               shift, and go to state 23
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    FUNC_CALL    go to state 76
    SHIFT        go to state 77
    SHIFT_AC     go to state 78
    METHOD       go to state 62
    POINTER      go to state 79
    VALUE        go to state 80
    ENUM         go to state 81
    STRUCT_BODY  go to state 82
    STRUCT_END   go to state 83
    END_SYMBOLS  go to state 84


State 49

  198 STRUCT_START: t_type t_id t_struct_const t_enter .

    $default  reduce using rule 198 (STRUCT_START)


State 50

   32 TYPE_AND_STRUCT: t_vtype .

    $default  reduce using rule 32 (TYPE_AND_STRUCT)


State 51

   33 TYPE_AND_STRUCT: t_id .

    $default  reduce using rule 33 (TYPE_AND_STRUCT)


State 52

   20 FUNC_PARAM_FULFILL: t_id TYPE_AND_STRUCT .

    $default  reduce using rule 20 (FUNC_PARAM_FULFILL)


State 53

   19 FUNC_PARAM: FUNC_PARAM t_comma . FUNC_PARAM_FULFILL

    t_id  shift, and go to state 36

    $default  reduce using rule 22 (FUNC_PARAM_FULFILL)

    FUNC_PARAM_FULFILL  go to state 85


State 54

   14 FUNC: t_func t_id t_open_paren FUNC_PARAM t_close_paren . FUNC_SECOND_PART

    t_vtype       shift, and go to state 50
    t_func        shift, and go to state 86
    t_id          shift, and go to state 51
    t_open_br     shift, and go to state 87
    t_open_paren  shift, and go to state 88

    FUNC_SECOND_PART           go to state 89
    FUNC_RETURN_VALUE          go to state 90
    FUNC_RETURN_VALUE_FULFILL  go to state 91
    TYPE_AND_STRUCT            go to state 92
    BODY                       go to state 93
    BODY_START                 go to state 94


State 55

   98 PARAM_IMPORT: t_id t_string END_SYMBOLS .

    $default  reduce using rule 98 (PARAM_IMPORT)


State 56

   97 PARAM_IMPORT: t_string t_path_pack t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 95


State 57

   12 IMPORT: t_import t_open_paren t_enter PARAM_IMPORT t_close_paren .

    $default  reduce using rule 12 (IMPORT)


State 58

  100 PARAM_IMPORT: PARAM_IMPORT t_id t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 96


State 59

   99 PARAM_IMPORT: PARAM_IMPORT t_string END_SYMBOLS .

    $default  reduce using rule 99 (PARAM_IMPORT)


State 60

   86 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   91 METHOD: t_id . t_dot t_id
  219 INT_BODY: t_id . t_open_paren t_vtype t_close_paren

    t_open_paren  shift, and go to state 97
    t_dot         shift, and go to state 98


State 61

  217 INT_BODY: FUNC_CALL .
  218         | FUNC_CALL . t_vtype

    t_vtype  shift, and go to state 99

    $default  reduce using rule 217 (INT_BODY)


State 62

   87 FUNC_CALL: METHOD . t_open_paren PARAM t_close_paren
   92 METHOD: METHOD . t_dot t_id

    t_open_paren  shift, and go to state 100
    t_dot         shift, and go to state 101


State 63

  215 INT_START: t_type t_id t_interface t_open_br END_SYMBOLS . INT_BODY INT_END

    t_id  shift, and go to state 60

    FUNC_CALL  go to state 61
    METHOD     go to state 62
    INT_BODY   go to state 102


State 64

  214 INT_START: t_type t_id t_interface t_open_br INT_BODY . INT_END
  220 INT_BODY: INT_BODY . END_SYMBOLS t_id t_open_paren t_vtype t_close_paren
  221         | INT_BODY . END_SYMBOLS FUNC_CALL t_vtype
  222         | INT_BODY . END_SYMBOLS FUNC_CALL

    t_close_br   shift, and go to state 103
    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 104
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 105
    INT_END      go to state 106


State 65

  216 INT_START: t_type t_id t_interface t_enter t_open_br . END_SYMBOLS INT_BODY INT_END

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 107


State 66

   90 SHIFT_AC: t_int_const .
  101 VALUE: t_int_const .

    t_shift_const  reduce using rule 90 (SHIFT_AC)
    $default       reduce using rule 101 (VALUE)


State 67

  102 VALUE: t_float_const .

    $default  reduce using rule 102 (VALUE)


State 68

   86 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   89 SHIFT_AC: t_id .
   91 METHOD: t_id . t_dot t_id
  103 VALUE: t_id .
  190 STRUCT_BODY: t_id . t_id
  191            | t_id .

    t_id          shift, and go to state 108
    t_open_paren  shift, and go to state 109
    t_dot         shift, and go to state 98

    t_vtype        reduce using rule 103 (VALUE)
    t_shift_const  reduce using rule 89 (SHIFT_AC)
    t_comma        reduce using rule 103 (VALUE)
    $default       reduce using rule 191 (STRUCT_BODY)


State 69

  104 VALUE: t_string .

    $default  reduce using rule 104 (VALUE)


State 70

  199 STRUCT_END: t_close_br .

    $default  reduce using rule 199 (STRUCT_END)


State 71

  105 VALUE: t_rune .

    $default  reduce using rule 105 (VALUE)


State 72

  106 VALUE: t_blank_identifier .

    $default  reduce using rule 106 (VALUE)


State 73

  200 STRUCT_END: t_enter . t_close_br
  211 END_SYMBOLS: t_enter .

    t_close_br  shift, and go to state 110

    $default  reduce using rule 211 (END_SYMBOLS)


State 74

   93 POINTER: t_pointer . t_id
   94        | t_pointer . t_vtype

    t_vtype  shift, and go to state 111
    t_id     shift, and go to state 112


State 75

   95 POINTER: t_ampersand . t_id

    t_id  shift, and go to state 113


State 76

  107 VALUE: FUNC_CALL .

    $default  reduce using rule 107 (VALUE)


State 77

  108 VALUE: SHIFT .

    $default  reduce using rule 108 (VALUE)


State 78

   88 SHIFT: SHIFT_AC . t_shift_const SHIFT_AC

    t_shift_const  shift, and go to state 114


State 79

  109 VALUE: POINTER .

    $default  reduce using rule 109 (VALUE)


State 80

  180 ENUM: VALUE .

    $default  reduce using rule 180 (ENUM)


State 81

  181 ENUM: ENUM . t_comma VALUE
  189 STRUCT_BODY: ENUM . t_vtype

    t_vtype  shift, and go to state 115
    t_comma  shift, and go to state 116


State 82

  192 STRUCT_BODY: STRUCT_BODY . END_SYMBOLS t_id t_vtype
  193            | STRUCT_BODY . END_SYMBOLS t_id t_id
  194            | STRUCT_BODY . END_SYMBOLS t_id
  196 STRUCT_START: t_type t_id t_struct_const t_open_br STRUCT_BODY . STRUCT_END

    t_close_br   shift, and go to state 70
    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 73
    t_eof        shift, and go to state 23

    STRUCT_END   go to state 117
    END_SYMBOLS  go to state 118


State 83

  195 STRUCT_START: t_type t_id t_struct_const t_open_br STRUCT_END .

    $default  reduce using rule 195 (STRUCT_START)


State 84

  197 STRUCT_START: t_type t_id t_struct_const t_open_br END_SYMBOLS . STRUCT_BODY STRUCT_END

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 68
    t_string            shift, and go to state 69
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    FUNC_CALL    go to state 76
    SHIFT        go to state 77
    SHIFT_AC     go to state 78
    METHOD       go to state 62
    POINTER      go to state 79
    VALUE        go to state 80
    ENUM         go to state 81
    STRUCT_BODY  go to state 119


State 85

   19 FUNC_PARAM: FUNC_PARAM t_comma FUNC_PARAM_FULFILL .

    $default  reduce using rule 19 (FUNC_PARAM)


State 86

   30 FUNC_RETURN_VALUE_FULFILL: t_func . t_open_paren TYPE_AND_STRUCT t_close_paren
   31                          | t_func . t_open_paren t_close_paren

    t_open_paren  shift, and go to state 120


State 87

   36 BODY_START: t_open_br .

    $default  reduce using rule 36 (BODY_START)


State 88

   17 FUNC_SECOND_PART: t_open_paren . FUNC_PARAM_SECOND t_close_paren BODY

    t_vtype  shift, and go to state 50
    t_id     shift, and go to state 121

    FUNC_PARAM_SECOND          go to state 122
    FUNC_PARAM_FULFILL_SECOND  go to state 123
    TYPE_AND_STRUCT            go to state 124


State 89

   14 FUNC: t_func t_id t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART .

    $default  reduce using rule 14 (FUNC)


State 90

   16 FUNC_SECOND_PART: FUNC_RETURN_VALUE . BODY
   28 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE . FUNC_RETURN_VALUE_FULFILL

    t_vtype    shift, and go to state 50
    t_func     shift, and go to state 86
    t_id       shift, and go to state 51
    t_open_br  shift, and go to state 87

    FUNC_RETURN_VALUE_FULFILL  go to state 125
    TYPE_AND_STRUCT            go to state 92
    BODY                       go to state 126
    BODY_START                 go to state 94


State 91

   27 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE_FULFILL .

    $default  reduce using rule 27 (FUNC_RETURN_VALUE)


State 92

   29 FUNC_RETURN_VALUE_FULFILL: TYPE_AND_STRUCT .

    $default  reduce using rule 29 (FUNC_RETURN_VALUE_FULFILL)


State 93

   15 FUNC_SECOND_PART: BODY .

    $default  reduce using rule 15 (FUNC_SECOND_PART)


State 94

   34 BODY: BODY_START . BODY_END
   37 BODY_START: BODY_START . BODY_FILLING END_SYMBOLS
   38           | BODY_START . END_SYMBOLS

    t_defer      shift, and go to state 127
    t_var        shift, and go to state 128
    t_if         shift, and go to state 129
    t_switch     shift, and go to state 130
    t_type       shift, and go to state 131
    t_for        shift, and go to state 132
    t_goto       shift, and go to state 133
    t_return     shift, and go to state 134
    t_id         shift, and go to state 135
    t_close_br   shift, and go to state 136
    t_open_sq    shift, and go to state 137
    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23
    t_pointer    shift, and go to state 74
    t_ampersand  shift, and go to state 75

    BODY_END      go to state 138
    BODY_FILLING  go to state 139
    VAR           go to state 140
    DEFER         go to state 141
    FUNC_CALL     go to state 142
    METHOD        go to state 143
    POINTER       go to state 144
    GOTO          go to state 145
    LABEL         go to state 146
    SWITCH        go to state 147
    IF            go to state 148
    IF_FIRST      go to state 149
    RETURN        go to state 150
    SHORT_EXPR    go to state 151
    FOR           go to state 152
    ARRAY_BODY    go to state 153
    ARRAY_INDEX   go to state 154
    MULTI_AR      go to state 155
    SLICE         go to state 156
    STRUCT        go to state 157
    STRUCT_START  go to state 11
    END_SYMBOLS   go to state 158


State 95

   97 PARAM_IMPORT: t_string t_path_pack t_string END_SYMBOLS .

    $default  reduce using rule 97 (PARAM_IMPORT)


State 96

  100 PARAM_IMPORT: PARAM_IMPORT t_id t_string END_SYMBOLS .

    $default  reduce using rule 100 (PARAM_IMPORT)


State 97

   86 FUNC_CALL: t_id t_open_paren . PARAM t_close_paren
  219 INT_BODY: t_id t_open_paren . t_vtype t_close_paren

    t_vtype             shift, and go to state 159
    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_open_paren        shift, and go to state 161
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    $default  reduce using rule 148 (PARAM)

    FUNC_CALL   go to state 76
    SHIFT       go to state 77
    SHIFT_AC    go to state 78
    METHOD      go to state 62
    POINTER     go to state 79
    VALUE       go to state 162
    PARAM       go to state 163
    EXPR        go to state 164
    EXPR_START  go to state 165


State 98

   91 METHOD: t_id t_dot . t_id

    t_id  shift, and go to state 166


State 99

  218 INT_BODY: FUNC_CALL t_vtype .

    $default  reduce using rule 218 (INT_BODY)


State 100

   87 FUNC_CALL: METHOD t_open_paren . PARAM t_close_paren

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_open_paren        shift, and go to state 161
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    $default  reduce using rule 148 (PARAM)

    FUNC_CALL   go to state 76
    SHIFT       go to state 77
    SHIFT_AC    go to state 78
    METHOD      go to state 62
    POINTER     go to state 79
    VALUE       go to state 162
    PARAM       go to state 167
    EXPR        go to state 164
    EXPR_START  go to state 165


State 101

   92 METHOD: METHOD t_dot . t_id

    t_id  shift, and go to state 168


State 102

  215 INT_START: t_type t_id t_interface t_open_br END_SYMBOLS INT_BODY . INT_END
  220 INT_BODY: INT_BODY . END_SYMBOLS t_id t_open_paren t_vtype t_close_paren
  221         | INT_BODY . END_SYMBOLS FUNC_CALL t_vtype
  222         | INT_BODY . END_SYMBOLS FUNC_CALL

    t_close_br   shift, and go to state 103
    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 104
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 105
    INT_END      go to state 169


State 103

  223 INT_END: t_close_br .

    $default  reduce using rule 223 (INT_END)


State 104

  211 END_SYMBOLS: t_enter .
  224 INT_END: t_enter . t_close_br

    t_close_br  shift, and go to state 170

    $default  reduce using rule 211 (END_SYMBOLS)


State 105

  220 INT_BODY: INT_BODY END_SYMBOLS . t_id t_open_paren t_vtype t_close_paren
  221         | INT_BODY END_SYMBOLS . FUNC_CALL t_vtype
  222         | INT_BODY END_SYMBOLS . FUNC_CALL

    t_id  shift, and go to state 171

    FUNC_CALL  go to state 172
    METHOD     go to state 62


State 106

  214 INT_START: t_type t_id t_interface t_open_br INT_BODY INT_END .

    $default  reduce using rule 214 (INT_START)


State 107

  216 INT_START: t_type t_id t_interface t_enter t_open_br END_SYMBOLS . INT_BODY INT_END

    t_id  shift, and go to state 60

    FUNC_CALL  go to state 61
    METHOD     go to state 62
    INT_BODY   go to state 173


State 108

  190 STRUCT_BODY: t_id t_id .

    $default  reduce using rule 190 (STRUCT_BODY)


State 109

   86 FUNC_CALL: t_id t_open_paren . PARAM t_close_paren

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_open_paren        shift, and go to state 161
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    $default  reduce using rule 148 (PARAM)

    FUNC_CALL   go to state 76
    SHIFT       go to state 77
    SHIFT_AC    go to state 78
    METHOD      go to state 62
    POINTER     go to state 79
    VALUE       go to state 162
    PARAM       go to state 163
    EXPR        go to state 164
    EXPR_START  go to state 165


State 110

  200 STRUCT_END: t_enter t_close_br .

    $default  reduce using rule 200 (STRUCT_END)


State 111

   94 POINTER: t_pointer t_vtype .

    $default  reduce using rule 94 (POINTER)


State 112

   93 POINTER: t_pointer t_id .

    $default  reduce using rule 93 (POINTER)


State 113

   95 POINTER: t_ampersand t_id .

    $default  reduce using rule 95 (POINTER)


State 114

   88 SHIFT: SHIFT_AC t_shift_const . SHIFT_AC

    t_int_const  shift, and go to state 174
    t_id         shift, and go to state 175

    SHIFT_AC  go to state 176


State 115

  189 STRUCT_BODY: ENUM t_vtype .

    $default  reduce using rule 189 (STRUCT_BODY)


State 116

  181 ENUM: ENUM t_comma . VALUE

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    FUNC_CALL  go to state 76
    SHIFT      go to state 77
    SHIFT_AC   go to state 78
    METHOD     go to state 62
    POINTER    go to state 79
    VALUE      go to state 177


State 117

  196 STRUCT_START: t_type t_id t_struct_const t_open_br STRUCT_BODY STRUCT_END .

    $default  reduce using rule 196 (STRUCT_START)


State 118

  192 STRUCT_BODY: STRUCT_BODY END_SYMBOLS . t_id t_vtype
  193            | STRUCT_BODY END_SYMBOLS . t_id t_id
  194            | STRUCT_BODY END_SYMBOLS . t_id

    t_id  shift, and go to state 178


State 119

  192 STRUCT_BODY: STRUCT_BODY . END_SYMBOLS t_id t_vtype
  193            | STRUCT_BODY . END_SYMBOLS t_id t_id
  194            | STRUCT_BODY . END_SYMBOLS t_id
  197 STRUCT_START: t_type t_id t_struct_const t_open_br END_SYMBOLS STRUCT_BODY . STRUCT_END

    t_close_br   shift, and go to state 70
    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 73
    t_eof        shift, and go to state 23

    STRUCT_END   go to state 179
    END_SYMBOLS  go to state 118


State 120

   30 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren . TYPE_AND_STRUCT t_close_paren
   31                          | t_func t_open_paren . t_close_paren

    t_vtype        shift, and go to state 50
    t_id           shift, and go to state 51
    t_close_paren  shift, and go to state 180

    TYPE_AND_STRUCT  go to state 181


State 121

   25 FUNC_PARAM_FULFILL_SECOND: t_id . TYPE_AND_STRUCT
   33 TYPE_AND_STRUCT: t_id .

    t_vtype  shift, and go to state 50
    t_id     shift, and go to state 51

    $default  reduce using rule 33 (TYPE_AND_STRUCT)

    TYPE_AND_STRUCT  go to state 182


State 122

   17 FUNC_SECOND_PART: t_open_paren FUNC_PARAM_SECOND . t_close_paren BODY
   24 FUNC_PARAM_SECOND: FUNC_PARAM_SECOND . t_comma FUNC_PARAM_FULFILL_SECOND

    t_comma        shift, and go to state 183
    t_close_paren  shift, and go to state 184


State 123

   23 FUNC_PARAM_SECOND: FUNC_PARAM_FULFILL_SECOND .

    $default  reduce using rule 23 (FUNC_PARAM_SECOND)


State 124

   26 FUNC_PARAM_FULFILL_SECOND: TYPE_AND_STRUCT .

    $default  reduce using rule 26 (FUNC_PARAM_FULFILL_SECOND)


State 125

   28 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE FUNC_RETURN_VALUE_FULFILL .

    $default  reduce using rule 28 (FUNC_RETURN_VALUE)


State 126

   16 FUNC_SECOND_PART: FUNC_RETURN_VALUE BODY .

    $default  reduce using rule 16 (FUNC_SECOND_PART)


State 127

   78 DEFER: t_defer . FUNC_CALL

    t_id  shift, and go to state 185

    FUNC_CALL  go to state 186
    METHOD     go to state 62


State 128

   53 VAR: t_var . t_id ASSIGNMENT EXPR
   54    | t_var . t_id ASSIGNMENT EXPR t_vtype
   55    | t_var . t_id ASSIGNMENT BOOLEAN
   59    | t_var . t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   62    | t_var . t_id ASSIGNMENT MAKE
   67    | t_var . t_id ASSIGNMENT SLICE
   68    | t_var . t_id MAPS
   70    | t_var . t_id t_id ASSIGNMENT t_id ST_EMBEDDED
   71    | t_var . t_id ASSIGNMENT t_id ST_EMBEDDED
   75    | t_var . t_id POINTER
   76    | t_var . t_id POINTER ASSIGNMENT EXPR
  166 ARRAY_BODY: t_var . t_id MULTI_AR t_vtype
  167           | t_var . t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  168           | t_var . t_id MULTI_AR t_vtype ASSIGNMENT MAKE

    t_id  shift, and go to state 187


State 129

  138 IF_FIRST: t_if . CONDITION BODY

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_open_paren        shift, and go to state 161
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_true              shift, and go to state 188
    t_false             shift, and go to state 189
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    $default  reduce using rule 159 (CONDITION)

    BOOLEAN     go to state 190
    FUNC_CALL   go to state 76
    SHIFT       go to state 77
    SHIFT_AC    go to state 78
    METHOD      go to state 62
    POINTER     go to state 79
    VALUE       go to state 162
    EXPR        go to state 191
    CONDITION   go to state 192
    EXPR_START  go to state 165


State 130

  112 SWITCH: t_switch . INIT_STATE t_semicolon EXPR SWITCH_BODY
  113       | t_switch . EXPR SWITCH_BODY
  114       | t_switch . SWITCH_BODY

    t_var               shift, and go to state 193
    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 194
    t_string            shift, and go to state 69
    t_open_br           shift, and go to state 195
    t_open_paren        shift, and go to state 161
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    $default  reduce using rule 155 (INIT_STATE)

    VAR                             go to state 196
    FUNC_CALL                       go to state 197
    SHIFT                           go to state 77
    SHIFT_AC                        go to state 78
    METHOD                          go to state 143
    POINTER                         go to state 198
    VALUE                           go to state 162
    SWITCH_BODY                     go to state 199
    SWITCH_BODY_START               go to state 200
    SWITCH_BODY_START_WITH_DEFAULT  go to state 201
    EXPR                            go to state 202
    INIT_STATE                      go to state 203
    EXPR_START                      go to state 165


State 131

  195 STRUCT_START: t_type . t_id t_struct_const t_open_br STRUCT_END
  196             | t_type . t_id t_struct_const t_open_br STRUCT_BODY STRUCT_END
  197             | t_type . t_id t_struct_const t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END
  198             | t_type . t_id t_struct_const t_enter

    t_id  shift, and go to state 204


State 132

  162 FOR: t_for . INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY
  163    | t_for . CONDITION BODY

    t_var               shift, and go to state 193
    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 194
    t_string            shift, and go to state 69
    t_open_paren        shift, and go to state 161
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_true              shift, and go to state 188
    t_false             shift, and go to state 189
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    t_open_br  reduce using rule 159 (CONDITION)
    $default   reduce using rule 155 (INIT_STATE)

    VAR         go to state 196
    BOOLEAN     go to state 190
    FUNC_CALL   go to state 197
    SHIFT       go to state 77
    SHIFT_AC    go to state 78
    METHOD      go to state 143
    POINTER     go to state 198
    VALUE       go to state 162
    EXPR        go to state 191
    INIT_STATE  go to state 205
    CONDITION   go to state 206
    EXPR_START  go to state 165


State 133

  110 GOTO: t_goto . t_id

    t_id  shift, and go to state 207


State 134

  145 RETURN: t_return . PARAM

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_open_paren        shift, and go to state 161
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    $default  reduce using rule 148 (PARAM)

    FUNC_CALL   go to state 76
    SHIFT       go to state 77
    SHIFT_AC    go to state 78
    METHOD      go to state 62
    POINTER     go to state 79
    VALUE       go to state 162
    PARAM       go to state 208
    EXPR        go to state 164
    EXPR_START  go to state 165


State 135

   56 VAR: t_id . SHORT_ASSIGN EXPR
   57    | t_id . ASSIGNMENT EXPR
   58    | t_id . SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   60    | t_id . SHORT_ASSIGN BOOLEAN
   61    | t_id . MULTI_AR ASSIGNMENT EXPR
   63    | t_id . SHORT_ASSIGN MAKE
   64    | t_id . MULTI_AR ASSIGNMENT MAKE
   65    | t_id . SHORT_ASSIGN SLICE
   66    | t_id . ASSIGNMENT SLICE
   69    | t_id . SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   72    | t_id . SHORT_ASSIGN t_id ST_EMBEDDED
   86 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   91 METHOD: t_id . t_dot t_id
  111 LABEL: t_id . t_colon
  152 SHORT_EXPR: t_id . t_short_expr t_id
  184 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  185      | t_id . t_open_sq t_colon VALUE t_close_sq
  186      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_vtype       shift, and go to state 209
    t_short_dec   shift, and go to state 210
    t_comma       shift, and go to state 211
    t_equality    shift, and go to state 212
    t_open_paren  shift, and go to state 109
    t_open_sq     shift, and go to state 213
    t_dot         shift, and go to state 98
    t_colon       shift, and go to state 214
    t_short_expr  shift, and go to state 215

    ASSIGNMENT    go to state 216
    SHORT_ASSIGN  go to state 217
    ARRAY_INDEX   go to state 154
    MULTI_AR      go to state 218


State 136

   35 BODY_END: t_close_br .

    $default  reduce using rule 35 (BODY_END)


State 137

  169 ARRAY_INDEX: t_open_sq . t_int_const t_close_sq
  170            | t_open_sq . t_id t_close_sq
  171            | t_open_sq . t_string t_close_sq
  172            | t_open_sq . t_close_sq

    t_int_const  shift, and go to state 219
    t_id         shift, and go to state 220
    t_string     shift, and go to state 221
    t_close_sq   shift, and go to state 222


State 138

   34 BODY: BODY_START BODY_END .

    $default  reduce using rule 34 (BODY)


State 139

   37 BODY_START: BODY_START BODY_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 223


State 140

   39 BODY_FILLING: VAR .

    $default  reduce using rule 39 (BODY_FILLING)


State 141

   52 BODY_FILLING: DEFER .

    $default  reduce using rule 52 (BODY_FILLING)


State 142

   46 BODY_FILLING: FUNC_CALL .

    $default  reduce using rule 46 (BODY_FILLING)


State 143

   73 VAR: METHOD . ASSIGNMENT VALUE
   87 FUNC_CALL: METHOD . t_open_paren PARAM t_close_paren
   92 METHOD: METHOD . t_dot t_id

    t_vtype       shift, and go to state 209
    t_comma       shift, and go to state 224
    t_equality    shift, and go to state 212
    t_open_paren  shift, and go to state 100
    t_dot         shift, and go to state 101

    ASSIGNMENT  go to state 225


State 144

   74 VAR: POINTER . ASSIGNMENT EXPR

    t_vtype     shift, and go to state 209
    t_comma     shift, and go to state 224
    t_equality  shift, and go to state 212

    ASSIGNMENT  go to state 226


State 145

   42 BODY_FILLING: GOTO .

    $default  reduce using rule 42 (BODY_FILLING)


State 146

   43 BODY_FILLING: LABEL .

    $default  reduce using rule 43 (BODY_FILLING)


State 147

   41 BODY_FILLING: SWITCH .

    $default  reduce using rule 41 (BODY_FILLING)


State 148

   44 BODY_FILLING: IF .

    $default  reduce using rule 44 (BODY_FILLING)


State 149

  134 IF: IF_FIRST . MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD
  135   | IF_FIRST . MULTY_ELSEIF_SECOND
  136   | IF_FIRST . MULTY_ELSE_THIRD
  137   | IF_FIRST .

    t_else  shift, and go to state 227

    $default  reduce using rule 137 (IF)

    MULTY_ELSEIF_SECOND  go to state 228
    ELSEIF_SECOND        go to state 229
    MULTY_ELSE_THIRD     go to state 230
    ELSE_THIRD           go to state 231


State 150

   49 BODY_FILLING: RETURN .

    $default  reduce using rule 49 (BODY_FILLING)


State 151

   47 BODY_FILLING: SHORT_EXPR .

    $default  reduce using rule 47 (BODY_FILLING)


State 152

   40 BODY_FILLING: FOR .

    $default  reduce using rule 40 (BODY_FILLING)


State 153

   48 BODY_FILLING: ARRAY_BODY .

    $default  reduce using rule 48 (BODY_FILLING)


State 154

  173 MULTI_AR: ARRAY_INDEX .
  174         | ARRAY_INDEX . MULTI_AR

    t_open_sq  shift, and go to state 137

    $default  reduce using rule 173 (MULTI_AR)

    ARRAY_INDEX  go to state 154
    MULTI_AR     go to state 232


State 155

   45 BODY_FILLING: MULTI_AR .

    $default  reduce using rule 45 (BODY_FILLING)


State 156

   51 BODY_FILLING: SLICE .

    $default  reduce using rule 51 (BODY_FILLING)


State 157

   50 BODY_FILLING: STRUCT .

    $default  reduce using rule 50 (BODY_FILLING)


State 158

   38 BODY_START: BODY_START END_SYMBOLS .

    $default  reduce using rule 38 (BODY_START)


State 159

  219 INT_BODY: t_id t_open_paren t_vtype . t_close_paren

    t_close_paren  shift, and go to state 233


State 160

   86 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   89 SHIFT_AC: t_id .
   91 METHOD: t_id . t_dot t_id
  103 VALUE: t_id .

    t_open_paren  shift, and go to state 109
    t_dot         shift, and go to state 98

    t_shift_const  reduce using rule 89 (SHIFT_AC)
    $default       reduce using rule 103 (VALUE)


State 161

  164 EXPR_START: t_open_paren .

    $default  reduce using rule 164 (EXPR_START)


State 162

  151 EXPR: VALUE .

    $default  reduce using rule 151 (EXPR)


State 163

   86 FUNC_CALL: t_id t_open_paren PARAM . t_close_paren
  146 PARAM: PARAM . t_comma EXPR

    t_comma        shift, and go to state 234
    t_close_paren  shift, and go to state 235


State 164

  147 PARAM: EXPR .
  149 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 236

    $default  reduce using rule 147 (PARAM)


State 165

  150 EXPR: EXPR_START . EXPR EXPR_END

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_open_paren        shift, and go to state 161
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    FUNC_CALL   go to state 76
    SHIFT       go to state 77
    SHIFT_AC    go to state 78
    METHOD      go to state 62
    POINTER     go to state 79
    VALUE       go to state 162
    EXPR        go to state 237
    EXPR_START  go to state 165


State 166

   91 METHOD: t_id t_dot t_id .

    $default  reduce using rule 91 (METHOD)


State 167

   87 FUNC_CALL: METHOD t_open_paren PARAM . t_close_paren
  146 PARAM: PARAM . t_comma EXPR

    t_comma        shift, and go to state 234
    t_close_paren  shift, and go to state 238


State 168

   92 METHOD: METHOD t_dot t_id .

    $default  reduce using rule 92 (METHOD)


State 169

  215 INT_START: t_type t_id t_interface t_open_br END_SYMBOLS INT_BODY INT_END .

    $default  reduce using rule 215 (INT_START)


State 170

  224 INT_END: t_enter t_close_br .

    $default  reduce using rule 224 (INT_END)


State 171

   86 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   91 METHOD: t_id . t_dot t_id
  220 INT_BODY: INT_BODY END_SYMBOLS t_id . t_open_paren t_vtype t_close_paren

    t_open_paren  shift, and go to state 239
    t_dot         shift, and go to state 98


State 172

  221 INT_BODY: INT_BODY END_SYMBOLS FUNC_CALL . t_vtype
  222         | INT_BODY END_SYMBOLS FUNC_CALL .

    t_vtype  shift, and go to state 240

    $default  reduce using rule 222 (INT_BODY)


State 173

  216 INT_START: t_type t_id t_interface t_enter t_open_br END_SYMBOLS INT_BODY . INT_END
  220 INT_BODY: INT_BODY . END_SYMBOLS t_id t_open_paren t_vtype t_close_paren
  221         | INT_BODY . END_SYMBOLS FUNC_CALL t_vtype
  222         | INT_BODY . END_SYMBOLS FUNC_CALL

    t_close_br   shift, and go to state 103
    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 104
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 105
    INT_END      go to state 241


State 174

   90 SHIFT_AC: t_int_const .

    $default  reduce using rule 90 (SHIFT_AC)


State 175

   89 SHIFT_AC: t_id .

    $default  reduce using rule 89 (SHIFT_AC)


State 176

   88 SHIFT: SHIFT_AC t_shift_const SHIFT_AC .

    $default  reduce using rule 88 (SHIFT)


State 177

  181 ENUM: ENUM t_comma VALUE .

    $default  reduce using rule 181 (ENUM)


State 178

  192 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id . t_vtype
  193            | STRUCT_BODY END_SYMBOLS t_id . t_id
  194            | STRUCT_BODY END_SYMBOLS t_id .

    t_vtype  shift, and go to state 242
    t_id     shift, and go to state 243

    $default  reduce using rule 194 (STRUCT_BODY)


State 179

  197 STRUCT_START: t_type t_id t_struct_const t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END .

    $default  reduce using rule 197 (STRUCT_START)


State 180

   31 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren t_close_paren .

    $default  reduce using rule 31 (FUNC_RETURN_VALUE_FULFILL)


State 181

   30 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren TYPE_AND_STRUCT . t_close_paren

    t_close_paren  shift, and go to state 244


State 182

   25 FUNC_PARAM_FULFILL_SECOND: t_id TYPE_AND_STRUCT .

    $default  reduce using rule 25 (FUNC_PARAM_FULFILL_SECOND)


State 183

   24 FUNC_PARAM_SECOND: FUNC_PARAM_SECOND t_comma . FUNC_PARAM_FULFILL_SECOND

    t_vtype  shift, and go to state 50
    t_id     shift, and go to state 121

    FUNC_PARAM_FULFILL_SECOND  go to state 245
    TYPE_AND_STRUCT            go to state 124


State 184

   17 FUNC_SECOND_PART: t_open_paren FUNC_PARAM_SECOND t_close_paren . BODY

    t_open_br  shift, and go to state 87

    BODY        go to state 246
    BODY_START  go to state 94


State 185

   86 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   91 METHOD: t_id . t_dot t_id

    t_open_paren  shift, and go to state 109
    t_dot         shift, and go to state 98


State 186

   78 DEFER: t_defer FUNC_CALL .

    $default  reduce using rule 78 (DEFER)


State 187

   53 VAR: t_var t_id . ASSIGNMENT EXPR
   54    | t_var t_id . ASSIGNMENT EXPR t_vtype
   55    | t_var t_id . ASSIGNMENT BOOLEAN
   59    | t_var t_id . ASSIGNMENT MULTI_AR t_vtype PLENTY
   62    | t_var t_id . ASSIGNMENT MAKE
   67    | t_var t_id . ASSIGNMENT SLICE
   68    | t_var t_id . MAPS
   70    | t_var t_id . t_id ASSIGNMENT t_id ST_EMBEDDED
   71    | t_var t_id . ASSIGNMENT t_id ST_EMBEDDED
   75    | t_var t_id . POINTER
   76    | t_var t_id . POINTER ASSIGNMENT EXPR
  166 ARRAY_BODY: t_var t_id . MULTI_AR t_vtype
  167           | t_var t_id . MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  168           | t_var t_id . MULTI_AR t_vtype ASSIGNMENT MAKE

    t_vtype      shift, and go to state 209
    t_map        shift, and go to state 247
    t_id         shift, and go to state 248
    t_comma      shift, and go to state 224
    t_equality   shift, and go to state 212
    t_open_sq    shift, and go to state 137
    t_pointer    shift, and go to state 74
    t_ampersand  shift, and go to state 75

    ASSIGNMENT   go to state 249
    POINTER      go to state 250
    ARRAY_INDEX  go to state 154
    MULTI_AR     go to state 251
    MAPS         go to state 252


State 188

  157 CONDITION: t_true .

    $default  reduce using rule 157 (CONDITION)


State 189

  158 CONDITION: t_false .

    $default  reduce using rule 158 (CONDITION)


State 190

  156 CONDITION: BOOLEAN .

    $default  reduce using rule 156 (CONDITION)


State 191

   77 BOOLEAN: EXPR . t_bool EXPR
  149 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 236
    t_bool  shift, and go to state 253


State 192

  138 IF_FIRST: t_if CONDITION . BODY

    t_open_br  shift, and go to state 87

    BODY        go to state 254
    BODY_START  go to state 94


State 193

   53 VAR: t_var . t_id ASSIGNMENT EXPR
   54    | t_var . t_id ASSIGNMENT EXPR t_vtype
   55    | t_var . t_id ASSIGNMENT BOOLEAN
   59    | t_var . t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   62    | t_var . t_id ASSIGNMENT MAKE
   67    | t_var . t_id ASSIGNMENT SLICE
   68    | t_var . t_id MAPS
   70    | t_var . t_id t_id ASSIGNMENT t_id ST_EMBEDDED
   71    | t_var . t_id ASSIGNMENT t_id ST_EMBEDDED
   75    | t_var . t_id POINTER
   76    | t_var . t_id POINTER ASSIGNMENT EXPR

    t_id  shift, and go to state 255


State 194

   56 VAR: t_id . SHORT_ASSIGN EXPR
   57    | t_id . ASSIGNMENT EXPR
   58    | t_id . SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   60    | t_id . SHORT_ASSIGN BOOLEAN
   61    | t_id . MULTI_AR ASSIGNMENT EXPR
   63    | t_id . SHORT_ASSIGN MAKE
   64    | t_id . MULTI_AR ASSIGNMENT MAKE
   65    | t_id . SHORT_ASSIGN SLICE
   66    | t_id . ASSIGNMENT SLICE
   69    | t_id . SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   72    | t_id . SHORT_ASSIGN t_id ST_EMBEDDED
   86 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   89 SHIFT_AC: t_id .
   91 METHOD: t_id . t_dot t_id
  103 VALUE: t_id .

    t_vtype       shift, and go to state 209
    t_short_dec   shift, and go to state 210
    t_comma       shift, and go to state 211
    t_equality    shift, and go to state 212
    t_open_paren  shift, and go to state 109
    t_open_sq     shift, and go to state 137
    t_dot         shift, and go to state 98

    t_shift_const  reduce using rule 89 (SHIFT_AC)
    $default       reduce using rule 103 (VALUE)

    ASSIGNMENT    go to state 216
    SHORT_ASSIGN  go to state 217
    ARRAY_INDEX   go to state 154
    MULTI_AR      go to state 218


State 195

  117 SWITCH_BODY_START: t_open_br .
  118                  | t_open_br . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    $default  reduce using rule 117 (SWITCH_BODY_START)

    END_SYMBOLS  go to state 256


State 196

  153 INIT_STATE: VAR .

    $default  reduce using rule 153 (INIT_STATE)


State 197

  107 VALUE: FUNC_CALL .
  154 INIT_STATE: FUNC_CALL .

    t_semicolon  reduce using rule 154 (INIT_STATE)
    $default     reduce using rule 107 (VALUE)


State 198

   74 VAR: POINTER . ASSIGNMENT EXPR
  109 VALUE: POINTER .

    t_vtype     shift, and go to state 209
    t_comma     shift, and go to state 224
    t_equality  shift, and go to state 212

    $default  reduce using rule 109 (VALUE)

    ASSIGNMENT  go to state 226


State 199

  114 SWITCH: t_switch SWITCH_BODY .

    $default  reduce using rule 114 (SWITCH)


State 200

  115 SWITCH_BODY: SWITCH_BODY_START . SWITCH_BODY_END
  119 SWITCH_BODY_START: SWITCH_BODY_START . CASE
  120 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START . DEFAULT

    t_case      shift, and go to state 257
    t_default   shift, and go to state 258
    t_close_br  shift, and go to state 259

    CASE             go to state 260
    DEFAULT          go to state 261
    SWITCH_BODY_END  go to state 262


State 201

  116 SWITCH_BODY: SWITCH_BODY_START_WITH_DEFAULT . SWITCH_BODY_END
  121 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START_WITH_DEFAULT . CASE

    t_case      shift, and go to state 257
    t_close_br  shift, and go to state 259

    CASE             go to state 263
    SWITCH_BODY_END  go to state 264


State 202

  113 SWITCH: t_switch EXPR . SWITCH_BODY
  149 EXPR: EXPR . t_sign VALUE

    t_open_br  shift, and go to state 195
    t_sign     shift, and go to state 236

    SWITCH_BODY                     go to state 265
    SWITCH_BODY_START               go to state 200
    SWITCH_BODY_START_WITH_DEFAULT  go to state 201


State 203

  112 SWITCH: t_switch INIT_STATE . t_semicolon EXPR SWITCH_BODY

    t_semicolon  shift, and go to state 266


State 204

  195 STRUCT_START: t_type t_id . t_struct_const t_open_br STRUCT_END
  196             | t_type t_id . t_struct_const t_open_br STRUCT_BODY STRUCT_END
  197             | t_type t_id . t_struct_const t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END
  198             | t_type t_id . t_struct_const t_enter

    t_struct_const  shift, and go to state 34


State 205

  162 FOR: t_for INIT_STATE . t_semicolon CONDITION t_semicolon POST_STATE BODY

    t_semicolon  shift, and go to state 267


State 206

  163 FOR: t_for CONDITION . BODY

    t_open_br  shift, and go to state 87

    BODY        go to state 268
    BODY_START  go to state 94


State 207

  110 GOTO: t_goto t_id .

    $default  reduce using rule 110 (GOTO)


State 208

  145 RETURN: t_return PARAM .
  146 PARAM: PARAM . t_comma EXPR

    t_comma  shift, and go to state 234

    $default  reduce using rule 145 (RETURN)


State 209

   79 ASSIGNMENT: t_vtype . t_equality

    t_equality  shift, and go to state 269


State 210

   83 SHORT_ASSIGN: t_short_dec .

    $default  reduce using rule 83 (SHORT_ASSIGN)


State 211

   81 ASSIGNMENT: t_comma . t_id ASSIGNMENT EXPR t_comma
   82           | t_comma . t_id ASSIGNMENT BOOLEAN t_comma
   84 SHORT_ASSIGN: t_comma . t_id SHORT_ASSIGN EXPR t_comma
   85             | t_comma . t_id SHORT_ASSIGN BOOLEAN t_comma

    t_id  shift, and go to state 270


State 212

   80 ASSIGNMENT: t_equality .

    $default  reduce using rule 80 (ASSIGNMENT)


State 213

  169 ARRAY_INDEX: t_open_sq . t_int_const t_close_sq
  170            | t_open_sq . t_id t_close_sq
  171            | t_open_sq . t_string t_close_sq
  172            | t_open_sq . t_close_sq
  184 SLICE: t_id t_open_sq . VALUE t_colon VALUE t_close_sq
  185      | t_id t_open_sq . t_colon VALUE t_close_sq
  186      | t_id t_open_sq . VALUE t_colon t_close_sq

    t_int_const         shift, and go to state 271
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 272
    t_string            shift, and go to state 273
    t_close_sq          shift, and go to state 222
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_colon             shift, and go to state 274
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    FUNC_CALL  go to state 76
    SHIFT      go to state 77
    SHIFT_AC   go to state 78
    METHOD     go to state 62
    POINTER    go to state 79
    VALUE      go to state 275


State 214

  111 LABEL: t_id t_colon .

    $default  reduce using rule 111 (LABEL)


State 215

  152 SHORT_EXPR: t_id t_short_expr . t_id

    t_id  shift, and go to state 276


State 216

   57 VAR: t_id ASSIGNMENT . EXPR
   66    | t_id ASSIGNMENT . SLICE

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 277
    t_string            shift, and go to state 69
    t_open_paren        shift, and go to state 161
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    FUNC_CALL   go to state 76
    SHIFT       go to state 77
    SHIFT_AC    go to state 78
    METHOD      go to state 62
    POINTER     go to state 79
    VALUE       go to state 162
    EXPR        go to state 278
    EXPR_START  go to state 165
    SLICE       go to state 279


State 217

   56 VAR: t_id SHORT_ASSIGN . EXPR
   58    | t_id SHORT_ASSIGN . MULTI_AR t_vtype PLENTY
   60    | t_id SHORT_ASSIGN . BOOLEAN
   63    | t_id SHORT_ASSIGN . MAKE
   65    | t_id SHORT_ASSIGN . SLICE
   69    | t_id SHORT_ASSIGN . t_make t_open_paren MAPS t_close_paren
   72    | t_id SHORT_ASSIGN . t_id ST_EMBEDDED

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 280
    t_string            shift, and go to state 69
    t_open_paren        shift, and go to state 161
    t_open_sq           shift, and go to state 137
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_make              shift, and go to state 281
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    BOOLEAN      go to state 282
    FUNC_CALL    go to state 76
    SHIFT        go to state 77
    SHIFT_AC     go to state 78
    METHOD       go to state 62
    POINTER      go to state 79
    VALUE        go to state 162
    EXPR         go to state 283
    EXPR_START   go to state 165
    ARRAY_INDEX  go to state 154
    MULTI_AR     go to state 284
    MAKE         go to state 285
    SLICE        go to state 286


State 218

   61 VAR: t_id MULTI_AR . ASSIGNMENT EXPR
   64    | t_id MULTI_AR . ASSIGNMENT MAKE

    t_vtype     shift, and go to state 209
    t_comma     shift, and go to state 224
    t_equality  shift, and go to state 212

    ASSIGNMENT  go to state 287


State 219

  169 ARRAY_INDEX: t_open_sq t_int_const . t_close_sq

    t_close_sq  shift, and go to state 288


State 220

  170 ARRAY_INDEX: t_open_sq t_id . t_close_sq

    t_close_sq  shift, and go to state 289


State 221

  171 ARRAY_INDEX: t_open_sq t_string . t_close_sq

    t_close_sq  shift, and go to state 290


State 222

  172 ARRAY_INDEX: t_open_sq t_close_sq .

    $default  reduce using rule 172 (ARRAY_INDEX)


State 223

   37 BODY_START: BODY_START BODY_FILLING END_SYMBOLS .

    $default  reduce using rule 37 (BODY_START)


State 224

   81 ASSIGNMENT: t_comma . t_id ASSIGNMENT EXPR t_comma
   82           | t_comma . t_id ASSIGNMENT BOOLEAN t_comma

    t_id  shift, and go to state 291


State 225

   73 VAR: METHOD ASSIGNMENT . VALUE

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    FUNC_CALL  go to state 76
    SHIFT      go to state 77
    SHIFT_AC   go to state 78
    METHOD     go to state 62
    POINTER    go to state 79
    VALUE      go to state 292


State 226

   74 VAR: POINTER ASSIGNMENT . EXPR

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_open_paren        shift, and go to state 161
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    FUNC_CALL   go to state 76
    SHIFT       go to state 77
    SHIFT_AC    go to state 78
    METHOD      go to state 62
    POINTER     go to state 79
    VALUE       go to state 162
    EXPR        go to state 293
    EXPR_START  go to state 165


State 227

  141 ELSEIF_SECOND: t_else . t_if CONDITION BODY
  144 ELSE_THIRD: t_else . BODY

    t_if       shift, and go to state 294
    t_open_br  shift, and go to state 87

    BODY        go to state 295
    BODY_START  go to state 94


State 228

  134 IF: IF_FIRST MULTY_ELSEIF_SECOND . MULTY_ELSE_THIRD
  135   | IF_FIRST MULTY_ELSEIF_SECOND .
  139 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND . ELSEIF_SECOND

    t_else  shift, and go to state 227

    $default  reduce using rule 135 (IF)

    ELSEIF_SECOND     go to state 296
    MULTY_ELSE_THIRD  go to state 297
    ELSE_THIRD        go to state 231


State 229

  140 MULTY_ELSEIF_SECOND: ELSEIF_SECOND .

    $default  reduce using rule 140 (MULTY_ELSEIF_SECOND)


State 230

  136 IF: IF_FIRST MULTY_ELSE_THIRD .
  143 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD . ELSE_THIRD

    t_else  shift, and go to state 298

    $default  reduce using rule 136 (IF)

    ELSE_THIRD  go to state 299


State 231

  142 MULTY_ELSE_THIRD: ELSE_THIRD .

    $default  reduce using rule 142 (MULTY_ELSE_THIRD)


State 232

  174 MULTI_AR: ARRAY_INDEX MULTI_AR .

    $default  reduce using rule 174 (MULTI_AR)


State 233

  219 INT_BODY: t_id t_open_paren t_vtype t_close_paren .

    $default  reduce using rule 219 (INT_BODY)


State 234

  146 PARAM: PARAM t_comma . EXPR

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_open_paren        shift, and go to state 161
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    FUNC_CALL   go to state 76
    SHIFT       go to state 77
    SHIFT_AC    go to state 78
    METHOD      go to state 62
    POINTER     go to state 79
    VALUE       go to state 162
    EXPR        go to state 300
    EXPR_START  go to state 165


State 235

   86 FUNC_CALL: t_id t_open_paren PARAM t_close_paren .

    $default  reduce using rule 86 (FUNC_CALL)


State 236

  149 EXPR: EXPR t_sign . VALUE

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    FUNC_CALL  go to state 76
    SHIFT      go to state 77
    SHIFT_AC   go to state 78
    METHOD     go to state 62
    POINTER    go to state 79
    VALUE      go to state 301


State 237

  149 EXPR: EXPR . t_sign VALUE
  150     | EXPR_START EXPR . EXPR_END

    t_sign         shift, and go to state 236
    t_close_paren  shift, and go to state 302

    EXPR_END  go to state 303


State 238

   87 FUNC_CALL: METHOD t_open_paren PARAM t_close_paren .

    $default  reduce using rule 87 (FUNC_CALL)


State 239

   86 FUNC_CALL: t_id t_open_paren . PARAM t_close_paren
  220 INT_BODY: INT_BODY END_SYMBOLS t_id t_open_paren . t_vtype t_close_paren

    t_vtype             shift, and go to state 304
    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_open_paren        shift, and go to state 161
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    $default  reduce using rule 148 (PARAM)

    FUNC_CALL   go to state 76
    SHIFT       go to state 77
    SHIFT_AC    go to state 78
    METHOD      go to state 62
    POINTER     go to state 79
    VALUE       go to state 162
    PARAM       go to state 163
    EXPR        go to state 164
    EXPR_START  go to state 165


State 240

  221 INT_BODY: INT_BODY END_SYMBOLS FUNC_CALL t_vtype .

    $default  reduce using rule 221 (INT_BODY)


State 241

  216 INT_START: t_type t_id t_interface t_enter t_open_br END_SYMBOLS INT_BODY INT_END .

    $default  reduce using rule 216 (INT_START)


State 242

  192 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id t_vtype .

    $default  reduce using rule 192 (STRUCT_BODY)


State 243

  193 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id t_id .

    $default  reduce using rule 193 (STRUCT_BODY)


State 244

   30 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren TYPE_AND_STRUCT t_close_paren .

    $default  reduce using rule 30 (FUNC_RETURN_VALUE_FULFILL)


State 245

   24 FUNC_PARAM_SECOND: FUNC_PARAM_SECOND t_comma FUNC_PARAM_FULFILL_SECOND .

    $default  reduce using rule 24 (FUNC_PARAM_SECOND)


State 246

   17 FUNC_SECOND_PART: t_open_paren FUNC_PARAM_SECOND t_close_paren BODY .

    $default  reduce using rule 17 (FUNC_SECOND_PART)


State 247

  187 MAPS: t_map . t_open_sq t_vtype t_close_sq t_vtype

    t_open_sq  shift, and go to state 305


State 248

   70 VAR: t_var t_id t_id . ASSIGNMENT t_id ST_EMBEDDED

    t_vtype     shift, and go to state 209
    t_comma     shift, and go to state 224
    t_equality  shift, and go to state 212

    ASSIGNMENT  go to state 306


State 249

   53 VAR: t_var t_id ASSIGNMENT . EXPR
   54    | t_var t_id ASSIGNMENT . EXPR t_vtype
   55    | t_var t_id ASSIGNMENT . BOOLEAN
   59    | t_var t_id ASSIGNMENT . MULTI_AR t_vtype PLENTY
   62    | t_var t_id ASSIGNMENT . MAKE
   67    | t_var t_id ASSIGNMENT . SLICE
   71    | t_var t_id ASSIGNMENT . t_id ST_EMBEDDED

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 307
    t_string            shift, and go to state 69
    t_open_paren        shift, and go to state 161
    t_open_sq           shift, and go to state 137
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_make              shift, and go to state 308
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    BOOLEAN      go to state 309
    FUNC_CALL    go to state 76
    SHIFT        go to state 77
    SHIFT_AC     go to state 78
    METHOD       go to state 62
    POINTER      go to state 79
    VALUE        go to state 162
    EXPR         go to state 310
    EXPR_START   go to state 165
    ARRAY_INDEX  go to state 154
    MULTI_AR     go to state 311
    MAKE         go to state 312
    SLICE        go to state 313


State 250

   75 VAR: t_var t_id POINTER .
   76    | t_var t_id POINTER . ASSIGNMENT EXPR

    t_vtype     shift, and go to state 209
    t_comma     shift, and go to state 224
    t_equality  shift, and go to state 212

    $default  reduce using rule 75 (VAR)

    ASSIGNMENT  go to state 314


State 251

  166 ARRAY_BODY: t_var t_id MULTI_AR . t_vtype
  167           | t_var t_id MULTI_AR . t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  168           | t_var t_id MULTI_AR . t_vtype ASSIGNMENT MAKE

    t_vtype  shift, and go to state 315


State 252

   68 VAR: t_var t_id MAPS .

    $default  reduce using rule 68 (VAR)


State 253

   77 BOOLEAN: EXPR t_bool . EXPR

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_open_paren        shift, and go to state 161
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    FUNC_CALL   go to state 76
    SHIFT       go to state 77
    SHIFT_AC    go to state 78
    METHOD      go to state 62
    POINTER     go to state 79
    VALUE       go to state 162
    EXPR        go to state 316
    EXPR_START  go to state 165


State 254

  138 IF_FIRST: t_if CONDITION BODY .

    $default  reduce using rule 138 (IF_FIRST)


State 255

   53 VAR: t_var t_id . ASSIGNMENT EXPR
   54    | t_var t_id . ASSIGNMENT EXPR t_vtype
   55    | t_var t_id . ASSIGNMENT BOOLEAN
   59    | t_var t_id . ASSIGNMENT MULTI_AR t_vtype PLENTY
   62    | t_var t_id . ASSIGNMENT MAKE
   67    | t_var t_id . ASSIGNMENT SLICE
   68    | t_var t_id . MAPS
   70    | t_var t_id . t_id ASSIGNMENT t_id ST_EMBEDDED
   71    | t_var t_id . ASSIGNMENT t_id ST_EMBEDDED
   75    | t_var t_id . POINTER
   76    | t_var t_id . POINTER ASSIGNMENT EXPR

    t_vtype      shift, and go to state 209
    t_map        shift, and go to state 247
    t_id         shift, and go to state 248
    t_comma      shift, and go to state 224
    t_equality   shift, and go to state 212
    t_pointer    shift, and go to state 74
    t_ampersand  shift, and go to state 75

    ASSIGNMENT  go to state 249
    POINTER     go to state 250
    MAPS        go to state 252


State 256

  118 SWITCH_BODY_START: t_open_br END_SYMBOLS .

    $default  reduce using rule 118 (SWITCH_BODY_START)


State 257

  122 CASE: t_case . CASE_STATEMENT CASE_BODY

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_open_paren        shift, and go to state 161
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    FUNC_CALL       go to state 76
    SHIFT           go to state 77
    SHIFT_AC        go to state 78
    METHOD          go to state 62
    POINTER         go to state 79
    VALUE           go to state 162
    MULTIPLE_ARG    go to state 317
    FIRST_PART      go to state 318
    CASE_STATEMENT  go to state 319
    EXPR            go to state 320
    EXPR_START      go to state 165


State 258

  123 DEFAULT: t_default . CASE_BODY

    t_colon  shift, and go to state 321

    CASE_BODY  go to state 322


State 259

  133 SWITCH_BODY_END: t_close_br .

    $default  reduce using rule 133 (SWITCH_BODY_END)


State 260

  119 SWITCH_BODY_START: SWITCH_BODY_START CASE .

    $default  reduce using rule 119 (SWITCH_BODY_START)


State 261

  120 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START DEFAULT .

    $default  reduce using rule 120 (SWITCH_BODY_START_WITH_DEFAULT)


State 262

  115 SWITCH_BODY: SWITCH_BODY_START SWITCH_BODY_END .

    $default  reduce using rule 115 (SWITCH_BODY)


State 263

  121 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START_WITH_DEFAULT CASE .

    $default  reduce using rule 121 (SWITCH_BODY_START_WITH_DEFAULT)


State 264

  116 SWITCH_BODY: SWITCH_BODY_START_WITH_DEFAULT SWITCH_BODY_END .

    $default  reduce using rule 116 (SWITCH_BODY)


State 265

  113 SWITCH: t_switch EXPR SWITCH_BODY .

    $default  reduce using rule 113 (SWITCH)


State 266

  112 SWITCH: t_switch INIT_STATE t_semicolon . EXPR SWITCH_BODY

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_open_paren        shift, and go to state 161
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    FUNC_CALL   go to state 76
    SHIFT       go to state 77
    SHIFT_AC    go to state 78
    METHOD      go to state 62
    POINTER     go to state 79
    VALUE       go to state 162
    EXPR        go to state 323
    EXPR_START  go to state 165


State 267

  162 FOR: t_for INIT_STATE t_semicolon . CONDITION t_semicolon POST_STATE BODY

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_open_paren        shift, and go to state 161
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_true              shift, and go to state 188
    t_false             shift, and go to state 189
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    $default  reduce using rule 159 (CONDITION)

    BOOLEAN     go to state 190
    FUNC_CALL   go to state 76
    SHIFT       go to state 77
    SHIFT_AC    go to state 78
    METHOD      go to state 62
    POINTER     go to state 79
    VALUE       go to state 162
    EXPR        go to state 191
    CONDITION   go to state 324
    EXPR_START  go to state 165


State 268

  163 FOR: t_for CONDITION BODY .

    $default  reduce using rule 163 (FOR)


State 269

   79 ASSIGNMENT: t_vtype t_equality .

    $default  reduce using rule 79 (ASSIGNMENT)


State 270

   81 ASSIGNMENT: t_comma t_id . ASSIGNMENT EXPR t_comma
   82           | t_comma t_id . ASSIGNMENT BOOLEAN t_comma
   84 SHORT_ASSIGN: t_comma t_id . SHORT_ASSIGN EXPR t_comma
   85             | t_comma t_id . SHORT_ASSIGN BOOLEAN t_comma

    t_vtype      shift, and go to state 209
    t_short_dec  shift, and go to state 210
    t_comma      shift, and go to state 211
    t_equality   shift, and go to state 212

    ASSIGNMENT    go to state 325
    SHORT_ASSIGN  go to state 326


State 271

   90 SHIFT_AC: t_int_const .
  101 VALUE: t_int_const .
  169 ARRAY_INDEX: t_open_sq t_int_const . t_close_sq

    t_close_sq  shift, and go to state 288

    t_colon   reduce using rule 101 (VALUE)
    $default  reduce using rule 90 (SHIFT_AC)


State 272

   86 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   89 SHIFT_AC: t_id .
   91 METHOD: t_id . t_dot t_id
  103 VALUE: t_id .
  170 ARRAY_INDEX: t_open_sq t_id . t_close_sq

    t_open_paren  shift, and go to state 109
    t_close_sq    shift, and go to state 289
    t_dot         shift, and go to state 98

    t_colon   reduce using rule 103 (VALUE)
    $default  reduce using rule 89 (SHIFT_AC)


State 273

  104 VALUE: t_string .
  171 ARRAY_INDEX: t_open_sq t_string . t_close_sq

    t_close_sq  shift, and go to state 290

    $default  reduce using rule 104 (VALUE)


State 274

  185 SLICE: t_id t_open_sq t_colon . VALUE t_close_sq

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    FUNC_CALL  go to state 76
    SHIFT      go to state 77
    SHIFT_AC   go to state 78
    METHOD     go to state 62
    POINTER    go to state 79
    VALUE      go to state 327


State 275

  184 SLICE: t_id t_open_sq VALUE . t_colon VALUE t_close_sq
  186      | t_id t_open_sq VALUE . t_colon t_close_sq

    t_colon  shift, and go to state 328


State 276

  152 SHORT_EXPR: t_id t_short_expr t_id .

    $default  reduce using rule 152 (SHORT_EXPR)


State 277

   86 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   89 SHIFT_AC: t_id .
   91 METHOD: t_id . t_dot t_id
  103 VALUE: t_id .
  184 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  185      | t_id . t_open_sq t_colon VALUE t_close_sq
  186      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_open_paren  shift, and go to state 109
    t_open_sq     shift, and go to state 329
    t_dot         shift, and go to state 98

    t_shift_const  reduce using rule 89 (SHIFT_AC)
    $default       reduce using rule 103 (VALUE)


State 278

   57 VAR: t_id ASSIGNMENT EXPR .
  149 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 236

    $default  reduce using rule 57 (VAR)


State 279

   66 VAR: t_id ASSIGNMENT SLICE .

    $default  reduce using rule 66 (VAR)


State 280

   72 VAR: t_id SHORT_ASSIGN t_id . ST_EMBEDDED
   86 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   89 SHIFT_AC: t_id .
   91 METHOD: t_id . t_dot t_id
  103 VALUE: t_id .
  184 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  185      | t_id . t_open_sq t_colon VALUE t_close_sq
  186      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_open_br     shift, and go to state 330
    t_open_paren  shift, and go to state 109
    t_open_sq     shift, and go to state 329
    t_dot         shift, and go to state 98

    t_shift_const  reduce using rule 89 (SHIFT_AC)
    $default       reduce using rule 103 (VALUE)

    PLENTY_OLD    go to state 331
    STRUCT_FIELD  go to state 332
    ST_EMBEDDED   go to state 333


State 281

   69 VAR: t_id SHORT_ASSIGN t_make . t_open_paren MAPS t_close_paren
  182 MAKE: t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  183     | t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_paren  shift, and go to state 334


State 282

   60 VAR: t_id SHORT_ASSIGN BOOLEAN .

    $default  reduce using rule 60 (VAR)


State 283

   56 VAR: t_id SHORT_ASSIGN EXPR .
   77 BOOLEAN: EXPR . t_bool EXPR
  149 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 236
    t_bool  shift, and go to state 253

    $default  reduce using rule 56 (VAR)


State 284

   58 VAR: t_id SHORT_ASSIGN MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 335


State 285

   63 VAR: t_id SHORT_ASSIGN MAKE .

    $default  reduce using rule 63 (VAR)


State 286

   65 VAR: t_id SHORT_ASSIGN SLICE .

    $default  reduce using rule 65 (VAR)


State 287

   61 VAR: t_id MULTI_AR ASSIGNMENT . EXPR
   64    | t_id MULTI_AR ASSIGNMENT . MAKE

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_open_paren        shift, and go to state 161
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_make              shift, and go to state 308
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    FUNC_CALL   go to state 76
    SHIFT       go to state 77
    SHIFT_AC    go to state 78
    METHOD      go to state 62
    POINTER     go to state 79
    VALUE       go to state 162
    EXPR        go to state 336
    EXPR_START  go to state 165
    MAKE        go to state 337


State 288

  169 ARRAY_INDEX: t_open_sq t_int_const t_close_sq .

    $default  reduce using rule 169 (ARRAY_INDEX)


State 289

  170 ARRAY_INDEX: t_open_sq t_id t_close_sq .

    $default  reduce using rule 170 (ARRAY_INDEX)


State 290

  171 ARRAY_INDEX: t_open_sq t_string t_close_sq .

    $default  reduce using rule 171 (ARRAY_INDEX)


State 291

   81 ASSIGNMENT: t_comma t_id . ASSIGNMENT EXPR t_comma
   82           | t_comma t_id . ASSIGNMENT BOOLEAN t_comma

    t_vtype     shift, and go to state 209
    t_comma     shift, and go to state 224
    t_equality  shift, and go to state 212

    ASSIGNMENT  go to state 325


State 292

   73 VAR: METHOD ASSIGNMENT VALUE .

    $default  reduce using rule 73 (VAR)


State 293

   74 VAR: POINTER ASSIGNMENT EXPR .
  149 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 236

    $default  reduce using rule 74 (VAR)


State 294

  141 ELSEIF_SECOND: t_else t_if . CONDITION BODY

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_open_paren        shift, and go to state 161
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_true              shift, and go to state 188
    t_false             shift, and go to state 189
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    $default  reduce using rule 159 (CONDITION)

    BOOLEAN     go to state 190
    FUNC_CALL   go to state 76
    SHIFT       go to state 77
    SHIFT_AC    go to state 78
    METHOD      go to state 62
    POINTER     go to state 79
    VALUE       go to state 162
    EXPR        go to state 191
    CONDITION   go to state 338
    EXPR_START  go to state 165


State 295

  144 ELSE_THIRD: t_else BODY .

    $default  reduce using rule 144 (ELSE_THIRD)


State 296

  139 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND ELSEIF_SECOND .

    $default  reduce using rule 139 (MULTY_ELSEIF_SECOND)


State 297

  134 IF: IF_FIRST MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD .
  143 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD . ELSE_THIRD

    t_else  shift, and go to state 298

    $default  reduce using rule 134 (IF)

    ELSE_THIRD  go to state 299


State 298

  144 ELSE_THIRD: t_else . BODY

    t_open_br  shift, and go to state 87

    BODY        go to state 295
    BODY_START  go to state 94


State 299

  143 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD ELSE_THIRD .

    $default  reduce using rule 143 (MULTY_ELSE_THIRD)


State 300

  146 PARAM: PARAM t_comma EXPR .
  149 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 236

    $default  reduce using rule 146 (PARAM)


State 301

  149 EXPR: EXPR t_sign VALUE .

    $default  reduce using rule 149 (EXPR)


State 302

  165 EXPR_END: t_close_paren .

    $default  reduce using rule 165 (EXPR_END)


State 303

  150 EXPR: EXPR_START EXPR EXPR_END .

    $default  reduce using rule 150 (EXPR)


State 304

  220 INT_BODY: INT_BODY END_SYMBOLS t_id t_open_paren t_vtype . t_close_paren

    t_close_paren  shift, and go to state 339


State 305

  187 MAPS: t_map t_open_sq . t_vtype t_close_sq t_vtype

    t_vtype  shift, and go to state 340


State 306

   70 VAR: t_var t_id t_id ASSIGNMENT . t_id ST_EMBEDDED

    t_id  shift, and go to state 341


State 307

   71 VAR: t_var t_id ASSIGNMENT t_id . ST_EMBEDDED
   86 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   89 SHIFT_AC: t_id .
   91 METHOD: t_id . t_dot t_id
  103 VALUE: t_id .
  184 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  185      | t_id . t_open_sq t_colon VALUE t_close_sq
  186      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_open_br     shift, and go to state 330
    t_open_paren  shift, and go to state 109
    t_open_sq     shift, and go to state 329
    t_dot         shift, and go to state 98

    t_shift_const  reduce using rule 89 (SHIFT_AC)
    $default       reduce using rule 103 (VALUE)

    PLENTY_OLD    go to state 331
    STRUCT_FIELD  go to state 332
    ST_EMBEDDED   go to state 342


State 308

  182 MAKE: t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  183     | t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_paren  shift, and go to state 343


State 309

   55 VAR: t_var t_id ASSIGNMENT BOOLEAN .

    $default  reduce using rule 55 (VAR)


State 310

   53 VAR: t_var t_id ASSIGNMENT EXPR .
   54    | t_var t_id ASSIGNMENT EXPR . t_vtype
   77 BOOLEAN: EXPR . t_bool EXPR
  149 EXPR: EXPR . t_sign VALUE

    t_vtype  shift, and go to state 344
    t_sign   shift, and go to state 236
    t_bool   shift, and go to state 253

    $default  reduce using rule 53 (VAR)


State 311

   59 VAR: t_var t_id ASSIGNMENT MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 345


State 312

   62 VAR: t_var t_id ASSIGNMENT MAKE .

    $default  reduce using rule 62 (VAR)


State 313

   67 VAR: t_var t_id ASSIGNMENT SLICE .

    $default  reduce using rule 67 (VAR)


State 314

   76 VAR: t_var t_id POINTER ASSIGNMENT . EXPR

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_open_paren        shift, and go to state 161
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    FUNC_CALL   go to state 76
    SHIFT       go to state 77
    SHIFT_AC    go to state 78
    METHOD      go to state 62
    POINTER     go to state 79
    VALUE       go to state 162
    EXPR        go to state 346
    EXPR_START  go to state 165


State 315

  166 ARRAY_BODY: t_var t_id MULTI_AR t_vtype .
  167           | t_var t_id MULTI_AR t_vtype . ASSIGNMENT MULTI_AR t_vtype PLENTY
  168           | t_var t_id MULTI_AR t_vtype . ASSIGNMENT MAKE

    t_vtype     shift, and go to state 209
    t_comma     shift, and go to state 224
    t_equality  shift, and go to state 212

    $default  reduce using rule 166 (ARRAY_BODY)

    ASSIGNMENT  go to state 347


State 316

   77 BOOLEAN: EXPR t_bool EXPR .
  149 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 236

    $default  reduce using rule 77 (BOOLEAN)


State 317

  128 CASE_STATEMENT: MULTIPLE_ARG .

    $default  reduce using rule 128 (CASE_STATEMENT)


State 318

  124 MULTIPLE_ARG: FIRST_PART . SECOND_PART
  126 FIRST_PART: FIRST_PART . EXPR t_comma

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_open_paren        shift, and go to state 161
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    FUNC_CALL    go to state 76
    SHIFT        go to state 77
    SHIFT_AC     go to state 78
    METHOD       go to state 62
    POINTER      go to state 79
    VALUE        go to state 162
    SECOND_PART  go to state 348
    EXPR         go to state 349
    EXPR_START   go to state 165


State 319

  122 CASE: t_case CASE_STATEMENT . CASE_BODY

    t_colon  shift, and go to state 321

    CASE_BODY  go to state 350


State 320

  125 FIRST_PART: EXPR . t_comma
  129 CASE_STATEMENT: EXPR .
  149 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 236
    t_comma  shift, and go to state 351

    $default  reduce using rule 129 (CASE_STATEMENT)


State 321

  130 CASE_BODY: t_colon .
  131          | t_colon . t_enter

    t_enter  shift, and go to state 352

    $default  reduce using rule 130 (CASE_BODY)


State 322

  123 DEFAULT: t_default CASE_BODY .
  132 CASE_BODY: CASE_BODY . BODY_FILLING END_SYMBOLS

    t_defer      shift, and go to state 127
    t_var        shift, and go to state 128
    t_if         shift, and go to state 129
    t_switch     shift, and go to state 130
    t_type       shift, and go to state 131
    t_for        shift, and go to state 132
    t_goto       shift, and go to state 133
    t_return     shift, and go to state 134
    t_id         shift, and go to state 135
    t_open_sq    shift, and go to state 137
    t_pointer    shift, and go to state 74
    t_ampersand  shift, and go to state 75

    $default  reduce using rule 123 (DEFAULT)

    BODY_FILLING  go to state 353
    VAR           go to state 140
    DEFER         go to state 141
    FUNC_CALL     go to state 142
    METHOD        go to state 143
    POINTER       go to state 144
    GOTO          go to state 145
    LABEL         go to state 146
    SWITCH        go to state 147
    IF            go to state 148
    IF_FIRST      go to state 149
    RETURN        go to state 150
    SHORT_EXPR    go to state 151
    FOR           go to state 152
    ARRAY_BODY    go to state 153
    ARRAY_INDEX   go to state 154
    MULTI_AR      go to state 155
    SLICE         go to state 156
    STRUCT        go to state 157
    STRUCT_START  go to state 11


State 323

  112 SWITCH: t_switch INIT_STATE t_semicolon EXPR . SWITCH_BODY
  149 EXPR: EXPR . t_sign VALUE

    t_open_br  shift, and go to state 195
    t_sign     shift, and go to state 236

    SWITCH_BODY                     go to state 354
    SWITCH_BODY_START               go to state 200
    SWITCH_BODY_START_WITH_DEFAULT  go to state 201


State 324

  162 FOR: t_for INIT_STATE t_semicolon CONDITION . t_semicolon POST_STATE BODY

    t_semicolon  shift, and go to state 355


State 325

   81 ASSIGNMENT: t_comma t_id ASSIGNMENT . EXPR t_comma
   82           | t_comma t_id ASSIGNMENT . BOOLEAN t_comma

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_open_paren        shift, and go to state 161
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    BOOLEAN     go to state 356
    FUNC_CALL   go to state 76
    SHIFT       go to state 77
    SHIFT_AC    go to state 78
    METHOD      go to state 62
    POINTER     go to state 79
    VALUE       go to state 162
    EXPR        go to state 357
    EXPR_START  go to state 165


State 326

   84 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN . EXPR t_comma
   85             | t_comma t_id SHORT_ASSIGN . BOOLEAN t_comma

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_open_paren        shift, and go to state 161
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    BOOLEAN     go to state 358
    FUNC_CALL   go to state 76
    SHIFT       go to state 77
    SHIFT_AC    go to state 78
    METHOD      go to state 62
    POINTER     go to state 79
    VALUE       go to state 162
    EXPR        go to state 359
    EXPR_START  go to state 165


State 327

  185 SLICE: t_id t_open_sq t_colon VALUE . t_close_sq

    t_close_sq  shift, and go to state 360


State 328

  184 SLICE: t_id t_open_sq VALUE t_colon . VALUE t_close_sq
  186      | t_id t_open_sq VALUE t_colon . t_close_sq

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_close_sq          shift, and go to state 361
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    FUNC_CALL  go to state 76
    SHIFT      go to state 77
    SHIFT_AC   go to state 78
    METHOD     go to state 62
    POINTER    go to state 79
    VALUE      go to state 362


State 329

  184 SLICE: t_id t_open_sq . VALUE t_colon VALUE t_close_sq
  185      | t_id t_open_sq . t_colon VALUE t_close_sq
  186      | t_id t_open_sq . VALUE t_colon t_close_sq

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_colon             shift, and go to state 274
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    FUNC_CALL  go to state 76
    SHIFT      go to state 77
    SHIFT_AC   go to state 78
    METHOD     go to state 62
    POINTER    go to state 79
    VALUE      go to state 275


State 330

  177 PLENTY_OLD: t_open_br . ENUM t_close_br
  178           | t_open_br . t_close_br
  179           | t_open_br . PLENTY t_close_br
  205 STRUCT_FIELD: t_open_br . END_SYMBOLS STRUCT_ENUM t_close_br
  206             | t_open_br . END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_open_br           shift, and go to state 363
    t_close_br          shift, and go to state 364
    t_rune              shift, and go to state 71
    t_semicolon         shift, and go to state 21
    t_blank_identifier  shift, and go to state 72
    t_enter             shift, and go to state 22
    t_eof               shift, and go to state 23
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    FUNC_CALL    go to state 76
    SHIFT        go to state 77
    SHIFT_AC     go to state 78
    METHOD       go to state 62
    POINTER      go to state 79
    VALUE        go to state 80
    PLENTY       go to state 365
    PLENTY_OLD   go to state 366
    ENUM         go to state 367
    END_SYMBOLS  go to state 368


State 331

  207 STRUCT_FIELD: PLENTY_OLD .

    $default  reduce using rule 207 (STRUCT_FIELD)


State 332

  208 ST_EMBEDDED: STRUCT_FIELD .
  209            | STRUCT_FIELD . t_comma ST_EMBEDDED

    t_comma  shift, and go to state 369

    $default  reduce using rule 208 (ST_EMBEDDED)


State 333

   72 VAR: t_id SHORT_ASSIGN t_id ST_EMBEDDED .

    $default  reduce using rule 72 (VAR)


State 334

   69 VAR: t_id SHORT_ASSIGN t_make t_open_paren . MAPS t_close_paren
  182 MAKE: t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_close_paren
  183     | t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_map      shift, and go to state 247
    t_open_sq  shift, and go to state 137

    ARRAY_INDEX  go to state 154
    MULTI_AR     go to state 370
    MAPS         go to state 371


State 335

   58 VAR: t_id SHORT_ASSIGN MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 363

    PLENTY      go to state 372
    PLENTY_OLD  go to state 366


State 336

   61 VAR: t_id MULTI_AR ASSIGNMENT EXPR .
  149 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 236

    $default  reduce using rule 61 (VAR)


State 337

   64 VAR: t_id MULTI_AR ASSIGNMENT MAKE .

    $default  reduce using rule 64 (VAR)


State 338

  141 ELSEIF_SECOND: t_else t_if CONDITION . BODY

    t_open_br  shift, and go to state 87

    BODY        go to state 373
    BODY_START  go to state 94


State 339

  220 INT_BODY: INT_BODY END_SYMBOLS t_id t_open_paren t_vtype t_close_paren .

    $default  reduce using rule 220 (INT_BODY)


State 340

  187 MAPS: t_map t_open_sq t_vtype . t_close_sq t_vtype

    t_close_sq  shift, and go to state 374


State 341

   70 VAR: t_var t_id t_id ASSIGNMENT t_id . ST_EMBEDDED

    t_open_br  shift, and go to state 330

    PLENTY_OLD    go to state 331
    STRUCT_FIELD  go to state 332
    ST_EMBEDDED   go to state 375


State 342

   71 VAR: t_var t_id ASSIGNMENT t_id ST_EMBEDDED .

    $default  reduce using rule 71 (VAR)


State 343

  182 MAKE: t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_close_paren
  183     | t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_sq  shift, and go to state 137

    ARRAY_INDEX  go to state 154
    MULTI_AR     go to state 370


State 344

   54 VAR: t_var t_id ASSIGNMENT EXPR t_vtype .

    $default  reduce using rule 54 (VAR)


State 345

   59 VAR: t_var t_id ASSIGNMENT MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 363

    PLENTY      go to state 376
    PLENTY_OLD  go to state 366


State 346

   76 VAR: t_var t_id POINTER ASSIGNMENT EXPR .
  149 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 236

    $default  reduce using rule 76 (VAR)


State 347

  167 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT . MULTI_AR t_vtype PLENTY
  168           | t_var t_id MULTI_AR t_vtype ASSIGNMENT . MAKE

    t_open_sq  shift, and go to state 137
    t_make     shift, and go to state 308

    ARRAY_INDEX  go to state 154
    MULTI_AR     go to state 377
    MAKE         go to state 378


State 348

  124 MULTIPLE_ARG: FIRST_PART SECOND_PART .

    $default  reduce using rule 124 (MULTIPLE_ARG)


State 349

  126 FIRST_PART: FIRST_PART EXPR . t_comma
  127 SECOND_PART: EXPR .
  149 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 236
    t_comma  shift, and go to state 379

    $default  reduce using rule 127 (SECOND_PART)


State 350

  122 CASE: t_case CASE_STATEMENT CASE_BODY .
  132 CASE_BODY: CASE_BODY . BODY_FILLING END_SYMBOLS

    t_defer      shift, and go to state 127
    t_var        shift, and go to state 128
    t_if         shift, and go to state 129
    t_switch     shift, and go to state 130
    t_type       shift, and go to state 131
    t_for        shift, and go to state 132
    t_goto       shift, and go to state 133
    t_return     shift, and go to state 134
    t_id         shift, and go to state 135
    t_open_sq    shift, and go to state 137
    t_pointer    shift, and go to state 74
    t_ampersand  shift, and go to state 75

    $default  reduce using rule 122 (CASE)

    BODY_FILLING  go to state 353
    VAR           go to state 140
    DEFER         go to state 141
    FUNC_CALL     go to state 142
    METHOD        go to state 143
    POINTER       go to state 144
    GOTO          go to state 145
    LABEL         go to state 146
    SWITCH        go to state 147
    IF            go to state 148
    IF_FIRST      go to state 149
    RETURN        go to state 150
    SHORT_EXPR    go to state 151
    FOR           go to state 152
    ARRAY_BODY    go to state 153
    ARRAY_INDEX   go to state 154
    MULTI_AR      go to state 155
    SLICE         go to state 156
    STRUCT        go to state 157
    STRUCT_START  go to state 11


State 351

  125 FIRST_PART: EXPR t_comma .

    $default  reduce using rule 125 (FIRST_PART)


State 352

  131 CASE_BODY: t_colon t_enter .

    $default  reduce using rule 131 (CASE_BODY)


State 353

  132 CASE_BODY: CASE_BODY BODY_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 380


State 354

  112 SWITCH: t_switch INIT_STATE t_semicolon EXPR SWITCH_BODY .

    $default  reduce using rule 112 (SWITCH)


State 355

  162 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon . POST_STATE BODY

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 381
    t_string            shift, and go to state 69
    t_open_paren        shift, and go to state 161
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    FUNC_CALL   go to state 76
    SHIFT       go to state 77
    SHIFT_AC    go to state 78
    METHOD      go to state 62
    POINTER     go to state 79
    VALUE       go to state 162
    EXPR        go to state 382
    POST_STATE  go to state 383
    EXPR_START  go to state 165


State 356

   82 ASSIGNMENT: t_comma t_id ASSIGNMENT BOOLEAN . t_comma

    t_comma  shift, and go to state 384


State 357

   77 BOOLEAN: EXPR . t_bool EXPR
   81 ASSIGNMENT: t_comma t_id ASSIGNMENT EXPR . t_comma
  149 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 236
    t_comma  shift, and go to state 385
    t_bool   shift, and go to state 253


State 358

   85 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN BOOLEAN . t_comma

    t_comma  shift, and go to state 386


State 359

   77 BOOLEAN: EXPR . t_bool EXPR
   84 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN EXPR . t_comma
  149 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 236
    t_comma  shift, and go to state 387
    t_bool   shift, and go to state 253


State 360

  185 SLICE: t_id t_open_sq t_colon VALUE t_close_sq .

    $default  reduce using rule 185 (SLICE)


State 361

  186 SLICE: t_id t_open_sq VALUE t_colon t_close_sq .

    $default  reduce using rule 186 (SLICE)


State 362

  184 SLICE: t_id t_open_sq VALUE t_colon VALUE . t_close_sq

    t_close_sq  shift, and go to state 388


State 363

  177 PLENTY_OLD: t_open_br . ENUM t_close_br
  178           | t_open_br . t_close_br
  179           | t_open_br . PLENTY t_close_br

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_open_br           shift, and go to state 363
    t_close_br          shift, and go to state 364
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    FUNC_CALL   go to state 76
    SHIFT       go to state 77
    SHIFT_AC    go to state 78
    METHOD      go to state 62
    POINTER     go to state 79
    VALUE       go to state 80
    PLENTY      go to state 365
    PLENTY_OLD  go to state 366
    ENUM        go to state 367


State 364

  178 PLENTY_OLD: t_open_br t_close_br .

    $default  reduce using rule 178 (PLENTY_OLD)


State 365

  179 PLENTY_OLD: t_open_br PLENTY . t_close_br

    t_close_br  shift, and go to state 389


State 366

  175 PLENTY: PLENTY_OLD .
  176       | PLENTY_OLD . t_comma PLENTY

    t_comma  shift, and go to state 390

    $default  reduce using rule 175 (PLENTY)


State 367

  177 PLENTY_OLD: t_open_br ENUM . t_close_br
  181 ENUM: ENUM . t_comma VALUE

    t_close_br  shift, and go to state 391
    t_comma     shift, and go to state 116


State 368

  205 STRUCT_FIELD: t_open_br END_SYMBOLS . STRUCT_ENUM t_close_br
  206             | t_open_br END_SYMBOLS . STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS

    t_id  shift, and go to state 392

    STRUCT_ENUM  go to state 393


State 369

  209 ST_EMBEDDED: STRUCT_FIELD t_comma . ST_EMBEDDED

    t_open_br  shift, and go to state 330

    PLENTY_OLD    go to state 331
    STRUCT_FIELD  go to state 332
    ST_EMBEDDED   go to state 394


State 370

  182 MAKE: t_make t_open_paren MULTI_AR . t_vtype t_comma VALUE t_close_paren
  183     | t_make t_open_paren MULTI_AR . t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_vtype  shift, and go to state 395


State 371

   69 VAR: t_id SHORT_ASSIGN t_make t_open_paren MAPS . t_close_paren

    t_close_paren  shift, and go to state 396


State 372

   58 VAR: t_id SHORT_ASSIGN MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 58 (VAR)


State 373

  141 ELSEIF_SECOND: t_else t_if CONDITION BODY .

    $default  reduce using rule 141 (ELSEIF_SECOND)


State 374

  187 MAPS: t_map t_open_sq t_vtype t_close_sq . t_vtype

    t_vtype  shift, and go to state 397


State 375

   70 VAR: t_var t_id t_id ASSIGNMENT t_id ST_EMBEDDED .

    $default  reduce using rule 70 (VAR)


State 376

   59 VAR: t_var t_id ASSIGNMENT MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 59 (VAR)


State 377

  167 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 398


State 378

  168 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MAKE .

    $default  reduce using rule 168 (ARRAY_BODY)


State 379

  126 FIRST_PART: FIRST_PART EXPR t_comma .

    $default  reduce using rule 126 (FIRST_PART)


State 380

  132 CASE_BODY: CASE_BODY BODY_FILLING END_SYMBOLS .

    $default  reduce using rule 132 (CASE_BODY)


State 381

   86 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   89 SHIFT_AC: t_id .
   91 METHOD: t_id . t_dot t_id
  103 VALUE: t_id .
  161 POST_STATE: t_id . t_inc_const

    t_inc_const   shift, and go to state 399
    t_open_paren  shift, and go to state 109
    t_dot         shift, and go to state 98

    t_shift_const  reduce using rule 89 (SHIFT_AC)
    $default       reduce using rule 103 (VALUE)


State 382

  149 EXPR: EXPR . t_sign VALUE
  160 POST_STATE: EXPR .

    t_sign  shift, and go to state 236

    $default  reduce using rule 160 (POST_STATE)


State 383

  162 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE . BODY

    t_open_br  shift, and go to state 87

    BODY        go to state 400
    BODY_START  go to state 94


State 384

   82 ASSIGNMENT: t_comma t_id ASSIGNMENT BOOLEAN t_comma .

    $default  reduce using rule 82 (ASSIGNMENT)


State 385

   81 ASSIGNMENT: t_comma t_id ASSIGNMENT EXPR t_comma .

    $default  reduce using rule 81 (ASSIGNMENT)


State 386

   85 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN BOOLEAN t_comma .

    $default  reduce using rule 85 (SHORT_ASSIGN)


State 387

   84 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN EXPR t_comma .

    $default  reduce using rule 84 (SHORT_ASSIGN)


State 388

  184 SLICE: t_id t_open_sq VALUE t_colon VALUE t_close_sq .

    $default  reduce using rule 184 (SLICE)


State 389

  179 PLENTY_OLD: t_open_br PLENTY t_close_br .

    $default  reduce using rule 179 (PLENTY_OLD)


State 390

  176 PLENTY: PLENTY_OLD t_comma . PLENTY

    t_open_br  shift, and go to state 363

    PLENTY      go to state 401
    PLENTY_OLD  go to state 366


State 391

  177 PLENTY_OLD: t_open_br ENUM t_close_br .

    $default  reduce using rule 177 (PLENTY_OLD)


State 392

  201 STRUCT_ENUM: t_id . t_colon VALUE
  203            | t_id . t_colon t_id STRUCT_FIELD

    t_colon  shift, and go to state 402


State 393

  202 STRUCT_ENUM: STRUCT_ENUM . t_comma END_SYMBOLS t_id t_colon VALUE
  204            | STRUCT_ENUM . t_comma END_SYMBOLS t_id t_colon t_id STRUCT_FIELD
  205 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM . t_close_br
  206             | t_open_br END_SYMBOLS STRUCT_ENUM . t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS

    t_close_br  shift, and go to state 403
    t_comma     shift, and go to state 404


State 394

  209 ST_EMBEDDED: STRUCT_FIELD t_comma ST_EMBEDDED .

    $default  reduce using rule 209 (ST_EMBEDDED)


State 395

  182 MAKE: t_make t_open_paren MULTI_AR t_vtype . t_comma VALUE t_close_paren
  183     | t_make t_open_paren MULTI_AR t_vtype . t_comma VALUE t_comma t_int_const VALUE

    t_comma  shift, and go to state 405


State 396

   69 VAR: t_id SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren .

    $default  reduce using rule 69 (VAR)


State 397

  187 MAPS: t_map t_open_sq t_vtype t_close_sq t_vtype .

    $default  reduce using rule 187 (MAPS)


State 398

  167 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 363

    PLENTY      go to state 406
    PLENTY_OLD  go to state 366


State 399

  161 POST_STATE: t_id t_inc_const .

    $default  reduce using rule 161 (POST_STATE)


State 400

  162 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY .

    $default  reduce using rule 162 (FOR)


State 401

  176 PLENTY: PLENTY_OLD t_comma PLENTY .

    $default  reduce using rule 176 (PLENTY)


State 402

  201 STRUCT_ENUM: t_id t_colon . VALUE
  203            | t_id t_colon . t_id STRUCT_FIELD

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 407
    t_string            shift, and go to state 69
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    FUNC_CALL  go to state 76
    SHIFT      go to state 77
    SHIFT_AC   go to state 78
    METHOD     go to state 62
    POINTER    go to state 79
    VALUE      go to state 408


State 403

  205 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_close_br .

    $default  reduce using rule 205 (STRUCT_FIELD)


State 404

  202 STRUCT_ENUM: STRUCT_ENUM t_comma . END_SYMBOLS t_id t_colon VALUE
  204            | STRUCT_ENUM t_comma . END_SYMBOLS t_id t_colon t_id STRUCT_FIELD
  206 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma . END_SYMBOLS t_close_br t_comma END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 409


State 405

  182 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma . VALUE t_close_paren
  183     | t_make t_open_paren MULTI_AR t_vtype t_comma . VALUE t_comma t_int_const VALUE

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    FUNC_CALL  go to state 76
    SHIFT      go to state 77
    SHIFT_AC   go to state 78
    METHOD     go to state 62
    POINTER    go to state 79
    VALUE      go to state 410


State 406

  167 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 167 (ARRAY_BODY)


State 407

   86 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   89 SHIFT_AC: t_id .
   91 METHOD: t_id . t_dot t_id
  103 VALUE: t_id .
  203 STRUCT_ENUM: t_id t_colon t_id . STRUCT_FIELD

    t_open_br     shift, and go to state 330
    t_open_paren  shift, and go to state 109
    t_dot         shift, and go to state 98

    t_shift_const  reduce using rule 89 (SHIFT_AC)
    $default       reduce using rule 103 (VALUE)

    PLENTY_OLD    go to state 331
    STRUCT_FIELD  go to state 411


State 408

  201 STRUCT_ENUM: t_id t_colon VALUE .

    $default  reduce using rule 201 (STRUCT_ENUM)


State 409

  202 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS . t_id t_colon VALUE
  204            | STRUCT_ENUM t_comma END_SYMBOLS . t_id t_colon t_id STRUCT_FIELD
  206 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS . t_close_br t_comma END_SYMBOLS

    t_id        shift, and go to state 412
    t_close_br  shift, and go to state 413


State 410

  182 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE . t_close_paren
  183     | t_make t_open_paren MULTI_AR t_vtype t_comma VALUE . t_comma t_int_const VALUE

    t_comma        shift, and go to state 414
    t_close_paren  shift, and go to state 415


State 411

  203 STRUCT_ENUM: t_id t_colon t_id STRUCT_FIELD .

    $default  reduce using rule 203 (STRUCT_ENUM)


State 412

  202 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id . t_colon VALUE
  204            | STRUCT_ENUM t_comma END_SYMBOLS t_id . t_colon t_id STRUCT_FIELD

    t_colon  shift, and go to state 416


State 413

  206 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br . t_comma END_SYMBOLS

    t_comma  shift, and go to state 417


State 414

  183 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma . t_int_const VALUE

    t_int_const  shift, and go to state 418


State 415

  182 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren .

    $default  reduce using rule 182 (MAKE)


State 416

  202 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon . VALUE
  204            | STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon . t_id STRUCT_FIELD

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 419
    t_string            shift, and go to state 69
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    FUNC_CALL  go to state 76
    SHIFT      go to state 77
    SHIFT_AC   go to state 78
    METHOD     go to state 62
    POINTER    go to state 79
    VALUE      go to state 420


State 417

  206 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 421


State 418

  183 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const . VALUE

    t_int_const         shift, and go to state 66
    t_float_const       shift, and go to state 67
    t_id                shift, and go to state 160
    t_string            shift, and go to state 69
    t_rune              shift, and go to state 71
    t_blank_identifier  shift, and go to state 72
    t_pointer           shift, and go to state 74
    t_ampersand         shift, and go to state 75

    FUNC_CALL  go to state 76
    SHIFT      go to state 77
    SHIFT_AC   go to state 78
    METHOD     go to state 62
    POINTER    go to state 79
    VALUE      go to state 422


State 419

   86 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   89 SHIFT_AC: t_id .
   91 METHOD: t_id . t_dot t_id
  103 VALUE: t_id .
  204 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon t_id . STRUCT_FIELD

    t_open_br     shift, and go to state 330
    t_open_paren  shift, and go to state 109
    t_dot         shift, and go to state 98

    t_shift_const  reduce using rule 89 (SHIFT_AC)
    $default       reduce using rule 103 (VALUE)

    PLENTY_OLD    go to state 331
    STRUCT_FIELD  go to state 423


State 420

  202 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon VALUE .

    $default  reduce using rule 202 (STRUCT_ENUM)


State 421

  206 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS .

    $default  reduce using rule 206 (STRUCT_FIELD)


State 422

  183 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE .

    $default  reduce using rule 183 (MAKE)


State 423

  204 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon t_id STRUCT_FIELD .

    $default  reduce using rule 204 (STRUCT_ENUM)
