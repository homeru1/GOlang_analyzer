Terminals unused in grammar

   t_constant
   t_chan
   t_go
   t_range
   t_select
   t_fallthrough
   t_or_const
   t_and_const
   t_param_const
   t_eq_const
   t_rel_const
   t_point_const
   t_punc
   t_char_const
   t_path_pack
   '+'
   '-'
   '*'
   '/'


State 129 conflicts: 1 shift/reduce
State 266 conflicts: 1 shift/reduce
State 268 conflicts: 1 shift/reduce


Grammar

    0 $accept: START $end

    1 START: START GLOBAL END_SYMBOLS
    2      | GLOBAL END_SYMBOLS
    3      | START END_SYMBOLS

    4 GLOBAL: PACKAGE
    5       | IMPORT
    6       | FUNC
    7       | STRUCT
    8       | INTERFACE

    9 PACKAGE: t_package t_id

   10 IMPORT: t_import t_string
   11       | t_import t_open_paren PARAM_IMPORT t_close_paren
   12       | t_import t_open_paren t_enter PARAM_IMPORT t_close_paren
   13       | t_import t_id t_string

   14 FUNC: t_func t_id t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART

   15 FUNC_SECOND_PART: BODY
   16                 | FUNC_RETURN_VALUE BODY
   17                 | t_open_paren FUNC_PARAM_SECOND t_close_paren BODY

   18 FUNC_PARAM: FUNC_PARAM_FULFILL
   19           | FUNC_PARAM t_comma FUNC_PARAM_FULFILL

   20 FUNC_PARAM_FULFILL: t_id TYPE_AND_STRUCT
   21                   | t_id
   22                   | /* empty */

   23 FUNC_PARAM_SECOND: FUNC_PARAM_FULFILL_SECOND
   24                  | FUNC_PARAM_SECOND t_comma FUNC_PARAM_FULFILL_SECOND

   25 FUNC_PARAM_FULFILL_SECOND: t_id TYPE_AND_STRUCT
   26                          | TYPE_AND_STRUCT

   27 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE_FULFILL
   28                  | FUNC_RETURN_VALUE FUNC_RETURN_VALUE_FULFILL

   29 FUNC_RETURN_VALUE_FULFILL: TYPE_AND_STRUCT
   30                          | t_func t_open_paren TYPE_AND_STRUCT t_close_paren
   31                          | t_func t_open_paren t_close_paren

   32 TYPE_AND_STRUCT: t_vtype
   33                | t_id

   34 BODY: BODY_START BODY_END

   35 BODY_END: t_close_br

   36 BODY_START: ABSORB_EMPTYNESS
   37           | BODY_START BODY_FILLING END_SYMBOLS

   38 BODY_FILLING: VAR
   39             | FOR
   40             | SWITCH
   41             | GOTO
   42             | LABEL
   43             | IF
   44             | MULTI_AR
   45             | FUNC_CALL
   46             | SHORT_EXPR
   47             | ARRAY_BODY
   48             | RETURN
   49             | STRUCT
   50             | SLICE
   51             | DEFER
   52             | METHOD

   53 VAR: t_var t_id ASSIGNMENT EXPR
   54    | t_var t_id ASSIGNMENT EXPR t_vtype
   55    | t_var t_id ASSIGNMENT BOOLEAN
   56    | t_id SHORT_ASSIGN EXPR
   57    | t_id ASSIGNMENT EXPR
   58    | t_id SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   59    | t_var t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   60    | t_id SHORT_ASSIGN BOOLEAN
   61    | t_id MULTI_AR ASSIGNMENT EXPR
   62    | t_var t_id ASSIGNMENT MAKE
   63    | t_id SHORT_ASSIGN MAKE
   64    | t_id MULTI_AR ASSIGNMENT MAKE
   65    | t_id SHORT_ASSIGN SLICE
   66    | t_id ASSIGNMENT SLICE
   67    | t_var t_id ASSIGNMENT SLICE
   68    | t_var t_id MAPS
   69    | t_id SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   70    | t_var t_id t_id ASSIGNMENT t_id ST_EMBEDDED
   71    | t_var t_id ASSIGNMENT t_id ST_EMBEDDED
   72    | t_id SHORT_ASSIGN t_id ST_EMBEDDED
   73    | METHOD ASSIGNMENT VALUE
   74    | POINTER ASSIGNMENT EXPR
   75    | t_var t_id POINTER
   76    | t_var t_id POINTER ASSIGNMENT EXPR

   77 BOOLEAN: EXPR t_bool EXPR

   78 DEFER: t_defer FUNC_CALL

   79 ASSIGNMENT: t_vtype t_equality
   80           | t_equality
   81           | t_comma t_id ASSIGNMENT EXPR t_comma
   82           | t_comma t_id ASSIGNMENT BOOLEAN t_comma

   83 SHORT_ASSIGN: t_short_dec
   84             | t_comma t_id SHORT_ASSIGN EXPR t_comma
   85             | t_comma t_id SHORT_ASSIGN BOOLEAN t_comma

   86 FUNC_CALL: t_id PARAM
   87          | METHOD PARAM

   88 PARAM: PARAM_START PARAM_END
   89      | t_open_paren t_close_paren

   90 PARAM_START: t_open_paren
   91            | PARAM_START PARAM_FULFILL

   92 PARAM_END: PARAM_END_FULFILL t_close_paren

   93 PARAM_END_FULFILL: EXPR
   94                  | t_enter

   95 PARAM_FULFILL: EXPR t_comma
   96              | t_enter

   97 SHIFT: SHIFT_AC t_shift_const SHIFT_AC

   98 SHIFT_AC: t_id
   99         | t_int_const

  100 METHOD: METHOD_FULFILL t_dot METHOD_FULFILL
  101       | METHOD t_dot METHOD_FULFILL

  102 METHOD_FULFILL: t_id
  103               | FUNC_CALL

  104 POINTER: t_pointer t_id
  105        | t_pointer t_vtype
  106        | t_ampersand t_id

  107 PARAM_IMPORT: t_string END_SYMBOLS
  108             | t_id t_string END_SYMBOLS
  109             | PARAM_IMPORT t_string END_SYMBOLS
  110             | PARAM_IMPORT t_id t_string END_SYMBOLS

  111 VALUE: t_int_const
  112      | t_float_const
  113      | t_id
  114      | t_string
  115      | t_rune
  116      | t_blank_identifier
  117      | FUNC_CALL
  118      | SHIFT
  119      | POINTER
  120      | METHOD

  121 GOTO: t_goto t_id

  122 LABEL: t_id t_colon

  123 SWITCH: t_switch INIT_STATE t_semicolon EXPR SWITCH_BODY
  124       | t_switch EXPR SWITCH_BODY
  125       | t_switch SWITCH_BODY

  126 SWITCH_BODY: SWITCH_BODY_START SWITCH_BODY_END
  127            | SWITCH_BODY_START_WITH_DEFAULT SWITCH_BODY_END

  128 SWITCH_BODY_START: ABSORB_EMPTYNESS
  129                  | SWITCH_BODY_START CASE

  130 ABSORB_EMPTYNESS: t_open_br
  131                 | ABSORB_EMPTYNESS END_SYMBOLS

  132 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START DEFAULT
  133                               | SWITCH_BODY_START_WITH_DEFAULT CASE

  134 CASE: t_case CASE_STATEMENT CASE_BODY

  135 DEFAULT: t_default CASE_BODY

  136 MULTIPLE_ARG: FIRST_PART SECOND_PART

  137 FIRST_PART: EXPR t_comma
  138           | FIRST_PART EXPR t_comma

  139 SECOND_PART: EXPR

  140 CASE_STATEMENT: MULTIPLE_ARG
  141               | EXPR

  142 CASE_BODY: t_colon
  143          | CASE_BODY LOOP_FILLING END_SYMBOLS
  144          | CASE_BODY END_SYMBOLS

  145 SWITCH_BODY_END: t_close_br

  146 IF: IF_FIRST MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD
  147   | IF_FIRST MULTY_ELSEIF_SECOND
  148   | IF_FIRST MULTY_ELSE_THIRD
  149   | IF_FIRST

  150 IF_FIRST: t_if CONDITION BODY_FOR_LOOP
  151         | t_if INIT_STATE t_semicolon CONDITION BODY_FOR_LOOP

  152 BODY_FOR_LOOP: BODY_FOR_LOOP_START BODY_FOR_LOOP_END

  153 BODY_FOR_LOOP_START: ABSORB_EMPTYNESS
  154                    | BODY_FOR_LOOP_START LOOP_FILLING END_SYMBOLS

  155 BODY_FOR_LOOP_END: t_close_br

  156 LOOP_FILLING: BODY_FILLING
  157             | t_break
  158             | t_continue

  159 MULTY_ELSEIF_SECOND: ELSEIF_SECOND
  160                    | MULTY_ELSEIF_SECOND ELSEIF_SECOND

  161 ELSEIF_SECOND: t_else t_if CONDITION BODY_FOR_LOOP

  162 MULTY_ELSE_THIRD: ELSE_THIRD
  163                 | MULTY_ELSE_THIRD ELSE_THIRD

  164 ELSE_THIRD: t_else BODY_FOR_LOOP

  165 RETURN: t_return EXPR
  166       | t_return EXPR MANY_RETURN_START MANY_RETURN_START_END

  167 MANY_RETURN_START: t_comma
  168                  | MANY_RETURN_START EXPR t_comma

  169 MANY_RETURN_START_END: EXPR

  170 EXPR: EXPR t_sign VALUE
  171     | EXPR_START EXPR EXPR_END
  172     | VALUE

  173 SHORT_EXPR: t_id t_short_expr t_id

  174 INIT_STATE: VAR
  175           | FUNC_CALL
  176           | /* empty */

  177 CONDITION: BOOLEAN
  178          | t_true
  179          | t_false
  180          | /* empty */

  181 POST_STATE: EXPR
  182           | t_id t_inc_const

  183 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY_FOR_LOOP
  184    | t_for CONDITION BODY_FOR_LOOP

  185 EXPR_START: t_open_paren

  186 EXPR_END: t_close_paren

  187 ARRAY_BODY: t_var t_id MULTI_AR t_vtype
  188           | t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  189           | t_var t_id MULTI_AR t_vtype ASSIGNMENT MAKE

  190 ARRAY_INDEX: t_open_sq t_int_const t_close_sq
  191            | t_open_sq t_id t_close_sq
  192            | t_open_sq t_string t_close_sq
  193            | t_open_sq t_close_sq

  194 MULTI_AR: ARRAY_INDEX
  195         | ARRAY_INDEX MULTI_AR

  196 PLENTY: PLENTY_OLD
  197       | PLENTY_OLD t_comma PLENTY

  198 PLENTY_OLD: t_open_br ENUM t_close_br
  199           | t_open_br t_close_br
  200           | t_open_br PLENTY t_close_br

  201 ENUM: VALUE
  202     | ENUM t_comma VALUE

  203 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  204     | t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

  205 SLICE: t_id t_open_sq VALUE t_colon VALUE t_close_sq
  206      | t_id t_open_sq t_colon VALUE t_close_sq
  207      | t_id t_open_sq VALUE t_colon t_close_sq

  208 MAPS: t_map t_open_sq t_vtype t_close_sq t_vtype

  209 STRUCT: STRUCT_START STRUCT_BODY END_SYMBOLS STRUCT_END

  210 STRUCT_START: t_type t_id t_struct_const
  211             | t_type t_id t_struct_const t_enter

  212 STRUCT_BODY: t_open_br
  213            | STRUCT_BODY END_SYMBOLS t_id t_vtype
  214            | STRUCT_BODY END_SYMBOLS t_id t_id
  215            | STRUCT_BODY END_SYMBOLS t_id

  216 STRUCT_END: t_close_br

  217 STRUCT_ENUM: t_id t_colon VALUE
  218            | STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon VALUE
  219            | t_id t_colon t_id STRUCT_FIELD
  220            | STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon t_id STRUCT_FIELD

  221 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_close_br
  222             | t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS
  223             | PLENTY_OLD

  224 ST_EMBEDDED: STRUCT_FIELD
  225            | STRUCT_FIELD t_comma ST_EMBEDDED

  226 END_SYMBOLS: t_semicolon
  227            | t_enter
  228            | t_eof

  229 INTERFACE: t_type t_id t_interface INT_BODY END_SYMBOLS INT_END

  230 INT_BODY: t_open_br END_SYMBOLS t_id t_open_paren t_close_paren

  231 INT_END: t_close_br


Terminals, with rules where they appear

$end (0) 0
'*' (42)
'+' (43)
'-' (45)
'/' (47)
error (256)
t_vtype (258) 32 54 58 59 79 105 187 188 189 203 204 208 213
t_constant (259)
t_case (260) 134
t_func (261) 14 30 31
t_import (262) 10 11 12 13
t_chan (263)
t_defer (264) 78
t_go (265)
t_interface (266) 229
t_default (267) 135
t_var (268) 53 54 55 59 62 67 68 70 71 75 76 187 188 189
t_range (269)
t_map (270) 208
t_package (271) 9
t_if (272) 150 151 161
t_select (273)
t_switch (274) 123 124 125
t_fallthrough (275)
t_else (276) 161 164
t_type (277) 210 211 229
t_for (278) 183 184
t_goto (279) 121
t_continue (280) 158
t_break (281) 157
t_return (282) 165 166
t_struct_const (283) 210 211
t_or_const (284)
t_and_const (285)
t_param_const (286)
t_eq_const (287)
t_rel_const (288)
t_shift_const (289) 97
t_inc_const (290) 182
t_point_const (291)
t_punc (292)
t_int_const (293) 99 111 190 204
t_float_const (294) 112
t_char_const (295)
t_id (296) 9 13 14 20 21 25 33 53 54 55 56 57 58 59 60 61 62 63 64
    65 66 67 68 69 70 71 72 75 76 81 82 84 85 86 98 102 104 106 108
    110 113 121 122 173 182 187 188 189 191 205 206 207 210 211 213
    214 215 217 218 219 220 229 230
t_string (297) 10 13 107 108 109 110 114 192
t_short_dec (298) 83
t_open_br (299) 130 198 199 200 212 221 222 230
t_close_br (300) 35 145 155 198 199 200 216 221 222 231
t_sign (301) 170
t_comma (302) 19 24 81 82 84 85 95 137 138 167 168 197 202 203 204
    218 220 222 225
t_equality (303) 79 80
t_open_paren (304) 11 12 14 17 30 31 69 89 90 185 203 204 230
t_close_paren (305) 11 12 14 17 30 31 69 89 92 186 203 230
t_open_sq (306) 190 191 192 193 205 206 207 208
t_close_sq (307) 190 191 192 193 205 206 207 208
t_bool (308) 77
t_rune (309) 115
t_semicolon (310) 123 151 183 226
t_blank_identifier (311) 116
t_dot (312) 100 101
t_colon (313) 122 142 205 206 207 217 218 219 220
t_true (314) 178
t_false (315) 179
t_short_expr (316) 173
t_make (317) 69 203 204
t_enter (318) 12 94 96 211 227
t_eof (319) 228
t_pointer (320) 104 105
t_ampersand (321) 106
t_path_pack (322)


Nonterminals, with rules where they appear

$accept (72)
    on left: 0
START (73)
    on left: 1 2 3, on right: 0 1 3
GLOBAL (74)
    on left: 4 5 6 7 8, on right: 1 2
PACKAGE (75)
    on left: 9, on right: 4
IMPORT (76)
    on left: 10 11 12 13, on right: 5
FUNC (77)
    on left: 14, on right: 6
FUNC_SECOND_PART (78)
    on left: 15 16 17, on right: 14
FUNC_PARAM (79)
    on left: 18 19, on right: 14 19
FUNC_PARAM_FULFILL (80)
    on left: 20 21 22, on right: 18 19
FUNC_PARAM_SECOND (81)
    on left: 23 24, on right: 17 24
FUNC_PARAM_FULFILL_SECOND (82)
    on left: 25 26, on right: 23 24
FUNC_RETURN_VALUE (83)
    on left: 27 28, on right: 16 28
FUNC_RETURN_VALUE_FULFILL (84)
    on left: 29 30 31, on right: 27 28
TYPE_AND_STRUCT (85)
    on left: 32 33, on right: 20 25 26 29 30
BODY (86)
    on left: 34, on right: 15 16 17
BODY_END (87)
    on left: 35, on right: 34
BODY_START (88)
    on left: 36 37, on right: 34 37
BODY_FILLING (89)
    on left: 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52, on right:
    37 156
VAR (90)
    on left: 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
    71 72 73 74 75 76, on right: 38 174
BOOLEAN (91)
    on left: 77, on right: 55 60 82 85 177
DEFER (92)
    on left: 78, on right: 51
ASSIGNMENT (93)
    on left: 79 80 81 82, on right: 53 54 55 57 59 61 62 64 66 67 70
    71 73 74 76 81 82 188 189
SHORT_ASSIGN (94)
    on left: 83 84 85, on right: 56 58 60 63 65 69 72 84 85
FUNC_CALL (95)
    on left: 86 87, on right: 45 78 103 117 175
PARAM (96)
    on left: 88 89, on right: 86 87
PARAM_START (97)
    on left: 90 91, on right: 88 91
PARAM_END (98)
    on left: 92, on right: 88
PARAM_END_FULFILL (99)
    on left: 93 94, on right: 92
PARAM_FULFILL (100)
    on left: 95 96, on right: 91
SHIFT (101)
    on left: 97, on right: 118
SHIFT_AC (102)
    on left: 98 99, on right: 97
METHOD (103)
    on left: 100 101, on right: 52 73 87 101 120
METHOD_FULFILL (104)
    on left: 102 103, on right: 100 101
POINTER (105)
    on left: 104 105 106, on right: 74 75 76 119
PARAM_IMPORT (106)
    on left: 107 108 109 110, on right: 11 12 109 110
VALUE (107)
    on left: 111 112 113 114 115 116 117 118 119 120, on right: 73
    170 172 201 202 203 204 205 206 207 217 218
GOTO (108)
    on left: 121, on right: 41
LABEL (109)
    on left: 122, on right: 42
SWITCH (110)
    on left: 123 124 125, on right: 40
SWITCH_BODY (111)
    on left: 126 127, on right: 123 124 125
SWITCH_BODY_START (112)
    on left: 128 129, on right: 126 129 132
ABSORB_EMPTYNESS (113)
    on left: 130 131, on right: 36 128 131 153
SWITCH_BODY_START_WITH_DEFAULT (114)
    on left: 132 133, on right: 127 133
CASE (115)
    on left: 134, on right: 129 133
DEFAULT (116)
    on left: 135, on right: 132
MULTIPLE_ARG (117)
    on left: 136, on right: 140
FIRST_PART (118)
    on left: 137 138, on right: 136 138
SECOND_PART (119)
    on left: 139, on right: 136
CASE_STATEMENT (120)
    on left: 140 141, on right: 134
CASE_BODY (121)
    on left: 142 143 144, on right: 134 135 143 144
SWITCH_BODY_END (122)
    on left: 145, on right: 126 127
IF (123)
    on left: 146 147 148 149, on right: 43
IF_FIRST (124)
    on left: 150 151, on right: 146 147 148 149
BODY_FOR_LOOP (125)
    on left: 152, on right: 150 151 161 164 183 184
BODY_FOR_LOOP_START (126)
    on left: 153 154, on right: 152 154
BODY_FOR_LOOP_END (127)
    on left: 155, on right: 152
LOOP_FILLING (128)
    on left: 156 157 158, on right: 143 154
MULTY_ELSEIF_SECOND (129)
    on left: 159 160, on right: 146 147 160
ELSEIF_SECOND (130)
    on left: 161, on right: 159 160
MULTY_ELSE_THIRD (131)
    on left: 162 163, on right: 146 148 163
ELSE_THIRD (132)
    on left: 164, on right: 162 163
RETURN (133)
    on left: 165 166, on right: 48
MANY_RETURN_START (134)
    on left: 167 168, on right: 166 168
MANY_RETURN_START_END (135)
    on left: 169, on right: 166
EXPR (136)
    on left: 170 171 172, on right: 53 54 56 57 61 74 76 77 81 84 93
    95 123 124 137 138 139 141 165 166 168 169 170 171 181
SHORT_EXPR (137)
    on left: 173, on right: 46
INIT_STATE (138)
    on left: 174 175 176, on right: 123 151 183
CONDITION (139)
    on left: 177 178 179 180, on right: 150 151 161 183 184
POST_STATE (140)
    on left: 181 182, on right: 183
FOR (141)
    on left: 183 184, on right: 39
EXPR_START (142)
    on left: 185, on right: 171
EXPR_END (143)
    on left: 186, on right: 171
ARRAY_BODY (144)
    on left: 187 188 189, on right: 47
ARRAY_INDEX (145)
    on left: 190 191 192 193, on right: 194 195
MULTI_AR (146)
    on left: 194 195, on right: 44 58 59 61 64 187 188 189 195 203
    204
PLENTY (147)
    on left: 196 197, on right: 58 59 188 197 200
PLENTY_OLD (148)
    on left: 198 199 200, on right: 196 197 223
ENUM (149)
    on left: 201 202, on right: 198 202
MAKE (150)
    on left: 203 204, on right: 62 63 64 189
SLICE (151)
    on left: 205 206 207, on right: 50 65 66 67
MAPS (152)
    on left: 208, on right: 68 69
STRUCT (153)
    on left: 209, on right: 7 49
STRUCT_START (154)
    on left: 210 211, on right: 209
STRUCT_BODY (155)
    on left: 212 213 214 215, on right: 209 213 214 215
STRUCT_END (156)
    on left: 216, on right: 209
STRUCT_ENUM (157)
    on left: 217 218 219 220, on right: 218 220 221 222
STRUCT_FIELD (158)
    on left: 221 222 223, on right: 219 220 224 225
ST_EMBEDDED (159)
    on left: 224 225, on right: 70 71 72 225
END_SYMBOLS (160)
    on left: 226 227 228, on right: 1 2 3 37 107 108 109 110 131 143
    144 154 209 213 214 215 218 220 221 222 229 230
INTERFACE (161)
    on left: 229, on right: 8
INT_BODY (162)
    on left: 230, on right: 229
INT_END (163)
    on left: 231, on right: 229


State 0

    0 $accept: . START $end

    t_func     shift, and go to state 1
    t_import   shift, and go to state 2
    t_package  shift, and go to state 3
    t_type     shift, and go to state 4

    START         go to state 5
    GLOBAL        go to state 6
    PACKAGE       go to state 7
    IMPORT        go to state 8
    FUNC          go to state 9
    STRUCT        go to state 10
    STRUCT_START  go to state 11
    INTERFACE     go to state 12


State 1

   14 FUNC: t_func . t_id t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART

    t_id  shift, and go to state 13


State 2

   10 IMPORT: t_import . t_string
   11       | t_import . t_open_paren PARAM_IMPORT t_close_paren
   12       | t_import . t_open_paren t_enter PARAM_IMPORT t_close_paren
   13       | t_import . t_id t_string

    t_id          shift, and go to state 14
    t_string      shift, and go to state 15
    t_open_paren  shift, and go to state 16


State 3

    9 PACKAGE: t_package . t_id

    t_id  shift, and go to state 17


State 4

  210 STRUCT_START: t_type . t_id t_struct_const
  211             | t_type . t_id t_struct_const t_enter
  229 INTERFACE: t_type . t_id t_interface INT_BODY END_SYMBOLS INT_END

    t_id  shift, and go to state 18


State 5

    0 $accept: START . $end
    1 START: START . GLOBAL END_SYMBOLS
    3      | START . END_SYMBOLS

    $end         shift, and go to state 19
    t_func       shift, and go to state 1
    t_import     shift, and go to state 2
    t_package    shift, and go to state 3
    t_type       shift, and go to state 4
    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    GLOBAL        go to state 23
    PACKAGE       go to state 7
    IMPORT        go to state 8
    FUNC          go to state 9
    STRUCT        go to state 10
    STRUCT_START  go to state 11
    END_SYMBOLS   go to state 24
    INTERFACE     go to state 12


State 6

    2 START: GLOBAL . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 25


State 7

    4 GLOBAL: PACKAGE .

    $default  reduce using rule 4 (GLOBAL)


State 8

    5 GLOBAL: IMPORT .

    $default  reduce using rule 5 (GLOBAL)


State 9

    6 GLOBAL: FUNC .

    $default  reduce using rule 6 (GLOBAL)


State 10

    7 GLOBAL: STRUCT .

    $default  reduce using rule 7 (GLOBAL)


State 11

  209 STRUCT: STRUCT_START . STRUCT_BODY END_SYMBOLS STRUCT_END

    t_open_br  shift, and go to state 26

    STRUCT_BODY  go to state 27


State 12

    8 GLOBAL: INTERFACE .

    $default  reduce using rule 8 (GLOBAL)


State 13

   14 FUNC: t_func t_id . t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART

    t_open_paren  shift, and go to state 28


State 14

   13 IMPORT: t_import t_id . t_string

    t_string  shift, and go to state 29


State 15

   10 IMPORT: t_import t_string .

    $default  reduce using rule 10 (IMPORT)


State 16

   11 IMPORT: t_import t_open_paren . PARAM_IMPORT t_close_paren
   12       | t_import t_open_paren . t_enter PARAM_IMPORT t_close_paren

    t_id      shift, and go to state 30
    t_string  shift, and go to state 31
    t_enter   shift, and go to state 32

    PARAM_IMPORT  go to state 33


State 17

    9 PACKAGE: t_package t_id .

    $default  reduce using rule 9 (PACKAGE)


State 18

  210 STRUCT_START: t_type t_id . t_struct_const
  211             | t_type t_id . t_struct_const t_enter
  229 INTERFACE: t_type t_id . t_interface INT_BODY END_SYMBOLS INT_END

    t_interface     shift, and go to state 34
    t_struct_const  shift, and go to state 35


State 19

    0 $accept: START $end .

    $default  accept


State 20

  226 END_SYMBOLS: t_semicolon .

    $default  reduce using rule 226 (END_SYMBOLS)


State 21

  227 END_SYMBOLS: t_enter .

    $default  reduce using rule 227 (END_SYMBOLS)


State 22

  228 END_SYMBOLS: t_eof .

    $default  reduce using rule 228 (END_SYMBOLS)


State 23

    1 START: START GLOBAL . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 36


State 24

    3 START: START END_SYMBOLS .

    $default  reduce using rule 3 (START)


State 25

    2 START: GLOBAL END_SYMBOLS .

    $default  reduce using rule 2 (START)


State 26

  212 STRUCT_BODY: t_open_br .

    $default  reduce using rule 212 (STRUCT_BODY)


State 27

  209 STRUCT: STRUCT_START STRUCT_BODY . END_SYMBOLS STRUCT_END
  213 STRUCT_BODY: STRUCT_BODY . END_SYMBOLS t_id t_vtype
  214            | STRUCT_BODY . END_SYMBOLS t_id t_id
  215            | STRUCT_BODY . END_SYMBOLS t_id

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 37


State 28

   14 FUNC: t_func t_id t_open_paren . FUNC_PARAM t_close_paren FUNC_SECOND_PART

    t_id  shift, and go to state 38

    $default  reduce using rule 22 (FUNC_PARAM_FULFILL)

    FUNC_PARAM          go to state 39
    FUNC_PARAM_FULFILL  go to state 40


State 29

   13 IMPORT: t_import t_id t_string .

    $default  reduce using rule 13 (IMPORT)


State 30

  108 PARAM_IMPORT: t_id . t_string END_SYMBOLS

    t_string  shift, and go to state 41


State 31

  107 PARAM_IMPORT: t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 42


State 32

   12 IMPORT: t_import t_open_paren t_enter . PARAM_IMPORT t_close_paren

    t_id      shift, and go to state 30
    t_string  shift, and go to state 31

    PARAM_IMPORT  go to state 43


State 33

   11 IMPORT: t_import t_open_paren PARAM_IMPORT . t_close_paren
  109 PARAM_IMPORT: PARAM_IMPORT . t_string END_SYMBOLS
  110             | PARAM_IMPORT . t_id t_string END_SYMBOLS

    t_id           shift, and go to state 44
    t_string       shift, and go to state 45
    t_close_paren  shift, and go to state 46


State 34

  229 INTERFACE: t_type t_id t_interface . INT_BODY END_SYMBOLS INT_END

    t_open_br  shift, and go to state 47

    INT_BODY  go to state 48


State 35

  210 STRUCT_START: t_type t_id t_struct_const .
  211             | t_type t_id t_struct_const . t_enter

    t_enter  shift, and go to state 49

    $default  reduce using rule 210 (STRUCT_START)


State 36

    1 START: START GLOBAL END_SYMBOLS .

    $default  reduce using rule 1 (START)


State 37

  209 STRUCT: STRUCT_START STRUCT_BODY END_SYMBOLS . STRUCT_END
  213 STRUCT_BODY: STRUCT_BODY END_SYMBOLS . t_id t_vtype
  214            | STRUCT_BODY END_SYMBOLS . t_id t_id
  215            | STRUCT_BODY END_SYMBOLS . t_id

    t_id        shift, and go to state 50
    t_close_br  shift, and go to state 51

    STRUCT_END  go to state 52


State 38

   20 FUNC_PARAM_FULFILL: t_id . TYPE_AND_STRUCT
   21                   | t_id .

    t_vtype  shift, and go to state 53
    t_id     shift, and go to state 54

    $default  reduce using rule 21 (FUNC_PARAM_FULFILL)

    TYPE_AND_STRUCT  go to state 55


State 39

   14 FUNC: t_func t_id t_open_paren FUNC_PARAM . t_close_paren FUNC_SECOND_PART
   19 FUNC_PARAM: FUNC_PARAM . t_comma FUNC_PARAM_FULFILL

    t_comma        shift, and go to state 56
    t_close_paren  shift, and go to state 57


State 40

   18 FUNC_PARAM: FUNC_PARAM_FULFILL .

    $default  reduce using rule 18 (FUNC_PARAM)


State 41

  108 PARAM_IMPORT: t_id t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 58


State 42

  107 PARAM_IMPORT: t_string END_SYMBOLS .

    $default  reduce using rule 107 (PARAM_IMPORT)


State 43

   12 IMPORT: t_import t_open_paren t_enter PARAM_IMPORT . t_close_paren
  109 PARAM_IMPORT: PARAM_IMPORT . t_string END_SYMBOLS
  110             | PARAM_IMPORT . t_id t_string END_SYMBOLS

    t_id           shift, and go to state 44
    t_string       shift, and go to state 45
    t_close_paren  shift, and go to state 59


State 44

  110 PARAM_IMPORT: PARAM_IMPORT t_id . t_string END_SYMBOLS

    t_string  shift, and go to state 60


State 45

  109 PARAM_IMPORT: PARAM_IMPORT t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 61


State 46

   11 IMPORT: t_import t_open_paren PARAM_IMPORT t_close_paren .

    $default  reduce using rule 11 (IMPORT)


State 47

  230 INT_BODY: t_open_br . END_SYMBOLS t_id t_open_paren t_close_paren

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 62


State 48

  229 INTERFACE: t_type t_id t_interface INT_BODY . END_SYMBOLS INT_END

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 63


State 49

  211 STRUCT_START: t_type t_id t_struct_const t_enter .

    $default  reduce using rule 211 (STRUCT_START)


State 50

  213 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id . t_vtype
  214            | STRUCT_BODY END_SYMBOLS t_id . t_id
  215            | STRUCT_BODY END_SYMBOLS t_id .

    t_vtype  shift, and go to state 64
    t_id     shift, and go to state 65

    $default  reduce using rule 215 (STRUCT_BODY)


State 51

  216 STRUCT_END: t_close_br .

    $default  reduce using rule 216 (STRUCT_END)


State 52

  209 STRUCT: STRUCT_START STRUCT_BODY END_SYMBOLS STRUCT_END .

    $default  reduce using rule 209 (STRUCT)


State 53

   32 TYPE_AND_STRUCT: t_vtype .

    $default  reduce using rule 32 (TYPE_AND_STRUCT)


State 54

   33 TYPE_AND_STRUCT: t_id .

    $default  reduce using rule 33 (TYPE_AND_STRUCT)


State 55

   20 FUNC_PARAM_FULFILL: t_id TYPE_AND_STRUCT .

    $default  reduce using rule 20 (FUNC_PARAM_FULFILL)


State 56

   19 FUNC_PARAM: FUNC_PARAM t_comma . FUNC_PARAM_FULFILL

    t_id  shift, and go to state 38

    $default  reduce using rule 22 (FUNC_PARAM_FULFILL)

    FUNC_PARAM_FULFILL  go to state 66


State 57

   14 FUNC: t_func t_id t_open_paren FUNC_PARAM t_close_paren . FUNC_SECOND_PART

    t_vtype       shift, and go to state 53
    t_func        shift, and go to state 67
    t_id          shift, and go to state 54
    t_open_br     shift, and go to state 68
    t_open_paren  shift, and go to state 69

    FUNC_SECOND_PART           go to state 70
    FUNC_RETURN_VALUE          go to state 71
    FUNC_RETURN_VALUE_FULFILL  go to state 72
    TYPE_AND_STRUCT            go to state 73
    BODY                       go to state 74
    BODY_START                 go to state 75
    ABSORB_EMPTYNESS           go to state 76


State 58

  108 PARAM_IMPORT: t_id t_string END_SYMBOLS .

    $default  reduce using rule 108 (PARAM_IMPORT)


State 59

   12 IMPORT: t_import t_open_paren t_enter PARAM_IMPORT t_close_paren .

    $default  reduce using rule 12 (IMPORT)


State 60

  110 PARAM_IMPORT: PARAM_IMPORT t_id t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 77


State 61

  109 PARAM_IMPORT: PARAM_IMPORT t_string END_SYMBOLS .

    $default  reduce using rule 109 (PARAM_IMPORT)


State 62

  230 INT_BODY: t_open_br END_SYMBOLS . t_id t_open_paren t_close_paren

    t_id  shift, and go to state 78


State 63

  229 INTERFACE: t_type t_id t_interface INT_BODY END_SYMBOLS . INT_END

    t_close_br  shift, and go to state 79

    INT_END  go to state 80


State 64

  213 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id t_vtype .

    $default  reduce using rule 213 (STRUCT_BODY)


State 65

  214 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id t_id .

    $default  reduce using rule 214 (STRUCT_BODY)


State 66

   19 FUNC_PARAM: FUNC_PARAM t_comma FUNC_PARAM_FULFILL .

    $default  reduce using rule 19 (FUNC_PARAM)


State 67

   30 FUNC_RETURN_VALUE_FULFILL: t_func . t_open_paren TYPE_AND_STRUCT t_close_paren
   31                          | t_func . t_open_paren t_close_paren

    t_open_paren  shift, and go to state 81


State 68

  130 ABSORB_EMPTYNESS: t_open_br .

    $default  reduce using rule 130 (ABSORB_EMPTYNESS)


State 69

   17 FUNC_SECOND_PART: t_open_paren . FUNC_PARAM_SECOND t_close_paren BODY

    t_vtype  shift, and go to state 53
    t_id     shift, and go to state 82

    FUNC_PARAM_SECOND          go to state 83
    FUNC_PARAM_FULFILL_SECOND  go to state 84
    TYPE_AND_STRUCT            go to state 85


State 70

   14 FUNC: t_func t_id t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART .

    $default  reduce using rule 14 (FUNC)


State 71

   16 FUNC_SECOND_PART: FUNC_RETURN_VALUE . BODY
   28 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE . FUNC_RETURN_VALUE_FULFILL

    t_vtype    shift, and go to state 53
    t_func     shift, and go to state 67
    t_id       shift, and go to state 54
    t_open_br  shift, and go to state 68

    FUNC_RETURN_VALUE_FULFILL  go to state 86
    TYPE_AND_STRUCT            go to state 73
    BODY                       go to state 87
    BODY_START                 go to state 75
    ABSORB_EMPTYNESS           go to state 76


State 72

   27 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE_FULFILL .

    $default  reduce using rule 27 (FUNC_RETURN_VALUE)


State 73

   29 FUNC_RETURN_VALUE_FULFILL: TYPE_AND_STRUCT .

    $default  reduce using rule 29 (FUNC_RETURN_VALUE_FULFILL)


State 74

   15 FUNC_SECOND_PART: BODY .

    $default  reduce using rule 15 (FUNC_SECOND_PART)


State 75

   34 BODY: BODY_START . BODY_END
   37 BODY_START: BODY_START . BODY_FILLING END_SYMBOLS

    t_defer      shift, and go to state 88
    t_var        shift, and go to state 89
    t_if         shift, and go to state 90
    t_switch     shift, and go to state 91
    t_type       shift, and go to state 92
    t_for        shift, and go to state 93
    t_goto       shift, and go to state 94
    t_return     shift, and go to state 95
    t_id         shift, and go to state 96
    t_close_br   shift, and go to state 97
    t_open_sq    shift, and go to state 98
    t_pointer    shift, and go to state 99
    t_ampersand  shift, and go to state 100

    BODY_END        go to state 101
    BODY_FILLING    go to state 102
    VAR             go to state 103
    DEFER           go to state 104
    FUNC_CALL       go to state 105
    METHOD          go to state 106
    METHOD_FULFILL  go to state 107
    POINTER         go to state 108
    GOTO            go to state 109
    LABEL           go to state 110
    SWITCH          go to state 111
    IF              go to state 112
    IF_FIRST        go to state 113
    RETURN          go to state 114
    SHORT_EXPR      go to state 115
    FOR             go to state 116
    ARRAY_BODY      go to state 117
    ARRAY_INDEX     go to state 118
    MULTI_AR        go to state 119
    SLICE           go to state 120
    STRUCT          go to state 121
    STRUCT_START    go to state 11


State 76

   36 BODY_START: ABSORB_EMPTYNESS .
  131 ABSORB_EMPTYNESS: ABSORB_EMPTYNESS . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    $default  reduce using rule 36 (BODY_START)

    END_SYMBOLS  go to state 122


State 77

  110 PARAM_IMPORT: PARAM_IMPORT t_id t_string END_SYMBOLS .

    $default  reduce using rule 110 (PARAM_IMPORT)


State 78

  230 INT_BODY: t_open_br END_SYMBOLS t_id . t_open_paren t_close_paren

    t_open_paren  shift, and go to state 123


State 79

  231 INT_END: t_close_br .

    $default  reduce using rule 231 (INT_END)


State 80

  229 INTERFACE: t_type t_id t_interface INT_BODY END_SYMBOLS INT_END .

    $default  reduce using rule 229 (INTERFACE)


State 81

   30 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren . TYPE_AND_STRUCT t_close_paren
   31                          | t_func t_open_paren . t_close_paren

    t_vtype        shift, and go to state 53
    t_id           shift, and go to state 54
    t_close_paren  shift, and go to state 124

    TYPE_AND_STRUCT  go to state 125


State 82

   25 FUNC_PARAM_FULFILL_SECOND: t_id . TYPE_AND_STRUCT
   33 TYPE_AND_STRUCT: t_id .

    t_vtype  shift, and go to state 53
    t_id     shift, and go to state 54

    $default  reduce using rule 33 (TYPE_AND_STRUCT)

    TYPE_AND_STRUCT  go to state 126


State 83

   17 FUNC_SECOND_PART: t_open_paren FUNC_PARAM_SECOND . t_close_paren BODY
   24 FUNC_PARAM_SECOND: FUNC_PARAM_SECOND . t_comma FUNC_PARAM_FULFILL_SECOND

    t_comma        shift, and go to state 127
    t_close_paren  shift, and go to state 128


State 84

   23 FUNC_PARAM_SECOND: FUNC_PARAM_FULFILL_SECOND .

    $default  reduce using rule 23 (FUNC_PARAM_SECOND)


State 85

   26 FUNC_PARAM_FULFILL_SECOND: TYPE_AND_STRUCT .

    $default  reduce using rule 26 (FUNC_PARAM_FULFILL_SECOND)


State 86

   28 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE FUNC_RETURN_VALUE_FULFILL .

    $default  reduce using rule 28 (FUNC_RETURN_VALUE)


State 87

   16 FUNC_SECOND_PART: FUNC_RETURN_VALUE BODY .

    $default  reduce using rule 16 (FUNC_SECOND_PART)


State 88

   78 DEFER: t_defer . FUNC_CALL

    t_id  shift, and go to state 129

    FUNC_CALL       go to state 130
    METHOD          go to state 131
    METHOD_FULFILL  go to state 107


State 89

   53 VAR: t_var . t_id ASSIGNMENT EXPR
   54    | t_var . t_id ASSIGNMENT EXPR t_vtype
   55    | t_var . t_id ASSIGNMENT BOOLEAN
   59    | t_var . t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   62    | t_var . t_id ASSIGNMENT MAKE
   67    | t_var . t_id ASSIGNMENT SLICE
   68    | t_var . t_id MAPS
   70    | t_var . t_id t_id ASSIGNMENT t_id ST_EMBEDDED
   71    | t_var . t_id ASSIGNMENT t_id ST_EMBEDDED
   75    | t_var . t_id POINTER
   76    | t_var . t_id POINTER ASSIGNMENT EXPR
  187 ARRAY_BODY: t_var . t_id MULTI_AR t_vtype
  188           | t_var . t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  189           | t_var . t_id MULTI_AR t_vtype ASSIGNMENT MAKE

    t_id  shift, and go to state 132


State 90

  150 IF_FIRST: t_if . CONDITION BODY_FOR_LOOP
  151         | t_if . INIT_STATE t_semicolon CONDITION BODY_FOR_LOOP

    t_var               shift, and go to state 133
    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 136
    t_string            shift, and go to state 137
    t_open_paren        shift, and go to state 138
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_true              shift, and go to state 141
    t_false             shift, and go to state 142
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    t_open_br  reduce using rule 180 (CONDITION)
    $default   reduce using rule 176 (INIT_STATE)

    VAR             go to state 143
    BOOLEAN         go to state 144
    FUNC_CALL       go to state 145
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 148
    METHOD_FULFILL  go to state 107
    POINTER         go to state 149
    VALUE           go to state 150
    EXPR            go to state 151
    INIT_STATE      go to state 152
    CONDITION       go to state 153
    EXPR_START      go to state 154


State 91

  123 SWITCH: t_switch . INIT_STATE t_semicolon EXPR SWITCH_BODY
  124       | t_switch . EXPR SWITCH_BODY
  125       | t_switch . SWITCH_BODY

    t_var               shift, and go to state 133
    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 136
    t_string            shift, and go to state 137
    t_open_br           shift, and go to state 68
    t_open_paren        shift, and go to state 138
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    $default  reduce using rule 176 (INIT_STATE)

    VAR                             go to state 143
    FUNC_CALL                       go to state 145
    SHIFT                           go to state 146
    SHIFT_AC                        go to state 147
    METHOD                          go to state 148
    METHOD_FULFILL                  go to state 107
    POINTER                         go to state 149
    VALUE                           go to state 150
    SWITCH_BODY                     go to state 155
    SWITCH_BODY_START               go to state 156
    ABSORB_EMPTYNESS                go to state 157
    SWITCH_BODY_START_WITH_DEFAULT  go to state 158
    EXPR                            go to state 159
    INIT_STATE                      go to state 160
    EXPR_START                      go to state 154


State 92

  210 STRUCT_START: t_type . t_id t_struct_const
  211             | t_type . t_id t_struct_const t_enter

    t_id  shift, and go to state 161


State 93

  183 FOR: t_for . INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY_FOR_LOOP
  184    | t_for . CONDITION BODY_FOR_LOOP

    t_var               shift, and go to state 133
    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 136
    t_string            shift, and go to state 137
    t_open_paren        shift, and go to state 138
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_true              shift, and go to state 141
    t_false             shift, and go to state 142
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    t_open_br  reduce using rule 180 (CONDITION)
    $default   reduce using rule 176 (INIT_STATE)

    VAR             go to state 143
    BOOLEAN         go to state 144
    FUNC_CALL       go to state 145
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 148
    METHOD_FULFILL  go to state 107
    POINTER         go to state 149
    VALUE           go to state 150
    EXPR            go to state 151
    INIT_STATE      go to state 162
    CONDITION       go to state 163
    EXPR_START      go to state 154


State 94

  121 GOTO: t_goto . t_id

    t_id  shift, and go to state 164


State 95

  165 RETURN: t_return . EXPR
  166       | t_return . EXPR MANY_RETURN_START MANY_RETURN_START_END

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 165
    t_string            shift, and go to state 137
    t_open_paren        shift, and go to state 138
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 150
    EXPR            go to state 169
    EXPR_START      go to state 154


State 96

   56 VAR: t_id . SHORT_ASSIGN EXPR
   57    | t_id . ASSIGNMENT EXPR
   58    | t_id . SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   60    | t_id . SHORT_ASSIGN BOOLEAN
   61    | t_id . MULTI_AR ASSIGNMENT EXPR
   63    | t_id . SHORT_ASSIGN MAKE
   64    | t_id . MULTI_AR ASSIGNMENT MAKE
   65    | t_id . SHORT_ASSIGN SLICE
   66    | t_id . ASSIGNMENT SLICE
   69    | t_id . SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   72    | t_id . SHORT_ASSIGN t_id ST_EMBEDDED
   86 FUNC_CALL: t_id . PARAM
  102 METHOD_FULFILL: t_id .
  122 LABEL: t_id . t_colon
  173 SHORT_EXPR: t_id . t_short_expr t_id
  205 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  206      | t_id . t_open_sq t_colon VALUE t_close_sq
  207      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_vtype       shift, and go to state 170
    t_short_dec   shift, and go to state 171
    t_comma       shift, and go to state 172
    t_equality    shift, and go to state 173
    t_open_paren  shift, and go to state 174
    t_open_sq     shift, and go to state 175
    t_colon       shift, and go to state 176
    t_short_expr  shift, and go to state 177

    $default  reduce using rule 102 (METHOD_FULFILL)

    ASSIGNMENT    go to state 178
    SHORT_ASSIGN  go to state 179
    PARAM         go to state 180
    PARAM_START   go to state 181
    ARRAY_INDEX   go to state 118
    MULTI_AR      go to state 182


State 97

   35 BODY_END: t_close_br .

    $default  reduce using rule 35 (BODY_END)


State 98

  190 ARRAY_INDEX: t_open_sq . t_int_const t_close_sq
  191            | t_open_sq . t_id t_close_sq
  192            | t_open_sq . t_string t_close_sq
  193            | t_open_sq . t_close_sq

    t_int_const  shift, and go to state 183
    t_id         shift, and go to state 184
    t_string     shift, and go to state 185
    t_close_sq   shift, and go to state 186


State 99

  104 POINTER: t_pointer . t_id
  105        | t_pointer . t_vtype

    t_vtype  shift, and go to state 187
    t_id     shift, and go to state 188


State 100

  106 POINTER: t_ampersand . t_id

    t_id  shift, and go to state 189


State 101

   34 BODY: BODY_START BODY_END .

    $default  reduce using rule 34 (BODY)


State 102

   37 BODY_START: BODY_START BODY_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 190


State 103

   38 BODY_FILLING: VAR .

    $default  reduce using rule 38 (BODY_FILLING)


State 104

   51 BODY_FILLING: DEFER .

    $default  reduce using rule 51 (BODY_FILLING)


State 105

   45 BODY_FILLING: FUNC_CALL .
  103 METHOD_FULFILL: FUNC_CALL .

    t_dot     reduce using rule 103 (METHOD_FULFILL)
    $default  reduce using rule 45 (BODY_FILLING)


State 106

   52 BODY_FILLING: METHOD .
   73 VAR: METHOD . ASSIGNMENT VALUE
   87 FUNC_CALL: METHOD . PARAM
  101 METHOD: METHOD . t_dot METHOD_FULFILL

    t_vtype       shift, and go to state 170
    t_comma       shift, and go to state 191
    t_equality    shift, and go to state 173
    t_open_paren  shift, and go to state 174
    t_dot         shift, and go to state 192

    $default  reduce using rule 52 (BODY_FILLING)

    ASSIGNMENT   go to state 193
    PARAM        go to state 194
    PARAM_START  go to state 181


State 107

  100 METHOD: METHOD_FULFILL . t_dot METHOD_FULFILL

    t_dot  shift, and go to state 195


State 108

   74 VAR: POINTER . ASSIGNMENT EXPR

    t_vtype     shift, and go to state 170
    t_comma     shift, and go to state 191
    t_equality  shift, and go to state 173

    ASSIGNMENT  go to state 196


State 109

   41 BODY_FILLING: GOTO .

    $default  reduce using rule 41 (BODY_FILLING)


State 110

   42 BODY_FILLING: LABEL .

    $default  reduce using rule 42 (BODY_FILLING)


State 111

   40 BODY_FILLING: SWITCH .

    $default  reduce using rule 40 (BODY_FILLING)


State 112

   43 BODY_FILLING: IF .

    $default  reduce using rule 43 (BODY_FILLING)


State 113

  146 IF: IF_FIRST . MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD
  147   | IF_FIRST . MULTY_ELSEIF_SECOND
  148   | IF_FIRST . MULTY_ELSE_THIRD
  149   | IF_FIRST .

    t_else  shift, and go to state 197

    $default  reduce using rule 149 (IF)

    MULTY_ELSEIF_SECOND  go to state 198
    ELSEIF_SECOND        go to state 199
    MULTY_ELSE_THIRD     go to state 200
    ELSE_THIRD           go to state 201


State 114

   48 BODY_FILLING: RETURN .

    $default  reduce using rule 48 (BODY_FILLING)


State 115

   46 BODY_FILLING: SHORT_EXPR .

    $default  reduce using rule 46 (BODY_FILLING)


State 116

   39 BODY_FILLING: FOR .

    $default  reduce using rule 39 (BODY_FILLING)


State 117

   47 BODY_FILLING: ARRAY_BODY .

    $default  reduce using rule 47 (BODY_FILLING)


State 118

  194 MULTI_AR: ARRAY_INDEX .
  195         | ARRAY_INDEX . MULTI_AR

    t_open_sq  shift, and go to state 98

    $default  reduce using rule 194 (MULTI_AR)

    ARRAY_INDEX  go to state 118
    MULTI_AR     go to state 202


State 119

   44 BODY_FILLING: MULTI_AR .

    $default  reduce using rule 44 (BODY_FILLING)


State 120

   50 BODY_FILLING: SLICE .

    $default  reduce using rule 50 (BODY_FILLING)


State 121

   49 BODY_FILLING: STRUCT .

    $default  reduce using rule 49 (BODY_FILLING)


State 122

  131 ABSORB_EMPTYNESS: ABSORB_EMPTYNESS END_SYMBOLS .

    $default  reduce using rule 131 (ABSORB_EMPTYNESS)


State 123

  230 INT_BODY: t_open_br END_SYMBOLS t_id t_open_paren . t_close_paren

    t_close_paren  shift, and go to state 203


State 124

   31 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren t_close_paren .

    $default  reduce using rule 31 (FUNC_RETURN_VALUE_FULFILL)


State 125

   30 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren TYPE_AND_STRUCT . t_close_paren

    t_close_paren  shift, and go to state 204


State 126

   25 FUNC_PARAM_FULFILL_SECOND: t_id TYPE_AND_STRUCT .

    $default  reduce using rule 25 (FUNC_PARAM_FULFILL_SECOND)


State 127

   24 FUNC_PARAM_SECOND: FUNC_PARAM_SECOND t_comma . FUNC_PARAM_FULFILL_SECOND

    t_vtype  shift, and go to state 53
    t_id     shift, and go to state 82

    FUNC_PARAM_FULFILL_SECOND  go to state 205
    TYPE_AND_STRUCT            go to state 85


State 128

   17 FUNC_SECOND_PART: t_open_paren FUNC_PARAM_SECOND t_close_paren . BODY

    t_open_br  shift, and go to state 68

    BODY              go to state 206
    BODY_START        go to state 75
    ABSORB_EMPTYNESS  go to state 76


State 129

   86 FUNC_CALL: t_id . PARAM
  102 METHOD_FULFILL: t_id .

    t_open_paren  shift, and go to state 174

    t_open_paren  [reduce using rule 102 (METHOD_FULFILL)]
    $default      reduce using rule 102 (METHOD_FULFILL)

    PARAM        go to state 180
    PARAM_START  go to state 181


State 130

   78 DEFER: t_defer FUNC_CALL .
  103 METHOD_FULFILL: FUNC_CALL .

    t_dot     reduce using rule 103 (METHOD_FULFILL)
    $default  reduce using rule 78 (DEFER)


State 131

   87 FUNC_CALL: METHOD . PARAM
  101 METHOD: METHOD . t_dot METHOD_FULFILL

    t_open_paren  shift, and go to state 174
    t_dot         shift, and go to state 192

    PARAM        go to state 194
    PARAM_START  go to state 181


State 132

   53 VAR: t_var t_id . ASSIGNMENT EXPR
   54    | t_var t_id . ASSIGNMENT EXPR t_vtype
   55    | t_var t_id . ASSIGNMENT BOOLEAN
   59    | t_var t_id . ASSIGNMENT MULTI_AR t_vtype PLENTY
   62    | t_var t_id . ASSIGNMENT MAKE
   67    | t_var t_id . ASSIGNMENT SLICE
   68    | t_var t_id . MAPS
   70    | t_var t_id . t_id ASSIGNMENT t_id ST_EMBEDDED
   71    | t_var t_id . ASSIGNMENT t_id ST_EMBEDDED
   75    | t_var t_id . POINTER
   76    | t_var t_id . POINTER ASSIGNMENT EXPR
  187 ARRAY_BODY: t_var t_id . MULTI_AR t_vtype
  188           | t_var t_id . MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  189           | t_var t_id . MULTI_AR t_vtype ASSIGNMENT MAKE

    t_vtype      shift, and go to state 170
    t_map        shift, and go to state 207
    t_id         shift, and go to state 208
    t_comma      shift, and go to state 191
    t_equality   shift, and go to state 173
    t_open_sq    shift, and go to state 98
    t_pointer    shift, and go to state 99
    t_ampersand  shift, and go to state 100

    ASSIGNMENT   go to state 209
    POINTER      go to state 210
    ARRAY_INDEX  go to state 118
    MULTI_AR     go to state 211
    MAPS         go to state 212


State 133

   53 VAR: t_var . t_id ASSIGNMENT EXPR
   54    | t_var . t_id ASSIGNMENT EXPR t_vtype
   55    | t_var . t_id ASSIGNMENT BOOLEAN
   59    | t_var . t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   62    | t_var . t_id ASSIGNMENT MAKE
   67    | t_var . t_id ASSIGNMENT SLICE
   68    | t_var . t_id MAPS
   70    | t_var . t_id t_id ASSIGNMENT t_id ST_EMBEDDED
   71    | t_var . t_id ASSIGNMENT t_id ST_EMBEDDED
   75    | t_var . t_id POINTER
   76    | t_var . t_id POINTER ASSIGNMENT EXPR

    t_id  shift, and go to state 213


State 134

   99 SHIFT_AC: t_int_const .
  111 VALUE: t_int_const .

    t_shift_const  reduce using rule 99 (SHIFT_AC)
    $default       reduce using rule 111 (VALUE)


State 135

  112 VALUE: t_float_const .

    $default  reduce using rule 112 (VALUE)


State 136

   56 VAR: t_id . SHORT_ASSIGN EXPR
   57    | t_id . ASSIGNMENT EXPR
   58    | t_id . SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   60    | t_id . SHORT_ASSIGN BOOLEAN
   61    | t_id . MULTI_AR ASSIGNMENT EXPR
   63    | t_id . SHORT_ASSIGN MAKE
   64    | t_id . MULTI_AR ASSIGNMENT MAKE
   65    | t_id . SHORT_ASSIGN SLICE
   66    | t_id . ASSIGNMENT SLICE
   69    | t_id . SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   72    | t_id . SHORT_ASSIGN t_id ST_EMBEDDED
   86 FUNC_CALL: t_id . PARAM
   98 SHIFT_AC: t_id .
  102 METHOD_FULFILL: t_id .
  113 VALUE: t_id .

    t_vtype       shift, and go to state 170
    t_short_dec   shift, and go to state 171
    t_comma       shift, and go to state 172
    t_equality    shift, and go to state 173
    t_open_paren  shift, and go to state 174
    t_open_sq     shift, and go to state 98

    t_shift_const  reduce using rule 98 (SHIFT_AC)
    t_dot          reduce using rule 102 (METHOD_FULFILL)
    $default       reduce using rule 113 (VALUE)

    ASSIGNMENT    go to state 178
    SHORT_ASSIGN  go to state 179
    PARAM         go to state 180
    PARAM_START   go to state 181
    ARRAY_INDEX   go to state 118
    MULTI_AR      go to state 182


State 137

  114 VALUE: t_string .

    $default  reduce using rule 114 (VALUE)


State 138

  185 EXPR_START: t_open_paren .

    $default  reduce using rule 185 (EXPR_START)


State 139

  115 VALUE: t_rune .

    $default  reduce using rule 115 (VALUE)


State 140

  116 VALUE: t_blank_identifier .

    $default  reduce using rule 116 (VALUE)


State 141

  178 CONDITION: t_true .

    $default  reduce using rule 178 (CONDITION)


State 142

  179 CONDITION: t_false .

    $default  reduce using rule 179 (CONDITION)


State 143

  174 INIT_STATE: VAR .

    $default  reduce using rule 174 (INIT_STATE)


State 144

  177 CONDITION: BOOLEAN .

    $default  reduce using rule 177 (CONDITION)


State 145

  103 METHOD_FULFILL: FUNC_CALL .
  117 VALUE: FUNC_CALL .
  175 INIT_STATE: FUNC_CALL .

    t_semicolon  reduce using rule 175 (INIT_STATE)
    t_dot        reduce using rule 103 (METHOD_FULFILL)
    $default     reduce using rule 117 (VALUE)


State 146

  118 VALUE: SHIFT .

    $default  reduce using rule 118 (VALUE)


State 147

   97 SHIFT: SHIFT_AC . t_shift_const SHIFT_AC

    t_shift_const  shift, and go to state 214


State 148

   73 VAR: METHOD . ASSIGNMENT VALUE
   87 FUNC_CALL: METHOD . PARAM
  101 METHOD: METHOD . t_dot METHOD_FULFILL
  120 VALUE: METHOD .

    t_vtype       shift, and go to state 170
    t_comma       shift, and go to state 191
    t_equality    shift, and go to state 173
    t_open_paren  shift, and go to state 174
    t_dot         shift, and go to state 192

    $default  reduce using rule 120 (VALUE)

    ASSIGNMENT   go to state 193
    PARAM        go to state 194
    PARAM_START  go to state 181


State 149

   74 VAR: POINTER . ASSIGNMENT EXPR
  119 VALUE: POINTER .

    t_vtype     shift, and go to state 170
    t_comma     shift, and go to state 191
    t_equality  shift, and go to state 173

    $default  reduce using rule 119 (VALUE)

    ASSIGNMENT  go to state 196


State 150

  172 EXPR: VALUE .

    $default  reduce using rule 172 (EXPR)


State 151

   77 BOOLEAN: EXPR . t_bool EXPR
  170 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 215
    t_bool  shift, and go to state 216


State 152

  151 IF_FIRST: t_if INIT_STATE . t_semicolon CONDITION BODY_FOR_LOOP

    t_semicolon  shift, and go to state 217


State 153

  150 IF_FIRST: t_if CONDITION . BODY_FOR_LOOP

    t_open_br  shift, and go to state 68

    ABSORB_EMPTYNESS     go to state 218
    BODY_FOR_LOOP        go to state 219
    BODY_FOR_LOOP_START  go to state 220


State 154

  171 EXPR: EXPR_START . EXPR EXPR_END

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 165
    t_string            shift, and go to state 137
    t_open_paren        shift, and go to state 138
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 150
    EXPR            go to state 221
    EXPR_START      go to state 154


State 155

  125 SWITCH: t_switch SWITCH_BODY .

    $default  reduce using rule 125 (SWITCH)


State 156

  126 SWITCH_BODY: SWITCH_BODY_START . SWITCH_BODY_END
  129 SWITCH_BODY_START: SWITCH_BODY_START . CASE
  132 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START . DEFAULT

    t_case      shift, and go to state 222
    t_default   shift, and go to state 223
    t_close_br  shift, and go to state 224

    CASE             go to state 225
    DEFAULT          go to state 226
    SWITCH_BODY_END  go to state 227


State 157

  128 SWITCH_BODY_START: ABSORB_EMPTYNESS .
  131 ABSORB_EMPTYNESS: ABSORB_EMPTYNESS . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    $default  reduce using rule 128 (SWITCH_BODY_START)

    END_SYMBOLS  go to state 122


State 158

  127 SWITCH_BODY: SWITCH_BODY_START_WITH_DEFAULT . SWITCH_BODY_END
  133 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START_WITH_DEFAULT . CASE

    t_case      shift, and go to state 222
    t_close_br  shift, and go to state 224

    CASE             go to state 228
    SWITCH_BODY_END  go to state 229


State 159

  124 SWITCH: t_switch EXPR . SWITCH_BODY
  170 EXPR: EXPR . t_sign VALUE

    t_open_br  shift, and go to state 68
    t_sign     shift, and go to state 215

    SWITCH_BODY                     go to state 230
    SWITCH_BODY_START               go to state 156
    ABSORB_EMPTYNESS                go to state 157
    SWITCH_BODY_START_WITH_DEFAULT  go to state 158


State 160

  123 SWITCH: t_switch INIT_STATE . t_semicolon EXPR SWITCH_BODY

    t_semicolon  shift, and go to state 231


State 161

  210 STRUCT_START: t_type t_id . t_struct_const
  211             | t_type t_id . t_struct_const t_enter

    t_struct_const  shift, and go to state 35


State 162

  183 FOR: t_for INIT_STATE . t_semicolon CONDITION t_semicolon POST_STATE BODY_FOR_LOOP

    t_semicolon  shift, and go to state 232


State 163

  184 FOR: t_for CONDITION . BODY_FOR_LOOP

    t_open_br  shift, and go to state 68

    ABSORB_EMPTYNESS     go to state 218
    BODY_FOR_LOOP        go to state 233
    BODY_FOR_LOOP_START  go to state 220


State 164

  121 GOTO: t_goto t_id .

    $default  reduce using rule 121 (GOTO)


State 165

   86 FUNC_CALL: t_id . PARAM
   98 SHIFT_AC: t_id .
  102 METHOD_FULFILL: t_id .
  113 VALUE: t_id .

    t_open_paren  shift, and go to state 174

    t_shift_const  reduce using rule 98 (SHIFT_AC)
    t_dot          reduce using rule 102 (METHOD_FULFILL)
    $default       reduce using rule 113 (VALUE)

    PARAM        go to state 180
    PARAM_START  go to state 181


State 166

  103 METHOD_FULFILL: FUNC_CALL .
  117 VALUE: FUNC_CALL .

    t_dot     reduce using rule 103 (METHOD_FULFILL)
    $default  reduce using rule 117 (VALUE)


State 167

   87 FUNC_CALL: METHOD . PARAM
  101 METHOD: METHOD . t_dot METHOD_FULFILL
  120 VALUE: METHOD .

    t_open_paren  shift, and go to state 174
    t_dot         shift, and go to state 192

    $default  reduce using rule 120 (VALUE)

    PARAM        go to state 194
    PARAM_START  go to state 181


State 168

  119 VALUE: POINTER .

    $default  reduce using rule 119 (VALUE)


State 169

  165 RETURN: t_return EXPR .
  166       | t_return EXPR . MANY_RETURN_START MANY_RETURN_START_END
  170 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 215
    t_comma  shift, and go to state 234

    $default  reduce using rule 165 (RETURN)

    MANY_RETURN_START  go to state 235


State 170

   79 ASSIGNMENT: t_vtype . t_equality

    t_equality  shift, and go to state 236


State 171

   83 SHORT_ASSIGN: t_short_dec .

    $default  reduce using rule 83 (SHORT_ASSIGN)


State 172

   81 ASSIGNMENT: t_comma . t_id ASSIGNMENT EXPR t_comma
   82           | t_comma . t_id ASSIGNMENT BOOLEAN t_comma
   84 SHORT_ASSIGN: t_comma . t_id SHORT_ASSIGN EXPR t_comma
   85             | t_comma . t_id SHORT_ASSIGN BOOLEAN t_comma

    t_id  shift, and go to state 237


State 173

   80 ASSIGNMENT: t_equality .

    $default  reduce using rule 80 (ASSIGNMENT)


State 174

   89 PARAM: t_open_paren . t_close_paren
   90 PARAM_START: t_open_paren .

    t_close_paren  shift, and go to state 238

    $default  reduce using rule 90 (PARAM_START)


State 175

  190 ARRAY_INDEX: t_open_sq . t_int_const t_close_sq
  191            | t_open_sq . t_id t_close_sq
  192            | t_open_sq . t_string t_close_sq
  193            | t_open_sq . t_close_sq
  205 SLICE: t_id t_open_sq . VALUE t_colon VALUE t_close_sq
  206      | t_id t_open_sq . t_colon VALUE t_close_sq
  207      | t_id t_open_sq . VALUE t_colon t_close_sq

    t_int_const         shift, and go to state 239
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 240
    t_string            shift, and go to state 241
    t_close_sq          shift, and go to state 186
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_colon             shift, and go to state 242
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 243


State 176

  122 LABEL: t_id t_colon .

    $default  reduce using rule 122 (LABEL)


State 177

  173 SHORT_EXPR: t_id t_short_expr . t_id

    t_id  shift, and go to state 244


State 178

   57 VAR: t_id ASSIGNMENT . EXPR
   66    | t_id ASSIGNMENT . SLICE

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 245
    t_string            shift, and go to state 137
    t_open_paren        shift, and go to state 138
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 150
    EXPR            go to state 246
    EXPR_START      go to state 154
    SLICE           go to state 247


State 179

   56 VAR: t_id SHORT_ASSIGN . EXPR
   58    | t_id SHORT_ASSIGN . MULTI_AR t_vtype PLENTY
   60    | t_id SHORT_ASSIGN . BOOLEAN
   63    | t_id SHORT_ASSIGN . MAKE
   65    | t_id SHORT_ASSIGN . SLICE
   69    | t_id SHORT_ASSIGN . t_make t_open_paren MAPS t_close_paren
   72    | t_id SHORT_ASSIGN . t_id ST_EMBEDDED

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 248
    t_string            shift, and go to state 137
    t_open_paren        shift, and go to state 138
    t_open_sq           shift, and go to state 98
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_make              shift, and go to state 249
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    BOOLEAN         go to state 250
    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 150
    EXPR            go to state 251
    EXPR_START      go to state 154
    ARRAY_INDEX     go to state 118
    MULTI_AR        go to state 252
    MAKE            go to state 253
    SLICE           go to state 254


State 180

   86 FUNC_CALL: t_id PARAM .

    $default  reduce using rule 86 (FUNC_CALL)


State 181

   88 PARAM: PARAM_START . PARAM_END
   91 PARAM_START: PARAM_START . PARAM_FULFILL

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 165
    t_string            shift, and go to state 137
    t_open_paren        shift, and go to state 138
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_enter             shift, and go to state 255
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    FUNC_CALL          go to state 166
    PARAM_END          go to state 256
    PARAM_END_FULFILL  go to state 257
    PARAM_FULFILL      go to state 258
    SHIFT              go to state 146
    SHIFT_AC           go to state 147
    METHOD             go to state 167
    METHOD_FULFILL     go to state 107
    POINTER            go to state 168
    VALUE              go to state 150
    EXPR               go to state 259
    EXPR_START         go to state 154


State 182

   61 VAR: t_id MULTI_AR . ASSIGNMENT EXPR
   64    | t_id MULTI_AR . ASSIGNMENT MAKE

    t_vtype     shift, and go to state 170
    t_comma     shift, and go to state 191
    t_equality  shift, and go to state 173

    ASSIGNMENT  go to state 260


State 183

  190 ARRAY_INDEX: t_open_sq t_int_const . t_close_sq

    t_close_sq  shift, and go to state 261


State 184

  191 ARRAY_INDEX: t_open_sq t_id . t_close_sq

    t_close_sq  shift, and go to state 262


State 185

  192 ARRAY_INDEX: t_open_sq t_string . t_close_sq

    t_close_sq  shift, and go to state 263


State 186

  193 ARRAY_INDEX: t_open_sq t_close_sq .

    $default  reduce using rule 193 (ARRAY_INDEX)


State 187

  105 POINTER: t_pointer t_vtype .

    $default  reduce using rule 105 (POINTER)


State 188

  104 POINTER: t_pointer t_id .

    $default  reduce using rule 104 (POINTER)


State 189

  106 POINTER: t_ampersand t_id .

    $default  reduce using rule 106 (POINTER)


State 190

   37 BODY_START: BODY_START BODY_FILLING END_SYMBOLS .

    $default  reduce using rule 37 (BODY_START)


State 191

   81 ASSIGNMENT: t_comma . t_id ASSIGNMENT EXPR t_comma
   82           | t_comma . t_id ASSIGNMENT BOOLEAN t_comma

    t_id  shift, and go to state 264


State 192

  101 METHOD: METHOD t_dot . METHOD_FULFILL

    t_id  shift, and go to state 129

    FUNC_CALL       go to state 265
    METHOD          go to state 131
    METHOD_FULFILL  go to state 266


State 193

   73 VAR: METHOD ASSIGNMENT . VALUE

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 165
    t_string            shift, and go to state 137
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 267


State 194

   87 FUNC_CALL: METHOD PARAM .

    $default  reduce using rule 87 (FUNC_CALL)


State 195

  100 METHOD: METHOD_FULFILL t_dot . METHOD_FULFILL

    t_id  shift, and go to state 129

    FUNC_CALL       go to state 265
    METHOD          go to state 131
    METHOD_FULFILL  go to state 268


State 196

   74 VAR: POINTER ASSIGNMENT . EXPR

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 165
    t_string            shift, and go to state 137
    t_open_paren        shift, and go to state 138
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 150
    EXPR            go to state 269
    EXPR_START      go to state 154


State 197

  161 ELSEIF_SECOND: t_else . t_if CONDITION BODY_FOR_LOOP
  164 ELSE_THIRD: t_else . BODY_FOR_LOOP

    t_if       shift, and go to state 270
    t_open_br  shift, and go to state 68

    ABSORB_EMPTYNESS     go to state 218
    BODY_FOR_LOOP        go to state 271
    BODY_FOR_LOOP_START  go to state 220


State 198

  146 IF: IF_FIRST MULTY_ELSEIF_SECOND . MULTY_ELSE_THIRD
  147   | IF_FIRST MULTY_ELSEIF_SECOND .
  160 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND . ELSEIF_SECOND

    t_else  shift, and go to state 197

    $default  reduce using rule 147 (IF)

    ELSEIF_SECOND     go to state 272
    MULTY_ELSE_THIRD  go to state 273
    ELSE_THIRD        go to state 201


State 199

  159 MULTY_ELSEIF_SECOND: ELSEIF_SECOND .

    $default  reduce using rule 159 (MULTY_ELSEIF_SECOND)


State 200

  148 IF: IF_FIRST MULTY_ELSE_THIRD .
  163 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD . ELSE_THIRD

    t_else  shift, and go to state 274

    $default  reduce using rule 148 (IF)

    ELSE_THIRD  go to state 275


State 201

  162 MULTY_ELSE_THIRD: ELSE_THIRD .

    $default  reduce using rule 162 (MULTY_ELSE_THIRD)


State 202

  195 MULTI_AR: ARRAY_INDEX MULTI_AR .

    $default  reduce using rule 195 (MULTI_AR)


State 203

  230 INT_BODY: t_open_br END_SYMBOLS t_id t_open_paren t_close_paren .

    $default  reduce using rule 230 (INT_BODY)


State 204

   30 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren TYPE_AND_STRUCT t_close_paren .

    $default  reduce using rule 30 (FUNC_RETURN_VALUE_FULFILL)


State 205

   24 FUNC_PARAM_SECOND: FUNC_PARAM_SECOND t_comma FUNC_PARAM_FULFILL_SECOND .

    $default  reduce using rule 24 (FUNC_PARAM_SECOND)


State 206

   17 FUNC_SECOND_PART: t_open_paren FUNC_PARAM_SECOND t_close_paren BODY .

    $default  reduce using rule 17 (FUNC_SECOND_PART)


State 207

  208 MAPS: t_map . t_open_sq t_vtype t_close_sq t_vtype

    t_open_sq  shift, and go to state 276


State 208

   70 VAR: t_var t_id t_id . ASSIGNMENT t_id ST_EMBEDDED

    t_vtype     shift, and go to state 170
    t_comma     shift, and go to state 191
    t_equality  shift, and go to state 173

    ASSIGNMENT  go to state 277


State 209

   53 VAR: t_var t_id ASSIGNMENT . EXPR
   54    | t_var t_id ASSIGNMENT . EXPR t_vtype
   55    | t_var t_id ASSIGNMENT . BOOLEAN
   59    | t_var t_id ASSIGNMENT . MULTI_AR t_vtype PLENTY
   62    | t_var t_id ASSIGNMENT . MAKE
   67    | t_var t_id ASSIGNMENT . SLICE
   71    | t_var t_id ASSIGNMENT . t_id ST_EMBEDDED

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 278
    t_string            shift, and go to state 137
    t_open_paren        shift, and go to state 138
    t_open_sq           shift, and go to state 98
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_make              shift, and go to state 279
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    BOOLEAN         go to state 280
    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 150
    EXPR            go to state 281
    EXPR_START      go to state 154
    ARRAY_INDEX     go to state 118
    MULTI_AR        go to state 282
    MAKE            go to state 283
    SLICE           go to state 284


State 210

   75 VAR: t_var t_id POINTER .
   76    | t_var t_id POINTER . ASSIGNMENT EXPR

    t_vtype     shift, and go to state 170
    t_comma     shift, and go to state 191
    t_equality  shift, and go to state 173

    $default  reduce using rule 75 (VAR)

    ASSIGNMENT  go to state 285


State 211

  187 ARRAY_BODY: t_var t_id MULTI_AR . t_vtype
  188           | t_var t_id MULTI_AR . t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  189           | t_var t_id MULTI_AR . t_vtype ASSIGNMENT MAKE

    t_vtype  shift, and go to state 286


State 212

   68 VAR: t_var t_id MAPS .

    $default  reduce using rule 68 (VAR)


State 213

   53 VAR: t_var t_id . ASSIGNMENT EXPR
   54    | t_var t_id . ASSIGNMENT EXPR t_vtype
   55    | t_var t_id . ASSIGNMENT BOOLEAN
   59    | t_var t_id . ASSIGNMENT MULTI_AR t_vtype PLENTY
   62    | t_var t_id . ASSIGNMENT MAKE
   67    | t_var t_id . ASSIGNMENT SLICE
   68    | t_var t_id . MAPS
   70    | t_var t_id . t_id ASSIGNMENT t_id ST_EMBEDDED
   71    | t_var t_id . ASSIGNMENT t_id ST_EMBEDDED
   75    | t_var t_id . POINTER
   76    | t_var t_id . POINTER ASSIGNMENT EXPR

    t_vtype      shift, and go to state 170
    t_map        shift, and go to state 207
    t_id         shift, and go to state 208
    t_comma      shift, and go to state 191
    t_equality   shift, and go to state 173
    t_pointer    shift, and go to state 99
    t_ampersand  shift, and go to state 100

    ASSIGNMENT  go to state 209
    POINTER     go to state 210
    MAPS        go to state 212


State 214

   97 SHIFT: SHIFT_AC t_shift_const . SHIFT_AC

    t_int_const  shift, and go to state 287
    t_id         shift, and go to state 288

    SHIFT_AC  go to state 289


State 215

  170 EXPR: EXPR t_sign . VALUE

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 165
    t_string            shift, and go to state 137
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 290


State 216

   77 BOOLEAN: EXPR t_bool . EXPR

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 165
    t_string            shift, and go to state 137
    t_open_paren        shift, and go to state 138
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 150
    EXPR            go to state 291
    EXPR_START      go to state 154


State 217

  151 IF_FIRST: t_if INIT_STATE t_semicolon . CONDITION BODY_FOR_LOOP

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 165
    t_string            shift, and go to state 137
    t_open_paren        shift, and go to state 138
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_true              shift, and go to state 141
    t_false             shift, and go to state 142
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    $default  reduce using rule 180 (CONDITION)

    BOOLEAN         go to state 144
    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 150
    EXPR            go to state 151
    CONDITION       go to state 292
    EXPR_START      go to state 154


State 218

  131 ABSORB_EMPTYNESS: ABSORB_EMPTYNESS . END_SYMBOLS
  153 BODY_FOR_LOOP_START: ABSORB_EMPTYNESS .

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    $default  reduce using rule 153 (BODY_FOR_LOOP_START)

    END_SYMBOLS  go to state 122


State 219

  150 IF_FIRST: t_if CONDITION BODY_FOR_LOOP .

    $default  reduce using rule 150 (IF_FIRST)


State 220

  152 BODY_FOR_LOOP: BODY_FOR_LOOP_START . BODY_FOR_LOOP_END
  154 BODY_FOR_LOOP_START: BODY_FOR_LOOP_START . LOOP_FILLING END_SYMBOLS

    t_defer      shift, and go to state 88
    t_var        shift, and go to state 89
    t_if         shift, and go to state 90
    t_switch     shift, and go to state 91
    t_type       shift, and go to state 92
    t_for        shift, and go to state 93
    t_goto       shift, and go to state 94
    t_continue   shift, and go to state 293
    t_break      shift, and go to state 294
    t_return     shift, and go to state 95
    t_id         shift, and go to state 96
    t_close_br   shift, and go to state 295
    t_open_sq    shift, and go to state 98
    t_pointer    shift, and go to state 99
    t_ampersand  shift, and go to state 100

    BODY_FILLING       go to state 296
    VAR                go to state 103
    DEFER              go to state 104
    FUNC_CALL          go to state 105
    METHOD             go to state 106
    METHOD_FULFILL     go to state 107
    POINTER            go to state 108
    GOTO               go to state 109
    LABEL              go to state 110
    SWITCH             go to state 111
    IF                 go to state 112
    IF_FIRST           go to state 113
    BODY_FOR_LOOP_END  go to state 297
    LOOP_FILLING       go to state 298
    RETURN             go to state 114
    SHORT_EXPR         go to state 115
    FOR                go to state 116
    ARRAY_BODY         go to state 117
    ARRAY_INDEX        go to state 118
    MULTI_AR           go to state 119
    SLICE              go to state 120
    STRUCT             go to state 121
    STRUCT_START       go to state 11


State 221

  170 EXPR: EXPR . t_sign VALUE
  171     | EXPR_START EXPR . EXPR_END

    t_sign         shift, and go to state 215
    t_close_paren  shift, and go to state 299

    EXPR_END  go to state 300


State 222

  134 CASE: t_case . CASE_STATEMENT CASE_BODY

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 165
    t_string            shift, and go to state 137
    t_open_paren        shift, and go to state 138
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 150
    MULTIPLE_ARG    go to state 301
    FIRST_PART      go to state 302
    CASE_STATEMENT  go to state 303
    EXPR            go to state 304
    EXPR_START      go to state 154


State 223

  135 DEFAULT: t_default . CASE_BODY

    t_colon  shift, and go to state 305

    CASE_BODY  go to state 306


State 224

  145 SWITCH_BODY_END: t_close_br .

    $default  reduce using rule 145 (SWITCH_BODY_END)


State 225

  129 SWITCH_BODY_START: SWITCH_BODY_START CASE .

    $default  reduce using rule 129 (SWITCH_BODY_START)


State 226

  132 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START DEFAULT .

    $default  reduce using rule 132 (SWITCH_BODY_START_WITH_DEFAULT)


State 227

  126 SWITCH_BODY: SWITCH_BODY_START SWITCH_BODY_END .

    $default  reduce using rule 126 (SWITCH_BODY)


State 228

  133 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START_WITH_DEFAULT CASE .

    $default  reduce using rule 133 (SWITCH_BODY_START_WITH_DEFAULT)


State 229

  127 SWITCH_BODY: SWITCH_BODY_START_WITH_DEFAULT SWITCH_BODY_END .

    $default  reduce using rule 127 (SWITCH_BODY)


State 230

  124 SWITCH: t_switch EXPR SWITCH_BODY .

    $default  reduce using rule 124 (SWITCH)


State 231

  123 SWITCH: t_switch INIT_STATE t_semicolon . EXPR SWITCH_BODY

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 165
    t_string            shift, and go to state 137
    t_open_paren        shift, and go to state 138
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 150
    EXPR            go to state 307
    EXPR_START      go to state 154


State 232

  183 FOR: t_for INIT_STATE t_semicolon . CONDITION t_semicolon POST_STATE BODY_FOR_LOOP

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 165
    t_string            shift, and go to state 137
    t_open_paren        shift, and go to state 138
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_true              shift, and go to state 141
    t_false             shift, and go to state 142
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    $default  reduce using rule 180 (CONDITION)

    BOOLEAN         go to state 144
    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 150
    EXPR            go to state 151
    CONDITION       go to state 308
    EXPR_START      go to state 154


State 233

  184 FOR: t_for CONDITION BODY_FOR_LOOP .

    $default  reduce using rule 184 (FOR)


State 234

  167 MANY_RETURN_START: t_comma .

    $default  reduce using rule 167 (MANY_RETURN_START)


State 235

  166 RETURN: t_return EXPR MANY_RETURN_START . MANY_RETURN_START_END
  168 MANY_RETURN_START: MANY_RETURN_START . EXPR t_comma

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 165
    t_string            shift, and go to state 137
    t_open_paren        shift, and go to state 138
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    FUNC_CALL              go to state 166
    SHIFT                  go to state 146
    SHIFT_AC               go to state 147
    METHOD                 go to state 167
    METHOD_FULFILL         go to state 107
    POINTER                go to state 168
    VALUE                  go to state 150
    MANY_RETURN_START_END  go to state 309
    EXPR                   go to state 310
    EXPR_START             go to state 154


State 236

   79 ASSIGNMENT: t_vtype t_equality .

    $default  reduce using rule 79 (ASSIGNMENT)


State 237

   81 ASSIGNMENT: t_comma t_id . ASSIGNMENT EXPR t_comma
   82           | t_comma t_id . ASSIGNMENT BOOLEAN t_comma
   84 SHORT_ASSIGN: t_comma t_id . SHORT_ASSIGN EXPR t_comma
   85             | t_comma t_id . SHORT_ASSIGN BOOLEAN t_comma

    t_vtype      shift, and go to state 170
    t_short_dec  shift, and go to state 171
    t_comma      shift, and go to state 172
    t_equality   shift, and go to state 173

    ASSIGNMENT    go to state 311
    SHORT_ASSIGN  go to state 312


State 238

   89 PARAM: t_open_paren t_close_paren .

    $default  reduce using rule 89 (PARAM)


State 239

   99 SHIFT_AC: t_int_const .
  111 VALUE: t_int_const .
  190 ARRAY_INDEX: t_open_sq t_int_const . t_close_sq

    t_close_sq  shift, and go to state 261

    t_colon   reduce using rule 111 (VALUE)
    $default  reduce using rule 99 (SHIFT_AC)


State 240

   86 FUNC_CALL: t_id . PARAM
   98 SHIFT_AC: t_id .
  102 METHOD_FULFILL: t_id .
  113 VALUE: t_id .
  191 ARRAY_INDEX: t_open_sq t_id . t_close_sq

    t_open_paren  shift, and go to state 174
    t_close_sq    shift, and go to state 262

    t_dot     reduce using rule 102 (METHOD_FULFILL)
    t_colon   reduce using rule 113 (VALUE)
    $default  reduce using rule 98 (SHIFT_AC)

    PARAM        go to state 180
    PARAM_START  go to state 181


State 241

  114 VALUE: t_string .
  192 ARRAY_INDEX: t_open_sq t_string . t_close_sq

    t_close_sq  shift, and go to state 263

    $default  reduce using rule 114 (VALUE)


State 242

  206 SLICE: t_id t_open_sq t_colon . VALUE t_close_sq

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 165
    t_string            shift, and go to state 137
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 313


State 243

  205 SLICE: t_id t_open_sq VALUE . t_colon VALUE t_close_sq
  207      | t_id t_open_sq VALUE . t_colon t_close_sq

    t_colon  shift, and go to state 314


State 244

  173 SHORT_EXPR: t_id t_short_expr t_id .

    $default  reduce using rule 173 (SHORT_EXPR)


State 245

   86 FUNC_CALL: t_id . PARAM
   98 SHIFT_AC: t_id .
  102 METHOD_FULFILL: t_id .
  113 VALUE: t_id .
  205 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  206      | t_id . t_open_sq t_colon VALUE t_close_sq
  207      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_open_paren  shift, and go to state 174
    t_open_sq     shift, and go to state 315

    t_shift_const  reduce using rule 98 (SHIFT_AC)
    t_dot          reduce using rule 102 (METHOD_FULFILL)
    $default       reduce using rule 113 (VALUE)

    PARAM        go to state 180
    PARAM_START  go to state 181


State 246

   57 VAR: t_id ASSIGNMENT EXPR .
  170 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 215

    $default  reduce using rule 57 (VAR)


State 247

   66 VAR: t_id ASSIGNMENT SLICE .

    $default  reduce using rule 66 (VAR)


State 248

   72 VAR: t_id SHORT_ASSIGN t_id . ST_EMBEDDED
   86 FUNC_CALL: t_id . PARAM
   98 SHIFT_AC: t_id .
  102 METHOD_FULFILL: t_id .
  113 VALUE: t_id .
  205 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  206      | t_id . t_open_sq t_colon VALUE t_close_sq
  207      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_open_br     shift, and go to state 316
    t_open_paren  shift, and go to state 174
    t_open_sq     shift, and go to state 315

    t_shift_const  reduce using rule 98 (SHIFT_AC)
    t_dot          reduce using rule 102 (METHOD_FULFILL)
    $default       reduce using rule 113 (VALUE)

    PARAM         go to state 180
    PARAM_START   go to state 181
    PLENTY_OLD    go to state 317
    STRUCT_FIELD  go to state 318
    ST_EMBEDDED   go to state 319


State 249

   69 VAR: t_id SHORT_ASSIGN t_make . t_open_paren MAPS t_close_paren
  203 MAKE: t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  204     | t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_paren  shift, and go to state 320


State 250

   60 VAR: t_id SHORT_ASSIGN BOOLEAN .

    $default  reduce using rule 60 (VAR)


State 251

   56 VAR: t_id SHORT_ASSIGN EXPR .
   77 BOOLEAN: EXPR . t_bool EXPR
  170 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 215
    t_bool  shift, and go to state 216

    $default  reduce using rule 56 (VAR)


State 252

   58 VAR: t_id SHORT_ASSIGN MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 321


State 253

   63 VAR: t_id SHORT_ASSIGN MAKE .

    $default  reduce using rule 63 (VAR)


State 254

   65 VAR: t_id SHORT_ASSIGN SLICE .

    $default  reduce using rule 65 (VAR)


State 255

   94 PARAM_END_FULFILL: t_enter .
   96 PARAM_FULFILL: t_enter .

    t_close_paren  reduce using rule 94 (PARAM_END_FULFILL)
    $default       reduce using rule 96 (PARAM_FULFILL)


State 256

   88 PARAM: PARAM_START PARAM_END .

    $default  reduce using rule 88 (PARAM)


State 257

   92 PARAM_END: PARAM_END_FULFILL . t_close_paren

    t_close_paren  shift, and go to state 322


State 258

   91 PARAM_START: PARAM_START PARAM_FULFILL .

    $default  reduce using rule 91 (PARAM_START)


State 259

   93 PARAM_END_FULFILL: EXPR .
   95 PARAM_FULFILL: EXPR . t_comma
  170 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 215
    t_comma  shift, and go to state 323

    $default  reduce using rule 93 (PARAM_END_FULFILL)


State 260

   61 VAR: t_id MULTI_AR ASSIGNMENT . EXPR
   64    | t_id MULTI_AR ASSIGNMENT . MAKE

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 165
    t_string            shift, and go to state 137
    t_open_paren        shift, and go to state 138
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_make              shift, and go to state 279
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 150
    EXPR            go to state 324
    EXPR_START      go to state 154
    MAKE            go to state 325


State 261

  190 ARRAY_INDEX: t_open_sq t_int_const t_close_sq .

    $default  reduce using rule 190 (ARRAY_INDEX)


State 262

  191 ARRAY_INDEX: t_open_sq t_id t_close_sq .

    $default  reduce using rule 191 (ARRAY_INDEX)


State 263

  192 ARRAY_INDEX: t_open_sq t_string t_close_sq .

    $default  reduce using rule 192 (ARRAY_INDEX)


State 264

   81 ASSIGNMENT: t_comma t_id . ASSIGNMENT EXPR t_comma
   82           | t_comma t_id . ASSIGNMENT BOOLEAN t_comma

    t_vtype     shift, and go to state 170
    t_comma     shift, and go to state 191
    t_equality  shift, and go to state 173

    ASSIGNMENT  go to state 311


State 265

  103 METHOD_FULFILL: FUNC_CALL .

    $default  reduce using rule 103 (METHOD_FULFILL)


State 266

  100 METHOD: METHOD_FULFILL . t_dot METHOD_FULFILL
  101       | METHOD t_dot METHOD_FULFILL .

    t_dot  shift, and go to state 195

    t_dot     [reduce using rule 101 (METHOD)]
    $default  reduce using rule 101 (METHOD)


State 267

   73 VAR: METHOD ASSIGNMENT VALUE .

    $default  reduce using rule 73 (VAR)


State 268

  100 METHOD: METHOD_FULFILL . t_dot METHOD_FULFILL
  100       | METHOD_FULFILL t_dot METHOD_FULFILL .

    t_dot  shift, and go to state 195

    t_dot     [reduce using rule 100 (METHOD)]
    $default  reduce using rule 100 (METHOD)


State 269

   74 VAR: POINTER ASSIGNMENT EXPR .
  170 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 215

    $default  reduce using rule 74 (VAR)


State 270

  161 ELSEIF_SECOND: t_else t_if . CONDITION BODY_FOR_LOOP

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 165
    t_string            shift, and go to state 137
    t_open_paren        shift, and go to state 138
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_true              shift, and go to state 141
    t_false             shift, and go to state 142
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    $default  reduce using rule 180 (CONDITION)

    BOOLEAN         go to state 144
    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 150
    EXPR            go to state 151
    CONDITION       go to state 326
    EXPR_START      go to state 154


State 271

  164 ELSE_THIRD: t_else BODY_FOR_LOOP .

    $default  reduce using rule 164 (ELSE_THIRD)


State 272

  160 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND ELSEIF_SECOND .

    $default  reduce using rule 160 (MULTY_ELSEIF_SECOND)


State 273

  146 IF: IF_FIRST MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD .
  163 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD . ELSE_THIRD

    t_else  shift, and go to state 274

    $default  reduce using rule 146 (IF)

    ELSE_THIRD  go to state 275


State 274

  164 ELSE_THIRD: t_else . BODY_FOR_LOOP

    t_open_br  shift, and go to state 68

    ABSORB_EMPTYNESS     go to state 218
    BODY_FOR_LOOP        go to state 271
    BODY_FOR_LOOP_START  go to state 220


State 275

  163 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD ELSE_THIRD .

    $default  reduce using rule 163 (MULTY_ELSE_THIRD)


State 276

  208 MAPS: t_map t_open_sq . t_vtype t_close_sq t_vtype

    t_vtype  shift, and go to state 327


State 277

   70 VAR: t_var t_id t_id ASSIGNMENT . t_id ST_EMBEDDED

    t_id  shift, and go to state 328


State 278

   71 VAR: t_var t_id ASSIGNMENT t_id . ST_EMBEDDED
   86 FUNC_CALL: t_id . PARAM
   98 SHIFT_AC: t_id .
  102 METHOD_FULFILL: t_id .
  113 VALUE: t_id .
  205 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  206      | t_id . t_open_sq t_colon VALUE t_close_sq
  207      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_open_br     shift, and go to state 316
    t_open_paren  shift, and go to state 174
    t_open_sq     shift, and go to state 315

    t_shift_const  reduce using rule 98 (SHIFT_AC)
    t_dot          reduce using rule 102 (METHOD_FULFILL)
    $default       reduce using rule 113 (VALUE)

    PARAM         go to state 180
    PARAM_START   go to state 181
    PLENTY_OLD    go to state 317
    STRUCT_FIELD  go to state 318
    ST_EMBEDDED   go to state 329


State 279

  203 MAKE: t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  204     | t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_paren  shift, and go to state 330


State 280

   55 VAR: t_var t_id ASSIGNMENT BOOLEAN .

    $default  reduce using rule 55 (VAR)


State 281

   53 VAR: t_var t_id ASSIGNMENT EXPR .
   54    | t_var t_id ASSIGNMENT EXPR . t_vtype
   77 BOOLEAN: EXPR . t_bool EXPR
  170 EXPR: EXPR . t_sign VALUE

    t_vtype  shift, and go to state 331
    t_sign   shift, and go to state 215
    t_bool   shift, and go to state 216

    $default  reduce using rule 53 (VAR)


State 282

   59 VAR: t_var t_id ASSIGNMENT MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 332


State 283

   62 VAR: t_var t_id ASSIGNMENT MAKE .

    $default  reduce using rule 62 (VAR)


State 284

   67 VAR: t_var t_id ASSIGNMENT SLICE .

    $default  reduce using rule 67 (VAR)


State 285

   76 VAR: t_var t_id POINTER ASSIGNMENT . EXPR

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 165
    t_string            shift, and go to state 137
    t_open_paren        shift, and go to state 138
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 150
    EXPR            go to state 333
    EXPR_START      go to state 154


State 286

  187 ARRAY_BODY: t_var t_id MULTI_AR t_vtype .
  188           | t_var t_id MULTI_AR t_vtype . ASSIGNMENT MULTI_AR t_vtype PLENTY
  189           | t_var t_id MULTI_AR t_vtype . ASSIGNMENT MAKE

    t_vtype     shift, and go to state 170
    t_comma     shift, and go to state 191
    t_equality  shift, and go to state 173

    $default  reduce using rule 187 (ARRAY_BODY)

    ASSIGNMENT  go to state 334


State 287

   99 SHIFT_AC: t_int_const .

    $default  reduce using rule 99 (SHIFT_AC)


State 288

   98 SHIFT_AC: t_id .

    $default  reduce using rule 98 (SHIFT_AC)


State 289

   97 SHIFT: SHIFT_AC t_shift_const SHIFT_AC .

    $default  reduce using rule 97 (SHIFT)


State 290

  170 EXPR: EXPR t_sign VALUE .

    $default  reduce using rule 170 (EXPR)


State 291

   77 BOOLEAN: EXPR t_bool EXPR .
  170 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 215

    $default  reduce using rule 77 (BOOLEAN)


State 292

  151 IF_FIRST: t_if INIT_STATE t_semicolon CONDITION . BODY_FOR_LOOP

    t_open_br  shift, and go to state 68

    ABSORB_EMPTYNESS     go to state 218
    BODY_FOR_LOOP        go to state 335
    BODY_FOR_LOOP_START  go to state 220


State 293

  158 LOOP_FILLING: t_continue .

    $default  reduce using rule 158 (LOOP_FILLING)


State 294

  157 LOOP_FILLING: t_break .

    $default  reduce using rule 157 (LOOP_FILLING)


State 295

  155 BODY_FOR_LOOP_END: t_close_br .

    $default  reduce using rule 155 (BODY_FOR_LOOP_END)


State 296

  156 LOOP_FILLING: BODY_FILLING .

    $default  reduce using rule 156 (LOOP_FILLING)


State 297

  152 BODY_FOR_LOOP: BODY_FOR_LOOP_START BODY_FOR_LOOP_END .

    $default  reduce using rule 152 (BODY_FOR_LOOP)


State 298

  154 BODY_FOR_LOOP_START: BODY_FOR_LOOP_START LOOP_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 336


State 299

  186 EXPR_END: t_close_paren .

    $default  reduce using rule 186 (EXPR_END)


State 300

  171 EXPR: EXPR_START EXPR EXPR_END .

    $default  reduce using rule 171 (EXPR)


State 301

  140 CASE_STATEMENT: MULTIPLE_ARG .

    $default  reduce using rule 140 (CASE_STATEMENT)


State 302

  136 MULTIPLE_ARG: FIRST_PART . SECOND_PART
  138 FIRST_PART: FIRST_PART . EXPR t_comma

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 165
    t_string            shift, and go to state 137
    t_open_paren        shift, and go to state 138
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 150
    SECOND_PART     go to state 337
    EXPR            go to state 338
    EXPR_START      go to state 154


State 303

  134 CASE: t_case CASE_STATEMENT . CASE_BODY

    t_colon  shift, and go to state 305

    CASE_BODY  go to state 339


State 304

  137 FIRST_PART: EXPR . t_comma
  141 CASE_STATEMENT: EXPR .
  170 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 215
    t_comma  shift, and go to state 340

    $default  reduce using rule 141 (CASE_STATEMENT)


State 305

  142 CASE_BODY: t_colon .

    $default  reduce using rule 142 (CASE_BODY)


State 306

  135 DEFAULT: t_default CASE_BODY .
  143 CASE_BODY: CASE_BODY . LOOP_FILLING END_SYMBOLS
  144          | CASE_BODY . END_SYMBOLS

    t_defer      shift, and go to state 88
    t_var        shift, and go to state 89
    t_if         shift, and go to state 90
    t_switch     shift, and go to state 91
    t_type       shift, and go to state 92
    t_for        shift, and go to state 93
    t_goto       shift, and go to state 94
    t_continue   shift, and go to state 293
    t_break      shift, and go to state 294
    t_return     shift, and go to state 95
    t_id         shift, and go to state 96
    t_open_sq    shift, and go to state 98
    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22
    t_pointer    shift, and go to state 99
    t_ampersand  shift, and go to state 100

    $default  reduce using rule 135 (DEFAULT)

    BODY_FILLING    go to state 296
    VAR             go to state 103
    DEFER           go to state 104
    FUNC_CALL       go to state 105
    METHOD          go to state 106
    METHOD_FULFILL  go to state 107
    POINTER         go to state 108
    GOTO            go to state 109
    LABEL           go to state 110
    SWITCH          go to state 111
    IF              go to state 112
    IF_FIRST        go to state 113
    LOOP_FILLING    go to state 341
    RETURN          go to state 114
    SHORT_EXPR      go to state 115
    FOR             go to state 116
    ARRAY_BODY      go to state 117
    ARRAY_INDEX     go to state 118
    MULTI_AR        go to state 119
    SLICE           go to state 120
    STRUCT          go to state 121
    STRUCT_START    go to state 11
    END_SYMBOLS     go to state 342


State 307

  123 SWITCH: t_switch INIT_STATE t_semicolon EXPR . SWITCH_BODY
  170 EXPR: EXPR . t_sign VALUE

    t_open_br  shift, and go to state 68
    t_sign     shift, and go to state 215

    SWITCH_BODY                     go to state 343
    SWITCH_BODY_START               go to state 156
    ABSORB_EMPTYNESS                go to state 157
    SWITCH_BODY_START_WITH_DEFAULT  go to state 158


State 308

  183 FOR: t_for INIT_STATE t_semicolon CONDITION . t_semicolon POST_STATE BODY_FOR_LOOP

    t_semicolon  shift, and go to state 344


State 309

  166 RETURN: t_return EXPR MANY_RETURN_START MANY_RETURN_START_END .

    $default  reduce using rule 166 (RETURN)


State 310

  168 MANY_RETURN_START: MANY_RETURN_START EXPR . t_comma
  169 MANY_RETURN_START_END: EXPR .
  170 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 215
    t_comma  shift, and go to state 345

    $default  reduce using rule 169 (MANY_RETURN_START_END)


State 311

   81 ASSIGNMENT: t_comma t_id ASSIGNMENT . EXPR t_comma
   82           | t_comma t_id ASSIGNMENT . BOOLEAN t_comma

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 165
    t_string            shift, and go to state 137
    t_open_paren        shift, and go to state 138
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    BOOLEAN         go to state 346
    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 150
    EXPR            go to state 347
    EXPR_START      go to state 154


State 312

   84 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN . EXPR t_comma
   85             | t_comma t_id SHORT_ASSIGN . BOOLEAN t_comma

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 165
    t_string            shift, and go to state 137
    t_open_paren        shift, and go to state 138
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    BOOLEAN         go to state 348
    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 150
    EXPR            go to state 349
    EXPR_START      go to state 154


State 313

  206 SLICE: t_id t_open_sq t_colon VALUE . t_close_sq

    t_close_sq  shift, and go to state 350


State 314

  205 SLICE: t_id t_open_sq VALUE t_colon . VALUE t_close_sq
  207      | t_id t_open_sq VALUE t_colon . t_close_sq

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 165
    t_string            shift, and go to state 137
    t_close_sq          shift, and go to state 351
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 352


State 315

  205 SLICE: t_id t_open_sq . VALUE t_colon VALUE t_close_sq
  206      | t_id t_open_sq . t_colon VALUE t_close_sq
  207      | t_id t_open_sq . VALUE t_colon t_close_sq

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 165
    t_string            shift, and go to state 137
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_colon             shift, and go to state 242
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 243


State 316

  198 PLENTY_OLD: t_open_br . ENUM t_close_br
  199           | t_open_br . t_close_br
  200           | t_open_br . PLENTY t_close_br
  221 STRUCT_FIELD: t_open_br . END_SYMBOLS STRUCT_ENUM t_close_br
  222             | t_open_br . END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 165
    t_string            shift, and go to state 137
    t_open_br           shift, and go to state 353
    t_close_br          shift, and go to state 354
    t_rune              shift, and go to state 139
    t_semicolon         shift, and go to state 20
    t_blank_identifier  shift, and go to state 140
    t_enter             shift, and go to state 21
    t_eof               shift, and go to state 22
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 355
    PLENTY          go to state 356
    PLENTY_OLD      go to state 357
    ENUM            go to state 358
    END_SYMBOLS     go to state 359


State 317

  223 STRUCT_FIELD: PLENTY_OLD .

    $default  reduce using rule 223 (STRUCT_FIELD)


State 318

  224 ST_EMBEDDED: STRUCT_FIELD .
  225            | STRUCT_FIELD . t_comma ST_EMBEDDED

    t_comma  shift, and go to state 360

    $default  reduce using rule 224 (ST_EMBEDDED)


State 319

   72 VAR: t_id SHORT_ASSIGN t_id ST_EMBEDDED .

    $default  reduce using rule 72 (VAR)


State 320

   69 VAR: t_id SHORT_ASSIGN t_make t_open_paren . MAPS t_close_paren
  203 MAKE: t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_close_paren
  204     | t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_map      shift, and go to state 207
    t_open_sq  shift, and go to state 98

    ARRAY_INDEX  go to state 118
    MULTI_AR     go to state 361
    MAPS         go to state 362


State 321

   58 VAR: t_id SHORT_ASSIGN MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 353

    PLENTY      go to state 363
    PLENTY_OLD  go to state 357


State 322

   92 PARAM_END: PARAM_END_FULFILL t_close_paren .

    $default  reduce using rule 92 (PARAM_END)


State 323

   95 PARAM_FULFILL: EXPR t_comma .

    $default  reduce using rule 95 (PARAM_FULFILL)


State 324

   61 VAR: t_id MULTI_AR ASSIGNMENT EXPR .
  170 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 215

    $default  reduce using rule 61 (VAR)


State 325

   64 VAR: t_id MULTI_AR ASSIGNMENT MAKE .

    $default  reduce using rule 64 (VAR)


State 326

  161 ELSEIF_SECOND: t_else t_if CONDITION . BODY_FOR_LOOP

    t_open_br  shift, and go to state 68

    ABSORB_EMPTYNESS     go to state 218
    BODY_FOR_LOOP        go to state 364
    BODY_FOR_LOOP_START  go to state 220


State 327

  208 MAPS: t_map t_open_sq t_vtype . t_close_sq t_vtype

    t_close_sq  shift, and go to state 365


State 328

   70 VAR: t_var t_id t_id ASSIGNMENT t_id . ST_EMBEDDED

    t_open_br  shift, and go to state 316

    PLENTY_OLD    go to state 317
    STRUCT_FIELD  go to state 318
    ST_EMBEDDED   go to state 366


State 329

   71 VAR: t_var t_id ASSIGNMENT t_id ST_EMBEDDED .

    $default  reduce using rule 71 (VAR)


State 330

  203 MAKE: t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_close_paren
  204     | t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_sq  shift, and go to state 98

    ARRAY_INDEX  go to state 118
    MULTI_AR     go to state 361


State 331

   54 VAR: t_var t_id ASSIGNMENT EXPR t_vtype .

    $default  reduce using rule 54 (VAR)


State 332

   59 VAR: t_var t_id ASSIGNMENT MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 353

    PLENTY      go to state 367
    PLENTY_OLD  go to state 357


State 333

   76 VAR: t_var t_id POINTER ASSIGNMENT EXPR .
  170 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 215

    $default  reduce using rule 76 (VAR)


State 334

  188 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT . MULTI_AR t_vtype PLENTY
  189           | t_var t_id MULTI_AR t_vtype ASSIGNMENT . MAKE

    t_open_sq  shift, and go to state 98
    t_make     shift, and go to state 279

    ARRAY_INDEX  go to state 118
    MULTI_AR     go to state 368
    MAKE         go to state 369


State 335

  151 IF_FIRST: t_if INIT_STATE t_semicolon CONDITION BODY_FOR_LOOP .

    $default  reduce using rule 151 (IF_FIRST)


State 336

  154 BODY_FOR_LOOP_START: BODY_FOR_LOOP_START LOOP_FILLING END_SYMBOLS .

    $default  reduce using rule 154 (BODY_FOR_LOOP_START)


State 337

  136 MULTIPLE_ARG: FIRST_PART SECOND_PART .

    $default  reduce using rule 136 (MULTIPLE_ARG)


State 338

  138 FIRST_PART: FIRST_PART EXPR . t_comma
  139 SECOND_PART: EXPR .
  170 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 215
    t_comma  shift, and go to state 370

    $default  reduce using rule 139 (SECOND_PART)


State 339

  134 CASE: t_case CASE_STATEMENT CASE_BODY .
  143 CASE_BODY: CASE_BODY . LOOP_FILLING END_SYMBOLS
  144          | CASE_BODY . END_SYMBOLS

    t_defer      shift, and go to state 88
    t_var        shift, and go to state 89
    t_if         shift, and go to state 90
    t_switch     shift, and go to state 91
    t_type       shift, and go to state 92
    t_for        shift, and go to state 93
    t_goto       shift, and go to state 94
    t_continue   shift, and go to state 293
    t_break      shift, and go to state 294
    t_return     shift, and go to state 95
    t_id         shift, and go to state 96
    t_open_sq    shift, and go to state 98
    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22
    t_pointer    shift, and go to state 99
    t_ampersand  shift, and go to state 100

    $default  reduce using rule 134 (CASE)

    BODY_FILLING    go to state 296
    VAR             go to state 103
    DEFER           go to state 104
    FUNC_CALL       go to state 105
    METHOD          go to state 106
    METHOD_FULFILL  go to state 107
    POINTER         go to state 108
    GOTO            go to state 109
    LABEL           go to state 110
    SWITCH          go to state 111
    IF              go to state 112
    IF_FIRST        go to state 113
    LOOP_FILLING    go to state 341
    RETURN          go to state 114
    SHORT_EXPR      go to state 115
    FOR             go to state 116
    ARRAY_BODY      go to state 117
    ARRAY_INDEX     go to state 118
    MULTI_AR        go to state 119
    SLICE           go to state 120
    STRUCT          go to state 121
    STRUCT_START    go to state 11
    END_SYMBOLS     go to state 342


State 340

  137 FIRST_PART: EXPR t_comma .

    $default  reduce using rule 137 (FIRST_PART)


State 341

  143 CASE_BODY: CASE_BODY LOOP_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 371


State 342

  144 CASE_BODY: CASE_BODY END_SYMBOLS .

    $default  reduce using rule 144 (CASE_BODY)


State 343

  123 SWITCH: t_switch INIT_STATE t_semicolon EXPR SWITCH_BODY .

    $default  reduce using rule 123 (SWITCH)


State 344

  183 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon . POST_STATE BODY_FOR_LOOP

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 372
    t_string            shift, and go to state 137
    t_open_paren        shift, and go to state 138
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 150
    EXPR            go to state 373
    POST_STATE      go to state 374
    EXPR_START      go to state 154


State 345

  168 MANY_RETURN_START: MANY_RETURN_START EXPR t_comma .

    $default  reduce using rule 168 (MANY_RETURN_START)


State 346

   82 ASSIGNMENT: t_comma t_id ASSIGNMENT BOOLEAN . t_comma

    t_comma  shift, and go to state 375


State 347

   77 BOOLEAN: EXPR . t_bool EXPR
   81 ASSIGNMENT: t_comma t_id ASSIGNMENT EXPR . t_comma
  170 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 215
    t_comma  shift, and go to state 376
    t_bool   shift, and go to state 216


State 348

   85 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN BOOLEAN . t_comma

    t_comma  shift, and go to state 377


State 349

   77 BOOLEAN: EXPR . t_bool EXPR
   84 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN EXPR . t_comma
  170 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 215
    t_comma  shift, and go to state 378
    t_bool   shift, and go to state 216


State 350

  206 SLICE: t_id t_open_sq t_colon VALUE t_close_sq .

    $default  reduce using rule 206 (SLICE)


State 351

  207 SLICE: t_id t_open_sq VALUE t_colon t_close_sq .

    $default  reduce using rule 207 (SLICE)


State 352

  205 SLICE: t_id t_open_sq VALUE t_colon VALUE . t_close_sq

    t_close_sq  shift, and go to state 379


State 353

  198 PLENTY_OLD: t_open_br . ENUM t_close_br
  199           | t_open_br . t_close_br
  200           | t_open_br . PLENTY t_close_br

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 165
    t_string            shift, and go to state 137
    t_open_br           shift, and go to state 353
    t_close_br          shift, and go to state 354
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 355
    PLENTY          go to state 356
    PLENTY_OLD      go to state 357
    ENUM            go to state 358


State 354

  199 PLENTY_OLD: t_open_br t_close_br .

    $default  reduce using rule 199 (PLENTY_OLD)


State 355

  201 ENUM: VALUE .

    $default  reduce using rule 201 (ENUM)


State 356

  200 PLENTY_OLD: t_open_br PLENTY . t_close_br

    t_close_br  shift, and go to state 380


State 357

  196 PLENTY: PLENTY_OLD .
  197       | PLENTY_OLD . t_comma PLENTY

    t_comma  shift, and go to state 381

    $default  reduce using rule 196 (PLENTY)


State 358

  198 PLENTY_OLD: t_open_br ENUM . t_close_br
  202 ENUM: ENUM . t_comma VALUE

    t_close_br  shift, and go to state 382
    t_comma     shift, and go to state 383


State 359

  221 STRUCT_FIELD: t_open_br END_SYMBOLS . STRUCT_ENUM t_close_br
  222             | t_open_br END_SYMBOLS . STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS

    t_id  shift, and go to state 384

    STRUCT_ENUM  go to state 385


State 360

  225 ST_EMBEDDED: STRUCT_FIELD t_comma . ST_EMBEDDED

    t_open_br  shift, and go to state 316

    PLENTY_OLD    go to state 317
    STRUCT_FIELD  go to state 318
    ST_EMBEDDED   go to state 386


State 361

  203 MAKE: t_make t_open_paren MULTI_AR . t_vtype t_comma VALUE t_close_paren
  204     | t_make t_open_paren MULTI_AR . t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_vtype  shift, and go to state 387


State 362

   69 VAR: t_id SHORT_ASSIGN t_make t_open_paren MAPS . t_close_paren

    t_close_paren  shift, and go to state 388


State 363

   58 VAR: t_id SHORT_ASSIGN MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 58 (VAR)


State 364

  161 ELSEIF_SECOND: t_else t_if CONDITION BODY_FOR_LOOP .

    $default  reduce using rule 161 (ELSEIF_SECOND)


State 365

  208 MAPS: t_map t_open_sq t_vtype t_close_sq . t_vtype

    t_vtype  shift, and go to state 389


State 366

   70 VAR: t_var t_id t_id ASSIGNMENT t_id ST_EMBEDDED .

    $default  reduce using rule 70 (VAR)


State 367

   59 VAR: t_var t_id ASSIGNMENT MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 59 (VAR)


State 368

  188 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 390


State 369

  189 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MAKE .

    $default  reduce using rule 189 (ARRAY_BODY)


State 370

  138 FIRST_PART: FIRST_PART EXPR t_comma .

    $default  reduce using rule 138 (FIRST_PART)


State 371

  143 CASE_BODY: CASE_BODY LOOP_FILLING END_SYMBOLS .

    $default  reduce using rule 143 (CASE_BODY)


State 372

   86 FUNC_CALL: t_id . PARAM
   98 SHIFT_AC: t_id .
  102 METHOD_FULFILL: t_id .
  113 VALUE: t_id .
  182 POST_STATE: t_id . t_inc_const

    t_inc_const   shift, and go to state 391
    t_open_paren  shift, and go to state 174

    t_shift_const  reduce using rule 98 (SHIFT_AC)
    t_dot          reduce using rule 102 (METHOD_FULFILL)
    $default       reduce using rule 113 (VALUE)

    PARAM        go to state 180
    PARAM_START  go to state 181


State 373

  170 EXPR: EXPR . t_sign VALUE
  181 POST_STATE: EXPR .

    t_sign  shift, and go to state 215

    $default  reduce using rule 181 (POST_STATE)


State 374

  183 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE . BODY_FOR_LOOP

    t_open_br  shift, and go to state 68

    ABSORB_EMPTYNESS     go to state 218
    BODY_FOR_LOOP        go to state 392
    BODY_FOR_LOOP_START  go to state 220


State 375

   82 ASSIGNMENT: t_comma t_id ASSIGNMENT BOOLEAN t_comma .

    $default  reduce using rule 82 (ASSIGNMENT)


State 376

   81 ASSIGNMENT: t_comma t_id ASSIGNMENT EXPR t_comma .

    $default  reduce using rule 81 (ASSIGNMENT)


State 377

   85 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN BOOLEAN t_comma .

    $default  reduce using rule 85 (SHORT_ASSIGN)


State 378

   84 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN EXPR t_comma .

    $default  reduce using rule 84 (SHORT_ASSIGN)


State 379

  205 SLICE: t_id t_open_sq VALUE t_colon VALUE t_close_sq .

    $default  reduce using rule 205 (SLICE)


State 380

  200 PLENTY_OLD: t_open_br PLENTY t_close_br .

    $default  reduce using rule 200 (PLENTY_OLD)


State 381

  197 PLENTY: PLENTY_OLD t_comma . PLENTY

    t_open_br  shift, and go to state 353

    PLENTY      go to state 393
    PLENTY_OLD  go to state 357


State 382

  198 PLENTY_OLD: t_open_br ENUM t_close_br .

    $default  reduce using rule 198 (PLENTY_OLD)


State 383

  202 ENUM: ENUM t_comma . VALUE

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 165
    t_string            shift, and go to state 137
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 394


State 384

  217 STRUCT_ENUM: t_id . t_colon VALUE
  219            | t_id . t_colon t_id STRUCT_FIELD

    t_colon  shift, and go to state 395


State 385

  218 STRUCT_ENUM: STRUCT_ENUM . t_comma END_SYMBOLS t_id t_colon VALUE
  220            | STRUCT_ENUM . t_comma END_SYMBOLS t_id t_colon t_id STRUCT_FIELD
  221 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM . t_close_br
  222             | t_open_br END_SYMBOLS STRUCT_ENUM . t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS

    t_close_br  shift, and go to state 396
    t_comma     shift, and go to state 397


State 386

  225 ST_EMBEDDED: STRUCT_FIELD t_comma ST_EMBEDDED .

    $default  reduce using rule 225 (ST_EMBEDDED)


State 387

  203 MAKE: t_make t_open_paren MULTI_AR t_vtype . t_comma VALUE t_close_paren
  204     | t_make t_open_paren MULTI_AR t_vtype . t_comma VALUE t_comma t_int_const VALUE

    t_comma  shift, and go to state 398


State 388

   69 VAR: t_id SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren .

    $default  reduce using rule 69 (VAR)


State 389

  208 MAPS: t_map t_open_sq t_vtype t_close_sq t_vtype .

    $default  reduce using rule 208 (MAPS)


State 390

  188 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 353

    PLENTY      go to state 399
    PLENTY_OLD  go to state 357


State 391

  182 POST_STATE: t_id t_inc_const .

    $default  reduce using rule 182 (POST_STATE)


State 392

  183 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY_FOR_LOOP .

    $default  reduce using rule 183 (FOR)


State 393

  197 PLENTY: PLENTY_OLD t_comma PLENTY .

    $default  reduce using rule 197 (PLENTY)


State 394

  202 ENUM: ENUM t_comma VALUE .

    $default  reduce using rule 202 (ENUM)


State 395

  217 STRUCT_ENUM: t_id t_colon . VALUE
  219            | t_id t_colon . t_id STRUCT_FIELD

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 400
    t_string            shift, and go to state 137
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 401


State 396

  221 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_close_br .

    $default  reduce using rule 221 (STRUCT_FIELD)


State 397

  218 STRUCT_ENUM: STRUCT_ENUM t_comma . END_SYMBOLS t_id t_colon VALUE
  220            | STRUCT_ENUM t_comma . END_SYMBOLS t_id t_colon t_id STRUCT_FIELD
  222 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma . END_SYMBOLS t_close_br t_comma END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 402


State 398

  203 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma . VALUE t_close_paren
  204     | t_make t_open_paren MULTI_AR t_vtype t_comma . VALUE t_comma t_int_const VALUE

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 165
    t_string            shift, and go to state 137
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 403


State 399

  188 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 188 (ARRAY_BODY)


State 400

   86 FUNC_CALL: t_id . PARAM
   98 SHIFT_AC: t_id .
  102 METHOD_FULFILL: t_id .
  113 VALUE: t_id .
  219 STRUCT_ENUM: t_id t_colon t_id . STRUCT_FIELD

    t_open_br     shift, and go to state 316
    t_open_paren  shift, and go to state 174

    t_shift_const  reduce using rule 98 (SHIFT_AC)
    t_dot          reduce using rule 102 (METHOD_FULFILL)
    $default       reduce using rule 113 (VALUE)

    PARAM         go to state 180
    PARAM_START   go to state 181
    PLENTY_OLD    go to state 317
    STRUCT_FIELD  go to state 404


State 401

  217 STRUCT_ENUM: t_id t_colon VALUE .

    $default  reduce using rule 217 (STRUCT_ENUM)


State 402

  218 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS . t_id t_colon VALUE
  220            | STRUCT_ENUM t_comma END_SYMBOLS . t_id t_colon t_id STRUCT_FIELD
  222 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS . t_close_br t_comma END_SYMBOLS

    t_id        shift, and go to state 405
    t_close_br  shift, and go to state 406


State 403

  203 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE . t_close_paren
  204     | t_make t_open_paren MULTI_AR t_vtype t_comma VALUE . t_comma t_int_const VALUE

    t_comma        shift, and go to state 407
    t_close_paren  shift, and go to state 408


State 404

  219 STRUCT_ENUM: t_id t_colon t_id STRUCT_FIELD .

    $default  reduce using rule 219 (STRUCT_ENUM)


State 405

  218 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id . t_colon VALUE
  220            | STRUCT_ENUM t_comma END_SYMBOLS t_id . t_colon t_id STRUCT_FIELD

    t_colon  shift, and go to state 409


State 406

  222 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br . t_comma END_SYMBOLS

    t_comma  shift, and go to state 410


State 407

  204 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma . t_int_const VALUE

    t_int_const  shift, and go to state 411


State 408

  203 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren .

    $default  reduce using rule 203 (MAKE)


State 409

  218 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon . VALUE
  220            | STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon . t_id STRUCT_FIELD

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 412
    t_string            shift, and go to state 137
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 413


State 410

  222 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma . END_SYMBOLS

    t_semicolon  shift, and go to state 20
    t_enter      shift, and go to state 21
    t_eof        shift, and go to state 22

    END_SYMBOLS  go to state 414


State 411

  204 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const . VALUE

    t_int_const         shift, and go to state 134
    t_float_const       shift, and go to state 135
    t_id                shift, and go to state 165
    t_string            shift, and go to state 137
    t_rune              shift, and go to state 139
    t_blank_identifier  shift, and go to state 140
    t_pointer           shift, and go to state 99
    t_ampersand         shift, and go to state 100

    FUNC_CALL       go to state 166
    SHIFT           go to state 146
    SHIFT_AC        go to state 147
    METHOD          go to state 167
    METHOD_FULFILL  go to state 107
    POINTER         go to state 168
    VALUE           go to state 415


State 412

   86 FUNC_CALL: t_id . PARAM
   98 SHIFT_AC: t_id .
  102 METHOD_FULFILL: t_id .
  113 VALUE: t_id .
  220 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon t_id . STRUCT_FIELD

    t_open_br     shift, and go to state 316
    t_open_paren  shift, and go to state 174

    t_shift_const  reduce using rule 98 (SHIFT_AC)
    t_dot          reduce using rule 102 (METHOD_FULFILL)
    $default       reduce using rule 113 (VALUE)

    PARAM         go to state 180
    PARAM_START   go to state 181
    PLENTY_OLD    go to state 317
    STRUCT_FIELD  go to state 416


State 413

  218 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon VALUE .

    $default  reduce using rule 218 (STRUCT_ENUM)


State 414

  222 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS .

    $default  reduce using rule 222 (STRUCT_FIELD)


State 415

  204 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE .

    $default  reduce using rule 204 (MAKE)


State 416

  220 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon t_id STRUCT_FIELD .

    $default  reduce using rule 220 (STRUCT_ENUM)
