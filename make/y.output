Terminals unused in grammar

   t_constant
   t_chan
   t_defer
   t_go
   t_interface
   t_range
   t_select
   t_fallthrough
   t_continue
   t_break
   t_or_const
   t_and_const
   t_param_const
   t_eq_const
   t_rel_const
   t_point_const
   t_punc
   t_char_const
   '+'
   '-'
   '*'
   '/'


Grammar

    0 $accept: START $end

    1 START: START GLOBAL END_SYMBOLS
    2      | GLOBAL END_SYMBOLS
    3      | START END_SYMBOLS

    4 GLOBAL: PACKAGE
    5       | IMPORT
    6       | FUNC
    7       | STRUCT

    8 PACKAGE: t_package t_id

    9 IMPORT: t_import t_string

   10 FUNC: t_func t_id BODY

   11 BODY: BODY_START BODY_END

   12 BODY_END: t_close_br

   13 BODY_START: t_open_br
   14           | BODY_START BODY_FILLING END_SYMBOLS
   15           | BODY_START END_SYMBOLS

   16 BODY_FILLING: VAR
   17             | FOR
   18             | SWITCH
   19             | GOTO
   20             | LABEL
   21             | IF
   22             | MULTI_AR
   23             | FUNC_CALL
   24             | SHORT_EXPR
   25             | ARRAY_BODY
   26             | RETURN
   27             | STRUCT
   28             | ACCESS_FIELDS

   29 VAR: t_var t_id ASSIGNMENT EXPR
   30    | t_var t_id ASSIGNMENT EXPR t_vtype
   31    | t_var t_id ASSIGNMENT BOOLEAN
   32    | t_id SHORT_ASSIGN EXPR
   33    | t_id SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   34    | t_var t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   35    | t_id SHORT_ASSIGN BOOLEAN
   36    | t_id MULTI_AR ASSIGNMENT EXPR
   37    | t_var t_id ASSIGNMENT MAKE
   38    | t_id SHORT_ASSIGN MAKE
   39    | t_id MULTI_AR ASSIGNMENT MAKE
   40    | t_id SHORT_ASSIGN SLICE
   41    | t_id ASSIGNMENT SLICE
   42    | t_var t_id ASSIGNMENT SLICE
   43    | t_var t_id MAPS
   44    | t_id SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   45    | t_var t_id t_id ASSIGNMENT t_id ST_EMBEDDED
   46    | t_var t_id ASSIGNMENT t_id ST_EMBEDDED
   47    | t_id SHORT_ASSIGN t_id ST_EMBEDDED
   48    | t_id ACCESS_FIELDS ASSIGNMENT VALUE

   49 BOOLEAN: EXPR t_bool EXPR

   50 ASSIGNMENT: t_vtype t_equality
   51           | t_equality
   52           | t_comma t_id ASSIGNMENT EXPR t_comma
   53           | t_comma t_id ASSIGNMENT BOOLEAN t_comma

   54 SHORT_ASSIGN: t_short_dec
   55             | t_comma t_id SHORT_ASSIGN EXPR t_comma
   56             | t_comma t_id SHORT_ASSIGN BOOLEAN t_comma

   57 FUNC_CALL: t_id t_open_paren PARAM t_close_paren
   58          | METHOD FUNC_CALL

   59 SHIFT: SHIFT_AC t_shift_const SHIFT_AC

   60 SHIFT_AC: t_id
   61         | t_int_const

   62 METHOD: t_id t_dot

   63 VALUE: t_int_const
   64      | t_float_const
   65      | t_id
   66      | t_string
   67      | t_rune
   68      | t_blank_identifier
   69      | FUNC_CALL
   70      | SHIFT

   71 GOTO: t_goto t_id

   72 LABEL: t_id t_colon

   73 SWITCH: t_switch INIT_STATE t_semicolon EXPR SWITCH_BODY
   74       | t_switch EXPR SWITCH_BODY
   75       | t_switch SWITCH_BODY

   76 SWITCH_BODY: SWITCH_BODY_START SWITCH_BODY_END
   77            | SWITCH_BODY_START_WITH_DEFAULT SWITCH_BODY_END

   78 SWITCH_BODY_START: t_open_br
   79                  | t_open_br END_SYMBOLS
   80                  | SWITCH_BODY_START CASE

   81 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START DEFAULT
   82                               | SWITCH_BODY_START_WITH_DEFAULT CASE

   83 CASE: t_case CASE_STATEMENT CASE_BODY

   84 DEFAULT: t_default CASE_BODY

   85 MULTIPLE_ARG: FIRST_PART SECOND_PART

   86 FIRST_PART: EXPR t_comma
   87           | FIRST_PART EXPR t_comma

   88 SECOND_PART: EXPR

   89 CASE_STATEMENT: MULTIPLE_ARG
   90               | EXPR

   91 CASE_BODY: t_colon
   92          | t_colon t_enter
   93          | CASE_BODY BODY_FILLING END_SYMBOLS

   94 SWITCH_BODY_END: t_close_br

   95 IF: IF_FIRST MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD
   96   | IF_FIRST MULTY_ELSEIF_SECOND
   97   | IF_FIRST MULTY_ELSE_THIRD
   98   | IF_FIRST

   99 IF_FIRST: t_if CONDITION BODY

  100 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND ELSEIF_SECOND
  101                    | ELSEIF_SECOND

  102 ELSEIF_SECOND: t_else t_if CONDITION BODY

  103 MULTY_ELSE_THIRD: ELSE_THIRD
  104                 | MULTY_ELSE_THIRD ELSE_THIRD

  105 ELSE_THIRD: t_else BODY

  106 RETURN: t_return PARAM

  107 PARAM: PARAM t_comma EXPR
  108      | EXPR
  109      | /* empty */

  110 EXPR: EXPR t_sign VALUE
  111     | EXPR_START EXPR EXPR_END
  112     | VALUE

  113 SHORT_EXPR: t_id t_short_expr t_id

  114 INIT_STATE: VAR
  115           | FUNC_CALL
  116           | /* empty */

  117 CONDITION: BOOLEAN
  118          | t_true
  119          | t_false
  120          | /* empty */

  121 POST_STATE: EXPR
  122           | t_id t_inc_const

  123 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY
  124    | t_for CONDITION BODY

  125 EXPR_START: t_open_paren

  126 EXPR_END: t_close_paren

  127 ARRAY_BODY: t_var t_id MULTI_AR t_vtype
  128           | t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  129           | t_var t_id MULTI_AR t_vtype ASSIGNMENT MAKE

  130 ARRAY_INDEX: t_open_sq t_int_const t_close_sq
  131            | t_open_sq t_id t_close_sq
  132            | t_open_sq t_string t_close_sq
  133            | t_open_sq t_close_sq

  134 MULTI_AR: ARRAY_INDEX
  135         | ARRAY_INDEX MULTI_AR

  136 PLENTY: PLENTY_OLD
  137       | PLENTY_OLD t_comma PLENTY

  138 PLENTY_OLD: t_open_br ENUM t_close_br
  139           | t_open_br t_close_br
  140           | t_open_br PLENTY t_close_br

  141 ENUM: VALUE
  142     | ENUM t_comma VALUE

  143 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  144     | t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

  145 SLICE: t_id t_open_sq VALUE t_colon VALUE t_close_sq
  146      | t_id t_open_sq t_colon VALUE t_close_sq
  147      | t_id t_open_sq VALUE t_colon t_close_sq

  148 MAPS: t_map t_open_sq t_vtype t_close_sq t_vtype

  149 STRUCT: STRUCT_START STRUCT_BODY END_SYMBOLS STRUCT_END

  150 STRUCT_START: t_type t_id t_struct_const

  151 STRUCT_BODY: t_open_br
  152            | STRUCT_BODY END_SYMBOLS t_id t_vtype
  153            | STRUCT_BODY END_SYMBOLS t_id t_id
  154            | STRUCT_BODY END_SYMBOLS t_id

  155 STRUCT_END: t_close_br

  156 STRUCT_ENUM: t_id t_colon VALUE
  157            | STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon VALUE
  158            | t_id t_colon t_id STRUCT_FIELD
  159            | STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon t_id STRUCT_FIELD

  160 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_close_br
  161             | t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS
  162             | PLENTY_OLD

  163 ST_EMBEDDED: STRUCT_FIELD
  164            | STRUCT_FIELD t_comma ST_EMBEDDED

  165 ACCESS_FIELDS: METHOD
  166              | METHOD ACCESS_FIELDS

  167 END_SYMBOLS: t_semicolon
  168            | t_enter
  169            | t_eof


Terminals, with rules where they appear

$end (0) 0
'*' (42)
'+' (43)
'-' (45)
'/' (47)
error (256)
t_vtype (258) 30 33 34 50 127 128 129 143 144 148 152
t_constant (259)
t_case (260) 83
t_func (261) 10
t_import (262) 9
t_chan (263)
t_defer (264)
t_go (265)
t_interface (266)
t_default (267) 84
t_var (268) 29 30 31 34 37 42 43 45 46 127 128 129
t_range (269)
t_map (270) 148
t_package (271) 8
t_if (272) 99 102
t_select (273)
t_switch (274) 73 74 75
t_fallthrough (275)
t_else (276) 102 105
t_type (277) 150
t_for (278) 123 124
t_goto (279) 71
t_continue (280)
t_break (281)
t_return (282) 106
t_struct_const (283) 150
t_or_const (284)
t_and_const (285)
t_param_const (286)
t_eq_const (287)
t_rel_const (288)
t_shift_const (289) 59
t_inc_const (290) 122
t_point_const (291)
t_punc (292)
t_int_const (293) 61 63 130 144
t_float_const (294) 64
t_char_const (295)
t_id (296) 8 10 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45
    46 47 48 52 53 55 56 57 60 62 65 71 72 113 122 127 128 129 131
    145 146 147 150 152 153 154 156 157 158 159
t_string (297) 9 66 132
t_short_dec (298) 54
t_open_br (299) 13 78 79 138 139 140 151 160 161
t_close_br (300) 12 94 138 139 140 155 160 161
t_sign (301) 110
t_comma (302) 52 53 55 56 86 87 107 137 142 143 144 157 159 161 164
t_equality (303) 50 51
t_open_paren (304) 44 57 125 143 144
t_close_paren (305) 44 57 126 143
t_open_sq (306) 130 131 132 133 145 146 147 148
t_close_sq (307) 130 131 132 133 145 146 147 148
t_bool (308) 49
t_rune (309) 67
t_semicolon (310) 73 123 167
t_blank_identifier (311) 68
t_dot (312) 62
t_colon (313) 72 91 92 145 146 147 156 157 158 159
t_true (314) 118
t_false (315) 119
t_short_expr (316) 113
t_make (317) 44 143 144
t_enter (318) 92 168
t_eof (319) 169


Nonterminals, with rules where they appear

$accept (69)
    on left: 0
START (70)
    on left: 1 2 3, on right: 0 1 3
GLOBAL (71)
    on left: 4 5 6 7, on right: 1 2
PACKAGE (72)
    on left: 8, on right: 4
IMPORT (73)
    on left: 9, on right: 5
FUNC (74)
    on left: 10, on right: 6
BODY (75)
    on left: 11, on right: 10 99 102 105 123 124
BODY_END (76)
    on left: 12, on right: 11
BODY_START (77)
    on left: 13 14 15, on right: 11 14 15
BODY_FILLING (78)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28, on right: 14 93
VAR (79)
    on left: 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46
    47 48, on right: 16 114
BOOLEAN (80)
    on left: 49, on right: 31 35 53 56 117
ASSIGNMENT (81)
    on left: 50 51 52 53, on right: 29 30 31 34 36 37 39 41 42 45 46
    48 52 53 128 129
SHORT_ASSIGN (82)
    on left: 54 55 56, on right: 32 33 35 38 40 44 47 55 56
FUNC_CALL (83)
    on left: 57 58, on right: 23 58 69 115
SHIFT (84)
    on left: 59, on right: 70
SHIFT_AC (85)
    on left: 60 61, on right: 59
METHOD (86)
    on left: 62, on right: 58 165 166
VALUE (87)
    on left: 63 64 65 66 67 68 69 70, on right: 48 110 112 141 142
    143 144 145 146 147 156 157
GOTO (88)
    on left: 71, on right: 19
LABEL (89)
    on left: 72, on right: 20
SWITCH (90)
    on left: 73 74 75, on right: 18
SWITCH_BODY (91)
    on left: 76 77, on right: 73 74 75
SWITCH_BODY_START (92)
    on left: 78 79 80, on right: 76 80 81
SWITCH_BODY_START_WITH_DEFAULT (93)
    on left: 81 82, on right: 77 82
CASE (94)
    on left: 83, on right: 80 82
DEFAULT (95)
    on left: 84, on right: 81
MULTIPLE_ARG (96)
    on left: 85, on right: 89
FIRST_PART (97)
    on left: 86 87, on right: 85 87
SECOND_PART (98)
    on left: 88, on right: 85
CASE_STATEMENT (99)
    on left: 89 90, on right: 83
CASE_BODY (100)
    on left: 91 92 93, on right: 83 84 93
SWITCH_BODY_END (101)
    on left: 94, on right: 76 77
IF (102)
    on left: 95 96 97 98, on right: 21
IF_FIRST (103)
    on left: 99, on right: 95 96 97 98
MULTY_ELSEIF_SECOND (104)
    on left: 100 101, on right: 95 96 100
ELSEIF_SECOND (105)
    on left: 102, on right: 100 101
MULTY_ELSE_THIRD (106)
    on left: 103 104, on right: 95 97 104
ELSE_THIRD (107)
    on left: 105, on right: 103 104
RETURN (108)
    on left: 106, on right: 26
PARAM (109)
    on left: 107 108 109, on right: 57 106 107
EXPR (110)
    on left: 110 111 112, on right: 29 30 32 36 49 52 55 73 74 86 87
    88 90 107 108 110 111 121
SHORT_EXPR (111)
    on left: 113, on right: 24
INIT_STATE (112)
    on left: 114 115 116, on right: 73 123
CONDITION (113)
    on left: 117 118 119 120, on right: 99 102 123 124
POST_STATE (114)
    on left: 121 122, on right: 123
FOR (115)
    on left: 123 124, on right: 17
EXPR_START (116)
    on left: 125, on right: 111
EXPR_END (117)
    on left: 126, on right: 111
ARRAY_BODY (118)
    on left: 127 128 129, on right: 25
ARRAY_INDEX (119)
    on left: 130 131 132 133, on right: 134 135
MULTI_AR (120)
    on left: 134 135, on right: 22 33 34 36 39 127 128 129 135 143
    144
PLENTY (121)
    on left: 136 137, on right: 33 34 128 137 140
PLENTY_OLD (122)
    on left: 138 139 140, on right: 136 137 162
ENUM (123)
    on left: 141 142, on right: 138 142
MAKE (124)
    on left: 143 144, on right: 37 38 39 129
SLICE (125)
    on left: 145 146 147, on right: 40 41 42
MAPS (126)
    on left: 148, on right: 43 44
STRUCT (127)
    on left: 149, on right: 7 27
STRUCT_START (128)
    on left: 150, on right: 149
STRUCT_BODY (129)
    on left: 151 152 153 154, on right: 149 152 153 154
STRUCT_END (130)
    on left: 155, on right: 149
STRUCT_ENUM (131)
    on left: 156 157 158 159, on right: 157 159 160 161
STRUCT_FIELD (132)
    on left: 160 161 162, on right: 158 159 163 164
ST_EMBEDDED (133)
    on left: 163 164, on right: 45 46 47 164
ACCESS_FIELDS (134)
    on left: 165 166, on right: 28 48 166
END_SYMBOLS (135)
    on left: 167 168 169, on right: 1 2 3 14 15 79 93 149 152 153 154
    157 159 160 161


State 0

    0 $accept: . START $end

    t_func     shift, and go to state 1
    t_import   shift, and go to state 2
    t_package  shift, and go to state 3
    t_type     shift, and go to state 4

    START         go to state 5
    GLOBAL        go to state 6
    PACKAGE       go to state 7
    IMPORT        go to state 8
    FUNC          go to state 9
    STRUCT        go to state 10
    STRUCT_START  go to state 11


State 1

   10 FUNC: t_func . t_id BODY

    t_id  shift, and go to state 12


State 2

    9 IMPORT: t_import . t_string

    t_string  shift, and go to state 13


State 3

    8 PACKAGE: t_package . t_id

    t_id  shift, and go to state 14


State 4

  150 STRUCT_START: t_type . t_id t_struct_const

    t_id  shift, and go to state 15


State 5

    0 $accept: START . $end
    1 START: START . GLOBAL END_SYMBOLS
    3      | START . END_SYMBOLS

    $end         shift, and go to state 16
    t_func       shift, and go to state 1
    t_import     shift, and go to state 2
    t_package    shift, and go to state 3
    t_type       shift, and go to state 4
    t_semicolon  shift, and go to state 17
    t_enter      shift, and go to state 18
    t_eof        shift, and go to state 19

    GLOBAL        go to state 20
    PACKAGE       go to state 7
    IMPORT        go to state 8
    FUNC          go to state 9
    STRUCT        go to state 10
    STRUCT_START  go to state 11
    END_SYMBOLS   go to state 21


State 6

    2 START: GLOBAL . END_SYMBOLS

    t_semicolon  shift, and go to state 17
    t_enter      shift, and go to state 18
    t_eof        shift, and go to state 19

    END_SYMBOLS  go to state 22


State 7

    4 GLOBAL: PACKAGE .

    $default  reduce using rule 4 (GLOBAL)


State 8

    5 GLOBAL: IMPORT .

    $default  reduce using rule 5 (GLOBAL)


State 9

    6 GLOBAL: FUNC .

    $default  reduce using rule 6 (GLOBAL)


State 10

    7 GLOBAL: STRUCT .

    $default  reduce using rule 7 (GLOBAL)


State 11

  149 STRUCT: STRUCT_START . STRUCT_BODY END_SYMBOLS STRUCT_END

    t_open_br  shift, and go to state 23

    STRUCT_BODY  go to state 24


State 12

   10 FUNC: t_func t_id . BODY

    t_open_br  shift, and go to state 25

    BODY        go to state 26
    BODY_START  go to state 27


State 13

    9 IMPORT: t_import t_string .

    $default  reduce using rule 9 (IMPORT)


State 14

    8 PACKAGE: t_package t_id .

    $default  reduce using rule 8 (PACKAGE)


State 15

  150 STRUCT_START: t_type t_id . t_struct_const

    t_struct_const  shift, and go to state 28


State 16

    0 $accept: START $end .

    $default  accept


State 17

  167 END_SYMBOLS: t_semicolon .

    $default  reduce using rule 167 (END_SYMBOLS)


State 18

  168 END_SYMBOLS: t_enter .

    $default  reduce using rule 168 (END_SYMBOLS)


State 19

  169 END_SYMBOLS: t_eof .

    $default  reduce using rule 169 (END_SYMBOLS)


State 20

    1 START: START GLOBAL . END_SYMBOLS

    t_semicolon  shift, and go to state 17
    t_enter      shift, and go to state 18
    t_eof        shift, and go to state 19

    END_SYMBOLS  go to state 29


State 21

    3 START: START END_SYMBOLS .

    $default  reduce using rule 3 (START)


State 22

    2 START: GLOBAL END_SYMBOLS .

    $default  reduce using rule 2 (START)


State 23

  151 STRUCT_BODY: t_open_br .

    $default  reduce using rule 151 (STRUCT_BODY)


State 24

  149 STRUCT: STRUCT_START STRUCT_BODY . END_SYMBOLS STRUCT_END
  152 STRUCT_BODY: STRUCT_BODY . END_SYMBOLS t_id t_vtype
  153            | STRUCT_BODY . END_SYMBOLS t_id t_id
  154            | STRUCT_BODY . END_SYMBOLS t_id

    t_semicolon  shift, and go to state 17
    t_enter      shift, and go to state 18
    t_eof        shift, and go to state 19

    END_SYMBOLS  go to state 30


State 25

   13 BODY_START: t_open_br .

    $default  reduce using rule 13 (BODY_START)


State 26

   10 FUNC: t_func t_id BODY .

    $default  reduce using rule 10 (FUNC)


State 27

   11 BODY: BODY_START . BODY_END
   14 BODY_START: BODY_START . BODY_FILLING END_SYMBOLS
   15           | BODY_START . END_SYMBOLS

    t_var        shift, and go to state 31
    t_if         shift, and go to state 32
    t_switch     shift, and go to state 33
    t_type       shift, and go to state 4
    t_for        shift, and go to state 34
    t_goto       shift, and go to state 35
    t_return     shift, and go to state 36
    t_id         shift, and go to state 37
    t_close_br   shift, and go to state 38
    t_open_sq    shift, and go to state 39
    t_semicolon  shift, and go to state 17
    t_enter      shift, and go to state 18
    t_eof        shift, and go to state 19

    BODY_END       go to state 40
    BODY_FILLING   go to state 41
    VAR            go to state 42
    FUNC_CALL      go to state 43
    METHOD         go to state 44
    GOTO           go to state 45
    LABEL          go to state 46
    SWITCH         go to state 47
    IF             go to state 48
    IF_FIRST       go to state 49
    RETURN         go to state 50
    SHORT_EXPR     go to state 51
    FOR            go to state 52
    ARRAY_BODY     go to state 53
    ARRAY_INDEX    go to state 54
    MULTI_AR       go to state 55
    STRUCT         go to state 56
    STRUCT_START   go to state 11
    ACCESS_FIELDS  go to state 57
    END_SYMBOLS    go to state 58


State 28

  150 STRUCT_START: t_type t_id t_struct_const .

    $default  reduce using rule 150 (STRUCT_START)


State 29

    1 START: START GLOBAL END_SYMBOLS .

    $default  reduce using rule 1 (START)


State 30

  149 STRUCT: STRUCT_START STRUCT_BODY END_SYMBOLS . STRUCT_END
  152 STRUCT_BODY: STRUCT_BODY END_SYMBOLS . t_id t_vtype
  153            | STRUCT_BODY END_SYMBOLS . t_id t_id
  154            | STRUCT_BODY END_SYMBOLS . t_id

    t_id        shift, and go to state 59
    t_close_br  shift, and go to state 60

    STRUCT_END  go to state 61


State 31

   29 VAR: t_var . t_id ASSIGNMENT EXPR
   30    | t_var . t_id ASSIGNMENT EXPR t_vtype
   31    | t_var . t_id ASSIGNMENT BOOLEAN
   34    | t_var . t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   37    | t_var . t_id ASSIGNMENT MAKE
   42    | t_var . t_id ASSIGNMENT SLICE
   43    | t_var . t_id MAPS
   45    | t_var . t_id t_id ASSIGNMENT t_id ST_EMBEDDED
   46    | t_var . t_id ASSIGNMENT t_id ST_EMBEDDED
  127 ARRAY_BODY: t_var . t_id MULTI_AR t_vtype
  128           | t_var . t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  129           | t_var . t_id MULTI_AR t_vtype ASSIGNMENT MAKE

    t_id  shift, and go to state 62


State 32

   99 IF_FIRST: t_if . CONDITION BODY

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_true              shift, and go to state 70
    t_false             shift, and go to state 71

    $default  reduce using rule 120 (CONDITION)

    BOOLEAN     go to state 72
    FUNC_CALL   go to state 73
    SHIFT       go to state 74
    SHIFT_AC    go to state 75
    METHOD      go to state 76
    VALUE       go to state 77
    EXPR        go to state 78
    CONDITION   go to state 79
    EXPR_START  go to state 80


State 33

   73 SWITCH: t_switch . INIT_STATE t_semicolon EXPR SWITCH_BODY
   74       | t_switch . EXPR SWITCH_BODY
   75       | t_switch . SWITCH_BODY

    t_var               shift, and go to state 81
    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 82
    t_string            shift, and go to state 66
    t_open_br           shift, and go to state 83
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69

    $default  reduce using rule 116 (INIT_STATE)

    VAR                             go to state 84
    FUNC_CALL                       go to state 85
    SHIFT                           go to state 74
    SHIFT_AC                        go to state 75
    METHOD                          go to state 76
    VALUE                           go to state 77
    SWITCH_BODY                     go to state 86
    SWITCH_BODY_START               go to state 87
    SWITCH_BODY_START_WITH_DEFAULT  go to state 88
    EXPR                            go to state 89
    INIT_STATE                      go to state 90
    EXPR_START                      go to state 80


State 34

  123 FOR: t_for . INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY
  124    | t_for . CONDITION BODY

    t_var               shift, and go to state 81
    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 82
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_true              shift, and go to state 70
    t_false             shift, and go to state 71

    t_open_br  reduce using rule 120 (CONDITION)
    $default   reduce using rule 116 (INIT_STATE)

    VAR         go to state 84
    BOOLEAN     go to state 72
    FUNC_CALL   go to state 85
    SHIFT       go to state 74
    SHIFT_AC    go to state 75
    METHOD      go to state 76
    VALUE       go to state 77
    EXPR        go to state 78
    INIT_STATE  go to state 91
    CONDITION   go to state 92
    EXPR_START  go to state 80


State 35

   71 GOTO: t_goto . t_id

    t_id  shift, and go to state 93


State 36

  106 RETURN: t_return . PARAM

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69

    $default  reduce using rule 109 (PARAM)

    FUNC_CALL   go to state 73
    SHIFT       go to state 74
    SHIFT_AC    go to state 75
    METHOD      go to state 76
    VALUE       go to state 77
    PARAM       go to state 94
    EXPR        go to state 95
    EXPR_START  go to state 80


State 37

   32 VAR: t_id . SHORT_ASSIGN EXPR
   33    | t_id . SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   35    | t_id . SHORT_ASSIGN BOOLEAN
   36    | t_id . MULTI_AR ASSIGNMENT EXPR
   38    | t_id . SHORT_ASSIGN MAKE
   39    | t_id . MULTI_AR ASSIGNMENT MAKE
   40    | t_id . SHORT_ASSIGN SLICE
   41    | t_id . ASSIGNMENT SLICE
   44    | t_id . SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   47    | t_id . SHORT_ASSIGN t_id ST_EMBEDDED
   48    | t_id . ACCESS_FIELDS ASSIGNMENT VALUE
   57 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   62 METHOD: t_id . t_dot
   72 LABEL: t_id . t_colon
  113 SHORT_EXPR: t_id . t_short_expr t_id

    t_vtype       shift, and go to state 96
    t_id          shift, and go to state 97
    t_short_dec   shift, and go to state 98
    t_comma       shift, and go to state 99
    t_equality    shift, and go to state 100
    t_open_paren  shift, and go to state 101
    t_open_sq     shift, and go to state 39
    t_dot         shift, and go to state 102
    t_colon       shift, and go to state 103
    t_short_expr  shift, and go to state 104

    ASSIGNMENT     go to state 105
    SHORT_ASSIGN   go to state 106
    METHOD         go to state 107
    ARRAY_INDEX    go to state 54
    MULTI_AR       go to state 108
    ACCESS_FIELDS  go to state 109


State 38

   12 BODY_END: t_close_br .

    $default  reduce using rule 12 (BODY_END)


State 39

  130 ARRAY_INDEX: t_open_sq . t_int_const t_close_sq
  131            | t_open_sq . t_id t_close_sq
  132            | t_open_sq . t_string t_close_sq
  133            | t_open_sq . t_close_sq

    t_int_const  shift, and go to state 110
    t_id         shift, and go to state 111
    t_string     shift, and go to state 112
    t_close_sq   shift, and go to state 113


State 40

   11 BODY: BODY_START BODY_END .

    $default  reduce using rule 11 (BODY)


State 41

   14 BODY_START: BODY_START BODY_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 17
    t_enter      shift, and go to state 18
    t_eof        shift, and go to state 19

    END_SYMBOLS  go to state 114


State 42

   16 BODY_FILLING: VAR .

    $default  reduce using rule 16 (BODY_FILLING)


State 43

   23 BODY_FILLING: FUNC_CALL .

    $default  reduce using rule 23 (BODY_FILLING)


State 44

   58 FUNC_CALL: METHOD . FUNC_CALL
  165 ACCESS_FIELDS: METHOD .
  166              | METHOD . ACCESS_FIELDS

    t_id  shift, and go to state 115

    $default  reduce using rule 165 (ACCESS_FIELDS)

    FUNC_CALL      go to state 116
    METHOD         go to state 44
    ACCESS_FIELDS  go to state 117


State 45

   19 BODY_FILLING: GOTO .

    $default  reduce using rule 19 (BODY_FILLING)


State 46

   20 BODY_FILLING: LABEL .

    $default  reduce using rule 20 (BODY_FILLING)


State 47

   18 BODY_FILLING: SWITCH .

    $default  reduce using rule 18 (BODY_FILLING)


State 48

   21 BODY_FILLING: IF .

    $default  reduce using rule 21 (BODY_FILLING)


State 49

   95 IF: IF_FIRST . MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD
   96   | IF_FIRST . MULTY_ELSEIF_SECOND
   97   | IF_FIRST . MULTY_ELSE_THIRD
   98   | IF_FIRST .

    t_else  shift, and go to state 118

    $default  reduce using rule 98 (IF)

    MULTY_ELSEIF_SECOND  go to state 119
    ELSEIF_SECOND        go to state 120
    MULTY_ELSE_THIRD     go to state 121
    ELSE_THIRD           go to state 122


State 50

   26 BODY_FILLING: RETURN .

    $default  reduce using rule 26 (BODY_FILLING)


State 51

   24 BODY_FILLING: SHORT_EXPR .

    $default  reduce using rule 24 (BODY_FILLING)


State 52

   17 BODY_FILLING: FOR .

    $default  reduce using rule 17 (BODY_FILLING)


State 53

   25 BODY_FILLING: ARRAY_BODY .

    $default  reduce using rule 25 (BODY_FILLING)


State 54

  134 MULTI_AR: ARRAY_INDEX .
  135         | ARRAY_INDEX . MULTI_AR

    t_open_sq  shift, and go to state 39

    $default  reduce using rule 134 (MULTI_AR)

    ARRAY_INDEX  go to state 54
    MULTI_AR     go to state 123


State 55

   22 BODY_FILLING: MULTI_AR .

    $default  reduce using rule 22 (BODY_FILLING)


State 56

   27 BODY_FILLING: STRUCT .

    $default  reduce using rule 27 (BODY_FILLING)


State 57

   28 BODY_FILLING: ACCESS_FIELDS .

    $default  reduce using rule 28 (BODY_FILLING)


State 58

   15 BODY_START: BODY_START END_SYMBOLS .

    $default  reduce using rule 15 (BODY_START)


State 59

  152 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id . t_vtype
  153            | STRUCT_BODY END_SYMBOLS t_id . t_id
  154            | STRUCT_BODY END_SYMBOLS t_id .

    t_vtype  shift, and go to state 124
    t_id     shift, and go to state 125

    $default  reduce using rule 154 (STRUCT_BODY)


State 60

  155 STRUCT_END: t_close_br .

    $default  reduce using rule 155 (STRUCT_END)


State 61

  149 STRUCT: STRUCT_START STRUCT_BODY END_SYMBOLS STRUCT_END .

    $default  reduce using rule 149 (STRUCT)


State 62

   29 VAR: t_var t_id . ASSIGNMENT EXPR
   30    | t_var t_id . ASSIGNMENT EXPR t_vtype
   31    | t_var t_id . ASSIGNMENT BOOLEAN
   34    | t_var t_id . ASSIGNMENT MULTI_AR t_vtype PLENTY
   37    | t_var t_id . ASSIGNMENT MAKE
   42    | t_var t_id . ASSIGNMENT SLICE
   43    | t_var t_id . MAPS
   45    | t_var t_id . t_id ASSIGNMENT t_id ST_EMBEDDED
   46    | t_var t_id . ASSIGNMENT t_id ST_EMBEDDED
  127 ARRAY_BODY: t_var t_id . MULTI_AR t_vtype
  128           | t_var t_id . MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  129           | t_var t_id . MULTI_AR t_vtype ASSIGNMENT MAKE

    t_vtype     shift, and go to state 96
    t_map       shift, and go to state 126
    t_id        shift, and go to state 127
    t_comma     shift, and go to state 128
    t_equality  shift, and go to state 100
    t_open_sq   shift, and go to state 39

    ASSIGNMENT   go to state 129
    ARRAY_INDEX  go to state 54
    MULTI_AR     go to state 130
    MAPS         go to state 131


State 63

   61 SHIFT_AC: t_int_const .
   63 VALUE: t_int_const .

    t_shift_const  reduce using rule 61 (SHIFT_AC)
    $default       reduce using rule 63 (VALUE)


State 64

   64 VALUE: t_float_const .

    $default  reduce using rule 64 (VALUE)


State 65

   57 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   60 SHIFT_AC: t_id .
   62 METHOD: t_id . t_dot
   65 VALUE: t_id .

    t_open_paren  shift, and go to state 101
    t_dot         shift, and go to state 102

    t_shift_const  reduce using rule 60 (SHIFT_AC)
    $default       reduce using rule 65 (VALUE)


State 66

   66 VALUE: t_string .

    $default  reduce using rule 66 (VALUE)


State 67

  125 EXPR_START: t_open_paren .

    $default  reduce using rule 125 (EXPR_START)


State 68

   67 VALUE: t_rune .

    $default  reduce using rule 67 (VALUE)


State 69

   68 VALUE: t_blank_identifier .

    $default  reduce using rule 68 (VALUE)


State 70

  118 CONDITION: t_true .

    $default  reduce using rule 118 (CONDITION)


State 71

  119 CONDITION: t_false .

    $default  reduce using rule 119 (CONDITION)


State 72

  117 CONDITION: BOOLEAN .

    $default  reduce using rule 117 (CONDITION)


State 73

   69 VALUE: FUNC_CALL .

    $default  reduce using rule 69 (VALUE)


State 74

   70 VALUE: SHIFT .

    $default  reduce using rule 70 (VALUE)


State 75

   59 SHIFT: SHIFT_AC . t_shift_const SHIFT_AC

    t_shift_const  shift, and go to state 132


State 76

   58 FUNC_CALL: METHOD . FUNC_CALL

    t_id  shift, and go to state 115

    FUNC_CALL  go to state 116
    METHOD     go to state 76


State 77

  112 EXPR: VALUE .

    $default  reduce using rule 112 (EXPR)


State 78

   49 BOOLEAN: EXPR . t_bool EXPR
  110 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 133
    t_bool  shift, and go to state 134


State 79

   99 IF_FIRST: t_if CONDITION . BODY

    t_open_br  shift, and go to state 25

    BODY        go to state 135
    BODY_START  go to state 27


State 80

  111 EXPR: EXPR_START . EXPR EXPR_END

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69

    FUNC_CALL   go to state 73
    SHIFT       go to state 74
    SHIFT_AC    go to state 75
    METHOD      go to state 76
    VALUE       go to state 77
    EXPR        go to state 136
    EXPR_START  go to state 80


State 81

   29 VAR: t_var . t_id ASSIGNMENT EXPR
   30    | t_var . t_id ASSIGNMENT EXPR t_vtype
   31    | t_var . t_id ASSIGNMENT BOOLEAN
   34    | t_var . t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   37    | t_var . t_id ASSIGNMENT MAKE
   42    | t_var . t_id ASSIGNMENT SLICE
   43    | t_var . t_id MAPS
   45    | t_var . t_id t_id ASSIGNMENT t_id ST_EMBEDDED
   46    | t_var . t_id ASSIGNMENT t_id ST_EMBEDDED

    t_id  shift, and go to state 137


State 82

   32 VAR: t_id . SHORT_ASSIGN EXPR
   33    | t_id . SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   35    | t_id . SHORT_ASSIGN BOOLEAN
   36    | t_id . MULTI_AR ASSIGNMENT EXPR
   38    | t_id . SHORT_ASSIGN MAKE
   39    | t_id . MULTI_AR ASSIGNMENT MAKE
   40    | t_id . SHORT_ASSIGN SLICE
   41    | t_id . ASSIGNMENT SLICE
   44    | t_id . SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   47    | t_id . SHORT_ASSIGN t_id ST_EMBEDDED
   48    | t_id . ACCESS_FIELDS ASSIGNMENT VALUE
   57 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   60 SHIFT_AC: t_id .
   62 METHOD: t_id . t_dot
   65 VALUE: t_id .

    t_vtype       shift, and go to state 96
    t_id          shift, and go to state 97
    t_short_dec   shift, and go to state 98
    t_comma       shift, and go to state 99
    t_equality    shift, and go to state 100
    t_open_paren  shift, and go to state 101
    t_open_sq     shift, and go to state 39
    t_dot         shift, and go to state 102

    t_shift_const  reduce using rule 60 (SHIFT_AC)
    $default       reduce using rule 65 (VALUE)

    ASSIGNMENT     go to state 105
    SHORT_ASSIGN   go to state 106
    METHOD         go to state 107
    ARRAY_INDEX    go to state 54
    MULTI_AR       go to state 108
    ACCESS_FIELDS  go to state 109


State 83

   78 SWITCH_BODY_START: t_open_br .
   79                  | t_open_br . END_SYMBOLS

    t_semicolon  shift, and go to state 17
    t_enter      shift, and go to state 18
    t_eof        shift, and go to state 19

    $default  reduce using rule 78 (SWITCH_BODY_START)

    END_SYMBOLS  go to state 138


State 84

  114 INIT_STATE: VAR .

    $default  reduce using rule 114 (INIT_STATE)


State 85

   69 VALUE: FUNC_CALL .
  115 INIT_STATE: FUNC_CALL .

    t_semicolon  reduce using rule 115 (INIT_STATE)
    $default     reduce using rule 69 (VALUE)


State 86

   75 SWITCH: t_switch SWITCH_BODY .

    $default  reduce using rule 75 (SWITCH)


State 87

   76 SWITCH_BODY: SWITCH_BODY_START . SWITCH_BODY_END
   80 SWITCH_BODY_START: SWITCH_BODY_START . CASE
   81 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START . DEFAULT

    t_case      shift, and go to state 139
    t_default   shift, and go to state 140
    t_close_br  shift, and go to state 141

    CASE             go to state 142
    DEFAULT          go to state 143
    SWITCH_BODY_END  go to state 144


State 88

   77 SWITCH_BODY: SWITCH_BODY_START_WITH_DEFAULT . SWITCH_BODY_END
   82 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START_WITH_DEFAULT . CASE

    t_case      shift, and go to state 139
    t_close_br  shift, and go to state 141

    CASE             go to state 145
    SWITCH_BODY_END  go to state 146


State 89

   74 SWITCH: t_switch EXPR . SWITCH_BODY
  110 EXPR: EXPR . t_sign VALUE

    t_open_br  shift, and go to state 83
    t_sign     shift, and go to state 133

    SWITCH_BODY                     go to state 147
    SWITCH_BODY_START               go to state 87
    SWITCH_BODY_START_WITH_DEFAULT  go to state 88


State 90

   73 SWITCH: t_switch INIT_STATE . t_semicolon EXPR SWITCH_BODY

    t_semicolon  shift, and go to state 148


State 91

  123 FOR: t_for INIT_STATE . t_semicolon CONDITION t_semicolon POST_STATE BODY

    t_semicolon  shift, and go to state 149


State 92

  124 FOR: t_for CONDITION . BODY

    t_open_br  shift, and go to state 25

    BODY        go to state 150
    BODY_START  go to state 27


State 93

   71 GOTO: t_goto t_id .

    $default  reduce using rule 71 (GOTO)


State 94

  106 RETURN: t_return PARAM .
  107 PARAM: PARAM . t_comma EXPR

    t_comma  shift, and go to state 151

    $default  reduce using rule 106 (RETURN)


State 95

  108 PARAM: EXPR .
  110 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 133

    $default  reduce using rule 108 (PARAM)


State 96

   50 ASSIGNMENT: t_vtype . t_equality

    t_equality  shift, and go to state 152


State 97

   62 METHOD: t_id . t_dot

    t_dot  shift, and go to state 102


State 98

   54 SHORT_ASSIGN: t_short_dec .

    $default  reduce using rule 54 (SHORT_ASSIGN)


State 99

   52 ASSIGNMENT: t_comma . t_id ASSIGNMENT EXPR t_comma
   53           | t_comma . t_id ASSIGNMENT BOOLEAN t_comma
   55 SHORT_ASSIGN: t_comma . t_id SHORT_ASSIGN EXPR t_comma
   56             | t_comma . t_id SHORT_ASSIGN BOOLEAN t_comma

    t_id  shift, and go to state 153


State 100

   51 ASSIGNMENT: t_equality .

    $default  reduce using rule 51 (ASSIGNMENT)


State 101

   57 FUNC_CALL: t_id t_open_paren . PARAM t_close_paren

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69

    $default  reduce using rule 109 (PARAM)

    FUNC_CALL   go to state 73
    SHIFT       go to state 74
    SHIFT_AC    go to state 75
    METHOD      go to state 76
    VALUE       go to state 77
    PARAM       go to state 154
    EXPR        go to state 95
    EXPR_START  go to state 80


State 102

   62 METHOD: t_id t_dot .

    $default  reduce using rule 62 (METHOD)


State 103

   72 LABEL: t_id t_colon .

    $default  reduce using rule 72 (LABEL)


State 104

  113 SHORT_EXPR: t_id t_short_expr . t_id

    t_id  shift, and go to state 155


State 105

   41 VAR: t_id ASSIGNMENT . SLICE

    t_id  shift, and go to state 156

    SLICE  go to state 157


State 106

   32 VAR: t_id SHORT_ASSIGN . EXPR
   33    | t_id SHORT_ASSIGN . MULTI_AR t_vtype PLENTY
   35    | t_id SHORT_ASSIGN . BOOLEAN
   38    | t_id SHORT_ASSIGN . MAKE
   40    | t_id SHORT_ASSIGN . SLICE
   44    | t_id SHORT_ASSIGN . t_make t_open_paren MAPS t_close_paren
   47    | t_id SHORT_ASSIGN . t_id ST_EMBEDDED

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 158
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_open_sq           shift, and go to state 39
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_make              shift, and go to state 159

    BOOLEAN      go to state 160
    FUNC_CALL    go to state 73
    SHIFT        go to state 74
    SHIFT_AC     go to state 75
    METHOD       go to state 76
    VALUE        go to state 77
    EXPR         go to state 161
    EXPR_START   go to state 80
    ARRAY_INDEX  go to state 54
    MULTI_AR     go to state 162
    MAKE         go to state 163
    SLICE        go to state 164


State 107

  165 ACCESS_FIELDS: METHOD .
  166              | METHOD . ACCESS_FIELDS

    t_id  shift, and go to state 97

    $default  reduce using rule 165 (ACCESS_FIELDS)

    METHOD         go to state 107
    ACCESS_FIELDS  go to state 117


State 108

   36 VAR: t_id MULTI_AR . ASSIGNMENT EXPR
   39    | t_id MULTI_AR . ASSIGNMENT MAKE

    t_vtype     shift, and go to state 96
    t_comma     shift, and go to state 128
    t_equality  shift, and go to state 100

    ASSIGNMENT  go to state 165


State 109

   48 VAR: t_id ACCESS_FIELDS . ASSIGNMENT VALUE

    t_vtype     shift, and go to state 96
    t_comma     shift, and go to state 128
    t_equality  shift, and go to state 100

    ASSIGNMENT  go to state 166


State 110

  130 ARRAY_INDEX: t_open_sq t_int_const . t_close_sq

    t_close_sq  shift, and go to state 167


State 111

  131 ARRAY_INDEX: t_open_sq t_id . t_close_sq

    t_close_sq  shift, and go to state 168


State 112

  132 ARRAY_INDEX: t_open_sq t_string . t_close_sq

    t_close_sq  shift, and go to state 169


State 113

  133 ARRAY_INDEX: t_open_sq t_close_sq .

    $default  reduce using rule 133 (ARRAY_INDEX)


State 114

   14 BODY_START: BODY_START BODY_FILLING END_SYMBOLS .

    $default  reduce using rule 14 (BODY_START)


State 115

   57 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   62 METHOD: t_id . t_dot

    t_open_paren  shift, and go to state 101
    t_dot         shift, and go to state 102


State 116

   58 FUNC_CALL: METHOD FUNC_CALL .

    $default  reduce using rule 58 (FUNC_CALL)


State 117

  166 ACCESS_FIELDS: METHOD ACCESS_FIELDS .

    $default  reduce using rule 166 (ACCESS_FIELDS)


State 118

  102 ELSEIF_SECOND: t_else . t_if CONDITION BODY
  105 ELSE_THIRD: t_else . BODY

    t_if       shift, and go to state 170
    t_open_br  shift, and go to state 25

    BODY        go to state 171
    BODY_START  go to state 27


State 119

   95 IF: IF_FIRST MULTY_ELSEIF_SECOND . MULTY_ELSE_THIRD
   96   | IF_FIRST MULTY_ELSEIF_SECOND .
  100 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND . ELSEIF_SECOND

    t_else  shift, and go to state 118

    $default  reduce using rule 96 (IF)

    ELSEIF_SECOND     go to state 172
    MULTY_ELSE_THIRD  go to state 173
    ELSE_THIRD        go to state 122


State 120

  101 MULTY_ELSEIF_SECOND: ELSEIF_SECOND .

    $default  reduce using rule 101 (MULTY_ELSEIF_SECOND)


State 121

   97 IF: IF_FIRST MULTY_ELSE_THIRD .
  104 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD . ELSE_THIRD

    t_else  shift, and go to state 174

    $default  reduce using rule 97 (IF)

    ELSE_THIRD  go to state 175


State 122

  103 MULTY_ELSE_THIRD: ELSE_THIRD .

    $default  reduce using rule 103 (MULTY_ELSE_THIRD)


State 123

  135 MULTI_AR: ARRAY_INDEX MULTI_AR .

    $default  reduce using rule 135 (MULTI_AR)


State 124

  152 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id t_vtype .

    $default  reduce using rule 152 (STRUCT_BODY)


State 125

  153 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id t_id .

    $default  reduce using rule 153 (STRUCT_BODY)


State 126

  148 MAPS: t_map . t_open_sq t_vtype t_close_sq t_vtype

    t_open_sq  shift, and go to state 176


State 127

   45 VAR: t_var t_id t_id . ASSIGNMENT t_id ST_EMBEDDED

    t_vtype     shift, and go to state 96
    t_comma     shift, and go to state 128
    t_equality  shift, and go to state 100

    ASSIGNMENT  go to state 177


State 128

   52 ASSIGNMENT: t_comma . t_id ASSIGNMENT EXPR t_comma
   53           | t_comma . t_id ASSIGNMENT BOOLEAN t_comma

    t_id  shift, and go to state 178


State 129

   29 VAR: t_var t_id ASSIGNMENT . EXPR
   30    | t_var t_id ASSIGNMENT . EXPR t_vtype
   31    | t_var t_id ASSIGNMENT . BOOLEAN
   34    | t_var t_id ASSIGNMENT . MULTI_AR t_vtype PLENTY
   37    | t_var t_id ASSIGNMENT . MAKE
   42    | t_var t_id ASSIGNMENT . SLICE
   46    | t_var t_id ASSIGNMENT . t_id ST_EMBEDDED

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 179
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_open_sq           shift, and go to state 39
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_make              shift, and go to state 180

    BOOLEAN      go to state 181
    FUNC_CALL    go to state 73
    SHIFT        go to state 74
    SHIFT_AC     go to state 75
    METHOD       go to state 76
    VALUE        go to state 77
    EXPR         go to state 182
    EXPR_START   go to state 80
    ARRAY_INDEX  go to state 54
    MULTI_AR     go to state 183
    MAKE         go to state 184
    SLICE        go to state 185


State 130

  127 ARRAY_BODY: t_var t_id MULTI_AR . t_vtype
  128           | t_var t_id MULTI_AR . t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  129           | t_var t_id MULTI_AR . t_vtype ASSIGNMENT MAKE

    t_vtype  shift, and go to state 186


State 131

   43 VAR: t_var t_id MAPS .

    $default  reduce using rule 43 (VAR)


State 132

   59 SHIFT: SHIFT_AC t_shift_const . SHIFT_AC

    t_int_const  shift, and go to state 187
    t_id         shift, and go to state 188

    SHIFT_AC  go to state 189


State 133

  110 EXPR: EXPR t_sign . VALUE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69

    FUNC_CALL  go to state 73
    SHIFT      go to state 74
    SHIFT_AC   go to state 75
    METHOD     go to state 76
    VALUE      go to state 190


State 134

   49 BOOLEAN: EXPR t_bool . EXPR

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69

    FUNC_CALL   go to state 73
    SHIFT       go to state 74
    SHIFT_AC    go to state 75
    METHOD      go to state 76
    VALUE       go to state 77
    EXPR        go to state 191
    EXPR_START  go to state 80


State 135

   99 IF_FIRST: t_if CONDITION BODY .

    $default  reduce using rule 99 (IF_FIRST)


State 136

  110 EXPR: EXPR . t_sign VALUE
  111     | EXPR_START EXPR . EXPR_END

    t_sign         shift, and go to state 133
    t_close_paren  shift, and go to state 192

    EXPR_END  go to state 193


State 137

   29 VAR: t_var t_id . ASSIGNMENT EXPR
   30    | t_var t_id . ASSIGNMENT EXPR t_vtype
   31    | t_var t_id . ASSIGNMENT BOOLEAN
   34    | t_var t_id . ASSIGNMENT MULTI_AR t_vtype PLENTY
   37    | t_var t_id . ASSIGNMENT MAKE
   42    | t_var t_id . ASSIGNMENT SLICE
   43    | t_var t_id . MAPS
   45    | t_var t_id . t_id ASSIGNMENT t_id ST_EMBEDDED
   46    | t_var t_id . ASSIGNMENT t_id ST_EMBEDDED

    t_vtype     shift, and go to state 96
    t_map       shift, and go to state 126
    t_id        shift, and go to state 127
    t_comma     shift, and go to state 128
    t_equality  shift, and go to state 100

    ASSIGNMENT  go to state 129
    MAPS        go to state 131


State 138

   79 SWITCH_BODY_START: t_open_br END_SYMBOLS .

    $default  reduce using rule 79 (SWITCH_BODY_START)


State 139

   83 CASE: t_case . CASE_STATEMENT CASE_BODY

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    VALUE           go to state 77
    MULTIPLE_ARG    go to state 194
    FIRST_PART      go to state 195
    CASE_STATEMENT  go to state 196
    EXPR            go to state 197
    EXPR_START      go to state 80


State 140

   84 DEFAULT: t_default . CASE_BODY

    t_colon  shift, and go to state 198

    CASE_BODY  go to state 199


State 141

   94 SWITCH_BODY_END: t_close_br .

    $default  reduce using rule 94 (SWITCH_BODY_END)


State 142

   80 SWITCH_BODY_START: SWITCH_BODY_START CASE .

    $default  reduce using rule 80 (SWITCH_BODY_START)


State 143

   81 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START DEFAULT .

    $default  reduce using rule 81 (SWITCH_BODY_START_WITH_DEFAULT)


State 144

   76 SWITCH_BODY: SWITCH_BODY_START SWITCH_BODY_END .

    $default  reduce using rule 76 (SWITCH_BODY)


State 145

   82 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START_WITH_DEFAULT CASE .

    $default  reduce using rule 82 (SWITCH_BODY_START_WITH_DEFAULT)


State 146

   77 SWITCH_BODY: SWITCH_BODY_START_WITH_DEFAULT SWITCH_BODY_END .

    $default  reduce using rule 77 (SWITCH_BODY)


State 147

   74 SWITCH: t_switch EXPR SWITCH_BODY .

    $default  reduce using rule 74 (SWITCH)


State 148

   73 SWITCH: t_switch INIT_STATE t_semicolon . EXPR SWITCH_BODY

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69

    FUNC_CALL   go to state 73
    SHIFT       go to state 74
    SHIFT_AC    go to state 75
    METHOD      go to state 76
    VALUE       go to state 77
    EXPR        go to state 200
    EXPR_START  go to state 80


State 149

  123 FOR: t_for INIT_STATE t_semicolon . CONDITION t_semicolon POST_STATE BODY

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_true              shift, and go to state 70
    t_false             shift, and go to state 71

    $default  reduce using rule 120 (CONDITION)

    BOOLEAN     go to state 72
    FUNC_CALL   go to state 73
    SHIFT       go to state 74
    SHIFT_AC    go to state 75
    METHOD      go to state 76
    VALUE       go to state 77
    EXPR        go to state 78
    CONDITION   go to state 201
    EXPR_START  go to state 80


State 150

  124 FOR: t_for CONDITION BODY .

    $default  reduce using rule 124 (FOR)


State 151

  107 PARAM: PARAM t_comma . EXPR

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69

    FUNC_CALL   go to state 73
    SHIFT       go to state 74
    SHIFT_AC    go to state 75
    METHOD      go to state 76
    VALUE       go to state 77
    EXPR        go to state 202
    EXPR_START  go to state 80


State 152

   50 ASSIGNMENT: t_vtype t_equality .

    $default  reduce using rule 50 (ASSIGNMENT)


State 153

   52 ASSIGNMENT: t_comma t_id . ASSIGNMENT EXPR t_comma
   53           | t_comma t_id . ASSIGNMENT BOOLEAN t_comma
   55 SHORT_ASSIGN: t_comma t_id . SHORT_ASSIGN EXPR t_comma
   56             | t_comma t_id . SHORT_ASSIGN BOOLEAN t_comma

    t_vtype      shift, and go to state 96
    t_short_dec  shift, and go to state 98
    t_comma      shift, and go to state 99
    t_equality   shift, and go to state 100

    ASSIGNMENT    go to state 203
    SHORT_ASSIGN  go to state 204


State 154

   57 FUNC_CALL: t_id t_open_paren PARAM . t_close_paren
  107 PARAM: PARAM . t_comma EXPR

    t_comma        shift, and go to state 151
    t_close_paren  shift, and go to state 205


State 155

  113 SHORT_EXPR: t_id t_short_expr t_id .

    $default  reduce using rule 113 (SHORT_EXPR)


State 156

  145 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  146      | t_id . t_open_sq t_colon VALUE t_close_sq
  147      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_open_sq  shift, and go to state 206


State 157

   41 VAR: t_id ASSIGNMENT SLICE .

    $default  reduce using rule 41 (VAR)


State 158

   47 VAR: t_id SHORT_ASSIGN t_id . ST_EMBEDDED
   57 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   60 SHIFT_AC: t_id .
   62 METHOD: t_id . t_dot
   65 VALUE: t_id .
  145 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  146      | t_id . t_open_sq t_colon VALUE t_close_sq
  147      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_open_br     shift, and go to state 207
    t_open_paren  shift, and go to state 101
    t_open_sq     shift, and go to state 206
    t_dot         shift, and go to state 102

    t_shift_const  reduce using rule 60 (SHIFT_AC)
    $default       reduce using rule 65 (VALUE)

    PLENTY_OLD    go to state 208
    STRUCT_FIELD  go to state 209
    ST_EMBEDDED   go to state 210


State 159

   44 VAR: t_id SHORT_ASSIGN t_make . t_open_paren MAPS t_close_paren
  143 MAKE: t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  144     | t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_paren  shift, and go to state 211


State 160

   35 VAR: t_id SHORT_ASSIGN BOOLEAN .

    $default  reduce using rule 35 (VAR)


State 161

   32 VAR: t_id SHORT_ASSIGN EXPR .
   49 BOOLEAN: EXPR . t_bool EXPR
  110 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 133
    t_bool  shift, and go to state 134

    $default  reduce using rule 32 (VAR)


State 162

   33 VAR: t_id SHORT_ASSIGN MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 212


State 163

   38 VAR: t_id SHORT_ASSIGN MAKE .

    $default  reduce using rule 38 (VAR)


State 164

   40 VAR: t_id SHORT_ASSIGN SLICE .

    $default  reduce using rule 40 (VAR)


State 165

   36 VAR: t_id MULTI_AR ASSIGNMENT . EXPR
   39    | t_id MULTI_AR ASSIGNMENT . MAKE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_make              shift, and go to state 180

    FUNC_CALL   go to state 73
    SHIFT       go to state 74
    SHIFT_AC    go to state 75
    METHOD      go to state 76
    VALUE       go to state 77
    EXPR        go to state 213
    EXPR_START  go to state 80
    MAKE        go to state 214


State 166

   48 VAR: t_id ACCESS_FIELDS ASSIGNMENT . VALUE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69

    FUNC_CALL  go to state 73
    SHIFT      go to state 74
    SHIFT_AC   go to state 75
    METHOD     go to state 76
    VALUE      go to state 215


State 167

  130 ARRAY_INDEX: t_open_sq t_int_const t_close_sq .

    $default  reduce using rule 130 (ARRAY_INDEX)


State 168

  131 ARRAY_INDEX: t_open_sq t_id t_close_sq .

    $default  reduce using rule 131 (ARRAY_INDEX)


State 169

  132 ARRAY_INDEX: t_open_sq t_string t_close_sq .

    $default  reduce using rule 132 (ARRAY_INDEX)


State 170

  102 ELSEIF_SECOND: t_else t_if . CONDITION BODY

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_true              shift, and go to state 70
    t_false             shift, and go to state 71

    $default  reduce using rule 120 (CONDITION)

    BOOLEAN     go to state 72
    FUNC_CALL   go to state 73
    SHIFT       go to state 74
    SHIFT_AC    go to state 75
    METHOD      go to state 76
    VALUE       go to state 77
    EXPR        go to state 78
    CONDITION   go to state 216
    EXPR_START  go to state 80


State 171

  105 ELSE_THIRD: t_else BODY .

    $default  reduce using rule 105 (ELSE_THIRD)


State 172

  100 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND ELSEIF_SECOND .

    $default  reduce using rule 100 (MULTY_ELSEIF_SECOND)


State 173

   95 IF: IF_FIRST MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD .
  104 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD . ELSE_THIRD

    t_else  shift, and go to state 174

    $default  reduce using rule 95 (IF)

    ELSE_THIRD  go to state 175


State 174

  105 ELSE_THIRD: t_else . BODY

    t_open_br  shift, and go to state 25

    BODY        go to state 171
    BODY_START  go to state 27


State 175

  104 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD ELSE_THIRD .

    $default  reduce using rule 104 (MULTY_ELSE_THIRD)


State 176

  148 MAPS: t_map t_open_sq . t_vtype t_close_sq t_vtype

    t_vtype  shift, and go to state 217


State 177

   45 VAR: t_var t_id t_id ASSIGNMENT . t_id ST_EMBEDDED

    t_id  shift, and go to state 218


State 178

   52 ASSIGNMENT: t_comma t_id . ASSIGNMENT EXPR t_comma
   53           | t_comma t_id . ASSIGNMENT BOOLEAN t_comma

    t_vtype     shift, and go to state 96
    t_comma     shift, and go to state 128
    t_equality  shift, and go to state 100

    ASSIGNMENT  go to state 203


State 179

   46 VAR: t_var t_id ASSIGNMENT t_id . ST_EMBEDDED
   57 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   60 SHIFT_AC: t_id .
   62 METHOD: t_id . t_dot
   65 VALUE: t_id .
  145 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  146      | t_id . t_open_sq t_colon VALUE t_close_sq
  147      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_open_br     shift, and go to state 207
    t_open_paren  shift, and go to state 101
    t_open_sq     shift, and go to state 206
    t_dot         shift, and go to state 102

    t_shift_const  reduce using rule 60 (SHIFT_AC)
    $default       reduce using rule 65 (VALUE)

    PLENTY_OLD    go to state 208
    STRUCT_FIELD  go to state 209
    ST_EMBEDDED   go to state 219


State 180

  143 MAKE: t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  144     | t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_paren  shift, and go to state 220


State 181

   31 VAR: t_var t_id ASSIGNMENT BOOLEAN .

    $default  reduce using rule 31 (VAR)


State 182

   29 VAR: t_var t_id ASSIGNMENT EXPR .
   30    | t_var t_id ASSIGNMENT EXPR . t_vtype
   49 BOOLEAN: EXPR . t_bool EXPR
  110 EXPR: EXPR . t_sign VALUE

    t_vtype  shift, and go to state 221
    t_sign   shift, and go to state 133
    t_bool   shift, and go to state 134

    $default  reduce using rule 29 (VAR)


State 183

   34 VAR: t_var t_id ASSIGNMENT MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 222


State 184

   37 VAR: t_var t_id ASSIGNMENT MAKE .

    $default  reduce using rule 37 (VAR)


State 185

   42 VAR: t_var t_id ASSIGNMENT SLICE .

    $default  reduce using rule 42 (VAR)


State 186

  127 ARRAY_BODY: t_var t_id MULTI_AR t_vtype .
  128           | t_var t_id MULTI_AR t_vtype . ASSIGNMENT MULTI_AR t_vtype PLENTY
  129           | t_var t_id MULTI_AR t_vtype . ASSIGNMENT MAKE

    t_vtype     shift, and go to state 96
    t_comma     shift, and go to state 128
    t_equality  shift, and go to state 100

    $default  reduce using rule 127 (ARRAY_BODY)

    ASSIGNMENT  go to state 223


State 187

   61 SHIFT_AC: t_int_const .

    $default  reduce using rule 61 (SHIFT_AC)


State 188

   60 SHIFT_AC: t_id .

    $default  reduce using rule 60 (SHIFT_AC)


State 189

   59 SHIFT: SHIFT_AC t_shift_const SHIFT_AC .

    $default  reduce using rule 59 (SHIFT)


State 190

  110 EXPR: EXPR t_sign VALUE .

    $default  reduce using rule 110 (EXPR)


State 191

   49 BOOLEAN: EXPR t_bool EXPR .
  110 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 133

    $default  reduce using rule 49 (BOOLEAN)


State 192

  126 EXPR_END: t_close_paren .

    $default  reduce using rule 126 (EXPR_END)


State 193

  111 EXPR: EXPR_START EXPR EXPR_END .

    $default  reduce using rule 111 (EXPR)


State 194

   89 CASE_STATEMENT: MULTIPLE_ARG .

    $default  reduce using rule 89 (CASE_STATEMENT)


State 195

   85 MULTIPLE_ARG: FIRST_PART . SECOND_PART
   87 FIRST_PART: FIRST_PART . EXPR t_comma

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69

    FUNC_CALL    go to state 73
    SHIFT        go to state 74
    SHIFT_AC     go to state 75
    METHOD       go to state 76
    VALUE        go to state 77
    SECOND_PART  go to state 224
    EXPR         go to state 225
    EXPR_START   go to state 80


State 196

   83 CASE: t_case CASE_STATEMENT . CASE_BODY

    t_colon  shift, and go to state 198

    CASE_BODY  go to state 226


State 197

   86 FIRST_PART: EXPR . t_comma
   90 CASE_STATEMENT: EXPR .
  110 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 133
    t_comma  shift, and go to state 227

    $default  reduce using rule 90 (CASE_STATEMENT)


State 198

   91 CASE_BODY: t_colon .
   92          | t_colon . t_enter

    t_enter  shift, and go to state 228

    $default  reduce using rule 91 (CASE_BODY)


State 199

   84 DEFAULT: t_default CASE_BODY .
   93 CASE_BODY: CASE_BODY . BODY_FILLING END_SYMBOLS

    t_var      shift, and go to state 31
    t_if       shift, and go to state 32
    t_switch   shift, and go to state 33
    t_type     shift, and go to state 4
    t_for      shift, and go to state 34
    t_goto     shift, and go to state 35
    t_return   shift, and go to state 36
    t_id       shift, and go to state 37
    t_open_sq  shift, and go to state 39

    $default  reduce using rule 84 (DEFAULT)

    BODY_FILLING   go to state 229
    VAR            go to state 42
    FUNC_CALL      go to state 43
    METHOD         go to state 44
    GOTO           go to state 45
    LABEL          go to state 46
    SWITCH         go to state 47
    IF             go to state 48
    IF_FIRST       go to state 49
    RETURN         go to state 50
    SHORT_EXPR     go to state 51
    FOR            go to state 52
    ARRAY_BODY     go to state 53
    ARRAY_INDEX    go to state 54
    MULTI_AR       go to state 55
    STRUCT         go to state 56
    STRUCT_START   go to state 11
    ACCESS_FIELDS  go to state 57


State 200

   73 SWITCH: t_switch INIT_STATE t_semicolon EXPR . SWITCH_BODY
  110 EXPR: EXPR . t_sign VALUE

    t_open_br  shift, and go to state 83
    t_sign     shift, and go to state 133

    SWITCH_BODY                     go to state 230
    SWITCH_BODY_START               go to state 87
    SWITCH_BODY_START_WITH_DEFAULT  go to state 88


State 201

  123 FOR: t_for INIT_STATE t_semicolon CONDITION . t_semicolon POST_STATE BODY

    t_semicolon  shift, and go to state 231


State 202

  107 PARAM: PARAM t_comma EXPR .
  110 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 133

    $default  reduce using rule 107 (PARAM)


State 203

   52 ASSIGNMENT: t_comma t_id ASSIGNMENT . EXPR t_comma
   53           | t_comma t_id ASSIGNMENT . BOOLEAN t_comma

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69

    BOOLEAN     go to state 232
    FUNC_CALL   go to state 73
    SHIFT       go to state 74
    SHIFT_AC    go to state 75
    METHOD      go to state 76
    VALUE       go to state 77
    EXPR        go to state 233
    EXPR_START  go to state 80


State 204

   55 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN . EXPR t_comma
   56             | t_comma t_id SHORT_ASSIGN . BOOLEAN t_comma

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69

    BOOLEAN     go to state 234
    FUNC_CALL   go to state 73
    SHIFT       go to state 74
    SHIFT_AC    go to state 75
    METHOD      go to state 76
    VALUE       go to state 77
    EXPR        go to state 235
    EXPR_START  go to state 80


State 205

   57 FUNC_CALL: t_id t_open_paren PARAM t_close_paren .

    $default  reduce using rule 57 (FUNC_CALL)


State 206

  145 SLICE: t_id t_open_sq . VALUE t_colon VALUE t_close_sq
  146      | t_id t_open_sq . t_colon VALUE t_close_sq
  147      | t_id t_open_sq . VALUE t_colon t_close_sq

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69
    t_colon             shift, and go to state 236

    FUNC_CALL  go to state 73
    SHIFT      go to state 74
    SHIFT_AC   go to state 75
    METHOD     go to state 76
    VALUE      go to state 237


State 207

  138 PLENTY_OLD: t_open_br . ENUM t_close_br
  139           | t_open_br . t_close_br
  140           | t_open_br . PLENTY t_close_br
  160 STRUCT_FIELD: t_open_br . END_SYMBOLS STRUCT_ENUM t_close_br
  161             | t_open_br . END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_br           shift, and go to state 238
    t_close_br          shift, and go to state 239
    t_rune              shift, and go to state 68
    t_semicolon         shift, and go to state 17
    t_blank_identifier  shift, and go to state 69
    t_enter             shift, and go to state 18
    t_eof               shift, and go to state 19

    FUNC_CALL    go to state 73
    SHIFT        go to state 74
    SHIFT_AC     go to state 75
    METHOD       go to state 76
    VALUE        go to state 240
    PLENTY       go to state 241
    PLENTY_OLD   go to state 242
    ENUM         go to state 243
    END_SYMBOLS  go to state 244


State 208

  162 STRUCT_FIELD: PLENTY_OLD .

    $default  reduce using rule 162 (STRUCT_FIELD)


State 209

  163 ST_EMBEDDED: STRUCT_FIELD .
  164            | STRUCT_FIELD . t_comma ST_EMBEDDED

    t_comma  shift, and go to state 245

    $default  reduce using rule 163 (ST_EMBEDDED)


State 210

   47 VAR: t_id SHORT_ASSIGN t_id ST_EMBEDDED .

    $default  reduce using rule 47 (VAR)


State 211

   44 VAR: t_id SHORT_ASSIGN t_make t_open_paren . MAPS t_close_paren
  143 MAKE: t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_close_paren
  144     | t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_map      shift, and go to state 126
    t_open_sq  shift, and go to state 39

    ARRAY_INDEX  go to state 54
    MULTI_AR     go to state 246
    MAPS         go to state 247


State 212

   33 VAR: t_id SHORT_ASSIGN MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 238

    PLENTY      go to state 248
    PLENTY_OLD  go to state 242


State 213

   36 VAR: t_id MULTI_AR ASSIGNMENT EXPR .
  110 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 133

    $default  reduce using rule 36 (VAR)


State 214

   39 VAR: t_id MULTI_AR ASSIGNMENT MAKE .

    $default  reduce using rule 39 (VAR)


State 215

   48 VAR: t_id ACCESS_FIELDS ASSIGNMENT VALUE .

    $default  reduce using rule 48 (VAR)


State 216

  102 ELSEIF_SECOND: t_else t_if CONDITION . BODY

    t_open_br  shift, and go to state 25

    BODY        go to state 249
    BODY_START  go to state 27


State 217

  148 MAPS: t_map t_open_sq t_vtype . t_close_sq t_vtype

    t_close_sq  shift, and go to state 250


State 218

   45 VAR: t_var t_id t_id ASSIGNMENT t_id . ST_EMBEDDED

    t_open_br  shift, and go to state 207

    PLENTY_OLD    go to state 208
    STRUCT_FIELD  go to state 209
    ST_EMBEDDED   go to state 251


State 219

   46 VAR: t_var t_id ASSIGNMENT t_id ST_EMBEDDED .

    $default  reduce using rule 46 (VAR)


State 220

  143 MAKE: t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_close_paren
  144     | t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_sq  shift, and go to state 39

    ARRAY_INDEX  go to state 54
    MULTI_AR     go to state 246


State 221

   30 VAR: t_var t_id ASSIGNMENT EXPR t_vtype .

    $default  reduce using rule 30 (VAR)


State 222

   34 VAR: t_var t_id ASSIGNMENT MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 238

    PLENTY      go to state 252
    PLENTY_OLD  go to state 242


State 223

  128 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT . MULTI_AR t_vtype PLENTY
  129           | t_var t_id MULTI_AR t_vtype ASSIGNMENT . MAKE

    t_open_sq  shift, and go to state 39
    t_make     shift, and go to state 180

    ARRAY_INDEX  go to state 54
    MULTI_AR     go to state 253
    MAKE         go to state 254


State 224

   85 MULTIPLE_ARG: FIRST_PART SECOND_PART .

    $default  reduce using rule 85 (MULTIPLE_ARG)


State 225

   87 FIRST_PART: FIRST_PART EXPR . t_comma
   88 SECOND_PART: EXPR .
  110 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 133
    t_comma  shift, and go to state 255

    $default  reduce using rule 88 (SECOND_PART)


State 226

   83 CASE: t_case CASE_STATEMENT CASE_BODY .
   93 CASE_BODY: CASE_BODY . BODY_FILLING END_SYMBOLS

    t_var      shift, and go to state 31
    t_if       shift, and go to state 32
    t_switch   shift, and go to state 33
    t_type     shift, and go to state 4
    t_for      shift, and go to state 34
    t_goto     shift, and go to state 35
    t_return   shift, and go to state 36
    t_id       shift, and go to state 37
    t_open_sq  shift, and go to state 39

    $default  reduce using rule 83 (CASE)

    BODY_FILLING   go to state 229
    VAR            go to state 42
    FUNC_CALL      go to state 43
    METHOD         go to state 44
    GOTO           go to state 45
    LABEL          go to state 46
    SWITCH         go to state 47
    IF             go to state 48
    IF_FIRST       go to state 49
    RETURN         go to state 50
    SHORT_EXPR     go to state 51
    FOR            go to state 52
    ARRAY_BODY     go to state 53
    ARRAY_INDEX    go to state 54
    MULTI_AR       go to state 55
    STRUCT         go to state 56
    STRUCT_START   go to state 11
    ACCESS_FIELDS  go to state 57


State 227

   86 FIRST_PART: EXPR t_comma .

    $default  reduce using rule 86 (FIRST_PART)


State 228

   92 CASE_BODY: t_colon t_enter .

    $default  reduce using rule 92 (CASE_BODY)


State 229

   93 CASE_BODY: CASE_BODY BODY_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 17
    t_enter      shift, and go to state 18
    t_eof        shift, and go to state 19

    END_SYMBOLS  go to state 256


State 230

   73 SWITCH: t_switch INIT_STATE t_semicolon EXPR SWITCH_BODY .

    $default  reduce using rule 73 (SWITCH)


State 231

  123 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon . POST_STATE BODY

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 257
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 67
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69

    FUNC_CALL   go to state 73
    SHIFT       go to state 74
    SHIFT_AC    go to state 75
    METHOD      go to state 76
    VALUE       go to state 77
    EXPR        go to state 258
    POST_STATE  go to state 259
    EXPR_START  go to state 80


State 232

   53 ASSIGNMENT: t_comma t_id ASSIGNMENT BOOLEAN . t_comma

    t_comma  shift, and go to state 260


State 233

   49 BOOLEAN: EXPR . t_bool EXPR
   52 ASSIGNMENT: t_comma t_id ASSIGNMENT EXPR . t_comma
  110 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 133
    t_comma  shift, and go to state 261
    t_bool   shift, and go to state 134


State 234

   56 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN BOOLEAN . t_comma

    t_comma  shift, and go to state 262


State 235

   49 BOOLEAN: EXPR . t_bool EXPR
   55 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN EXPR . t_comma
  110 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 133
    t_comma  shift, and go to state 263
    t_bool   shift, and go to state 134


State 236

  146 SLICE: t_id t_open_sq t_colon . VALUE t_close_sq

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69

    FUNC_CALL  go to state 73
    SHIFT      go to state 74
    SHIFT_AC   go to state 75
    METHOD     go to state 76
    VALUE      go to state 264


State 237

  145 SLICE: t_id t_open_sq VALUE . t_colon VALUE t_close_sq
  147      | t_id t_open_sq VALUE . t_colon t_close_sq

    t_colon  shift, and go to state 265


State 238

  138 PLENTY_OLD: t_open_br . ENUM t_close_br
  139           | t_open_br . t_close_br
  140           | t_open_br . PLENTY t_close_br

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_br           shift, and go to state 238
    t_close_br          shift, and go to state 239
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69

    FUNC_CALL   go to state 73
    SHIFT       go to state 74
    SHIFT_AC    go to state 75
    METHOD      go to state 76
    VALUE       go to state 240
    PLENTY      go to state 241
    PLENTY_OLD  go to state 242
    ENUM        go to state 243


State 239

  139 PLENTY_OLD: t_open_br t_close_br .

    $default  reduce using rule 139 (PLENTY_OLD)


State 240

  141 ENUM: VALUE .

    $default  reduce using rule 141 (ENUM)


State 241

  140 PLENTY_OLD: t_open_br PLENTY . t_close_br

    t_close_br  shift, and go to state 266


State 242

  136 PLENTY: PLENTY_OLD .
  137       | PLENTY_OLD . t_comma PLENTY

    t_comma  shift, and go to state 267

    $default  reduce using rule 136 (PLENTY)


State 243

  138 PLENTY_OLD: t_open_br ENUM . t_close_br
  142 ENUM: ENUM . t_comma VALUE

    t_close_br  shift, and go to state 268
    t_comma     shift, and go to state 269


State 244

  160 STRUCT_FIELD: t_open_br END_SYMBOLS . STRUCT_ENUM t_close_br
  161             | t_open_br END_SYMBOLS . STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS

    t_id  shift, and go to state 270

    STRUCT_ENUM  go to state 271


State 245

  164 ST_EMBEDDED: STRUCT_FIELD t_comma . ST_EMBEDDED

    t_open_br  shift, and go to state 207

    PLENTY_OLD    go to state 208
    STRUCT_FIELD  go to state 209
    ST_EMBEDDED   go to state 272


State 246

  143 MAKE: t_make t_open_paren MULTI_AR . t_vtype t_comma VALUE t_close_paren
  144     | t_make t_open_paren MULTI_AR . t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_vtype  shift, and go to state 273


State 247

   44 VAR: t_id SHORT_ASSIGN t_make t_open_paren MAPS . t_close_paren

    t_close_paren  shift, and go to state 274


State 248

   33 VAR: t_id SHORT_ASSIGN MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 33 (VAR)


State 249

  102 ELSEIF_SECOND: t_else t_if CONDITION BODY .

    $default  reduce using rule 102 (ELSEIF_SECOND)


State 250

  148 MAPS: t_map t_open_sq t_vtype t_close_sq . t_vtype

    t_vtype  shift, and go to state 275


State 251

   45 VAR: t_var t_id t_id ASSIGNMENT t_id ST_EMBEDDED .

    $default  reduce using rule 45 (VAR)


State 252

   34 VAR: t_var t_id ASSIGNMENT MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 34 (VAR)


State 253

  128 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 276


State 254

  129 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MAKE .

    $default  reduce using rule 129 (ARRAY_BODY)


State 255

   87 FIRST_PART: FIRST_PART EXPR t_comma .

    $default  reduce using rule 87 (FIRST_PART)


State 256

   93 CASE_BODY: CASE_BODY BODY_FILLING END_SYMBOLS .

    $default  reduce using rule 93 (CASE_BODY)


State 257

   57 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   60 SHIFT_AC: t_id .
   62 METHOD: t_id . t_dot
   65 VALUE: t_id .
  122 POST_STATE: t_id . t_inc_const

    t_inc_const   shift, and go to state 277
    t_open_paren  shift, and go to state 101
    t_dot         shift, and go to state 102

    t_shift_const  reduce using rule 60 (SHIFT_AC)
    $default       reduce using rule 65 (VALUE)


State 258

  110 EXPR: EXPR . t_sign VALUE
  121 POST_STATE: EXPR .

    t_sign  shift, and go to state 133

    $default  reduce using rule 121 (POST_STATE)


State 259

  123 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE . BODY

    t_open_br  shift, and go to state 25

    BODY        go to state 278
    BODY_START  go to state 27


State 260

   53 ASSIGNMENT: t_comma t_id ASSIGNMENT BOOLEAN t_comma .

    $default  reduce using rule 53 (ASSIGNMENT)


State 261

   52 ASSIGNMENT: t_comma t_id ASSIGNMENT EXPR t_comma .

    $default  reduce using rule 52 (ASSIGNMENT)


State 262

   56 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN BOOLEAN t_comma .

    $default  reduce using rule 56 (SHORT_ASSIGN)


State 263

   55 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN EXPR t_comma .

    $default  reduce using rule 55 (SHORT_ASSIGN)


State 264

  146 SLICE: t_id t_open_sq t_colon VALUE . t_close_sq

    t_close_sq  shift, and go to state 279


State 265

  145 SLICE: t_id t_open_sq VALUE t_colon . VALUE t_close_sq
  147      | t_id t_open_sq VALUE t_colon . t_close_sq

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_close_sq          shift, and go to state 280
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69

    FUNC_CALL  go to state 73
    SHIFT      go to state 74
    SHIFT_AC   go to state 75
    METHOD     go to state 76
    VALUE      go to state 281


State 266

  140 PLENTY_OLD: t_open_br PLENTY t_close_br .

    $default  reduce using rule 140 (PLENTY_OLD)


State 267

  137 PLENTY: PLENTY_OLD t_comma . PLENTY

    t_open_br  shift, and go to state 238

    PLENTY      go to state 282
    PLENTY_OLD  go to state 242


State 268

  138 PLENTY_OLD: t_open_br ENUM t_close_br .

    $default  reduce using rule 138 (PLENTY_OLD)


State 269

  142 ENUM: ENUM t_comma . VALUE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69

    FUNC_CALL  go to state 73
    SHIFT      go to state 74
    SHIFT_AC   go to state 75
    METHOD     go to state 76
    VALUE      go to state 283


State 270

  156 STRUCT_ENUM: t_id . t_colon VALUE
  158            | t_id . t_colon t_id STRUCT_FIELD

    t_colon  shift, and go to state 284


State 271

  157 STRUCT_ENUM: STRUCT_ENUM . t_comma END_SYMBOLS t_id t_colon VALUE
  159            | STRUCT_ENUM . t_comma END_SYMBOLS t_id t_colon t_id STRUCT_FIELD
  160 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM . t_close_br
  161             | t_open_br END_SYMBOLS STRUCT_ENUM . t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS

    t_close_br  shift, and go to state 285
    t_comma     shift, and go to state 286


State 272

  164 ST_EMBEDDED: STRUCT_FIELD t_comma ST_EMBEDDED .

    $default  reduce using rule 164 (ST_EMBEDDED)


State 273

  143 MAKE: t_make t_open_paren MULTI_AR t_vtype . t_comma VALUE t_close_paren
  144     | t_make t_open_paren MULTI_AR t_vtype . t_comma VALUE t_comma t_int_const VALUE

    t_comma  shift, and go to state 287


State 274

   44 VAR: t_id SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren .

    $default  reduce using rule 44 (VAR)


State 275

  148 MAPS: t_map t_open_sq t_vtype t_close_sq t_vtype .

    $default  reduce using rule 148 (MAPS)


State 276

  128 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 238

    PLENTY      go to state 288
    PLENTY_OLD  go to state 242


State 277

  122 POST_STATE: t_id t_inc_const .

    $default  reduce using rule 122 (POST_STATE)


State 278

  123 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY .

    $default  reduce using rule 123 (FOR)


State 279

  146 SLICE: t_id t_open_sq t_colon VALUE t_close_sq .

    $default  reduce using rule 146 (SLICE)


State 280

  147 SLICE: t_id t_open_sq VALUE t_colon t_close_sq .

    $default  reduce using rule 147 (SLICE)


State 281

  145 SLICE: t_id t_open_sq VALUE t_colon VALUE . t_close_sq

    t_close_sq  shift, and go to state 289


State 282

  137 PLENTY: PLENTY_OLD t_comma PLENTY .

    $default  reduce using rule 137 (PLENTY)


State 283

  142 ENUM: ENUM t_comma VALUE .

    $default  reduce using rule 142 (ENUM)


State 284

  156 STRUCT_ENUM: t_id t_colon . VALUE
  158            | t_id t_colon . t_id STRUCT_FIELD

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 290
    t_string            shift, and go to state 66
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69

    FUNC_CALL  go to state 73
    SHIFT      go to state 74
    SHIFT_AC   go to state 75
    METHOD     go to state 76
    VALUE      go to state 291


State 285

  160 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_close_br .

    $default  reduce using rule 160 (STRUCT_FIELD)


State 286

  157 STRUCT_ENUM: STRUCT_ENUM t_comma . END_SYMBOLS t_id t_colon VALUE
  159            | STRUCT_ENUM t_comma . END_SYMBOLS t_id t_colon t_id STRUCT_FIELD
  161 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma . END_SYMBOLS t_close_br t_comma END_SYMBOLS

    t_semicolon  shift, and go to state 17
    t_enter      shift, and go to state 18
    t_eof        shift, and go to state 19

    END_SYMBOLS  go to state 292


State 287

  143 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma . VALUE t_close_paren
  144     | t_make t_open_paren MULTI_AR t_vtype t_comma . VALUE t_comma t_int_const VALUE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69

    FUNC_CALL  go to state 73
    SHIFT      go to state 74
    SHIFT_AC   go to state 75
    METHOD     go to state 76
    VALUE      go to state 293


State 288

  128 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 128 (ARRAY_BODY)


State 289

  145 SLICE: t_id t_open_sq VALUE t_colon VALUE t_close_sq .

    $default  reduce using rule 145 (SLICE)


State 290

   57 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   60 SHIFT_AC: t_id .
   62 METHOD: t_id . t_dot
   65 VALUE: t_id .
  158 STRUCT_ENUM: t_id t_colon t_id . STRUCT_FIELD

    t_open_br     shift, and go to state 207
    t_open_paren  shift, and go to state 101
    t_dot         shift, and go to state 102

    t_shift_const  reduce using rule 60 (SHIFT_AC)
    $default       reduce using rule 65 (VALUE)

    PLENTY_OLD    go to state 208
    STRUCT_FIELD  go to state 294


State 291

  156 STRUCT_ENUM: t_id t_colon VALUE .

    $default  reduce using rule 156 (STRUCT_ENUM)


State 292

  157 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS . t_id t_colon VALUE
  159            | STRUCT_ENUM t_comma END_SYMBOLS . t_id t_colon t_id STRUCT_FIELD
  161 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS . t_close_br t_comma END_SYMBOLS

    t_id        shift, and go to state 295
    t_close_br  shift, and go to state 296


State 293

  143 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE . t_close_paren
  144     | t_make t_open_paren MULTI_AR t_vtype t_comma VALUE . t_comma t_int_const VALUE

    t_comma        shift, and go to state 297
    t_close_paren  shift, and go to state 298


State 294

  158 STRUCT_ENUM: t_id t_colon t_id STRUCT_FIELD .

    $default  reduce using rule 158 (STRUCT_ENUM)


State 295

  157 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id . t_colon VALUE
  159            | STRUCT_ENUM t_comma END_SYMBOLS t_id . t_colon t_id STRUCT_FIELD

    t_colon  shift, and go to state 299


State 296

  161 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br . t_comma END_SYMBOLS

    t_comma  shift, and go to state 300


State 297

  144 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma . t_int_const VALUE

    t_int_const  shift, and go to state 301


State 298

  143 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren .

    $default  reduce using rule 143 (MAKE)


State 299

  157 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon . VALUE
  159            | STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon . t_id STRUCT_FIELD

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 302
    t_string            shift, and go to state 66
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69

    FUNC_CALL  go to state 73
    SHIFT      go to state 74
    SHIFT_AC   go to state 75
    METHOD     go to state 76
    VALUE      go to state 303


State 300

  161 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma . END_SYMBOLS

    t_semicolon  shift, and go to state 17
    t_enter      shift, and go to state 18
    t_eof        shift, and go to state 19

    END_SYMBOLS  go to state 304


State 301

  144 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const . VALUE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_rune              shift, and go to state 68
    t_blank_identifier  shift, and go to state 69

    FUNC_CALL  go to state 73
    SHIFT      go to state 74
    SHIFT_AC   go to state 75
    METHOD     go to state 76
    VALUE      go to state 305


State 302

   57 FUNC_CALL: t_id . t_open_paren PARAM t_close_paren
   60 SHIFT_AC: t_id .
   62 METHOD: t_id . t_dot
   65 VALUE: t_id .
  159 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon t_id . STRUCT_FIELD

    t_open_br     shift, and go to state 207
    t_open_paren  shift, and go to state 101
    t_dot         shift, and go to state 102

    t_shift_const  reduce using rule 60 (SHIFT_AC)
    $default       reduce using rule 65 (VALUE)

    PLENTY_OLD    go to state 208
    STRUCT_FIELD  go to state 306


State 303

  157 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon VALUE .

    $default  reduce using rule 157 (STRUCT_ENUM)


State 304

  161 STRUCT_FIELD: t_open_br END_SYMBOLS STRUCT_ENUM t_comma END_SYMBOLS t_close_br t_comma END_SYMBOLS .

    $default  reduce using rule 161 (STRUCT_FIELD)


State 305

  144 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE .

    $default  reduce using rule 144 (MAKE)


State 306

  159 STRUCT_ENUM: STRUCT_ENUM t_comma END_SYMBOLS t_id t_colon t_id STRUCT_FIELD .

    $default  reduce using rule 159 (STRUCT_ENUM)
