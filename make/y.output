Terminals unused in grammar

   t_constant
   t_chan
   t_go
   t_range
   t_select
   t_fallthrough
   t_or_const
   t_and_const
   t_param_const
   t_eq_const
   t_rel_const
   t_point_const
   t_punc
   t_char_const
   t_ampersand
   '+'
   '-'
   '*'
   '/'


Grammar

    0 $accept: START $end

    1 START: START GLOBAL END_SYMBOLS
    2      | GLOBAL END_SYMBOLS
    3      | START END_SYMBOLS

    4 GLOBAL: PACKAGE
    5       | IMPORT
    6       | FUNC
    7       | STRUCT
    8       | INTERFACE

    9 PACKAGE: t_package t_id

   10 IMPORT: t_import t_string
   11       | t_import t_open_paren PARAM_IMPORT t_close_paren
   12       | t_import t_open_paren t_enter PARAM_IMPORT t_close_paren
   13       | t_import t_id t_string

   14 FUNC: t_func t_id t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART

   15 FUNC_PARAM: FUNC_PARAM_FULFILL
   16           | FUNC_PARAM t_comma FUNC_PARAM_FULFILL

   17 FUNC_SECOND_PART: BODY
   18                 | FUNC_RETURN_VALUE TYPE_AND_STRUCT BODY
   19                 | FUNC_PARAM_SECOND BODY

   20 FUNC_PARAM_SECOND: FUNC_PARAM_SECOND_START FUNC_PARAM_SECOND_END
   21                  | t_open_paren t_close_paren

   22 FUNC_PARAM_SECOND_START: t_open_paren
   23                        | FUNC_PARAM_SECOND_START FUNC_PARAM_FULFILL_SECOND

   24 FUNC_PARAM_SECOND_END: FUNC_PARAM_FULFILL_SECOND_END t_close_paren

   25 FUNC_PARAM_FULFILL: t_id TYPE_AND_STRUCT
   26                   | t_id
   27                   | /* empty */

   28 FUNC_PARAM_FULFILL_SECOND: t_id TYPE_AND_STRUCT t_comma
   29                          | TYPE_AND_STRUCT t_comma
   30                          | t_enter

   31 FUNC_PARAM_FULFILL_SECOND_END: t_id TYPE_AND_STRUCT
   32                              | TYPE_AND_STRUCT
   33                              | t_enter

   34 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE_FULFILL
   35                  | FUNC_RETURN_VALUE FUNC_RETURN_VALUE_FULFILL

   36 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren TYPE_AND_STRUCT t_close_paren
   37                          | t_func t_open_paren t_close_paren

   38 TYPE_AND_STRUCT: t_vtype
   39                | t_id

   40 BODY: BODY_START BODY_END

   41 BODY_END: t_close_br

   42 BODY_START: t_open_br
   43           | BODY_START BODY_FILLING END_SYMBOLS
   44           | BODY_START END_SYMBOLS

   45 BODY_FILLING: VAR
   46             | FOR
   47             | SWITCH
   48             | GOTO
   49             | LABEL
   50             | IF
   51             | MULTI_AR
   52             | FUNC_CALL
   53             | SHORT_EXPR
   54             | ARRAY_BODY
   55             | RETURN
   56             | STRUCT
   57             | SLICE
   58             | DEFER
   59             | METHOD

   60 VAR: t_var t_id ASSIGNMENT EXPR
   61    | t_var t_id ASSIGNMENT EXPR t_vtype
   62    | t_var t_id ASSIGNMENT BOOLEAN
   63    | t_id SHORT_ASSIGN EXPR
   64    | t_id ASSIGNMENT EXPR
   65    | t_id SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   66    | t_var t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   67    | t_id SHORT_ASSIGN BOOLEAN
   68    | t_id MULTI_AR ASSIGNMENT EXPR
   69    | t_var t_id ASSIGNMENT MAKE
   70    | t_id SHORT_ASSIGN MAKE
   71    | t_id MULTI_AR ASSIGNMENT MAKE
   72    | t_id SHORT_ASSIGN SLICE
   73    | t_id ASSIGNMENT SLICE
   74    | t_var t_id ASSIGNMENT SLICE
   75    | t_var t_id MAPS
   76    | t_id SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   77    | t_var t_id t_id ASSIGNMENT ST_EMBEDDED
   78    | t_var t_id ASSIGNMENT ST_EMBEDDED
   79    | t_id SHORT_ASSIGN ST_EMBEDDED
   80    | METHOD ASSIGNMENT VALUE
   81    | POINTER ASSIGNMENT EXPR
   82    | t_var t_id POINTER
   83    | t_var t_id POINTER ASSIGNMENT EXPR

   84 BOOLEAN: VALUE t_bool VALUE
   85        | BOOLEAN t_bool VALUE

   86 DEFER: t_defer FUNC_CALL

   87 ASSIGNMENT: t_vtype t_equality
   88           | t_equality
   89           | t_comma t_id ASSIGNMENT EXPR t_comma
   90           | t_comma t_id ASSIGNMENT BOOLEAN t_comma

   91 SHORT_ASSIGN: t_short_dec
   92             | t_comma t_id SHORT_ASSIGN EXPR t_comma
   93             | t_comma t_id SHORT_ASSIGN BOOLEAN t_comma

   94 FUNC_CALL: t_id PARAM

   95 PARAM: PARAM_START PARAM_END
   96      | t_open_paren t_close_paren

   97 PARAM_START: t_open_paren
   98            | PARAM_START PARAM_FULFILL

   99 PARAM_END: PARAM_END_FULFILL t_close_paren

  100 PARAM_END_FULFILL: EXPR
  101                  | t_enter

  102 PARAM_FULFILL: EXPR t_comma
  103              | t_enter

  104 SHIFT: SHIFT_AC t_shift_const SHIFT_AC

  105 SHIFT_AC: t_id
  106         | t_int_const

  107 METHOD: METHOD_FULFILL t_dot METHOD_FULFILL
  108       | METHOD t_dot METHOD_FULFILL

  109 METHOD_FULFILL: t_id
  110               | FUNC_CALL

  111 POINTER: t_pointer

  112 PARAM_IMPORT: t_string END_SYMBOLS
  113             | t_id t_string END_SYMBOLS
  114             | PARAM_IMPORT t_string END_SYMBOLS
  115             | PARAM_IMPORT t_id t_string END_SYMBOLS

  116 VALUE: t_int_const
  117      | t_float_const
  118      | t_id
  119      | t_string
  120      | t_rune
  121      | t_blank_identifier
  122      | FUNC_CALL
  123      | SHIFT
  124      | POINTER
  125      | METHOD
  126      | EXPR_START EXPR EXPR_END
  127      | EXPR_START BOOLEAN EXPR_END

  128 GOTO: t_goto t_id

  129 LABEL: t_id t_colon

  130 SWITCH: t_switch INIT_STATE t_semicolon EXPR SWITCH_BODY
  131       | t_switch EXPR SWITCH_BODY
  132       | t_switch SWITCH_BODY

  133 SWITCH_BODY: SWITCH_BODY_START SWITCH_BODY_END
  134            | SWITCH_BODY_START_WITH_DEFAULT SWITCH_BODY_END

  135 SWITCH_BODY_START: t_open_br
  136                  | SWITCH_BODY_START END_SYMBOLS
  137                  | SWITCH_BODY_START CASE

  138 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START DEFAULT
  139                               | SWITCH_BODY_START_WITH_DEFAULT CASE

  140 CASE: t_case CASE_STATEMENT CASE_BODY

  141 DEFAULT: t_default CASE_BODY

  142 MULTIPLE_ARG: FIRST_PART SECOND_PART

  143 FIRST_PART: EXPR t_comma
  144           | FIRST_PART EXPR t_comma

  145 SECOND_PART: EXPR

  146 CASE_STATEMENT: MULTIPLE_ARG
  147               | EXPR

  148 CASE_BODY: t_colon
  149          | CASE_BODY LOOP_FILLING END_SYMBOLS

  150 SWITCH_BODY_END: t_close_br

  151 IF: IF_FIRST MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD
  152   | IF_FIRST MULTY_ELSEIF_SECOND
  153   | IF_FIRST MULTY_ELSE_THIRD
  154   | IF_FIRST

  155 IF_FIRST: t_if CONDITION BODY_FOR_LOOP
  156         | t_if INIT_STATE t_semicolon CONDITION BODY_FOR_LOOP

  157 BODY_FOR_LOOP: BODY_FOR_LOOP_START BODY_FOR_LOOP_END

  158 BODY_FOR_LOOP_START: t_open_br
  159                    | t_open_br END_SYMBOLS
  160                    | BODY_FOR_LOOP_START LOOP_FILLING END_SYMBOLS

  161 BODY_FOR_LOOP_END: t_close_br

  162 LOOP_FILLING: BODY_FILLING
  163             | t_break
  164             | t_continue

  165 MULTY_ELSEIF_SECOND: ELSEIF_SECOND
  166                    | MULTY_ELSEIF_SECOND ELSEIF_SECOND

  167 ELSEIF_SECOND: t_else t_if CONDITION BODY_FOR_LOOP

  168 MULTY_ELSE_THIRD: ELSE_THIRD
  169                 | MULTY_ELSE_THIRD ELSE_THIRD

  170 ELSE_THIRD: t_else BODY_FOR_LOOP

  171 RETURN: t_return EXPR
  172       | t_return EXPR MANY_RETURN_START MANY_RETURN_START_END

  173 MANY_RETURN_START: t_comma
  174                  | MANY_RETURN_START EXPR t_comma

  175 MANY_RETURN_START_END: EXPR

  176 EXPR: VALUE
  177     | EXPR t_sign VALUE

  178 SHORT_EXPR: t_id t_short_expr t_id

  179 INIT_STATE: VAR
  180           | FUNC_CALL
  181           | /* empty */

  182 CONDITION: BOOLEAN
  183          | t_true
  184          | t_false
  185          | /* empty */

  186 POST_STATE: EXPR
  187           | t_id t_inc_const

  188 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY_FOR_LOOP
  189    | t_for CONDITION BODY_FOR_LOOP

  190 EXPR_START: t_open_paren

  191 EXPR_END: t_close_paren

  192 ARRAY_BODY: t_var t_id MULTI_AR t_vtype
  193           | t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  194           | t_var t_id MULTI_AR t_vtype ASSIGNMENT MAKE

  195 ARRAY_INDEX: t_open_sq t_int_const t_close_sq
  196            | t_open_sq t_id t_close_sq
  197            | t_open_sq t_string t_close_sq
  198            | t_open_sq t_close_sq

  199 MULTI_AR: ARRAY_INDEX
  200         | ARRAY_INDEX MULTI_AR

  201 PLENTY: PLENTY_OLD
  202       | PLENTY_OLD t_comma PLENTY

  203 PLENTY_OLD: t_open_br ENUM t_close_br
  204           | t_open_br t_close_br
  205           | t_open_br PLENTY t_close_br

  206 ENUM: VALUE
  207     | ENUM t_comma VALUE

  208 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  209     | t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

  210 SLICE: t_id t_open_sq VALUE t_colon VALUE t_close_sq
  211      | t_id t_open_sq t_colon VALUE t_close_sq
  212      | t_id t_open_sq VALUE t_colon t_close_sq

  213 MAPS: t_map t_open_sq t_vtype t_close_sq t_vtype

  214 STRUCT: STRUCT_START

  215 STRUCT_BODY: ENUM t_vtype
  216            | t_id t_id
  217            | t_id
  218            | t_id METHOD
  219            | STRUCT_BODY END_SYMBOLS t_id METHOD
  220            | STRUCT_BODY END_SYMBOLS t_id t_vtype
  221            | STRUCT_BODY END_SYMBOLS t_id t_id
  222            | STRUCT_BODY END_SYMBOLS t_id

  223 STRUCT_START: t_type t_id t_struct_const t_open_br STRUCT_END
  224             | t_type t_id t_struct_const t_open_br STRUCT_BODY STRUCT_END
  225             | t_type t_id t_struct_const t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END
  226             | t_type t_id t_struct_const t_enter

  227 STRUCT_END: t_close_br
  228           | t_enter t_close_br

  229 FIELD: t_id FIELD_BODY

  230 FIELD_BODY: FIELD_START FIELD_END

  231 FIELD_START: t_open_br
  232            | FIELD_START FIELD_FULFILL

  233 FIELD_FULFILL: VALUE t_colon VALUE t_comma
  234              | VALUE t_colon FIELD t_comma
  235              | t_enter

  236 FIELD_END: FIELD_END_FULFILL t_close_br

  237 FIELD_END_FULFILL: VALUE t_colon VALUE
  238                  | t_enter

  239 ST_EMBEDDED: FIELD

  240 END_SYMBOLS: t_semicolon
  241            | t_enter
  242            | t_eof

  243 INTERFACE: INT_START

  244 INT_START: t_type t_id t_interface t_open_br INT_BODY INT_END
  245          | t_type t_id t_interface t_open_br END_SYMBOLS INT_BODY INT_END
  246          | t_type t_id t_interface t_enter t_open_br END_SYMBOLS INT_BODY INT_END

  247 INT_BODY: FUNC_CALL
  248         | FUNC_CALL t_vtype
  249         | t_id t_open_paren t_vtype t_close_paren
  250         | INT_BODY END_SYMBOLS t_id t_open_paren t_vtype t_close_paren
  251         | INT_BODY END_SYMBOLS FUNC_CALL t_vtype
  252         | INT_BODY END_SYMBOLS FUNC_CALL

  253 INT_END: t_close_br
  254        | t_enter t_close_br


Terminals, with rules where they appear

$end (0) 0
'*' (42)
'+' (43)
'-' (45)
'/' (47)
error (256)
t_vtype (258) 38 61 65 66 87 192 193 194 208 209 213 215 220 248 249
    250 251
t_constant (259)
t_case (260) 140
t_func (261) 14 36 37
t_import (262) 10 11 12 13
t_chan (263)
t_defer (264) 86
t_go (265)
t_interface (266) 244 245 246
t_default (267) 141
t_var (268) 60 61 62 66 69 74 75 77 78 82 83 192 193 194
t_range (269)
t_map (270) 213
t_package (271) 9
t_if (272) 155 156 167
t_select (273)
t_switch (274) 130 131 132
t_fallthrough (275)
t_else (276) 167 170
t_type (277) 223 224 225 226 244 245 246
t_for (278) 188 189
t_goto (279) 128
t_continue (280) 164
t_break (281) 163
t_return (282) 171 172
t_struct_const (283) 223 224 225 226
t_or_const (284)
t_and_const (285)
t_param_const (286)
t_eq_const (287)
t_rel_const (288)
t_shift_const (289) 104
t_inc_const (290) 187
t_point_const (291)
t_punc (292)
t_int_const (293) 106 116 195 209
t_float_const (294) 117
t_char_const (295)
t_id (296) 9 13 14 25 26 28 31 39 60 61 62 63 64 65 66 67 68 69 70
    71 72 73 74 75 76 77 78 79 82 83 89 90 92 93 94 105 109 113 115
    118 128 129 178 187 192 193 194 196 210 211 212 216 217 218 219
    220 221 222 223 224 225 226 229 244 245 246 249 250
t_string (297) 10 13 112 113 114 115 119 197
t_short_dec (298) 91
t_open_br (299) 42 135 158 159 203 204 205 223 224 225 231 244 245
    246
t_close_br (300) 41 150 161 203 204 205 227 228 236 253 254
t_sign (301) 177
t_comma (302) 16 28 29 89 90 92 93 102 143 144 173 174 202 207 208
    209 233 234
t_equality (303) 87 88
t_open_paren (304) 11 12 14 21 22 36 37 76 96 97 190 208 209 249 250
t_close_paren (305) 11 12 14 21 24 36 37 76 96 99 191 208 249 250
t_open_sq (306) 195 196 197 198 210 211 212 213
t_close_sq (307) 195 196 197 198 210 211 212 213
t_bool (308) 84 85
t_rune (309) 120
t_semicolon (310) 130 156 188 240
t_blank_identifier (311) 121
t_dot (312) 107 108
t_colon (313) 129 148 210 211 212 233 234 237
t_true (314) 183
t_false (315) 184
t_short_expr (316) 178
t_make (317) 76 208 209
t_enter (318) 12 30 33 101 103 226 228 235 238 241 246 254
t_eof (319) 242
t_pointer (320) 111
t_ampersand (321)


Nonterminals, with rules where they appear

$accept (71)
    on left: 0
START (72)
    on left: 1 2 3, on right: 0 1 3
GLOBAL (73)
    on left: 4 5 6 7 8, on right: 1 2
PACKAGE (74)
    on left: 9, on right: 4
IMPORT (75)
    on left: 10 11 12 13, on right: 5
FUNC (76)
    on left: 14, on right: 6
FUNC_PARAM (77)
    on left: 15 16, on right: 14 16
FUNC_SECOND_PART (78)
    on left: 17 18 19, on right: 14
FUNC_PARAM_SECOND (79)
    on left: 20 21, on right: 19
FUNC_PARAM_SECOND_START (80)
    on left: 22 23, on right: 20 23
FUNC_PARAM_SECOND_END (81)
    on left: 24, on right: 20
FUNC_PARAM_FULFILL (82)
    on left: 25 26 27, on right: 15 16
FUNC_PARAM_FULFILL_SECOND (83)
    on left: 28 29 30, on right: 23
FUNC_PARAM_FULFILL_SECOND_END (84)
    on left: 31 32 33, on right: 24
FUNC_RETURN_VALUE (85)
    on left: 34 35, on right: 18 35
FUNC_RETURN_VALUE_FULFILL (86)
    on left: 36 37, on right: 34 35
TYPE_AND_STRUCT (87)
    on left: 38 39, on right: 18 25 28 29 31 32 36
BODY (88)
    on left: 40, on right: 17 18 19
BODY_END (89)
    on left: 41, on right: 40
BODY_START (90)
    on left: 42 43 44, on right: 40 43 44
BODY_FILLING (91)
    on left: 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59, on right:
    43 162
VAR (92)
    on left: 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77
    78 79 80 81 82 83, on right: 45 179
BOOLEAN (93)
    on left: 84 85, on right: 62 67 85 90 93 127 182
DEFER (94)
    on left: 86, on right: 58
ASSIGNMENT (95)
    on left: 87 88 89 90, on right: 60 61 62 64 66 68 69 71 73 74 77
    78 80 81 83 89 90 193 194
SHORT_ASSIGN (96)
    on left: 91 92 93, on right: 63 65 67 70 72 76 79 92 93
FUNC_CALL (97)
    on left: 94, on right: 52 86 110 122 180 247 248 251 252
PARAM (98)
    on left: 95 96, on right: 94
PARAM_START (99)
    on left: 97 98, on right: 95 98
PARAM_END (100)
    on left: 99, on right: 95
PARAM_END_FULFILL (101)
    on left: 100 101, on right: 99
PARAM_FULFILL (102)
    on left: 102 103, on right: 98
SHIFT (103)
    on left: 104, on right: 123
SHIFT_AC (104)
    on left: 105 106, on right: 104
METHOD (105)
    on left: 107 108, on right: 59 80 108 125 218 219
METHOD_FULFILL (106)
    on left: 109 110, on right: 107 108
POINTER (107)
    on left: 111, on right: 81 82 83 124
PARAM_IMPORT (108)
    on left: 112 113 114 115, on right: 11 12 114 115
VALUE (109)
    on left: 116 117 118 119 120 121 122 123 124 125 126 127, on right:
    80 84 85 176 177 206 207 208 209 210 211 212 233 234 237
GOTO (110)
    on left: 128, on right: 48
LABEL (111)
    on left: 129, on right: 49
SWITCH (112)
    on left: 130 131 132, on right: 47
SWITCH_BODY (113)
    on left: 133 134, on right: 130 131 132
SWITCH_BODY_START (114)
    on left: 135 136 137, on right: 133 136 137 138
SWITCH_BODY_START_WITH_DEFAULT (115)
    on left: 138 139, on right: 134 139
CASE (116)
    on left: 140, on right: 137 139
DEFAULT (117)
    on left: 141, on right: 138
MULTIPLE_ARG (118)
    on left: 142, on right: 146
FIRST_PART (119)
    on left: 143 144, on right: 142 144
SECOND_PART (120)
    on left: 145, on right: 142
CASE_STATEMENT (121)
    on left: 146 147, on right: 140
CASE_BODY (122)
    on left: 148 149, on right: 140 141 149
SWITCH_BODY_END (123)
    on left: 150, on right: 133 134
IF (124)
    on left: 151 152 153 154, on right: 50
IF_FIRST (125)
    on left: 155 156, on right: 151 152 153 154
BODY_FOR_LOOP (126)
    on left: 157, on right: 155 156 167 170 188 189
BODY_FOR_LOOP_START (127)
    on left: 158 159 160, on right: 157 160
BODY_FOR_LOOP_END (128)
    on left: 161, on right: 157
LOOP_FILLING (129)
    on left: 162 163 164, on right: 149 160
MULTY_ELSEIF_SECOND (130)
    on left: 165 166, on right: 151 152 166
ELSEIF_SECOND (131)
    on left: 167, on right: 165 166
MULTY_ELSE_THIRD (132)
    on left: 168 169, on right: 151 153 169
ELSE_THIRD (133)
    on left: 170, on right: 168 169
RETURN (134)
    on left: 171 172, on right: 55
MANY_RETURN_START (135)
    on left: 173 174, on right: 172 174
MANY_RETURN_START_END (136)
    on left: 175, on right: 172
EXPR (137)
    on left: 176 177, on right: 60 61 63 64 68 81 83 89 92 100 102
    126 130 131 143 144 145 147 171 172 174 175 177 186
SHORT_EXPR (138)
    on left: 178, on right: 53
INIT_STATE (139)
    on left: 179 180 181, on right: 130 156 188
CONDITION (140)
    on left: 182 183 184 185, on right: 155 156 167 188 189
POST_STATE (141)
    on left: 186 187, on right: 188
FOR (142)
    on left: 188 189, on right: 46
EXPR_START (143)
    on left: 190, on right: 126 127
EXPR_END (144)
    on left: 191, on right: 126 127
ARRAY_BODY (145)
    on left: 192 193 194, on right: 54
ARRAY_INDEX (146)
    on left: 195 196 197 198, on right: 199 200
MULTI_AR (147)
    on left: 199 200, on right: 51 65 66 68 71 192 193 194 200 208
    209
PLENTY (148)
    on left: 201 202, on right: 65 66 193 202 205
PLENTY_OLD (149)
    on left: 203 204 205, on right: 201 202
ENUM (150)
    on left: 206 207, on right: 203 207 215
MAKE (151)
    on left: 208 209, on right: 69 70 71 194
SLICE (152)
    on left: 210 211 212, on right: 57 72 73 74
MAPS (153)
    on left: 213, on right: 75 76
STRUCT (154)
    on left: 214, on right: 7 56
STRUCT_BODY (155)
    on left: 215 216 217 218 219 220 221 222, on right: 219 220 221
    222 224 225
STRUCT_START (156)
    on left: 223 224 225 226, on right: 214
STRUCT_END (157)
    on left: 227 228, on right: 223 224 225
FIELD (158)
    on left: 229, on right: 234 239
FIELD_BODY (159)
    on left: 230, on right: 229
FIELD_START (160)
    on left: 231 232, on right: 230 232
FIELD_FULFILL (161)
    on left: 233 234 235, on right: 232
FIELD_END (162)
    on left: 236, on right: 230
FIELD_END_FULFILL (163)
    on left: 237 238, on right: 236
ST_EMBEDDED (164)
    on left: 239, on right: 77 78 79
END_SYMBOLS (165)
    on left: 240 241 242, on right: 1 2 3 43 44 112 113 114 115 136
    149 159 160 219 220 221 222 225 245 246 250 251 252
INTERFACE (166)
    on left: 243, on right: 8
INT_START (167)
    on left: 244 245 246, on right: 243
INT_BODY (168)
    on left: 247 248 249 250 251 252, on right: 244 245 246 250 251
    252
INT_END (169)
    on left: 253 254, on right: 244 245 246


State 0

    0 $accept: . START $end

    t_func     shift, and go to state 1
    t_import   shift, and go to state 2
    t_package  shift, and go to state 3
    t_type     shift, and go to state 4

    START         go to state 5
    GLOBAL        go to state 6
    PACKAGE       go to state 7
    IMPORT        go to state 8
    FUNC          go to state 9
    STRUCT        go to state 10
    STRUCT_START  go to state 11
    INTERFACE     go to state 12
    INT_START     go to state 13


State 1

   14 FUNC: t_func . t_id t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART

    t_id  shift, and go to state 14


State 2

   10 IMPORT: t_import . t_string
   11       | t_import . t_open_paren PARAM_IMPORT t_close_paren
   12       | t_import . t_open_paren t_enter PARAM_IMPORT t_close_paren
   13       | t_import . t_id t_string

    t_id          shift, and go to state 15
    t_string      shift, and go to state 16
    t_open_paren  shift, and go to state 17


State 3

    9 PACKAGE: t_package . t_id

    t_id  shift, and go to state 18


State 4

  223 STRUCT_START: t_type . t_id t_struct_const t_open_br STRUCT_END
  224             | t_type . t_id t_struct_const t_open_br STRUCT_BODY STRUCT_END
  225             | t_type . t_id t_struct_const t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END
  226             | t_type . t_id t_struct_const t_enter
  244 INT_START: t_type . t_id t_interface t_open_br INT_BODY INT_END
  245          | t_type . t_id t_interface t_open_br END_SYMBOLS INT_BODY INT_END
  246          | t_type . t_id t_interface t_enter t_open_br END_SYMBOLS INT_BODY INT_END

    t_id  shift, and go to state 19


State 5

    0 $accept: START . $end
    1 START: START . GLOBAL END_SYMBOLS
    3      | START . END_SYMBOLS

    $end         shift, and go to state 20
    t_func       shift, and go to state 1
    t_import     shift, and go to state 2
    t_package    shift, and go to state 3
    t_type       shift, and go to state 4
    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    GLOBAL        go to state 24
    PACKAGE       go to state 7
    IMPORT        go to state 8
    FUNC          go to state 9
    STRUCT        go to state 10
    STRUCT_START  go to state 11
    END_SYMBOLS   go to state 25
    INTERFACE     go to state 12
    INT_START     go to state 13


State 6

    2 START: GLOBAL . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 26


State 7

    4 GLOBAL: PACKAGE .

    $default  reduce using rule 4 (GLOBAL)


State 8

    5 GLOBAL: IMPORT .

    $default  reduce using rule 5 (GLOBAL)


State 9

    6 GLOBAL: FUNC .

    $default  reduce using rule 6 (GLOBAL)


State 10

    7 GLOBAL: STRUCT .

    $default  reduce using rule 7 (GLOBAL)


State 11

  214 STRUCT: STRUCT_START .

    $default  reduce using rule 214 (STRUCT)


State 12

    8 GLOBAL: INTERFACE .

    $default  reduce using rule 8 (GLOBAL)


State 13

  243 INTERFACE: INT_START .

    $default  reduce using rule 243 (INTERFACE)


State 14

   14 FUNC: t_func t_id . t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART

    t_open_paren  shift, and go to state 27


State 15

   13 IMPORT: t_import t_id . t_string

    t_string  shift, and go to state 28


State 16

   10 IMPORT: t_import t_string .

    $default  reduce using rule 10 (IMPORT)


State 17

   11 IMPORT: t_import t_open_paren . PARAM_IMPORT t_close_paren
   12       | t_import t_open_paren . t_enter PARAM_IMPORT t_close_paren

    t_id      shift, and go to state 29
    t_string  shift, and go to state 30
    t_enter   shift, and go to state 31

    PARAM_IMPORT  go to state 32


State 18

    9 PACKAGE: t_package t_id .

    $default  reduce using rule 9 (PACKAGE)


State 19

  223 STRUCT_START: t_type t_id . t_struct_const t_open_br STRUCT_END
  224             | t_type t_id . t_struct_const t_open_br STRUCT_BODY STRUCT_END
  225             | t_type t_id . t_struct_const t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END
  226             | t_type t_id . t_struct_const t_enter
  244 INT_START: t_type t_id . t_interface t_open_br INT_BODY INT_END
  245          | t_type t_id . t_interface t_open_br END_SYMBOLS INT_BODY INT_END
  246          | t_type t_id . t_interface t_enter t_open_br END_SYMBOLS INT_BODY INT_END

    t_interface     shift, and go to state 33
    t_struct_const  shift, and go to state 34


State 20

    0 $accept: START $end .

    $default  accept


State 21

  240 END_SYMBOLS: t_semicolon .

    $default  reduce using rule 240 (END_SYMBOLS)


State 22

  241 END_SYMBOLS: t_enter .

    $default  reduce using rule 241 (END_SYMBOLS)


State 23

  242 END_SYMBOLS: t_eof .

    $default  reduce using rule 242 (END_SYMBOLS)


State 24

    1 START: START GLOBAL . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 35


State 25

    3 START: START END_SYMBOLS .

    $default  reduce using rule 3 (START)


State 26

    2 START: GLOBAL END_SYMBOLS .

    $default  reduce using rule 2 (START)


State 27

   14 FUNC: t_func t_id t_open_paren . FUNC_PARAM t_close_paren FUNC_SECOND_PART

    t_id  shift, and go to state 36

    $default  reduce using rule 27 (FUNC_PARAM_FULFILL)

    FUNC_PARAM          go to state 37
    FUNC_PARAM_FULFILL  go to state 38


State 28

   13 IMPORT: t_import t_id t_string .

    $default  reduce using rule 13 (IMPORT)


State 29

  113 PARAM_IMPORT: t_id . t_string END_SYMBOLS

    t_string  shift, and go to state 39


State 30

  112 PARAM_IMPORT: t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 40


State 31

   12 IMPORT: t_import t_open_paren t_enter . PARAM_IMPORT t_close_paren

    t_id      shift, and go to state 29
    t_string  shift, and go to state 30

    PARAM_IMPORT  go to state 41


State 32

   11 IMPORT: t_import t_open_paren PARAM_IMPORT . t_close_paren
  114 PARAM_IMPORT: PARAM_IMPORT . t_string END_SYMBOLS
  115             | PARAM_IMPORT . t_id t_string END_SYMBOLS

    t_id           shift, and go to state 42
    t_string       shift, and go to state 43
    t_close_paren  shift, and go to state 44


State 33

  244 INT_START: t_type t_id t_interface . t_open_br INT_BODY INT_END
  245          | t_type t_id t_interface . t_open_br END_SYMBOLS INT_BODY INT_END
  246          | t_type t_id t_interface . t_enter t_open_br END_SYMBOLS INT_BODY INT_END

    t_open_br  shift, and go to state 45
    t_enter    shift, and go to state 46


State 34

  223 STRUCT_START: t_type t_id t_struct_const . t_open_br STRUCT_END
  224             | t_type t_id t_struct_const . t_open_br STRUCT_BODY STRUCT_END
  225             | t_type t_id t_struct_const . t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END
  226             | t_type t_id t_struct_const . t_enter

    t_open_br  shift, and go to state 47
    t_enter    shift, and go to state 48


State 35

    1 START: START GLOBAL END_SYMBOLS .

    $default  reduce using rule 1 (START)


State 36

   25 FUNC_PARAM_FULFILL: t_id . TYPE_AND_STRUCT
   26                   | t_id .

    t_vtype  shift, and go to state 49
    t_id     shift, and go to state 50

    $default  reduce using rule 26 (FUNC_PARAM_FULFILL)

    TYPE_AND_STRUCT  go to state 51


State 37

   14 FUNC: t_func t_id t_open_paren FUNC_PARAM . t_close_paren FUNC_SECOND_PART
   16 FUNC_PARAM: FUNC_PARAM . t_comma FUNC_PARAM_FULFILL

    t_comma        shift, and go to state 52
    t_close_paren  shift, and go to state 53


State 38

   15 FUNC_PARAM: FUNC_PARAM_FULFILL .

    $default  reduce using rule 15 (FUNC_PARAM)


State 39

  113 PARAM_IMPORT: t_id t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 54


State 40

  112 PARAM_IMPORT: t_string END_SYMBOLS .

    $default  reduce using rule 112 (PARAM_IMPORT)


State 41

   12 IMPORT: t_import t_open_paren t_enter PARAM_IMPORT . t_close_paren
  114 PARAM_IMPORT: PARAM_IMPORT . t_string END_SYMBOLS
  115             | PARAM_IMPORT . t_id t_string END_SYMBOLS

    t_id           shift, and go to state 42
    t_string       shift, and go to state 43
    t_close_paren  shift, and go to state 55


State 42

  115 PARAM_IMPORT: PARAM_IMPORT t_id . t_string END_SYMBOLS

    t_string  shift, and go to state 56


State 43

  114 PARAM_IMPORT: PARAM_IMPORT t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 57


State 44

   11 IMPORT: t_import t_open_paren PARAM_IMPORT t_close_paren .

    $default  reduce using rule 11 (IMPORT)


State 45

  244 INT_START: t_type t_id t_interface t_open_br . INT_BODY INT_END
  245          | t_type t_id t_interface t_open_br . END_SYMBOLS INT_BODY INT_END

    t_id         shift, and go to state 58
    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    FUNC_CALL    go to state 59
    END_SYMBOLS  go to state 60
    INT_BODY     go to state 61


State 46

  246 INT_START: t_type t_id t_interface t_enter . t_open_br END_SYMBOLS INT_BODY INT_END

    t_open_br  shift, and go to state 62


State 47

  223 STRUCT_START: t_type t_id t_struct_const t_open_br . STRUCT_END
  224             | t_type t_id t_struct_const t_open_br . STRUCT_BODY STRUCT_END
  225             | t_type t_id t_struct_const t_open_br . END_SYMBOLS STRUCT_BODY STRUCT_END

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_close_br          shift, and go to state 67
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_semicolon         shift, and go to state 21
    t_blank_identifier  shift, and go to state 70
    t_enter             shift, and go to state 71
    t_eof               shift, and go to state 23
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 79
    EXPR_START      go to state 80
    ENUM            go to state 81
    STRUCT_BODY     go to state 82
    STRUCT_END      go to state 83
    END_SYMBOLS     go to state 84


State 48

  226 STRUCT_START: t_type t_id t_struct_const t_enter .

    $default  reduce using rule 226 (STRUCT_START)


State 49

   38 TYPE_AND_STRUCT: t_vtype .

    $default  reduce using rule 38 (TYPE_AND_STRUCT)


State 50

   39 TYPE_AND_STRUCT: t_id .

    $default  reduce using rule 39 (TYPE_AND_STRUCT)


State 51

   25 FUNC_PARAM_FULFILL: t_id TYPE_AND_STRUCT .

    $default  reduce using rule 25 (FUNC_PARAM_FULFILL)


State 52

   16 FUNC_PARAM: FUNC_PARAM t_comma . FUNC_PARAM_FULFILL

    t_id  shift, and go to state 36

    $default  reduce using rule 27 (FUNC_PARAM_FULFILL)

    FUNC_PARAM_FULFILL  go to state 85


State 53

   14 FUNC: t_func t_id t_open_paren FUNC_PARAM t_close_paren . FUNC_SECOND_PART

    t_func        shift, and go to state 86
    t_open_br     shift, and go to state 87
    t_open_paren  shift, and go to state 88

    FUNC_SECOND_PART           go to state 89
    FUNC_PARAM_SECOND          go to state 90
    FUNC_PARAM_SECOND_START    go to state 91
    FUNC_RETURN_VALUE          go to state 92
    FUNC_RETURN_VALUE_FULFILL  go to state 93
    BODY                       go to state 94
    BODY_START                 go to state 95


State 54

  113 PARAM_IMPORT: t_id t_string END_SYMBOLS .

    $default  reduce using rule 113 (PARAM_IMPORT)


State 55

   12 IMPORT: t_import t_open_paren t_enter PARAM_IMPORT t_close_paren .

    $default  reduce using rule 12 (IMPORT)


State 56

  115 PARAM_IMPORT: PARAM_IMPORT t_id t_string . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 96


State 57

  114 PARAM_IMPORT: PARAM_IMPORT t_string END_SYMBOLS .

    $default  reduce using rule 114 (PARAM_IMPORT)


State 58

   94 FUNC_CALL: t_id . PARAM
  249 INT_BODY: t_id . t_open_paren t_vtype t_close_paren

    t_open_paren  shift, and go to state 97

    PARAM        go to state 98
    PARAM_START  go to state 99


State 59

  247 INT_BODY: FUNC_CALL .
  248         | FUNC_CALL . t_vtype

    t_vtype  shift, and go to state 100

    $default  reduce using rule 247 (INT_BODY)


State 60

  245 INT_START: t_type t_id t_interface t_open_br END_SYMBOLS . INT_BODY INT_END

    t_id  shift, and go to state 58

    FUNC_CALL  go to state 59
    INT_BODY   go to state 101


State 61

  244 INT_START: t_type t_id t_interface t_open_br INT_BODY . INT_END
  250 INT_BODY: INT_BODY . END_SYMBOLS t_id t_open_paren t_vtype t_close_paren
  251         | INT_BODY . END_SYMBOLS FUNC_CALL t_vtype
  252         | INT_BODY . END_SYMBOLS FUNC_CALL

    t_close_br   shift, and go to state 102
    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 103
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 104
    INT_END      go to state 105


State 62

  246 INT_START: t_type t_id t_interface t_enter t_open_br . END_SYMBOLS INT_BODY INT_END

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 106


State 63

  106 SHIFT_AC: t_int_const .
  116 VALUE: t_int_const .

    t_shift_const  reduce using rule 106 (SHIFT_AC)
    $default       reduce using rule 116 (VALUE)


State 64

  117 VALUE: t_float_const .

    $default  reduce using rule 117 (VALUE)


State 65

   94 FUNC_CALL: t_id . PARAM
  105 SHIFT_AC: t_id .
  109 METHOD_FULFILL: t_id .
  118 VALUE: t_id .
  216 STRUCT_BODY: t_id . t_id
  217            | t_id .
  218            | t_id . METHOD

    t_id          shift, and go to state 107
    t_open_paren  shift, and go to state 108

    t_vtype        reduce using rule 118 (VALUE)
    t_shift_const  reduce using rule 105 (SHIFT_AC)
    t_comma        reduce using rule 118 (VALUE)
    t_dot          reduce using rule 109 (METHOD_FULFILL)
    $default       reduce using rule 217 (STRUCT_BODY)

    FUNC_CALL       go to state 109
    PARAM           go to state 98
    PARAM_START     go to state 99
    METHOD          go to state 110
    METHOD_FULFILL  go to state 77


State 66

  119 VALUE: t_string .

    $default  reduce using rule 119 (VALUE)


State 67

  227 STRUCT_END: t_close_br .

    $default  reduce using rule 227 (STRUCT_END)


State 68

  190 EXPR_START: t_open_paren .

    $default  reduce using rule 190 (EXPR_START)


State 69

  120 VALUE: t_rune .

    $default  reduce using rule 120 (VALUE)


State 70

  121 VALUE: t_blank_identifier .

    $default  reduce using rule 121 (VALUE)


State 71

  228 STRUCT_END: t_enter . t_close_br
  241 END_SYMBOLS: t_enter .

    t_close_br  shift, and go to state 111

    $default  reduce using rule 241 (END_SYMBOLS)


State 72

  111 POINTER: t_pointer .

    $default  reduce using rule 111 (POINTER)


State 73

  110 METHOD_FULFILL: FUNC_CALL .
  122 VALUE: FUNC_CALL .

    t_dot     reduce using rule 110 (METHOD_FULFILL)
    $default  reduce using rule 122 (VALUE)


State 74

  123 VALUE: SHIFT .

    $default  reduce using rule 123 (VALUE)


State 75

  104 SHIFT: SHIFT_AC . t_shift_const SHIFT_AC

    t_shift_const  shift, and go to state 112


State 76

  108 METHOD: METHOD . t_dot METHOD_FULFILL
  125 VALUE: METHOD .

    t_dot  shift, and go to state 113

    $default  reduce using rule 125 (VALUE)


State 77

  107 METHOD: METHOD_FULFILL . t_dot METHOD_FULFILL

    t_dot  shift, and go to state 114


State 78

  124 VALUE: POINTER .

    $default  reduce using rule 124 (VALUE)


State 79

  206 ENUM: VALUE .

    $default  reduce using rule 206 (ENUM)


State 80

  126 VALUE: EXPR_START . EXPR EXPR_END
  127      | EXPR_START . BOOLEAN EXPR_END

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    BOOLEAN         go to state 116
    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 117
    EXPR            go to state 118
    EXPR_START      go to state 80


State 81

  207 ENUM: ENUM . t_comma VALUE
  215 STRUCT_BODY: ENUM . t_vtype

    t_vtype  shift, and go to state 119
    t_comma  shift, and go to state 120


State 82

  219 STRUCT_BODY: STRUCT_BODY . END_SYMBOLS t_id METHOD
  220            | STRUCT_BODY . END_SYMBOLS t_id t_vtype
  221            | STRUCT_BODY . END_SYMBOLS t_id t_id
  222            | STRUCT_BODY . END_SYMBOLS t_id
  224 STRUCT_START: t_type t_id t_struct_const t_open_br STRUCT_BODY . STRUCT_END

    t_close_br   shift, and go to state 67
    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 71
    t_eof        shift, and go to state 23

    STRUCT_END   go to state 121
    END_SYMBOLS  go to state 122


State 83

  223 STRUCT_START: t_type t_id t_struct_const t_open_br STRUCT_END .

    $default  reduce using rule 223 (STRUCT_START)


State 84

  225 STRUCT_START: t_type t_id t_struct_const t_open_br END_SYMBOLS . STRUCT_BODY STRUCT_END

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 65
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 79
    EXPR_START      go to state 80
    ENUM            go to state 81
    STRUCT_BODY     go to state 123


State 85

   16 FUNC_PARAM: FUNC_PARAM t_comma FUNC_PARAM_FULFILL .

    $default  reduce using rule 16 (FUNC_PARAM)


State 86

   36 FUNC_RETURN_VALUE_FULFILL: t_func . t_open_paren TYPE_AND_STRUCT t_close_paren
   37                          | t_func . t_open_paren t_close_paren

    t_open_paren  shift, and go to state 124


State 87

   42 BODY_START: t_open_br .

    $default  reduce using rule 42 (BODY_START)


State 88

   21 FUNC_PARAM_SECOND: t_open_paren . t_close_paren
   22 FUNC_PARAM_SECOND_START: t_open_paren .

    t_close_paren  shift, and go to state 125

    $default  reduce using rule 22 (FUNC_PARAM_SECOND_START)


State 89

   14 FUNC: t_func t_id t_open_paren FUNC_PARAM t_close_paren FUNC_SECOND_PART .

    $default  reduce using rule 14 (FUNC)


State 90

   19 FUNC_SECOND_PART: FUNC_PARAM_SECOND . BODY

    t_open_br  shift, and go to state 87

    BODY        go to state 126
    BODY_START  go to state 95


State 91

   20 FUNC_PARAM_SECOND: FUNC_PARAM_SECOND_START . FUNC_PARAM_SECOND_END
   23 FUNC_PARAM_SECOND_START: FUNC_PARAM_SECOND_START . FUNC_PARAM_FULFILL_SECOND

    t_vtype  shift, and go to state 49
    t_id     shift, and go to state 127
    t_enter  shift, and go to state 128

    FUNC_PARAM_SECOND_END          go to state 129
    FUNC_PARAM_FULFILL_SECOND      go to state 130
    FUNC_PARAM_FULFILL_SECOND_END  go to state 131
    TYPE_AND_STRUCT                go to state 132


State 92

   18 FUNC_SECOND_PART: FUNC_RETURN_VALUE . TYPE_AND_STRUCT BODY
   35 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE . FUNC_RETURN_VALUE_FULFILL

    t_vtype  shift, and go to state 49
    t_func   shift, and go to state 86
    t_id     shift, and go to state 50

    FUNC_RETURN_VALUE_FULFILL  go to state 133
    TYPE_AND_STRUCT            go to state 134


State 93

   34 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE_FULFILL .

    $default  reduce using rule 34 (FUNC_RETURN_VALUE)


State 94

   17 FUNC_SECOND_PART: BODY .

    $default  reduce using rule 17 (FUNC_SECOND_PART)


State 95

   40 BODY: BODY_START . BODY_END
   43 BODY_START: BODY_START . BODY_FILLING END_SYMBOLS
   44           | BODY_START . END_SYMBOLS

    t_defer      shift, and go to state 135
    t_var        shift, and go to state 136
    t_if         shift, and go to state 137
    t_switch     shift, and go to state 138
    t_type       shift, and go to state 139
    t_for        shift, and go to state 140
    t_goto       shift, and go to state 141
    t_return     shift, and go to state 142
    t_id         shift, and go to state 143
    t_close_br   shift, and go to state 144
    t_open_sq    shift, and go to state 145
    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23
    t_pointer    shift, and go to state 72

    BODY_END        go to state 146
    BODY_FILLING    go to state 147
    VAR             go to state 148
    DEFER           go to state 149
    FUNC_CALL       go to state 150
    METHOD          go to state 151
    METHOD_FULFILL  go to state 77
    POINTER         go to state 152
    GOTO            go to state 153
    LABEL           go to state 154
    SWITCH          go to state 155
    IF              go to state 156
    IF_FIRST        go to state 157
    RETURN          go to state 158
    SHORT_EXPR      go to state 159
    FOR             go to state 160
    ARRAY_BODY      go to state 161
    ARRAY_INDEX     go to state 162
    MULTI_AR        go to state 163
    SLICE           go to state 164
    STRUCT          go to state 165
    STRUCT_START    go to state 11
    END_SYMBOLS     go to state 166


State 96

  115 PARAM_IMPORT: PARAM_IMPORT t_id t_string END_SYMBOLS .

    $default  reduce using rule 115 (PARAM_IMPORT)


State 97

   96 PARAM: t_open_paren . t_close_paren
   97 PARAM_START: t_open_paren .
  249 INT_BODY: t_id t_open_paren . t_vtype t_close_paren

    t_vtype        shift, and go to state 167
    t_close_paren  shift, and go to state 168

    $default  reduce using rule 97 (PARAM_START)


State 98

   94 FUNC_CALL: t_id PARAM .

    $default  reduce using rule 94 (FUNC_CALL)


State 99

   95 PARAM: PARAM_START . PARAM_END
   98 PARAM_START: PARAM_START . PARAM_FULFILL

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_enter             shift, and go to state 169
    t_pointer           shift, and go to state 72

    FUNC_CALL          go to state 73
    PARAM_END          go to state 170
    PARAM_END_FULFILL  go to state 171
    PARAM_FULFILL      go to state 172
    SHIFT              go to state 74
    SHIFT_AC           go to state 75
    METHOD             go to state 76
    METHOD_FULFILL     go to state 77
    POINTER            go to state 78
    VALUE              go to state 173
    EXPR               go to state 174
    EXPR_START         go to state 80


State 100

  248 INT_BODY: FUNC_CALL t_vtype .

    $default  reduce using rule 248 (INT_BODY)


State 101

  245 INT_START: t_type t_id t_interface t_open_br END_SYMBOLS INT_BODY . INT_END
  250 INT_BODY: INT_BODY . END_SYMBOLS t_id t_open_paren t_vtype t_close_paren
  251         | INT_BODY . END_SYMBOLS FUNC_CALL t_vtype
  252         | INT_BODY . END_SYMBOLS FUNC_CALL

    t_close_br   shift, and go to state 102
    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 103
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 104
    INT_END      go to state 175


State 102

  253 INT_END: t_close_br .

    $default  reduce using rule 253 (INT_END)


State 103

  241 END_SYMBOLS: t_enter .
  254 INT_END: t_enter . t_close_br

    t_close_br  shift, and go to state 176

    $default  reduce using rule 241 (END_SYMBOLS)


State 104

  250 INT_BODY: INT_BODY END_SYMBOLS . t_id t_open_paren t_vtype t_close_paren
  251         | INT_BODY END_SYMBOLS . FUNC_CALL t_vtype
  252         | INT_BODY END_SYMBOLS . FUNC_CALL

    t_id  shift, and go to state 177

    FUNC_CALL  go to state 178


State 105

  244 INT_START: t_type t_id t_interface t_open_br INT_BODY INT_END .

    $default  reduce using rule 244 (INT_START)


State 106

  246 INT_START: t_type t_id t_interface t_enter t_open_br END_SYMBOLS . INT_BODY INT_END

    t_id  shift, and go to state 58

    FUNC_CALL  go to state 59
    INT_BODY   go to state 179


State 107

   94 FUNC_CALL: t_id . PARAM
  109 METHOD_FULFILL: t_id .
  216 STRUCT_BODY: t_id t_id .

    t_open_paren  shift, and go to state 108

    t_dot     reduce using rule 109 (METHOD_FULFILL)
    $default  reduce using rule 216 (STRUCT_BODY)

    PARAM        go to state 98
    PARAM_START  go to state 99


State 108

   96 PARAM: t_open_paren . t_close_paren
   97 PARAM_START: t_open_paren .

    t_close_paren  shift, and go to state 168

    $default  reduce using rule 97 (PARAM_START)


State 109

  110 METHOD_FULFILL: FUNC_CALL .

    $default  reduce using rule 110 (METHOD_FULFILL)


State 110

  108 METHOD: METHOD . t_dot METHOD_FULFILL
  218 STRUCT_BODY: t_id METHOD .

    t_dot  shift, and go to state 113

    $default  reduce using rule 218 (STRUCT_BODY)


State 111

  228 STRUCT_END: t_enter t_close_br .

    $default  reduce using rule 228 (STRUCT_END)


State 112

  104 SHIFT: SHIFT_AC t_shift_const . SHIFT_AC

    t_int_const  shift, and go to state 180
    t_id         shift, and go to state 181

    SHIFT_AC  go to state 182


State 113

  108 METHOD: METHOD t_dot . METHOD_FULFILL

    t_id  shift, and go to state 183

    FUNC_CALL       go to state 109
    METHOD_FULFILL  go to state 184


State 114

  107 METHOD: METHOD_FULFILL t_dot . METHOD_FULFILL

    t_id  shift, and go to state 183

    FUNC_CALL       go to state 109
    METHOD_FULFILL  go to state 185


State 115

   94 FUNC_CALL: t_id . PARAM
  105 SHIFT_AC: t_id .
  109 METHOD_FULFILL: t_id .
  118 VALUE: t_id .

    t_open_paren  shift, and go to state 108

    t_shift_const  reduce using rule 105 (SHIFT_AC)
    t_dot          reduce using rule 109 (METHOD_FULFILL)
    $default       reduce using rule 118 (VALUE)

    PARAM        go to state 98
    PARAM_START  go to state 99


State 116

   85 BOOLEAN: BOOLEAN . t_bool VALUE
  127 VALUE: EXPR_START BOOLEAN . EXPR_END

    t_close_paren  shift, and go to state 186
    t_bool         shift, and go to state 187

    EXPR_END  go to state 188


State 117

   84 BOOLEAN: VALUE . t_bool VALUE
  176 EXPR: VALUE .

    t_bool  shift, and go to state 189

    $default  reduce using rule 176 (EXPR)


State 118

  126 VALUE: EXPR_START EXPR . EXPR_END
  177 EXPR: EXPR . t_sign VALUE

    t_sign         shift, and go to state 190
    t_close_paren  shift, and go to state 186

    EXPR_END  go to state 191


State 119

  215 STRUCT_BODY: ENUM t_vtype .

    $default  reduce using rule 215 (STRUCT_BODY)


State 120

  207 ENUM: ENUM t_comma . VALUE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 192
    EXPR_START      go to state 80


State 121

  224 STRUCT_START: t_type t_id t_struct_const t_open_br STRUCT_BODY STRUCT_END .

    $default  reduce using rule 224 (STRUCT_START)


State 122

  219 STRUCT_BODY: STRUCT_BODY END_SYMBOLS . t_id METHOD
  220            | STRUCT_BODY END_SYMBOLS . t_id t_vtype
  221            | STRUCT_BODY END_SYMBOLS . t_id t_id
  222            | STRUCT_BODY END_SYMBOLS . t_id

    t_id  shift, and go to state 193


State 123

  219 STRUCT_BODY: STRUCT_BODY . END_SYMBOLS t_id METHOD
  220            | STRUCT_BODY . END_SYMBOLS t_id t_vtype
  221            | STRUCT_BODY . END_SYMBOLS t_id t_id
  222            | STRUCT_BODY . END_SYMBOLS t_id
  225 STRUCT_START: t_type t_id t_struct_const t_open_br END_SYMBOLS STRUCT_BODY . STRUCT_END

    t_close_br   shift, and go to state 67
    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 71
    t_eof        shift, and go to state 23

    STRUCT_END   go to state 194
    END_SYMBOLS  go to state 122


State 124

   36 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren . TYPE_AND_STRUCT t_close_paren
   37                          | t_func t_open_paren . t_close_paren

    t_vtype        shift, and go to state 49
    t_id           shift, and go to state 50
    t_close_paren  shift, and go to state 195

    TYPE_AND_STRUCT  go to state 196


State 125

   21 FUNC_PARAM_SECOND: t_open_paren t_close_paren .

    $default  reduce using rule 21 (FUNC_PARAM_SECOND)


State 126

   19 FUNC_SECOND_PART: FUNC_PARAM_SECOND BODY .

    $default  reduce using rule 19 (FUNC_SECOND_PART)


State 127

   28 FUNC_PARAM_FULFILL_SECOND: t_id . TYPE_AND_STRUCT t_comma
   31 FUNC_PARAM_FULFILL_SECOND_END: t_id . TYPE_AND_STRUCT
   39 TYPE_AND_STRUCT: t_id .

    t_vtype  shift, and go to state 49
    t_id     shift, and go to state 50

    $default  reduce using rule 39 (TYPE_AND_STRUCT)

    TYPE_AND_STRUCT  go to state 197


State 128

   30 FUNC_PARAM_FULFILL_SECOND: t_enter .
   33 FUNC_PARAM_FULFILL_SECOND_END: t_enter .

    t_close_paren  reduce using rule 33 (FUNC_PARAM_FULFILL_SECOND_END)
    $default       reduce using rule 30 (FUNC_PARAM_FULFILL_SECOND)


State 129

   20 FUNC_PARAM_SECOND: FUNC_PARAM_SECOND_START FUNC_PARAM_SECOND_END .

    $default  reduce using rule 20 (FUNC_PARAM_SECOND)


State 130

   23 FUNC_PARAM_SECOND_START: FUNC_PARAM_SECOND_START FUNC_PARAM_FULFILL_SECOND .

    $default  reduce using rule 23 (FUNC_PARAM_SECOND_START)


State 131

   24 FUNC_PARAM_SECOND_END: FUNC_PARAM_FULFILL_SECOND_END . t_close_paren

    t_close_paren  shift, and go to state 198


State 132

   29 FUNC_PARAM_FULFILL_SECOND: TYPE_AND_STRUCT . t_comma
   32 FUNC_PARAM_FULFILL_SECOND_END: TYPE_AND_STRUCT .

    t_comma  shift, and go to state 199

    $default  reduce using rule 32 (FUNC_PARAM_FULFILL_SECOND_END)


State 133

   35 FUNC_RETURN_VALUE: FUNC_RETURN_VALUE FUNC_RETURN_VALUE_FULFILL .

    $default  reduce using rule 35 (FUNC_RETURN_VALUE)


State 134

   18 FUNC_SECOND_PART: FUNC_RETURN_VALUE TYPE_AND_STRUCT . BODY

    t_open_br  shift, and go to state 87

    BODY        go to state 200
    BODY_START  go to state 95


State 135

   86 DEFER: t_defer . FUNC_CALL

    t_id  shift, and go to state 201

    FUNC_CALL  go to state 202


State 136

   60 VAR: t_var . t_id ASSIGNMENT EXPR
   61    | t_var . t_id ASSIGNMENT EXPR t_vtype
   62    | t_var . t_id ASSIGNMENT BOOLEAN
   66    | t_var . t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   69    | t_var . t_id ASSIGNMENT MAKE
   74    | t_var . t_id ASSIGNMENT SLICE
   75    | t_var . t_id MAPS
   77    | t_var . t_id t_id ASSIGNMENT ST_EMBEDDED
   78    | t_var . t_id ASSIGNMENT ST_EMBEDDED
   82    | t_var . t_id POINTER
   83    | t_var . t_id POINTER ASSIGNMENT EXPR
  192 ARRAY_BODY: t_var . t_id MULTI_AR t_vtype
  193           | t_var . t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  194           | t_var . t_id MULTI_AR t_vtype ASSIGNMENT MAKE

    t_id  shift, and go to state 203


State 137

  155 IF_FIRST: t_if . CONDITION BODY_FOR_LOOP
  156         | t_if . INIT_STATE t_semicolon CONDITION BODY_FOR_LOOP

    t_var               shift, and go to state 204
    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 205
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_true              shift, and go to state 206
    t_false             shift, and go to state 207
    t_pointer           shift, and go to state 72

    t_open_br  reduce using rule 185 (CONDITION)
    $default   reduce using rule 181 (INIT_STATE)

    VAR             go to state 208
    BOOLEAN         go to state 209
    FUNC_CALL       go to state 210
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 211
    METHOD_FULFILL  go to state 77
    POINTER         go to state 212
    VALUE           go to state 213
    INIT_STATE      go to state 214
    CONDITION       go to state 215
    EXPR_START      go to state 80


State 138

  130 SWITCH: t_switch . INIT_STATE t_semicolon EXPR SWITCH_BODY
  131       | t_switch . EXPR SWITCH_BODY
  132       | t_switch . SWITCH_BODY

    t_var               shift, and go to state 204
    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 205
    t_string            shift, and go to state 66
    t_open_br           shift, and go to state 216
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    $default  reduce using rule 181 (INIT_STATE)

    VAR                             go to state 208
    FUNC_CALL                       go to state 210
    SHIFT                           go to state 74
    SHIFT_AC                        go to state 75
    METHOD                          go to state 211
    METHOD_FULFILL                  go to state 77
    POINTER                         go to state 212
    VALUE                           go to state 173
    SWITCH_BODY                     go to state 217
    SWITCH_BODY_START               go to state 218
    SWITCH_BODY_START_WITH_DEFAULT  go to state 219
    EXPR                            go to state 220
    INIT_STATE                      go to state 221
    EXPR_START                      go to state 80


State 139

  223 STRUCT_START: t_type . t_id t_struct_const t_open_br STRUCT_END
  224             | t_type . t_id t_struct_const t_open_br STRUCT_BODY STRUCT_END
  225             | t_type . t_id t_struct_const t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END
  226             | t_type . t_id t_struct_const t_enter

    t_id  shift, and go to state 222


State 140

  188 FOR: t_for . INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY_FOR_LOOP
  189    | t_for . CONDITION BODY_FOR_LOOP

    t_var               shift, and go to state 204
    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 205
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_true              shift, and go to state 206
    t_false             shift, and go to state 207
    t_pointer           shift, and go to state 72

    t_open_br  reduce using rule 185 (CONDITION)
    $default   reduce using rule 181 (INIT_STATE)

    VAR             go to state 208
    BOOLEAN         go to state 209
    FUNC_CALL       go to state 210
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 211
    METHOD_FULFILL  go to state 77
    POINTER         go to state 212
    VALUE           go to state 213
    INIT_STATE      go to state 223
    CONDITION       go to state 224
    EXPR_START      go to state 80


State 141

  128 GOTO: t_goto . t_id

    t_id  shift, and go to state 225


State 142

  171 RETURN: t_return . EXPR
  172       | t_return . EXPR MANY_RETURN_START MANY_RETURN_START_END

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 173
    EXPR            go to state 226
    EXPR_START      go to state 80


State 143

   63 VAR: t_id . SHORT_ASSIGN EXPR
   64    | t_id . ASSIGNMENT EXPR
   65    | t_id . SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   67    | t_id . SHORT_ASSIGN BOOLEAN
   68    | t_id . MULTI_AR ASSIGNMENT EXPR
   70    | t_id . SHORT_ASSIGN MAKE
   71    | t_id . MULTI_AR ASSIGNMENT MAKE
   72    | t_id . SHORT_ASSIGN SLICE
   73    | t_id . ASSIGNMENT SLICE
   76    | t_id . SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   79    | t_id . SHORT_ASSIGN ST_EMBEDDED
   94 FUNC_CALL: t_id . PARAM
  109 METHOD_FULFILL: t_id .
  129 LABEL: t_id . t_colon
  178 SHORT_EXPR: t_id . t_short_expr t_id
  210 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  211      | t_id . t_open_sq t_colon VALUE t_close_sq
  212      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_vtype       shift, and go to state 227
    t_short_dec   shift, and go to state 228
    t_comma       shift, and go to state 229
    t_equality    shift, and go to state 230
    t_open_paren  shift, and go to state 108
    t_open_sq     shift, and go to state 231
    t_colon       shift, and go to state 232
    t_short_expr  shift, and go to state 233

    $default  reduce using rule 109 (METHOD_FULFILL)

    ASSIGNMENT    go to state 234
    SHORT_ASSIGN  go to state 235
    PARAM         go to state 98
    PARAM_START   go to state 99
    ARRAY_INDEX   go to state 162
    MULTI_AR      go to state 236


State 144

   41 BODY_END: t_close_br .

    $default  reduce using rule 41 (BODY_END)


State 145

  195 ARRAY_INDEX: t_open_sq . t_int_const t_close_sq
  196            | t_open_sq . t_id t_close_sq
  197            | t_open_sq . t_string t_close_sq
  198            | t_open_sq . t_close_sq

    t_int_const  shift, and go to state 237
    t_id         shift, and go to state 238
    t_string     shift, and go to state 239
    t_close_sq   shift, and go to state 240


State 146

   40 BODY: BODY_START BODY_END .

    $default  reduce using rule 40 (BODY)


State 147

   43 BODY_START: BODY_START BODY_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 241


State 148

   45 BODY_FILLING: VAR .

    $default  reduce using rule 45 (BODY_FILLING)


State 149

   58 BODY_FILLING: DEFER .

    $default  reduce using rule 58 (BODY_FILLING)


State 150

   52 BODY_FILLING: FUNC_CALL .
  110 METHOD_FULFILL: FUNC_CALL .

    t_dot     reduce using rule 110 (METHOD_FULFILL)
    $default  reduce using rule 52 (BODY_FILLING)


State 151

   59 BODY_FILLING: METHOD .
   80 VAR: METHOD . ASSIGNMENT VALUE
  108 METHOD: METHOD . t_dot METHOD_FULFILL

    t_vtype     shift, and go to state 227
    t_comma     shift, and go to state 242
    t_equality  shift, and go to state 230
    t_dot       shift, and go to state 113

    $default  reduce using rule 59 (BODY_FILLING)

    ASSIGNMENT  go to state 243


State 152

   81 VAR: POINTER . ASSIGNMENT EXPR

    t_vtype     shift, and go to state 227
    t_comma     shift, and go to state 242
    t_equality  shift, and go to state 230

    ASSIGNMENT  go to state 244


State 153

   48 BODY_FILLING: GOTO .

    $default  reduce using rule 48 (BODY_FILLING)


State 154

   49 BODY_FILLING: LABEL .

    $default  reduce using rule 49 (BODY_FILLING)


State 155

   47 BODY_FILLING: SWITCH .

    $default  reduce using rule 47 (BODY_FILLING)


State 156

   50 BODY_FILLING: IF .

    $default  reduce using rule 50 (BODY_FILLING)


State 157

  151 IF: IF_FIRST . MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD
  152   | IF_FIRST . MULTY_ELSEIF_SECOND
  153   | IF_FIRST . MULTY_ELSE_THIRD
  154   | IF_FIRST .

    t_else  shift, and go to state 245

    $default  reduce using rule 154 (IF)

    MULTY_ELSEIF_SECOND  go to state 246
    ELSEIF_SECOND        go to state 247
    MULTY_ELSE_THIRD     go to state 248
    ELSE_THIRD           go to state 249


State 158

   55 BODY_FILLING: RETURN .

    $default  reduce using rule 55 (BODY_FILLING)


State 159

   53 BODY_FILLING: SHORT_EXPR .

    $default  reduce using rule 53 (BODY_FILLING)


State 160

   46 BODY_FILLING: FOR .

    $default  reduce using rule 46 (BODY_FILLING)


State 161

   54 BODY_FILLING: ARRAY_BODY .

    $default  reduce using rule 54 (BODY_FILLING)


State 162

  199 MULTI_AR: ARRAY_INDEX .
  200         | ARRAY_INDEX . MULTI_AR

    t_open_sq  shift, and go to state 145

    $default  reduce using rule 199 (MULTI_AR)

    ARRAY_INDEX  go to state 162
    MULTI_AR     go to state 250


State 163

   51 BODY_FILLING: MULTI_AR .

    $default  reduce using rule 51 (BODY_FILLING)


State 164

   57 BODY_FILLING: SLICE .

    $default  reduce using rule 57 (BODY_FILLING)


State 165

   56 BODY_FILLING: STRUCT .

    $default  reduce using rule 56 (BODY_FILLING)


State 166

   44 BODY_START: BODY_START END_SYMBOLS .

    $default  reduce using rule 44 (BODY_START)


State 167

  249 INT_BODY: t_id t_open_paren t_vtype . t_close_paren

    t_close_paren  shift, and go to state 251


State 168

   96 PARAM: t_open_paren t_close_paren .

    $default  reduce using rule 96 (PARAM)


State 169

  101 PARAM_END_FULFILL: t_enter .
  103 PARAM_FULFILL: t_enter .

    t_close_paren  reduce using rule 101 (PARAM_END_FULFILL)
    $default       reduce using rule 103 (PARAM_FULFILL)


State 170

   95 PARAM: PARAM_START PARAM_END .

    $default  reduce using rule 95 (PARAM)


State 171

   99 PARAM_END: PARAM_END_FULFILL . t_close_paren

    t_close_paren  shift, and go to state 252


State 172

   98 PARAM_START: PARAM_START PARAM_FULFILL .

    $default  reduce using rule 98 (PARAM_START)


State 173

  176 EXPR: VALUE .

    $default  reduce using rule 176 (EXPR)


State 174

  100 PARAM_END_FULFILL: EXPR .
  102 PARAM_FULFILL: EXPR . t_comma
  177 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 190
    t_comma  shift, and go to state 253

    $default  reduce using rule 100 (PARAM_END_FULFILL)


State 175

  245 INT_START: t_type t_id t_interface t_open_br END_SYMBOLS INT_BODY INT_END .

    $default  reduce using rule 245 (INT_START)


State 176

  254 INT_END: t_enter t_close_br .

    $default  reduce using rule 254 (INT_END)


State 177

   94 FUNC_CALL: t_id . PARAM
  250 INT_BODY: INT_BODY END_SYMBOLS t_id . t_open_paren t_vtype t_close_paren

    t_open_paren  shift, and go to state 254

    PARAM        go to state 98
    PARAM_START  go to state 99


State 178

  251 INT_BODY: INT_BODY END_SYMBOLS FUNC_CALL . t_vtype
  252         | INT_BODY END_SYMBOLS FUNC_CALL .

    t_vtype  shift, and go to state 255

    $default  reduce using rule 252 (INT_BODY)


State 179

  246 INT_START: t_type t_id t_interface t_enter t_open_br END_SYMBOLS INT_BODY . INT_END
  250 INT_BODY: INT_BODY . END_SYMBOLS t_id t_open_paren t_vtype t_close_paren
  251         | INT_BODY . END_SYMBOLS FUNC_CALL t_vtype
  252         | INT_BODY . END_SYMBOLS FUNC_CALL

    t_close_br   shift, and go to state 102
    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 103
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 104
    INT_END      go to state 256


State 180

  106 SHIFT_AC: t_int_const .

    $default  reduce using rule 106 (SHIFT_AC)


State 181

  105 SHIFT_AC: t_id .

    $default  reduce using rule 105 (SHIFT_AC)


State 182

  104 SHIFT: SHIFT_AC t_shift_const SHIFT_AC .

    $default  reduce using rule 104 (SHIFT)


State 183

   94 FUNC_CALL: t_id . PARAM
  109 METHOD_FULFILL: t_id .

    t_open_paren  shift, and go to state 108

    $default  reduce using rule 109 (METHOD_FULFILL)

    PARAM        go to state 98
    PARAM_START  go to state 99


State 184

  108 METHOD: METHOD t_dot METHOD_FULFILL .

    $default  reduce using rule 108 (METHOD)


State 185

  107 METHOD: METHOD_FULFILL t_dot METHOD_FULFILL .

    $default  reduce using rule 107 (METHOD)


State 186

  191 EXPR_END: t_close_paren .

    $default  reduce using rule 191 (EXPR_END)


State 187

   85 BOOLEAN: BOOLEAN t_bool . VALUE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 257
    EXPR_START      go to state 80


State 188

  127 VALUE: EXPR_START BOOLEAN EXPR_END .

    $default  reduce using rule 127 (VALUE)


State 189

   84 BOOLEAN: VALUE t_bool . VALUE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 258
    EXPR_START      go to state 80


State 190

  177 EXPR: EXPR t_sign . VALUE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 259
    EXPR_START      go to state 80


State 191

  126 VALUE: EXPR_START EXPR EXPR_END .

    $default  reduce using rule 126 (VALUE)


State 192

  207 ENUM: ENUM t_comma VALUE .

    $default  reduce using rule 207 (ENUM)


State 193

  219 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id . METHOD
  220            | STRUCT_BODY END_SYMBOLS t_id . t_vtype
  221            | STRUCT_BODY END_SYMBOLS t_id . t_id
  222            | STRUCT_BODY END_SYMBOLS t_id .

    t_vtype  shift, and go to state 260
    t_id     shift, and go to state 261

    $default  reduce using rule 222 (STRUCT_BODY)

    FUNC_CALL       go to state 109
    METHOD          go to state 262
    METHOD_FULFILL  go to state 77


State 194

  225 STRUCT_START: t_type t_id t_struct_const t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END .

    $default  reduce using rule 225 (STRUCT_START)


State 195

   37 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren t_close_paren .

    $default  reduce using rule 37 (FUNC_RETURN_VALUE_FULFILL)


State 196

   36 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren TYPE_AND_STRUCT . t_close_paren

    t_close_paren  shift, and go to state 263


State 197

   28 FUNC_PARAM_FULFILL_SECOND: t_id TYPE_AND_STRUCT . t_comma
   31 FUNC_PARAM_FULFILL_SECOND_END: t_id TYPE_AND_STRUCT .

    t_comma  shift, and go to state 264

    $default  reduce using rule 31 (FUNC_PARAM_FULFILL_SECOND_END)


State 198

   24 FUNC_PARAM_SECOND_END: FUNC_PARAM_FULFILL_SECOND_END t_close_paren .

    $default  reduce using rule 24 (FUNC_PARAM_SECOND_END)


State 199

   29 FUNC_PARAM_FULFILL_SECOND: TYPE_AND_STRUCT t_comma .

    $default  reduce using rule 29 (FUNC_PARAM_FULFILL_SECOND)


State 200

   18 FUNC_SECOND_PART: FUNC_RETURN_VALUE TYPE_AND_STRUCT BODY .

    $default  reduce using rule 18 (FUNC_SECOND_PART)


State 201

   94 FUNC_CALL: t_id . PARAM

    t_open_paren  shift, and go to state 108

    PARAM        go to state 98
    PARAM_START  go to state 99


State 202

   86 DEFER: t_defer FUNC_CALL .

    $default  reduce using rule 86 (DEFER)


State 203

   60 VAR: t_var t_id . ASSIGNMENT EXPR
   61    | t_var t_id . ASSIGNMENT EXPR t_vtype
   62    | t_var t_id . ASSIGNMENT BOOLEAN
   66    | t_var t_id . ASSIGNMENT MULTI_AR t_vtype PLENTY
   69    | t_var t_id . ASSIGNMENT MAKE
   74    | t_var t_id . ASSIGNMENT SLICE
   75    | t_var t_id . MAPS
   77    | t_var t_id . t_id ASSIGNMENT ST_EMBEDDED
   78    | t_var t_id . ASSIGNMENT ST_EMBEDDED
   82    | t_var t_id . POINTER
   83    | t_var t_id . POINTER ASSIGNMENT EXPR
  192 ARRAY_BODY: t_var t_id . MULTI_AR t_vtype
  193           | t_var t_id . MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  194           | t_var t_id . MULTI_AR t_vtype ASSIGNMENT MAKE

    t_vtype     shift, and go to state 227
    t_map       shift, and go to state 265
    t_id        shift, and go to state 266
    t_comma     shift, and go to state 242
    t_equality  shift, and go to state 230
    t_open_sq   shift, and go to state 145
    t_pointer   shift, and go to state 72

    ASSIGNMENT   go to state 267
    POINTER      go to state 268
    ARRAY_INDEX  go to state 162
    MULTI_AR     go to state 269
    MAPS         go to state 270


State 204

   60 VAR: t_var . t_id ASSIGNMENT EXPR
   61    | t_var . t_id ASSIGNMENT EXPR t_vtype
   62    | t_var . t_id ASSIGNMENT BOOLEAN
   66    | t_var . t_id ASSIGNMENT MULTI_AR t_vtype PLENTY
   69    | t_var . t_id ASSIGNMENT MAKE
   74    | t_var . t_id ASSIGNMENT SLICE
   75    | t_var . t_id MAPS
   77    | t_var . t_id t_id ASSIGNMENT ST_EMBEDDED
   78    | t_var . t_id ASSIGNMENT ST_EMBEDDED
   82    | t_var . t_id POINTER
   83    | t_var . t_id POINTER ASSIGNMENT EXPR

    t_id  shift, and go to state 271


State 205

   63 VAR: t_id . SHORT_ASSIGN EXPR
   64    | t_id . ASSIGNMENT EXPR
   65    | t_id . SHORT_ASSIGN MULTI_AR t_vtype PLENTY
   67    | t_id . SHORT_ASSIGN BOOLEAN
   68    | t_id . MULTI_AR ASSIGNMENT EXPR
   70    | t_id . SHORT_ASSIGN MAKE
   71    | t_id . MULTI_AR ASSIGNMENT MAKE
   72    | t_id . SHORT_ASSIGN SLICE
   73    | t_id . ASSIGNMENT SLICE
   76    | t_id . SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren
   79    | t_id . SHORT_ASSIGN ST_EMBEDDED
   94 FUNC_CALL: t_id . PARAM
  105 SHIFT_AC: t_id .
  109 METHOD_FULFILL: t_id .
  118 VALUE: t_id .

    t_vtype       shift, and go to state 227
    t_short_dec   shift, and go to state 228
    t_comma       shift, and go to state 229
    t_equality    shift, and go to state 230
    t_open_paren  shift, and go to state 108
    t_open_sq     shift, and go to state 145

    t_shift_const  reduce using rule 105 (SHIFT_AC)
    t_dot          reduce using rule 109 (METHOD_FULFILL)
    $default       reduce using rule 118 (VALUE)

    ASSIGNMENT    go to state 234
    SHORT_ASSIGN  go to state 235
    PARAM         go to state 98
    PARAM_START   go to state 99
    ARRAY_INDEX   go to state 162
    MULTI_AR      go to state 236


State 206

  183 CONDITION: t_true .

    $default  reduce using rule 183 (CONDITION)


State 207

  184 CONDITION: t_false .

    $default  reduce using rule 184 (CONDITION)


State 208

  179 INIT_STATE: VAR .

    $default  reduce using rule 179 (INIT_STATE)


State 209

   85 BOOLEAN: BOOLEAN . t_bool VALUE
  182 CONDITION: BOOLEAN .

    t_bool  shift, and go to state 187

    $default  reduce using rule 182 (CONDITION)


State 210

  110 METHOD_FULFILL: FUNC_CALL .
  122 VALUE: FUNC_CALL .
  180 INIT_STATE: FUNC_CALL .

    t_semicolon  reduce using rule 180 (INIT_STATE)
    t_dot        reduce using rule 110 (METHOD_FULFILL)
    $default     reduce using rule 122 (VALUE)


State 211

   80 VAR: METHOD . ASSIGNMENT VALUE
  108 METHOD: METHOD . t_dot METHOD_FULFILL
  125 VALUE: METHOD .

    t_vtype     shift, and go to state 227
    t_comma     shift, and go to state 242
    t_equality  shift, and go to state 230
    t_dot       shift, and go to state 113

    $default  reduce using rule 125 (VALUE)

    ASSIGNMENT  go to state 243


State 212

   81 VAR: POINTER . ASSIGNMENT EXPR
  124 VALUE: POINTER .

    t_vtype     shift, and go to state 227
    t_comma     shift, and go to state 242
    t_equality  shift, and go to state 230

    $default  reduce using rule 124 (VALUE)

    ASSIGNMENT  go to state 244


State 213

   84 BOOLEAN: VALUE . t_bool VALUE

    t_bool  shift, and go to state 189


State 214

  156 IF_FIRST: t_if INIT_STATE . t_semicolon CONDITION BODY_FOR_LOOP

    t_semicolon  shift, and go to state 272


State 215

  155 IF_FIRST: t_if CONDITION . BODY_FOR_LOOP

    t_open_br  shift, and go to state 273

    BODY_FOR_LOOP        go to state 274
    BODY_FOR_LOOP_START  go to state 275


State 216

  135 SWITCH_BODY_START: t_open_br .

    $default  reduce using rule 135 (SWITCH_BODY_START)


State 217

  132 SWITCH: t_switch SWITCH_BODY .

    $default  reduce using rule 132 (SWITCH)


State 218

  133 SWITCH_BODY: SWITCH_BODY_START . SWITCH_BODY_END
  136 SWITCH_BODY_START: SWITCH_BODY_START . END_SYMBOLS
  137                  | SWITCH_BODY_START . CASE
  138 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START . DEFAULT

    t_case       shift, and go to state 276
    t_default    shift, and go to state 277
    t_close_br   shift, and go to state 278
    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    CASE             go to state 279
    DEFAULT          go to state 280
    SWITCH_BODY_END  go to state 281
    END_SYMBOLS      go to state 282


State 219

  134 SWITCH_BODY: SWITCH_BODY_START_WITH_DEFAULT . SWITCH_BODY_END
  139 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START_WITH_DEFAULT . CASE

    t_case      shift, and go to state 276
    t_close_br  shift, and go to state 278

    CASE             go to state 283
    SWITCH_BODY_END  go to state 284


State 220

  131 SWITCH: t_switch EXPR . SWITCH_BODY
  177 EXPR: EXPR . t_sign VALUE

    t_open_br  shift, and go to state 216
    t_sign     shift, and go to state 190

    SWITCH_BODY                     go to state 285
    SWITCH_BODY_START               go to state 218
    SWITCH_BODY_START_WITH_DEFAULT  go to state 219


State 221

  130 SWITCH: t_switch INIT_STATE . t_semicolon EXPR SWITCH_BODY

    t_semicolon  shift, and go to state 286


State 222

  223 STRUCT_START: t_type t_id . t_struct_const t_open_br STRUCT_END
  224             | t_type t_id . t_struct_const t_open_br STRUCT_BODY STRUCT_END
  225             | t_type t_id . t_struct_const t_open_br END_SYMBOLS STRUCT_BODY STRUCT_END
  226             | t_type t_id . t_struct_const t_enter

    t_struct_const  shift, and go to state 34


State 223

  188 FOR: t_for INIT_STATE . t_semicolon CONDITION t_semicolon POST_STATE BODY_FOR_LOOP

    t_semicolon  shift, and go to state 287


State 224

  189 FOR: t_for CONDITION . BODY_FOR_LOOP

    t_open_br  shift, and go to state 273

    BODY_FOR_LOOP        go to state 288
    BODY_FOR_LOOP_START  go to state 275


State 225

  128 GOTO: t_goto t_id .

    $default  reduce using rule 128 (GOTO)


State 226

  171 RETURN: t_return EXPR .
  172       | t_return EXPR . MANY_RETURN_START MANY_RETURN_START_END
  177 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 190
    t_comma  shift, and go to state 289

    $default  reduce using rule 171 (RETURN)

    MANY_RETURN_START  go to state 290


State 227

   87 ASSIGNMENT: t_vtype . t_equality

    t_equality  shift, and go to state 291


State 228

   91 SHORT_ASSIGN: t_short_dec .

    $default  reduce using rule 91 (SHORT_ASSIGN)


State 229

   89 ASSIGNMENT: t_comma . t_id ASSIGNMENT EXPR t_comma
   90           | t_comma . t_id ASSIGNMENT BOOLEAN t_comma
   92 SHORT_ASSIGN: t_comma . t_id SHORT_ASSIGN EXPR t_comma
   93             | t_comma . t_id SHORT_ASSIGN BOOLEAN t_comma

    t_id  shift, and go to state 292


State 230

   88 ASSIGNMENT: t_equality .

    $default  reduce using rule 88 (ASSIGNMENT)


State 231

  195 ARRAY_INDEX: t_open_sq . t_int_const t_close_sq
  196            | t_open_sq . t_id t_close_sq
  197            | t_open_sq . t_string t_close_sq
  198            | t_open_sq . t_close_sq
  210 SLICE: t_id t_open_sq . VALUE t_colon VALUE t_close_sq
  211      | t_id t_open_sq . t_colon VALUE t_close_sq
  212      | t_id t_open_sq . VALUE t_colon t_close_sq

    t_int_const         shift, and go to state 293
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 294
    t_string            shift, and go to state 295
    t_open_paren        shift, and go to state 68
    t_close_sq          shift, and go to state 240
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_colon             shift, and go to state 296
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 297
    EXPR_START      go to state 80


State 232

  129 LABEL: t_id t_colon .

    $default  reduce using rule 129 (LABEL)


State 233

  178 SHORT_EXPR: t_id t_short_expr . t_id

    t_id  shift, and go to state 298


State 234

   64 VAR: t_id ASSIGNMENT . EXPR
   73    | t_id ASSIGNMENT . SLICE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 299
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 173
    EXPR            go to state 300
    EXPR_START      go to state 80
    SLICE           go to state 301


State 235

   63 VAR: t_id SHORT_ASSIGN . EXPR
   65    | t_id SHORT_ASSIGN . MULTI_AR t_vtype PLENTY
   67    | t_id SHORT_ASSIGN . BOOLEAN
   70    | t_id SHORT_ASSIGN . MAKE
   72    | t_id SHORT_ASSIGN . SLICE
   76    | t_id SHORT_ASSIGN . t_make t_open_paren MAPS t_close_paren
   79    | t_id SHORT_ASSIGN . ST_EMBEDDED

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 302
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_open_sq           shift, and go to state 145
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_make              shift, and go to state 303
    t_pointer           shift, and go to state 72

    BOOLEAN         go to state 304
    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 117
    EXPR            go to state 305
    EXPR_START      go to state 80
    ARRAY_INDEX     go to state 162
    MULTI_AR        go to state 306
    MAKE            go to state 307
    SLICE           go to state 308
    FIELD           go to state 309
    ST_EMBEDDED     go to state 310


State 236

   68 VAR: t_id MULTI_AR . ASSIGNMENT EXPR
   71    | t_id MULTI_AR . ASSIGNMENT MAKE

    t_vtype     shift, and go to state 227
    t_comma     shift, and go to state 242
    t_equality  shift, and go to state 230

    ASSIGNMENT  go to state 311


State 237

  195 ARRAY_INDEX: t_open_sq t_int_const . t_close_sq

    t_close_sq  shift, and go to state 312


State 238

  196 ARRAY_INDEX: t_open_sq t_id . t_close_sq

    t_close_sq  shift, and go to state 313


State 239

  197 ARRAY_INDEX: t_open_sq t_string . t_close_sq

    t_close_sq  shift, and go to state 314


State 240

  198 ARRAY_INDEX: t_open_sq t_close_sq .

    $default  reduce using rule 198 (ARRAY_INDEX)


State 241

   43 BODY_START: BODY_START BODY_FILLING END_SYMBOLS .

    $default  reduce using rule 43 (BODY_START)


State 242

   89 ASSIGNMENT: t_comma . t_id ASSIGNMENT EXPR t_comma
   90           | t_comma . t_id ASSIGNMENT BOOLEAN t_comma

    t_id  shift, and go to state 315


State 243

   80 VAR: METHOD ASSIGNMENT . VALUE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 316
    EXPR_START      go to state 80


State 244

   81 VAR: POINTER ASSIGNMENT . EXPR

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 173
    EXPR            go to state 317
    EXPR_START      go to state 80


State 245

  167 ELSEIF_SECOND: t_else . t_if CONDITION BODY_FOR_LOOP
  170 ELSE_THIRD: t_else . BODY_FOR_LOOP

    t_if       shift, and go to state 318
    t_open_br  shift, and go to state 273

    BODY_FOR_LOOP        go to state 319
    BODY_FOR_LOOP_START  go to state 275


State 246

  151 IF: IF_FIRST MULTY_ELSEIF_SECOND . MULTY_ELSE_THIRD
  152   | IF_FIRST MULTY_ELSEIF_SECOND .
  166 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND . ELSEIF_SECOND

    t_else  shift, and go to state 245

    $default  reduce using rule 152 (IF)

    ELSEIF_SECOND     go to state 320
    MULTY_ELSE_THIRD  go to state 321
    ELSE_THIRD        go to state 249


State 247

  165 MULTY_ELSEIF_SECOND: ELSEIF_SECOND .

    $default  reduce using rule 165 (MULTY_ELSEIF_SECOND)


State 248

  153 IF: IF_FIRST MULTY_ELSE_THIRD .
  169 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD . ELSE_THIRD

    t_else  shift, and go to state 322

    $default  reduce using rule 153 (IF)

    ELSE_THIRD  go to state 323


State 249

  168 MULTY_ELSE_THIRD: ELSE_THIRD .

    $default  reduce using rule 168 (MULTY_ELSE_THIRD)


State 250

  200 MULTI_AR: ARRAY_INDEX MULTI_AR .

    $default  reduce using rule 200 (MULTI_AR)


State 251

  249 INT_BODY: t_id t_open_paren t_vtype t_close_paren .

    $default  reduce using rule 249 (INT_BODY)


State 252

   99 PARAM_END: PARAM_END_FULFILL t_close_paren .

    $default  reduce using rule 99 (PARAM_END)


State 253

  102 PARAM_FULFILL: EXPR t_comma .

    $default  reduce using rule 102 (PARAM_FULFILL)


State 254

   96 PARAM: t_open_paren . t_close_paren
   97 PARAM_START: t_open_paren .
  250 INT_BODY: INT_BODY END_SYMBOLS t_id t_open_paren . t_vtype t_close_paren

    t_vtype        shift, and go to state 324
    t_close_paren  shift, and go to state 168

    $default  reduce using rule 97 (PARAM_START)


State 255

  251 INT_BODY: INT_BODY END_SYMBOLS FUNC_CALL t_vtype .

    $default  reduce using rule 251 (INT_BODY)


State 256

  246 INT_START: t_type t_id t_interface t_enter t_open_br END_SYMBOLS INT_BODY INT_END .

    $default  reduce using rule 246 (INT_START)


State 257

   85 BOOLEAN: BOOLEAN t_bool VALUE .

    $default  reduce using rule 85 (BOOLEAN)


State 258

   84 BOOLEAN: VALUE t_bool VALUE .

    $default  reduce using rule 84 (BOOLEAN)


State 259

  177 EXPR: EXPR t_sign VALUE .

    $default  reduce using rule 177 (EXPR)


State 260

  220 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id t_vtype .

    $default  reduce using rule 220 (STRUCT_BODY)


State 261

   94 FUNC_CALL: t_id . PARAM
  109 METHOD_FULFILL: t_id .
  221 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id t_id .

    t_open_paren  shift, and go to state 108

    t_dot     reduce using rule 109 (METHOD_FULFILL)
    $default  reduce using rule 221 (STRUCT_BODY)

    PARAM        go to state 98
    PARAM_START  go to state 99


State 262

  108 METHOD: METHOD . t_dot METHOD_FULFILL
  219 STRUCT_BODY: STRUCT_BODY END_SYMBOLS t_id METHOD .

    t_dot  shift, and go to state 113

    $default  reduce using rule 219 (STRUCT_BODY)


State 263

   36 FUNC_RETURN_VALUE_FULFILL: t_func t_open_paren TYPE_AND_STRUCT t_close_paren .

    $default  reduce using rule 36 (FUNC_RETURN_VALUE_FULFILL)


State 264

   28 FUNC_PARAM_FULFILL_SECOND: t_id TYPE_AND_STRUCT t_comma .

    $default  reduce using rule 28 (FUNC_PARAM_FULFILL_SECOND)


State 265

  213 MAPS: t_map . t_open_sq t_vtype t_close_sq t_vtype

    t_open_sq  shift, and go to state 325


State 266

   77 VAR: t_var t_id t_id . ASSIGNMENT ST_EMBEDDED

    t_vtype     shift, and go to state 227
    t_comma     shift, and go to state 242
    t_equality  shift, and go to state 230

    ASSIGNMENT  go to state 326


State 267

   60 VAR: t_var t_id ASSIGNMENT . EXPR
   61    | t_var t_id ASSIGNMENT . EXPR t_vtype
   62    | t_var t_id ASSIGNMENT . BOOLEAN
   66    | t_var t_id ASSIGNMENT . MULTI_AR t_vtype PLENTY
   69    | t_var t_id ASSIGNMENT . MAKE
   74    | t_var t_id ASSIGNMENT . SLICE
   78    | t_var t_id ASSIGNMENT . ST_EMBEDDED

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 302
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_open_sq           shift, and go to state 145
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_make              shift, and go to state 327
    t_pointer           shift, and go to state 72

    BOOLEAN         go to state 328
    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 117
    EXPR            go to state 329
    EXPR_START      go to state 80
    ARRAY_INDEX     go to state 162
    MULTI_AR        go to state 330
    MAKE            go to state 331
    SLICE           go to state 332
    FIELD           go to state 309
    ST_EMBEDDED     go to state 333


State 268

   82 VAR: t_var t_id POINTER .
   83    | t_var t_id POINTER . ASSIGNMENT EXPR

    t_vtype     shift, and go to state 227
    t_comma     shift, and go to state 242
    t_equality  shift, and go to state 230

    $default  reduce using rule 82 (VAR)

    ASSIGNMENT  go to state 334


State 269

  192 ARRAY_BODY: t_var t_id MULTI_AR . t_vtype
  193           | t_var t_id MULTI_AR . t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY
  194           | t_var t_id MULTI_AR . t_vtype ASSIGNMENT MAKE

    t_vtype  shift, and go to state 335


State 270

   75 VAR: t_var t_id MAPS .

    $default  reduce using rule 75 (VAR)


State 271

   60 VAR: t_var t_id . ASSIGNMENT EXPR
   61    | t_var t_id . ASSIGNMENT EXPR t_vtype
   62    | t_var t_id . ASSIGNMENT BOOLEAN
   66    | t_var t_id . ASSIGNMENT MULTI_AR t_vtype PLENTY
   69    | t_var t_id . ASSIGNMENT MAKE
   74    | t_var t_id . ASSIGNMENT SLICE
   75    | t_var t_id . MAPS
   77    | t_var t_id . t_id ASSIGNMENT ST_EMBEDDED
   78    | t_var t_id . ASSIGNMENT ST_EMBEDDED
   82    | t_var t_id . POINTER
   83    | t_var t_id . POINTER ASSIGNMENT EXPR

    t_vtype     shift, and go to state 227
    t_map       shift, and go to state 265
    t_id        shift, and go to state 266
    t_comma     shift, and go to state 242
    t_equality  shift, and go to state 230
    t_pointer   shift, and go to state 72

    ASSIGNMENT  go to state 267
    POINTER     go to state 268
    MAPS        go to state 270


State 272

  156 IF_FIRST: t_if INIT_STATE t_semicolon . CONDITION BODY_FOR_LOOP

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_true              shift, and go to state 206
    t_false             shift, and go to state 207
    t_pointer           shift, and go to state 72

    $default  reduce using rule 185 (CONDITION)

    BOOLEAN         go to state 209
    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 213
    CONDITION       go to state 336
    EXPR_START      go to state 80


State 273

  158 BODY_FOR_LOOP_START: t_open_br .
  159                    | t_open_br . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    $default  reduce using rule 158 (BODY_FOR_LOOP_START)

    END_SYMBOLS  go to state 337


State 274

  155 IF_FIRST: t_if CONDITION BODY_FOR_LOOP .

    $default  reduce using rule 155 (IF_FIRST)


State 275

  157 BODY_FOR_LOOP: BODY_FOR_LOOP_START . BODY_FOR_LOOP_END
  160 BODY_FOR_LOOP_START: BODY_FOR_LOOP_START . LOOP_FILLING END_SYMBOLS

    t_defer     shift, and go to state 135
    t_var       shift, and go to state 136
    t_if        shift, and go to state 137
    t_switch    shift, and go to state 138
    t_type      shift, and go to state 139
    t_for       shift, and go to state 140
    t_goto      shift, and go to state 141
    t_continue  shift, and go to state 338
    t_break     shift, and go to state 339
    t_return    shift, and go to state 142
    t_id        shift, and go to state 143
    t_close_br  shift, and go to state 340
    t_open_sq   shift, and go to state 145
    t_pointer   shift, and go to state 72

    BODY_FILLING       go to state 341
    VAR                go to state 148
    DEFER              go to state 149
    FUNC_CALL          go to state 150
    METHOD             go to state 151
    METHOD_FULFILL     go to state 77
    POINTER            go to state 152
    GOTO               go to state 153
    LABEL              go to state 154
    SWITCH             go to state 155
    IF                 go to state 156
    IF_FIRST           go to state 157
    BODY_FOR_LOOP_END  go to state 342
    LOOP_FILLING       go to state 343
    RETURN             go to state 158
    SHORT_EXPR         go to state 159
    FOR                go to state 160
    ARRAY_BODY         go to state 161
    ARRAY_INDEX        go to state 162
    MULTI_AR           go to state 163
    SLICE              go to state 164
    STRUCT             go to state 165
    STRUCT_START       go to state 11


State 276

  140 CASE: t_case . CASE_STATEMENT CASE_BODY

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 173
    MULTIPLE_ARG    go to state 344
    FIRST_PART      go to state 345
    CASE_STATEMENT  go to state 346
    EXPR            go to state 347
    EXPR_START      go to state 80


State 277

  141 DEFAULT: t_default . CASE_BODY

    t_colon  shift, and go to state 348

    CASE_BODY  go to state 349


State 278

  150 SWITCH_BODY_END: t_close_br .

    $default  reduce using rule 150 (SWITCH_BODY_END)


State 279

  137 SWITCH_BODY_START: SWITCH_BODY_START CASE .

    $default  reduce using rule 137 (SWITCH_BODY_START)


State 280

  138 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START DEFAULT .

    $default  reduce using rule 138 (SWITCH_BODY_START_WITH_DEFAULT)


State 281

  133 SWITCH_BODY: SWITCH_BODY_START SWITCH_BODY_END .

    $default  reduce using rule 133 (SWITCH_BODY)


State 282

  136 SWITCH_BODY_START: SWITCH_BODY_START END_SYMBOLS .

    $default  reduce using rule 136 (SWITCH_BODY_START)


State 283

  139 SWITCH_BODY_START_WITH_DEFAULT: SWITCH_BODY_START_WITH_DEFAULT CASE .

    $default  reduce using rule 139 (SWITCH_BODY_START_WITH_DEFAULT)


State 284

  134 SWITCH_BODY: SWITCH_BODY_START_WITH_DEFAULT SWITCH_BODY_END .

    $default  reduce using rule 134 (SWITCH_BODY)


State 285

  131 SWITCH: t_switch EXPR SWITCH_BODY .

    $default  reduce using rule 131 (SWITCH)


State 286

  130 SWITCH: t_switch INIT_STATE t_semicolon . EXPR SWITCH_BODY

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 173
    EXPR            go to state 350
    EXPR_START      go to state 80


State 287

  188 FOR: t_for INIT_STATE t_semicolon . CONDITION t_semicolon POST_STATE BODY_FOR_LOOP

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_true              shift, and go to state 206
    t_false             shift, and go to state 207
    t_pointer           shift, and go to state 72

    $default  reduce using rule 185 (CONDITION)

    BOOLEAN         go to state 209
    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 213
    CONDITION       go to state 351
    EXPR_START      go to state 80


State 288

  189 FOR: t_for CONDITION BODY_FOR_LOOP .

    $default  reduce using rule 189 (FOR)


State 289

  173 MANY_RETURN_START: t_comma .

    $default  reduce using rule 173 (MANY_RETURN_START)


State 290

  172 RETURN: t_return EXPR MANY_RETURN_START . MANY_RETURN_START_END
  174 MANY_RETURN_START: MANY_RETURN_START . EXPR t_comma

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL              go to state 73
    SHIFT                  go to state 74
    SHIFT_AC               go to state 75
    METHOD                 go to state 76
    METHOD_FULFILL         go to state 77
    POINTER                go to state 78
    VALUE                  go to state 173
    MANY_RETURN_START_END  go to state 352
    EXPR                   go to state 353
    EXPR_START             go to state 80


State 291

   87 ASSIGNMENT: t_vtype t_equality .

    $default  reduce using rule 87 (ASSIGNMENT)


State 292

   89 ASSIGNMENT: t_comma t_id . ASSIGNMENT EXPR t_comma
   90           | t_comma t_id . ASSIGNMENT BOOLEAN t_comma
   92 SHORT_ASSIGN: t_comma t_id . SHORT_ASSIGN EXPR t_comma
   93             | t_comma t_id . SHORT_ASSIGN BOOLEAN t_comma

    t_vtype      shift, and go to state 227
    t_short_dec  shift, and go to state 228
    t_comma      shift, and go to state 229
    t_equality   shift, and go to state 230

    ASSIGNMENT    go to state 354
    SHORT_ASSIGN  go to state 355


State 293

  106 SHIFT_AC: t_int_const .
  116 VALUE: t_int_const .
  195 ARRAY_INDEX: t_open_sq t_int_const . t_close_sq

    t_close_sq  shift, and go to state 312

    t_colon   reduce using rule 116 (VALUE)
    $default  reduce using rule 106 (SHIFT_AC)


State 294

   94 FUNC_CALL: t_id . PARAM
  105 SHIFT_AC: t_id .
  109 METHOD_FULFILL: t_id .
  118 VALUE: t_id .
  196 ARRAY_INDEX: t_open_sq t_id . t_close_sq

    t_open_paren  shift, and go to state 108
    t_close_sq    shift, and go to state 313

    t_dot     reduce using rule 109 (METHOD_FULFILL)
    t_colon   reduce using rule 118 (VALUE)
    $default  reduce using rule 105 (SHIFT_AC)

    PARAM        go to state 98
    PARAM_START  go to state 99


State 295

  119 VALUE: t_string .
  197 ARRAY_INDEX: t_open_sq t_string . t_close_sq

    t_close_sq  shift, and go to state 314

    $default  reduce using rule 119 (VALUE)


State 296

  211 SLICE: t_id t_open_sq t_colon . VALUE t_close_sq

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 356
    EXPR_START      go to state 80


State 297

  210 SLICE: t_id t_open_sq VALUE . t_colon VALUE t_close_sq
  212      | t_id t_open_sq VALUE . t_colon t_close_sq

    t_colon  shift, and go to state 357


State 298

  178 SHORT_EXPR: t_id t_short_expr t_id .

    $default  reduce using rule 178 (SHORT_EXPR)


State 299

   94 FUNC_CALL: t_id . PARAM
  105 SHIFT_AC: t_id .
  109 METHOD_FULFILL: t_id .
  118 VALUE: t_id .
  210 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  211      | t_id . t_open_sq t_colon VALUE t_close_sq
  212      | t_id . t_open_sq VALUE t_colon t_close_sq

    t_open_paren  shift, and go to state 108
    t_open_sq     shift, and go to state 358

    t_shift_const  reduce using rule 105 (SHIFT_AC)
    t_dot          reduce using rule 109 (METHOD_FULFILL)
    $default       reduce using rule 118 (VALUE)

    PARAM        go to state 98
    PARAM_START  go to state 99


State 300

   64 VAR: t_id ASSIGNMENT EXPR .
  177 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 190

    $default  reduce using rule 64 (VAR)


State 301

   73 VAR: t_id ASSIGNMENT SLICE .

    $default  reduce using rule 73 (VAR)


State 302

   94 FUNC_CALL: t_id . PARAM
  105 SHIFT_AC: t_id .
  109 METHOD_FULFILL: t_id .
  118 VALUE: t_id .
  210 SLICE: t_id . t_open_sq VALUE t_colon VALUE t_close_sq
  211      | t_id . t_open_sq t_colon VALUE t_close_sq
  212      | t_id . t_open_sq VALUE t_colon t_close_sq
  229 FIELD: t_id . FIELD_BODY

    t_open_br     shift, and go to state 359
    t_open_paren  shift, and go to state 108
    t_open_sq     shift, and go to state 358

    t_shift_const  reduce using rule 105 (SHIFT_AC)
    t_dot          reduce using rule 109 (METHOD_FULFILL)
    $default       reduce using rule 118 (VALUE)

    PARAM        go to state 98
    PARAM_START  go to state 99
    FIELD_BODY   go to state 360
    FIELD_START  go to state 361


State 303

   76 VAR: t_id SHORT_ASSIGN t_make . t_open_paren MAPS t_close_paren
  208 MAKE: t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  209     | t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_paren  shift, and go to state 362


State 304

   67 VAR: t_id SHORT_ASSIGN BOOLEAN .
   85 BOOLEAN: BOOLEAN . t_bool VALUE

    t_bool  shift, and go to state 187

    $default  reduce using rule 67 (VAR)


State 305

   63 VAR: t_id SHORT_ASSIGN EXPR .
  177 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 190

    $default  reduce using rule 63 (VAR)


State 306

   65 VAR: t_id SHORT_ASSIGN MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 363


State 307

   70 VAR: t_id SHORT_ASSIGN MAKE .

    $default  reduce using rule 70 (VAR)


State 308

   72 VAR: t_id SHORT_ASSIGN SLICE .

    $default  reduce using rule 72 (VAR)


State 309

  239 ST_EMBEDDED: FIELD .

    $default  reduce using rule 239 (ST_EMBEDDED)


State 310

   79 VAR: t_id SHORT_ASSIGN ST_EMBEDDED .

    $default  reduce using rule 79 (VAR)


State 311

   68 VAR: t_id MULTI_AR ASSIGNMENT . EXPR
   71    | t_id MULTI_AR ASSIGNMENT . MAKE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_make              shift, and go to state 327
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 173
    EXPR            go to state 364
    EXPR_START      go to state 80
    MAKE            go to state 365


State 312

  195 ARRAY_INDEX: t_open_sq t_int_const t_close_sq .

    $default  reduce using rule 195 (ARRAY_INDEX)


State 313

  196 ARRAY_INDEX: t_open_sq t_id t_close_sq .

    $default  reduce using rule 196 (ARRAY_INDEX)


State 314

  197 ARRAY_INDEX: t_open_sq t_string t_close_sq .

    $default  reduce using rule 197 (ARRAY_INDEX)


State 315

   89 ASSIGNMENT: t_comma t_id . ASSIGNMENT EXPR t_comma
   90           | t_comma t_id . ASSIGNMENT BOOLEAN t_comma

    t_vtype     shift, and go to state 227
    t_comma     shift, and go to state 242
    t_equality  shift, and go to state 230

    ASSIGNMENT  go to state 354


State 316

   80 VAR: METHOD ASSIGNMENT VALUE .

    $default  reduce using rule 80 (VAR)


State 317

   81 VAR: POINTER ASSIGNMENT EXPR .
  177 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 190

    $default  reduce using rule 81 (VAR)


State 318

  167 ELSEIF_SECOND: t_else t_if . CONDITION BODY_FOR_LOOP

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_true              shift, and go to state 206
    t_false             shift, and go to state 207
    t_pointer           shift, and go to state 72

    $default  reduce using rule 185 (CONDITION)

    BOOLEAN         go to state 209
    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 213
    CONDITION       go to state 366
    EXPR_START      go to state 80


State 319

  170 ELSE_THIRD: t_else BODY_FOR_LOOP .

    $default  reduce using rule 170 (ELSE_THIRD)


State 320

  166 MULTY_ELSEIF_SECOND: MULTY_ELSEIF_SECOND ELSEIF_SECOND .

    $default  reduce using rule 166 (MULTY_ELSEIF_SECOND)


State 321

  151 IF: IF_FIRST MULTY_ELSEIF_SECOND MULTY_ELSE_THIRD .
  169 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD . ELSE_THIRD

    t_else  shift, and go to state 322

    $default  reduce using rule 151 (IF)

    ELSE_THIRD  go to state 323


State 322

  170 ELSE_THIRD: t_else . BODY_FOR_LOOP

    t_open_br  shift, and go to state 273

    BODY_FOR_LOOP        go to state 319
    BODY_FOR_LOOP_START  go to state 275


State 323

  169 MULTY_ELSE_THIRD: MULTY_ELSE_THIRD ELSE_THIRD .

    $default  reduce using rule 169 (MULTY_ELSE_THIRD)


State 324

  250 INT_BODY: INT_BODY END_SYMBOLS t_id t_open_paren t_vtype . t_close_paren

    t_close_paren  shift, and go to state 367


State 325

  213 MAPS: t_map t_open_sq . t_vtype t_close_sq t_vtype

    t_vtype  shift, and go to state 368


State 326

   77 VAR: t_var t_id t_id ASSIGNMENT . ST_EMBEDDED

    t_id  shift, and go to state 369

    FIELD        go to state 309
    ST_EMBEDDED  go to state 370


State 327

  208 MAKE: t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren
  209     | t_make . t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_paren  shift, and go to state 371


State 328

   62 VAR: t_var t_id ASSIGNMENT BOOLEAN .
   85 BOOLEAN: BOOLEAN . t_bool VALUE

    t_bool  shift, and go to state 187

    $default  reduce using rule 62 (VAR)


State 329

   60 VAR: t_var t_id ASSIGNMENT EXPR .
   61    | t_var t_id ASSIGNMENT EXPR . t_vtype
  177 EXPR: EXPR . t_sign VALUE

    t_vtype  shift, and go to state 372
    t_sign   shift, and go to state 190

    $default  reduce using rule 60 (VAR)


State 330

   66 VAR: t_var t_id ASSIGNMENT MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 373


State 331

   69 VAR: t_var t_id ASSIGNMENT MAKE .

    $default  reduce using rule 69 (VAR)


State 332

   74 VAR: t_var t_id ASSIGNMENT SLICE .

    $default  reduce using rule 74 (VAR)


State 333

   78 VAR: t_var t_id ASSIGNMENT ST_EMBEDDED .

    $default  reduce using rule 78 (VAR)


State 334

   83 VAR: t_var t_id POINTER ASSIGNMENT . EXPR

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 173
    EXPR            go to state 374
    EXPR_START      go to state 80


State 335

  192 ARRAY_BODY: t_var t_id MULTI_AR t_vtype .
  193           | t_var t_id MULTI_AR t_vtype . ASSIGNMENT MULTI_AR t_vtype PLENTY
  194           | t_var t_id MULTI_AR t_vtype . ASSIGNMENT MAKE

    t_vtype     shift, and go to state 227
    t_comma     shift, and go to state 242
    t_equality  shift, and go to state 230

    $default  reduce using rule 192 (ARRAY_BODY)

    ASSIGNMENT  go to state 375


State 336

  156 IF_FIRST: t_if INIT_STATE t_semicolon CONDITION . BODY_FOR_LOOP

    t_open_br  shift, and go to state 273

    BODY_FOR_LOOP        go to state 376
    BODY_FOR_LOOP_START  go to state 275


State 337

  159 BODY_FOR_LOOP_START: t_open_br END_SYMBOLS .

    $default  reduce using rule 159 (BODY_FOR_LOOP_START)


State 338

  164 LOOP_FILLING: t_continue .

    $default  reduce using rule 164 (LOOP_FILLING)


State 339

  163 LOOP_FILLING: t_break .

    $default  reduce using rule 163 (LOOP_FILLING)


State 340

  161 BODY_FOR_LOOP_END: t_close_br .

    $default  reduce using rule 161 (BODY_FOR_LOOP_END)


State 341

  162 LOOP_FILLING: BODY_FILLING .

    $default  reduce using rule 162 (LOOP_FILLING)


State 342

  157 BODY_FOR_LOOP: BODY_FOR_LOOP_START BODY_FOR_LOOP_END .

    $default  reduce using rule 157 (BODY_FOR_LOOP)


State 343

  160 BODY_FOR_LOOP_START: BODY_FOR_LOOP_START LOOP_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 377


State 344

  146 CASE_STATEMENT: MULTIPLE_ARG .

    $default  reduce using rule 146 (CASE_STATEMENT)


State 345

  142 MULTIPLE_ARG: FIRST_PART . SECOND_PART
  144 FIRST_PART: FIRST_PART . EXPR t_comma

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 173
    SECOND_PART     go to state 378
    EXPR            go to state 379
    EXPR_START      go to state 80


State 346

  140 CASE: t_case CASE_STATEMENT . CASE_BODY

    t_colon  shift, and go to state 348

    CASE_BODY  go to state 380


State 347

  143 FIRST_PART: EXPR . t_comma
  147 CASE_STATEMENT: EXPR .
  177 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 190
    t_comma  shift, and go to state 381

    $default  reduce using rule 147 (CASE_STATEMENT)


State 348

  148 CASE_BODY: t_colon .

    $default  reduce using rule 148 (CASE_BODY)


State 349

  141 DEFAULT: t_default CASE_BODY .
  149 CASE_BODY: CASE_BODY . LOOP_FILLING END_SYMBOLS

    t_defer     shift, and go to state 135
    t_var       shift, and go to state 136
    t_if        shift, and go to state 137
    t_switch    shift, and go to state 138
    t_type      shift, and go to state 139
    t_for       shift, and go to state 140
    t_goto      shift, and go to state 141
    t_continue  shift, and go to state 338
    t_break     shift, and go to state 339
    t_return    shift, and go to state 142
    t_id        shift, and go to state 143
    t_open_sq   shift, and go to state 145
    t_pointer   shift, and go to state 72

    $default  reduce using rule 141 (DEFAULT)

    BODY_FILLING    go to state 341
    VAR             go to state 148
    DEFER           go to state 149
    FUNC_CALL       go to state 150
    METHOD          go to state 151
    METHOD_FULFILL  go to state 77
    POINTER         go to state 152
    GOTO            go to state 153
    LABEL           go to state 154
    SWITCH          go to state 155
    IF              go to state 156
    IF_FIRST        go to state 157
    LOOP_FILLING    go to state 382
    RETURN          go to state 158
    SHORT_EXPR      go to state 159
    FOR             go to state 160
    ARRAY_BODY      go to state 161
    ARRAY_INDEX     go to state 162
    MULTI_AR        go to state 163
    SLICE           go to state 164
    STRUCT          go to state 165
    STRUCT_START    go to state 11


State 350

  130 SWITCH: t_switch INIT_STATE t_semicolon EXPR . SWITCH_BODY
  177 EXPR: EXPR . t_sign VALUE

    t_open_br  shift, and go to state 216
    t_sign     shift, and go to state 190

    SWITCH_BODY                     go to state 383
    SWITCH_BODY_START               go to state 218
    SWITCH_BODY_START_WITH_DEFAULT  go to state 219


State 351

  188 FOR: t_for INIT_STATE t_semicolon CONDITION . t_semicolon POST_STATE BODY_FOR_LOOP

    t_semicolon  shift, and go to state 384


State 352

  172 RETURN: t_return EXPR MANY_RETURN_START MANY_RETURN_START_END .

    $default  reduce using rule 172 (RETURN)


State 353

  174 MANY_RETURN_START: MANY_RETURN_START EXPR . t_comma
  175 MANY_RETURN_START_END: EXPR .
  177 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 190
    t_comma  shift, and go to state 385

    $default  reduce using rule 175 (MANY_RETURN_START_END)


State 354

   89 ASSIGNMENT: t_comma t_id ASSIGNMENT . EXPR t_comma
   90           | t_comma t_id ASSIGNMENT . BOOLEAN t_comma

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    BOOLEAN         go to state 386
    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 117
    EXPR            go to state 387
    EXPR_START      go to state 80


State 355

   92 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN . EXPR t_comma
   93             | t_comma t_id SHORT_ASSIGN . BOOLEAN t_comma

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    BOOLEAN         go to state 388
    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 117
    EXPR            go to state 389
    EXPR_START      go to state 80


State 356

  211 SLICE: t_id t_open_sq t_colon VALUE . t_close_sq

    t_close_sq  shift, and go to state 390


State 357

  210 SLICE: t_id t_open_sq VALUE t_colon . VALUE t_close_sq
  212      | t_id t_open_sq VALUE t_colon . t_close_sq

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_close_sq          shift, and go to state 391
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 392
    EXPR_START      go to state 80


State 358

  210 SLICE: t_id t_open_sq . VALUE t_colon VALUE t_close_sq
  211      | t_id t_open_sq . t_colon VALUE t_close_sq
  212      | t_id t_open_sq . VALUE t_colon t_close_sq

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_colon             shift, and go to state 296
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 297
    EXPR_START      go to state 80


State 359

  231 FIELD_START: t_open_br .

    $default  reduce using rule 231 (FIELD_START)


State 360

  229 FIELD: t_id FIELD_BODY .

    $default  reduce using rule 229 (FIELD)


State 361

  230 FIELD_BODY: FIELD_START . FIELD_END
  232 FIELD_START: FIELD_START . FIELD_FULFILL

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_enter             shift, and go to state 393
    t_pointer           shift, and go to state 72

    FUNC_CALL          go to state 73
    SHIFT              go to state 74
    SHIFT_AC           go to state 75
    METHOD             go to state 76
    METHOD_FULFILL     go to state 77
    POINTER            go to state 78
    VALUE              go to state 394
    EXPR_START         go to state 80
    FIELD_FULFILL      go to state 395
    FIELD_END          go to state 396
    FIELD_END_FULFILL  go to state 397


State 362

   76 VAR: t_id SHORT_ASSIGN t_make t_open_paren . MAPS t_close_paren
  208 MAKE: t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_close_paren
  209     | t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_map      shift, and go to state 265
    t_open_sq  shift, and go to state 145

    ARRAY_INDEX  go to state 162
    MULTI_AR     go to state 398
    MAPS         go to state 399


State 363

   65 VAR: t_id SHORT_ASSIGN MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 400

    PLENTY      go to state 401
    PLENTY_OLD  go to state 402


State 364

   68 VAR: t_id MULTI_AR ASSIGNMENT EXPR .
  177 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 190

    $default  reduce using rule 68 (VAR)


State 365

   71 VAR: t_id MULTI_AR ASSIGNMENT MAKE .

    $default  reduce using rule 71 (VAR)


State 366

  167 ELSEIF_SECOND: t_else t_if CONDITION . BODY_FOR_LOOP

    t_open_br  shift, and go to state 273

    BODY_FOR_LOOP        go to state 403
    BODY_FOR_LOOP_START  go to state 275


State 367

  250 INT_BODY: INT_BODY END_SYMBOLS t_id t_open_paren t_vtype t_close_paren .

    $default  reduce using rule 250 (INT_BODY)


State 368

  213 MAPS: t_map t_open_sq t_vtype . t_close_sq t_vtype

    t_close_sq  shift, and go to state 404


State 369

  229 FIELD: t_id . FIELD_BODY

    t_open_br  shift, and go to state 359

    FIELD_BODY   go to state 360
    FIELD_START  go to state 361


State 370

   77 VAR: t_var t_id t_id ASSIGNMENT ST_EMBEDDED .

    $default  reduce using rule 77 (VAR)


State 371

  208 MAKE: t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_close_paren
  209     | t_make t_open_paren . MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_open_sq  shift, and go to state 145

    ARRAY_INDEX  go to state 162
    MULTI_AR     go to state 398


State 372

   61 VAR: t_var t_id ASSIGNMENT EXPR t_vtype .

    $default  reduce using rule 61 (VAR)


State 373

   66 VAR: t_var t_id ASSIGNMENT MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 400

    PLENTY      go to state 405
    PLENTY_OLD  go to state 402


State 374

   83 VAR: t_var t_id POINTER ASSIGNMENT EXPR .
  177 EXPR: EXPR . t_sign VALUE

    t_sign  shift, and go to state 190

    $default  reduce using rule 83 (VAR)


State 375

  193 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT . MULTI_AR t_vtype PLENTY
  194           | t_var t_id MULTI_AR t_vtype ASSIGNMENT . MAKE

    t_open_sq  shift, and go to state 145
    t_make     shift, and go to state 327

    ARRAY_INDEX  go to state 162
    MULTI_AR     go to state 406
    MAKE         go to state 407


State 376

  156 IF_FIRST: t_if INIT_STATE t_semicolon CONDITION BODY_FOR_LOOP .

    $default  reduce using rule 156 (IF_FIRST)


State 377

  160 BODY_FOR_LOOP_START: BODY_FOR_LOOP_START LOOP_FILLING END_SYMBOLS .

    $default  reduce using rule 160 (BODY_FOR_LOOP_START)


State 378

  142 MULTIPLE_ARG: FIRST_PART SECOND_PART .

    $default  reduce using rule 142 (MULTIPLE_ARG)


State 379

  144 FIRST_PART: FIRST_PART EXPR . t_comma
  145 SECOND_PART: EXPR .
  177 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 190
    t_comma  shift, and go to state 408

    $default  reduce using rule 145 (SECOND_PART)


State 380

  140 CASE: t_case CASE_STATEMENT CASE_BODY .
  149 CASE_BODY: CASE_BODY . LOOP_FILLING END_SYMBOLS

    t_defer     shift, and go to state 135
    t_var       shift, and go to state 136
    t_if        shift, and go to state 137
    t_switch    shift, and go to state 138
    t_type      shift, and go to state 139
    t_for       shift, and go to state 140
    t_goto      shift, and go to state 141
    t_continue  shift, and go to state 338
    t_break     shift, and go to state 339
    t_return    shift, and go to state 142
    t_id        shift, and go to state 143
    t_open_sq   shift, and go to state 145
    t_pointer   shift, and go to state 72

    $default  reduce using rule 140 (CASE)

    BODY_FILLING    go to state 341
    VAR             go to state 148
    DEFER           go to state 149
    FUNC_CALL       go to state 150
    METHOD          go to state 151
    METHOD_FULFILL  go to state 77
    POINTER         go to state 152
    GOTO            go to state 153
    LABEL           go to state 154
    SWITCH          go to state 155
    IF              go to state 156
    IF_FIRST        go to state 157
    LOOP_FILLING    go to state 382
    RETURN          go to state 158
    SHORT_EXPR      go to state 159
    FOR             go to state 160
    ARRAY_BODY      go to state 161
    ARRAY_INDEX     go to state 162
    MULTI_AR        go to state 163
    SLICE           go to state 164
    STRUCT          go to state 165
    STRUCT_START    go to state 11


State 381

  143 FIRST_PART: EXPR t_comma .

    $default  reduce using rule 143 (FIRST_PART)


State 382

  149 CASE_BODY: CASE_BODY LOOP_FILLING . END_SYMBOLS

    t_semicolon  shift, and go to state 21
    t_enter      shift, and go to state 22
    t_eof        shift, and go to state 23

    END_SYMBOLS  go to state 409


State 383

  130 SWITCH: t_switch INIT_STATE t_semicolon EXPR SWITCH_BODY .

    $default  reduce using rule 130 (SWITCH)


State 384

  188 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon . POST_STATE BODY_FOR_LOOP

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 410
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 173
    EXPR            go to state 411
    POST_STATE      go to state 412
    EXPR_START      go to state 80


State 385

  174 MANY_RETURN_START: MANY_RETURN_START EXPR t_comma .

    $default  reduce using rule 174 (MANY_RETURN_START)


State 386

   85 BOOLEAN: BOOLEAN . t_bool VALUE
   90 ASSIGNMENT: t_comma t_id ASSIGNMENT BOOLEAN . t_comma

    t_comma  shift, and go to state 413
    t_bool   shift, and go to state 187


State 387

   89 ASSIGNMENT: t_comma t_id ASSIGNMENT EXPR . t_comma
  177 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 190
    t_comma  shift, and go to state 414


State 388

   85 BOOLEAN: BOOLEAN . t_bool VALUE
   93 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN BOOLEAN . t_comma

    t_comma  shift, and go to state 415
    t_bool   shift, and go to state 187


State 389

   92 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN EXPR . t_comma
  177 EXPR: EXPR . t_sign VALUE

    t_sign   shift, and go to state 190
    t_comma  shift, and go to state 416


State 390

  211 SLICE: t_id t_open_sq t_colon VALUE t_close_sq .

    $default  reduce using rule 211 (SLICE)


State 391

  212 SLICE: t_id t_open_sq VALUE t_colon t_close_sq .

    $default  reduce using rule 212 (SLICE)


State 392

  210 SLICE: t_id t_open_sq VALUE t_colon VALUE . t_close_sq

    t_close_sq  shift, and go to state 417


State 393

  235 FIELD_FULFILL: t_enter .
  238 FIELD_END_FULFILL: t_enter .

    t_close_br  reduce using rule 238 (FIELD_END_FULFILL)
    $default    reduce using rule 235 (FIELD_FULFILL)


State 394

  233 FIELD_FULFILL: VALUE . t_colon VALUE t_comma
  234              | VALUE . t_colon FIELD t_comma
  237 FIELD_END_FULFILL: VALUE . t_colon VALUE

    t_colon  shift, and go to state 418


State 395

  232 FIELD_START: FIELD_START FIELD_FULFILL .

    $default  reduce using rule 232 (FIELD_START)


State 396

  230 FIELD_BODY: FIELD_START FIELD_END .

    $default  reduce using rule 230 (FIELD_BODY)


State 397

  236 FIELD_END: FIELD_END_FULFILL . t_close_br

    t_close_br  shift, and go to state 419


State 398

  208 MAKE: t_make t_open_paren MULTI_AR . t_vtype t_comma VALUE t_close_paren
  209     | t_make t_open_paren MULTI_AR . t_vtype t_comma VALUE t_comma t_int_const VALUE

    t_vtype  shift, and go to state 420


State 399

   76 VAR: t_id SHORT_ASSIGN t_make t_open_paren MAPS . t_close_paren

    t_close_paren  shift, and go to state 421


State 400

  203 PLENTY_OLD: t_open_br . ENUM t_close_br
  204           | t_open_br . t_close_br
  205           | t_open_br . PLENTY t_close_br

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_br           shift, and go to state 400
    t_close_br          shift, and go to state 422
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 79
    EXPR_START      go to state 80
    PLENTY          go to state 423
    PLENTY_OLD      go to state 402
    ENUM            go to state 424


State 401

   65 VAR: t_id SHORT_ASSIGN MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 65 (VAR)


State 402

  201 PLENTY: PLENTY_OLD .
  202       | PLENTY_OLD . t_comma PLENTY

    t_comma  shift, and go to state 425

    $default  reduce using rule 201 (PLENTY)


State 403

  167 ELSEIF_SECOND: t_else t_if CONDITION BODY_FOR_LOOP .

    $default  reduce using rule 167 (ELSEIF_SECOND)


State 404

  213 MAPS: t_map t_open_sq t_vtype t_close_sq . t_vtype

    t_vtype  shift, and go to state 426


State 405

   66 VAR: t_var t_id ASSIGNMENT MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 66 (VAR)


State 406

  193 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR . t_vtype PLENTY

    t_vtype  shift, and go to state 427


State 407

  194 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MAKE .

    $default  reduce using rule 194 (ARRAY_BODY)


State 408

  144 FIRST_PART: FIRST_PART EXPR t_comma .

    $default  reduce using rule 144 (FIRST_PART)


State 409

  149 CASE_BODY: CASE_BODY LOOP_FILLING END_SYMBOLS .

    $default  reduce using rule 149 (CASE_BODY)


State 410

   94 FUNC_CALL: t_id . PARAM
  105 SHIFT_AC: t_id .
  109 METHOD_FULFILL: t_id .
  118 VALUE: t_id .
  187 POST_STATE: t_id . t_inc_const

    t_inc_const   shift, and go to state 428
    t_open_paren  shift, and go to state 108

    t_shift_const  reduce using rule 105 (SHIFT_AC)
    t_dot          reduce using rule 109 (METHOD_FULFILL)
    $default       reduce using rule 118 (VALUE)

    PARAM        go to state 98
    PARAM_START  go to state 99


State 411

  177 EXPR: EXPR . t_sign VALUE
  186 POST_STATE: EXPR .

    t_sign  shift, and go to state 190

    $default  reduce using rule 186 (POST_STATE)


State 412

  188 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE . BODY_FOR_LOOP

    t_open_br  shift, and go to state 273

    BODY_FOR_LOOP        go to state 429
    BODY_FOR_LOOP_START  go to state 275


State 413

   90 ASSIGNMENT: t_comma t_id ASSIGNMENT BOOLEAN t_comma .

    $default  reduce using rule 90 (ASSIGNMENT)


State 414

   89 ASSIGNMENT: t_comma t_id ASSIGNMENT EXPR t_comma .

    $default  reduce using rule 89 (ASSIGNMENT)


State 415

   93 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN BOOLEAN t_comma .

    $default  reduce using rule 93 (SHORT_ASSIGN)


State 416

   92 SHORT_ASSIGN: t_comma t_id SHORT_ASSIGN EXPR t_comma .

    $default  reduce using rule 92 (SHORT_ASSIGN)


State 417

  210 SLICE: t_id t_open_sq VALUE t_colon VALUE t_close_sq .

    $default  reduce using rule 210 (SLICE)


State 418

  233 FIELD_FULFILL: VALUE t_colon . VALUE t_comma
  234              | VALUE t_colon . FIELD t_comma
  237 FIELD_END_FULFILL: VALUE t_colon . VALUE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 430
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 431
    EXPR_START      go to state 80
    FIELD           go to state 432


State 419

  236 FIELD_END: FIELD_END_FULFILL t_close_br .

    $default  reduce using rule 236 (FIELD_END)


State 420

  208 MAKE: t_make t_open_paren MULTI_AR t_vtype . t_comma VALUE t_close_paren
  209     | t_make t_open_paren MULTI_AR t_vtype . t_comma VALUE t_comma t_int_const VALUE

    t_comma  shift, and go to state 433


State 421

   76 VAR: t_id SHORT_ASSIGN t_make t_open_paren MAPS t_close_paren .

    $default  reduce using rule 76 (VAR)


State 422

  204 PLENTY_OLD: t_open_br t_close_br .

    $default  reduce using rule 204 (PLENTY_OLD)


State 423

  205 PLENTY_OLD: t_open_br PLENTY . t_close_br

    t_close_br  shift, and go to state 434


State 424

  203 PLENTY_OLD: t_open_br ENUM . t_close_br
  207 ENUM: ENUM . t_comma VALUE

    t_close_br  shift, and go to state 435
    t_comma     shift, and go to state 120


State 425

  202 PLENTY: PLENTY_OLD t_comma . PLENTY

    t_open_br  shift, and go to state 400

    PLENTY      go to state 436
    PLENTY_OLD  go to state 402


State 426

  213 MAPS: t_map t_open_sq t_vtype t_close_sq t_vtype .

    $default  reduce using rule 213 (MAPS)


State 427

  193 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype . PLENTY

    t_open_br  shift, and go to state 400

    PLENTY      go to state 437
    PLENTY_OLD  go to state 402


State 428

  187 POST_STATE: t_id t_inc_const .

    $default  reduce using rule 187 (POST_STATE)


State 429

  188 FOR: t_for INIT_STATE t_semicolon CONDITION t_semicolon POST_STATE BODY_FOR_LOOP .

    $default  reduce using rule 188 (FOR)


State 430

   94 FUNC_CALL: t_id . PARAM
  105 SHIFT_AC: t_id .
  109 METHOD_FULFILL: t_id .
  118 VALUE: t_id .
  229 FIELD: t_id . FIELD_BODY

    t_open_br     shift, and go to state 359
    t_open_paren  shift, and go to state 108

    t_shift_const  reduce using rule 105 (SHIFT_AC)
    t_dot          reduce using rule 109 (METHOD_FULFILL)
    $default       reduce using rule 118 (VALUE)

    PARAM        go to state 98
    PARAM_START  go to state 99
    FIELD_BODY   go to state 360
    FIELD_START  go to state 361


State 431

  233 FIELD_FULFILL: VALUE t_colon VALUE . t_comma
  237 FIELD_END_FULFILL: VALUE t_colon VALUE .

    t_comma  shift, and go to state 438

    $default  reduce using rule 237 (FIELD_END_FULFILL)


State 432

  234 FIELD_FULFILL: VALUE t_colon FIELD . t_comma

    t_comma  shift, and go to state 439


State 433

  208 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma . VALUE t_close_paren
  209     | t_make t_open_paren MULTI_AR t_vtype t_comma . VALUE t_comma t_int_const VALUE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 440
    EXPR_START      go to state 80


State 434

  205 PLENTY_OLD: t_open_br PLENTY t_close_br .

    $default  reduce using rule 205 (PLENTY_OLD)


State 435

  203 PLENTY_OLD: t_open_br ENUM t_close_br .

    $default  reduce using rule 203 (PLENTY_OLD)


State 436

  202 PLENTY: PLENTY_OLD t_comma PLENTY .

    $default  reduce using rule 202 (PLENTY)


State 437

  193 ARRAY_BODY: t_var t_id MULTI_AR t_vtype ASSIGNMENT MULTI_AR t_vtype PLENTY .

    $default  reduce using rule 193 (ARRAY_BODY)


State 438

  233 FIELD_FULFILL: VALUE t_colon VALUE t_comma .

    $default  reduce using rule 233 (FIELD_FULFILL)


State 439

  234 FIELD_FULFILL: VALUE t_colon FIELD t_comma .

    $default  reduce using rule 234 (FIELD_FULFILL)


State 440

  208 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE . t_close_paren
  209     | t_make t_open_paren MULTI_AR t_vtype t_comma VALUE . t_comma t_int_const VALUE

    t_comma        shift, and go to state 441
    t_close_paren  shift, and go to state 442


State 441

  209 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma . t_int_const VALUE

    t_int_const  shift, and go to state 443


State 442

  208 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_close_paren .

    $default  reduce using rule 208 (MAKE)


State 443

  209 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const . VALUE

    t_int_const         shift, and go to state 63
    t_float_const       shift, and go to state 64
    t_id                shift, and go to state 115
    t_string            shift, and go to state 66
    t_open_paren        shift, and go to state 68
    t_rune              shift, and go to state 69
    t_blank_identifier  shift, and go to state 70
    t_pointer           shift, and go to state 72

    FUNC_CALL       go to state 73
    SHIFT           go to state 74
    SHIFT_AC        go to state 75
    METHOD          go to state 76
    METHOD_FULFILL  go to state 77
    POINTER         go to state 78
    VALUE           go to state 444
    EXPR_START      go to state 80


State 444

  209 MAKE: t_make t_open_paren MULTI_AR t_vtype t_comma VALUE t_comma t_int_const VALUE .

    $default  reduce using rule 209 (MAKE)
